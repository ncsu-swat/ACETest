(declare-fun temp260_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp260_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp260_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp260_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp260_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp260_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp260_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp260_8 () (_ BitVec 64))
(declare-fun temp260_10 () (_ BitVec 64))
(declare-fun temp260_9 () (_ BitVec 64))
(declare-fun temp260_12 () (_ BitVec 64))
(declare-fun temp260_11 () (_ BitVec 64))
(declare-fun temp260_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp260_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp260_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp260_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp260_17 () (_ BitVec 64))
(declare-fun temp260_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp260_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp260_20 () (_ BitVec 64))
(declare-fun temp260_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp260_22 () (_ BitVec 64))
(declare-fun temp260_23 () (_ BitVec 64))
(declare-fun temp260_24 () (_ BitVec 64))
(declare-fun temp260_25 () (_ BitVec 64))
(declare-fun temp260_26 () (_ BitVec 64))
(declare-fun temp260_27 () (_ BitVec 64))
(declare-fun temp260_28 () (_ BitVec 64))
(declare-fun temp260_29 () (_ BitVec 64))
(declare-fun temp260_30 () (_ BitVec 64))
(declare-fun temp260_31 () (_ BitVec 64))
(declare-fun temp260_32 () (_ BitVec 64))
(declare-fun temp260_33 () (_ BitVec 64))
(declare-fun temp260_34 () (_ BitVec 64))
(declare-fun temp260_35 () (_ BitVec 64))
(declare-fun temp260_36 () (_ BitVec 64))
(declare-fun temp260_37 () (_ BitVec 64))
(declare-fun temp260_38 () (_ BitVec 64))
(declare-fun temp260_39 () (_ BitVec 64))
(declare-fun temp260_40 () (_ BitVec 64))
(declare-fun temp260_41 () (_ BitVec 64))
(declare-fun temp260_42 () (_ BitVec 64))
(declare-fun temp260_43 () (_ BitVec 64))
(declare-fun temp260_44 () (_ BitVec 64))
(declare-fun temp260_45 () (_ BitVec 64))
(declare-fun temp260_46 () (_ BitVec 64))
(declare-fun temp260_47 () (_ BitVec 64))
(declare-fun temp260_48 () (_ BitVec 64))
(declare-fun temp260_49 () (_ BitVec 64))
(declare-fun temp260_50 () (_ BitVec 64))
(declare-fun temp260_51 () (_ BitVec 64))
(declare-fun temp260_52 () (_ BitVec 64))
(declare-fun temp260_53 () (_ BitVec 64))
(declare-fun temp260_54 () (_ BitVec 64))
(declare-fun temp260_55 () (_ BitVec 64))
(declare-fun temp260_56 () (_ BitVec 64))
(declare-fun temp260_57 () (_ BitVec 64))
(declare-fun temp260_58 () (_ BitVec 64))
(declare-fun temp260_59 () (_ BitVec 64))
(declare-fun temp260_60 () (_ BitVec 64))
(declare-fun temp260_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp260_62 () (_ BitVec 64))
(declare-fun temp260_63 () (_ BitVec 64))
(declare-fun temp260_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp260_65 () (_ BitVec 64))
(declare-fun temp260_66 () (_ BitVec 64))
(declare-fun temp260_67 () (_ BitVec 64))
(declare-fun temp260_68 () (_ BitVec 64))
(declare-fun temp260_69 () (_ BitVec 64))
(declare-fun temp260_70 () (_ BitVec 64))
(declare-fun temp260_71 () (_ BitVec 64))
(declare-fun temp260_72 () (_ BitVec 64))
(declare-fun temp260_73 () (_ BitVec 64))
(declare-fun temp260_74 () (_ BitVec 64))
(declare-fun temp260_75 () (_ BitVec 64))
(declare-fun temp260_76 () (_ BitVec 64))
(declare-fun temp260_77 () (_ BitVec 64))
(declare-fun temp260_78 () (_ BitVec 64))
(declare-fun temp260_79 () (_ BitVec 64))
(declare-fun temp260_80 () (_ BitVec 64))
(declare-fun temp260_81 () (_ BitVec 64))
(declare-fun temp260_82 () (_ BitVec 64))
(declare-fun temp260_83 () (_ BitVec 64))
(declare-fun temp260_84 () (_ BitVec 64))
(declare-fun temp260_85 () (_ BitVec 64))
(declare-fun temp260_86 () (_ BitVec 64))
(declare-fun temp260_87 () (_ BitVec 64))
(declare-fun temp260_88 () (_ BitVec 64))
(declare-fun temp260_89 () (_ BitVec 64))
(declare-fun temp260_90 () (_ BitVec 64))
(declare-fun temp260_91 () (_ BitVec 64))
(declare-fun temp260_92 () (_ BitVec 64))
(declare-fun temp260_93 () (_ BitVec 64))
(declare-fun temp260_94 () (_ BitVec 64))
(declare-fun temp260_95 () (_ BitVec 64))
(declare-fun temp260_96 () (_ BitVec 64))
(declare-fun temp260_97 () (_ BitVec 64))
(declare-fun temp260_98 () (_ BitVec 64))
(declare-fun temp260_99 () (_ BitVec 64))
(declare-fun temp260_100 () (_ BitVec 64))
(declare-fun temp260_101 () (_ BitVec 64))
(declare-fun temp260_102 () (_ BitVec 64))
(declare-fun temp260_103 () (_ BitVec 64))
(declare-fun temp260_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp260_105 () (_ BitVec 64))
(declare-fun temp260_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp260_107 () (_ BitVec 64))
(declare-fun temp260_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp260_109 () (_ BitVec 64))
(declare-fun temp260_110 () (_ BitVec 64))
(declare-fun temp260_111 () (_ BitVec 64))
(declare-fun temp260_112 () (_ BitVec 64))
(declare-fun temp260_113 () (_ BitVec 64))
(declare-fun temp260_114 () (_ BitVec 64))
(declare-fun temp260_115 () (_ BitVec 64))
(declare-fun temp260_116 () (_ BitVec 64))
(declare-fun temp260_117 () (_ BitVec 64))
(declare-fun temp260_118 () (_ BitVec 64))
(declare-fun temp260_119 () (_ BitVec 64))
(declare-fun temp260_120 () (_ BitVec 64))
(declare-fun temp260_121 () (_ BitVec 64))
(declare-fun temp260_122 () (_ BitVec 64))
(declare-fun temp260_123 () (_ BitVec 64))
(declare-fun temp260_124 () (_ BitVec 64))
(declare-fun temp260_126 () (_ BitVec 64))
(declare-fun temp260_127 () (_ BitVec 64))
(declare-fun temp260_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp260_128 () (_ BitVec 64))
(declare-fun temp260_129 () (_ BitVec 64))
(declare-fun temp260_131 () (_ BitVec 64))
(declare-fun temp260_132 () (_ BitVec 64))
(declare-fun temp260_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp260_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp260_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp260_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp260_136 () (_ BitVec 64))
(declare-fun temp260_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp260_139 () (_ BitVec 64))
(declare-fun temp260_140 () (_ BitVec 64))
(declare-fun temp260_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp260_141 () (_ BitVec 64))
(declare-fun temp260_143 () (_ BitVec 64))
(declare-fun temp260_144 () (_ BitVec 64))
(declare-fun temp260_142 () (_ BitVec 64))
(declare-fun temp260_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp260_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp260_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp260_148 () (_ BitVec 64))
(declare-fun temp260_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp260_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp260_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp260_152 () (_ BitVec 64))
(assert (= temp260_1 #x0000000000000001))
(assert (= var465453 temp260_1))
(assert (= temp260_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp260_2)))
(assert (= temp260_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp260_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp260_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp260_4)))
(assert (= temp260_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp260_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp260_6 #x0000000000000000))
(assert (= var465488 temp260_6))
(assert (= temp260_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp260_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp260_8 #x0000000000000001))
(assert (= var465522 temp260_8))
(assert (= temp260_10 #x0000000000000000))
(assert (= temp260_9 temp260_10))
(assert (= temp260_12 #x0000000000000001))
(assert (= temp260_11 temp260_12))
(assert (= temp260_13 #x0000000000000000))
(assert (= var863614 temp260_13))
(assert (= temp260_14 #x0000000000000001))
(assert (= var863635 temp260_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp260_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp260_15)))
(assert (= temp260_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp260_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp260_17 #x0000000000000000))
(assert (= var997373 temp260_17))
(assert (= temp260_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp260_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp260_19 #x0000000000000000))
(assert (= var997418 temp260_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp260_20 #x0000000000000000))
(assert (= temp260_21 temp260_20))
(assert (= temp260_22 (select ARGNAME_padding_NAMEEND_VAL temp260_21)))
(assert (= temp260_23 #x0000000000000001))
(assert (= temp260_24 temp260_23))
(assert (= temp260_25 (select ARGNAME_padding_NAMEEND_VAL temp260_24)))
(assert (= temp260_26 #x0000000000000002))
(assert (= temp260_27 temp260_26))
(assert (= temp260_28 (select ARGNAME_padding_NAMEEND_VAL temp260_27)))
(assert (= temp260_29 #x0000000000000003))
(assert (= temp260_30 temp260_29))
(assert (= temp260_31 (select ARGNAME_padding_NAMEEND_VAL temp260_30)))
(assert (= temp260_32 #x0000000000000004))
(assert (= temp260_33 temp260_32))
(assert (= temp260_34 (select ARGNAME_padding_NAMEEND_VAL temp260_33)))
(assert (= temp260_35 #x0000000000000005))
(assert (= temp260_36 temp260_35))
(assert (= temp260_37 (select ARGNAME_padding_NAMEEND_VAL temp260_36)))
(assert (= temp260_38 #x0000000000000000))
(assert (= temp260_39 #x0000000000000000))
(assert (= temp260_40 temp260_39))
(assert (= temp260_41 (select ARGNAME_padding_NAMEEND_VAL temp260_40)))
(assert (= temp260_42 #x0000000000000000))
(assert (= temp260_43 #x0000000000000001))
(assert (= temp260_44 temp260_43))
(assert (= temp260_45 (select ARGNAME_padding_NAMEEND_VAL temp260_44)))
(assert (= temp260_46 #x0000000000000000))
(assert (= temp260_47 #x0000000000000002))
(assert (= temp260_48 temp260_47))
(assert (= temp260_49 (select ARGNAME_padding_NAMEEND_VAL temp260_48)))
(assert (= temp260_50 #x0000000000000000))
(assert (= temp260_51 #x0000000000000003))
(assert (= temp260_52 temp260_51))
(assert (= temp260_53 (select ARGNAME_padding_NAMEEND_VAL temp260_52)))
(assert (= temp260_54 #x0000000000000000))
(assert (= temp260_55 #x0000000000000004))
(assert (= temp260_56 temp260_55))
(assert (= temp260_57 (select ARGNAME_padding_NAMEEND_VAL temp260_56)))
(assert (= temp260_58 #x0000000000000000))
(assert (= temp260_59 #x0000000000000005))
(assert (= temp260_60 temp260_59))
(assert (= temp260_61 (select ARGNAME_padding_NAMEEND_VAL temp260_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp260_41 temp260_38)
             (bvslt temp260_45 temp260_42)
             (bvslt temp260_49 temp260_46)
             (bvslt temp260_53 temp260_50)
             (bvslt temp260_57 temp260_54)
             (bvslt temp260_61 temp260_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp260_62 #x0000000000000000))
(assert (= var1716002 temp260_62))
(assert (= temp260_63 #x0000000000000000))
(assert (= temp260_64 temp260_63))
(assert (= temp260_65 (select ARGNAME_stride_NAMEEND_VAL temp260_64)))
(assert (= temp260_66 #x0000000000000001))
(assert (= temp260_67 temp260_66))
(assert (= temp260_68 (select ARGNAME_stride_NAMEEND_VAL temp260_67)))
(assert (= temp260_69 #x0000000000000002))
(assert (= temp260_70 temp260_69))
(assert (= temp260_71 (select ARGNAME_stride_NAMEEND_VAL temp260_70)))
(assert (= temp260_72 #x0000000000000003))
(assert (= temp260_73 temp260_72))
(assert (= temp260_74 (select ARGNAME_stride_NAMEEND_VAL temp260_73)))
(assert (= temp260_75 #x0000000000000004))
(assert (= temp260_76 temp260_75))
(assert (= temp260_77 (select ARGNAME_stride_NAMEEND_VAL temp260_76)))
(assert (= temp260_78 #x0000000000000005))
(assert (= temp260_79 temp260_78))
(assert (= temp260_80 (select ARGNAME_stride_NAMEEND_VAL temp260_79)))
(assert (= temp260_81 #x0000000000000000))
(assert (= temp260_82 #x0000000000000000))
(assert (= temp260_83 temp260_82))
(assert (= temp260_84 (select ARGNAME_stride_NAMEEND_VAL temp260_83)))
(assert (= temp260_85 #x0000000000000000))
(assert (= temp260_86 #x0000000000000001))
(assert (= temp260_87 temp260_86))
(assert (= temp260_88 (select ARGNAME_stride_NAMEEND_VAL temp260_87)))
(assert (= temp260_89 #x0000000000000000))
(assert (= temp260_90 #x0000000000000002))
(assert (= temp260_91 temp260_90))
(assert (= temp260_92 (select ARGNAME_stride_NAMEEND_VAL temp260_91)))
(assert (= temp260_93 #x0000000000000000))
(assert (= temp260_94 #x0000000000000003))
(assert (= temp260_95 temp260_94))
(assert (= temp260_96 (select ARGNAME_stride_NAMEEND_VAL temp260_95)))
(assert (= temp260_97 #x0000000000000000))
(assert (= temp260_98 #x0000000000000004))
(assert (= temp260_99 temp260_98))
(assert (= temp260_100 (select ARGNAME_stride_NAMEEND_VAL temp260_99)))
(assert (= temp260_101 #x0000000000000000))
(assert (= temp260_102 #x0000000000000005))
(assert (= temp260_103 temp260_102))
(assert (= temp260_104 (select ARGNAME_stride_NAMEEND_VAL temp260_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp260_84 temp260_81)
             (bvsle temp260_88 temp260_85)
             (bvsle temp260_92 temp260_89)
             (bvsle temp260_96 temp260_93)
             (bvsle temp260_100 temp260_97)
             (bvsle temp260_104 temp260_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp260_105 #x0000000000000000))
(assert (= var1716023 temp260_105))
(assert (= temp260_106 #x0000000000000000))
(assert (= var1704114 temp260_106))
(assert (= temp260_107 #x0000000000000000))
(assert (= temp260_108 temp260_107))
(assert (= temp260_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp260_108)))
(assert (= temp260_110 #x0000000000000001))
(assert (= temp260_111 temp260_110))
(assert (= temp260_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp260_111)))
(assert (= temp260_113 #x0000000000000002))
(assert (= temp260_114 temp260_113))
(assert (= temp260_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp260_114)))
(assert (= temp260_116 #x0000000000000003))
(assert (= temp260_117 temp260_116))
(assert (= temp260_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp260_117)))
(assert (= temp260_119 #x0000000000000004))
(assert (= temp260_120 temp260_119))
(assert (= temp260_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp260_120)))
(assert (= temp260_122 #x0000000000000005))
(assert (= temp260_123 temp260_122))
(assert (= temp260_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp260_123)))
(assert (= temp260_126 var1704114))
(assert (= temp260_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp260_126)))
(assert (= temp260_125 temp260_127))
(assert (= var1716068
   (ite (bvslt temp260_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp260_128 #x0000000000000000))
(assert (= var1716068 temp260_128))
(assert (= temp260_129 #x0000000000000000))
(assert (= var1704114 temp260_129))
(assert (= temp260_131 var1704114))
(assert (= temp260_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp260_131)))
(assert (= temp260_130 temp260_132))
(assert (= var1716090 (bvsmod temp260_130 ARGNAME_groups_NAMEEND)))
(assert (= temp260_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp260_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp260_134 #x0000000000000001))
(assert (= var1716091 temp260_134))
(assert (= var1716110 var1716000))
(assert (= temp260_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp260_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp260_136 #x0000000000000001))
(assert (= var1716111 temp260_136))
(assert (= temp260_137 #x0000000000000001))
(assert (= var1705002 temp260_137))
(assert (= temp260_139 var1705002))
(assert (= temp260_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp260_139)))
(assert (= temp260_138 temp260_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp260_138)))
(assert (= temp260_141 #x0000000000000000))
(assert (= var1704114 temp260_141))
(assert (= temp260_143 var1704114))
(assert (= temp260_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp260_143)))
(assert (= temp260_142 temp260_144))
(assert (= temp260_145 #x0000000000000002))
(assert (= var1979241 temp260_145))
(assert (= temp260_146 #x0000000000000001))
(assert (= var1716281 temp260_146))
(assert (= temp260_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp260_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp260_148 #x0000000000000001))
(assert (= var997490 temp260_148))
(assert (= temp260_149 #x0000000000000001))
(assert (= var997620 temp260_149))
(assert (= var3486185 var997620))
(assert (= temp260_150 #x0000000000000000))
(assert (= var3686207 temp260_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp260_151 #x0000000000000002))
(assert (= var3815043 temp260_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp260_152 #x0000000000000001))
(assert (= var997490 temp260_152))
(model-add temp260_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp260_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp260_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp260_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp260_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp260_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






