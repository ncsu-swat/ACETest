(declare-fun temp767_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp767_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp767_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp767_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp767_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp767_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp767_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp767_8 () (_ BitVec 64))
(declare-fun temp767_10 () (_ BitVec 64))
(declare-fun temp767_9 () (_ BitVec 64))
(declare-fun temp767_12 () (_ BitVec 64))
(declare-fun temp767_11 () (_ BitVec 64))
(declare-fun temp767_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp767_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp767_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp767_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp767_17 () (_ BitVec 64))
(declare-fun temp767_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp767_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp767_20 () (_ BitVec 64))
(declare-fun temp767_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp767_22 () (_ BitVec 64))
(declare-fun temp767_23 () (_ BitVec 64))
(declare-fun temp767_24 () (_ BitVec 64))
(declare-fun temp767_25 () (_ BitVec 64))
(declare-fun temp767_26 () (_ BitVec 64))
(declare-fun temp767_27 () (_ BitVec 64))
(declare-fun temp767_28 () (_ BitVec 64))
(declare-fun temp767_29 () (_ BitVec 64))
(declare-fun temp767_30 () (_ BitVec 64))
(declare-fun temp767_31 () (_ BitVec 64))
(declare-fun temp767_32 () (_ BitVec 64))
(declare-fun temp767_33 () (_ BitVec 64))
(declare-fun temp767_34 () (_ BitVec 64))
(declare-fun temp767_35 () (_ BitVec 64))
(declare-fun temp767_36 () (_ BitVec 64))
(declare-fun temp767_37 () (_ BitVec 64))
(declare-fun temp767_38 () (_ BitVec 64))
(declare-fun temp767_39 () (_ BitVec 64))
(declare-fun temp767_40 () (_ BitVec 64))
(declare-fun temp767_41 () (_ BitVec 64))
(declare-fun temp767_42 () (_ BitVec 64))
(declare-fun temp767_43 () (_ BitVec 64))
(declare-fun temp767_44 () (_ BitVec 64))
(declare-fun temp767_45 () (_ BitVec 64))
(declare-fun temp767_46 () (_ BitVec 64))
(declare-fun temp767_47 () (_ BitVec 64))
(declare-fun temp767_48 () (_ BitVec 64))
(declare-fun temp767_49 () (_ BitVec 64))
(declare-fun temp767_50 () (_ BitVec 64))
(declare-fun temp767_51 () (_ BitVec 64))
(declare-fun temp767_52 () (_ BitVec 64))
(declare-fun temp767_53 () (_ BitVec 64))
(declare-fun temp767_54 () (_ BitVec 64))
(declare-fun temp767_55 () (_ BitVec 64))
(declare-fun temp767_56 () (_ BitVec 64))
(declare-fun temp767_57 () (_ BitVec 64))
(declare-fun temp767_58 () (_ BitVec 64))
(declare-fun temp767_59 () (_ BitVec 64))
(declare-fun temp767_60 () (_ BitVec 64))
(declare-fun temp767_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp767_62 () (_ BitVec 64))
(declare-fun temp767_63 () (_ BitVec 64))
(declare-fun temp767_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp767_65 () (_ BitVec 64))
(declare-fun temp767_66 () (_ BitVec 64))
(declare-fun temp767_67 () (_ BitVec 64))
(declare-fun temp767_68 () (_ BitVec 64))
(declare-fun temp767_69 () (_ BitVec 64))
(declare-fun temp767_70 () (_ BitVec 64))
(declare-fun temp767_71 () (_ BitVec 64))
(declare-fun temp767_72 () (_ BitVec 64))
(declare-fun temp767_73 () (_ BitVec 64))
(declare-fun temp767_74 () (_ BitVec 64))
(declare-fun temp767_75 () (_ BitVec 64))
(declare-fun temp767_76 () (_ BitVec 64))
(declare-fun temp767_77 () (_ BitVec 64))
(declare-fun temp767_78 () (_ BitVec 64))
(declare-fun temp767_79 () (_ BitVec 64))
(declare-fun temp767_80 () (_ BitVec 64))
(declare-fun temp767_81 () (_ BitVec 64))
(declare-fun temp767_82 () (_ BitVec 64))
(declare-fun temp767_83 () (_ BitVec 64))
(declare-fun temp767_84 () (_ BitVec 64))
(declare-fun temp767_85 () (_ BitVec 64))
(declare-fun temp767_86 () (_ BitVec 64))
(declare-fun temp767_87 () (_ BitVec 64))
(declare-fun temp767_88 () (_ BitVec 64))
(declare-fun temp767_89 () (_ BitVec 64))
(declare-fun temp767_90 () (_ BitVec 64))
(declare-fun temp767_91 () (_ BitVec 64))
(declare-fun temp767_92 () (_ BitVec 64))
(declare-fun temp767_93 () (_ BitVec 64))
(declare-fun temp767_94 () (_ BitVec 64))
(declare-fun temp767_95 () (_ BitVec 64))
(declare-fun temp767_96 () (_ BitVec 64))
(declare-fun temp767_97 () (_ BitVec 64))
(declare-fun temp767_98 () (_ BitVec 64))
(declare-fun temp767_99 () (_ BitVec 64))
(declare-fun temp767_100 () (_ BitVec 64))
(declare-fun temp767_101 () (_ BitVec 64))
(declare-fun temp767_102 () (_ BitVec 64))
(declare-fun temp767_103 () (_ BitVec 64))
(declare-fun temp767_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp767_105 () (_ BitVec 64))
(declare-fun temp767_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp767_107 () (_ BitVec 64))
(declare-fun temp767_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp767_109 () (_ BitVec 64))
(declare-fun temp767_110 () (_ BitVec 64))
(declare-fun temp767_111 () (_ BitVec 64))
(declare-fun temp767_112 () (_ BitVec 64))
(declare-fun temp767_113 () (_ BitVec 64))
(declare-fun temp767_114 () (_ BitVec 64))
(declare-fun temp767_115 () (_ BitVec 64))
(declare-fun temp767_116 () (_ BitVec 64))
(declare-fun temp767_117 () (_ BitVec 64))
(declare-fun temp767_118 () (_ BitVec 64))
(declare-fun temp767_119 () (_ BitVec 64))
(declare-fun temp767_120 () (_ BitVec 64))
(declare-fun temp767_121 () (_ BitVec 64))
(declare-fun temp767_122 () (_ BitVec 64))
(declare-fun temp767_123 () (_ BitVec 64))
(declare-fun temp767_124 () (_ BitVec 64))
(declare-fun temp767_126 () (_ BitVec 64))
(declare-fun temp767_127 () (_ BitVec 64))
(declare-fun temp767_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp767_128 () (_ BitVec 64))
(declare-fun temp767_129 () (_ BitVec 64))
(declare-fun temp767_131 () (_ BitVec 64))
(declare-fun temp767_132 () (_ BitVec 64))
(declare-fun temp767_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp767_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp767_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp767_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp767_136 () (_ BitVec 64))
(declare-fun temp767_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp767_139 () (_ BitVec 64))
(declare-fun temp767_140 () (_ BitVec 64))
(declare-fun temp767_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp767_141 () (_ BitVec 64))
(declare-fun temp767_143 () (_ BitVec 64))
(declare-fun temp767_144 () (_ BitVec 64))
(declare-fun temp767_142 () (_ BitVec 64))
(declare-fun temp767_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp767_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp767_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp767_148 () (_ BitVec 64))
(declare-fun temp767_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp767_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp767_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp767_153 () (_ BitVec 64))
(declare-fun temp767_152 () (_ BitVec 64))
(declare-fun temp767_154 () (_ BitVec 64))
(assert (= temp767_1 #x0000000000000001))
(assert (= var465453 temp767_1))
(assert (= temp767_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp767_2)))
(assert (= temp767_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp767_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp767_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp767_4)))
(assert (= temp767_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp767_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp767_6 #x0000000000000000))
(assert (= var465488 temp767_6))
(assert (= temp767_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp767_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp767_8 #x0000000000000001))
(assert (= var465522 temp767_8))
(assert (= temp767_10 #x0000000000000000))
(assert (= temp767_9 temp767_10))
(assert (= temp767_12 #x0000000000000001))
(assert (= temp767_11 temp767_12))
(assert (= temp767_13 #x0000000000000000))
(assert (= var863614 temp767_13))
(assert (= temp767_14 #x0000000000000001))
(assert (= var863635 temp767_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp767_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp767_15)))
(assert (= temp767_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp767_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp767_17 #x0000000000000000))
(assert (= var997373 temp767_17))
(assert (= temp767_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp767_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp767_19 #x0000000000000000))
(assert (= var997418 temp767_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp767_20 #x0000000000000000))
(assert (= temp767_21 temp767_20))
(assert (= temp767_22 (select ARGNAME_padding_NAMEEND_VAL temp767_21)))
(assert (= temp767_23 #x0000000000000001))
(assert (= temp767_24 temp767_23))
(assert (= temp767_25 (select ARGNAME_padding_NAMEEND_VAL temp767_24)))
(assert (= temp767_26 #x0000000000000002))
(assert (= temp767_27 temp767_26))
(assert (= temp767_28 (select ARGNAME_padding_NAMEEND_VAL temp767_27)))
(assert (= temp767_29 #x0000000000000003))
(assert (= temp767_30 temp767_29))
(assert (= temp767_31 (select ARGNAME_padding_NAMEEND_VAL temp767_30)))
(assert (= temp767_32 #x0000000000000004))
(assert (= temp767_33 temp767_32))
(assert (= temp767_34 (select ARGNAME_padding_NAMEEND_VAL temp767_33)))
(assert (= temp767_35 #x0000000000000005))
(assert (= temp767_36 temp767_35))
(assert (= temp767_37 (select ARGNAME_padding_NAMEEND_VAL temp767_36)))
(assert (= temp767_38 #x0000000000000000))
(assert (= temp767_39 #x0000000000000000))
(assert (= temp767_40 temp767_39))
(assert (= temp767_41 (select ARGNAME_padding_NAMEEND_VAL temp767_40)))
(assert (= temp767_42 #x0000000000000000))
(assert (= temp767_43 #x0000000000000001))
(assert (= temp767_44 temp767_43))
(assert (= temp767_45 (select ARGNAME_padding_NAMEEND_VAL temp767_44)))
(assert (= temp767_46 #x0000000000000000))
(assert (= temp767_47 #x0000000000000002))
(assert (= temp767_48 temp767_47))
(assert (= temp767_49 (select ARGNAME_padding_NAMEEND_VAL temp767_48)))
(assert (= temp767_50 #x0000000000000000))
(assert (= temp767_51 #x0000000000000003))
(assert (= temp767_52 temp767_51))
(assert (= temp767_53 (select ARGNAME_padding_NAMEEND_VAL temp767_52)))
(assert (= temp767_54 #x0000000000000000))
(assert (= temp767_55 #x0000000000000004))
(assert (= temp767_56 temp767_55))
(assert (= temp767_57 (select ARGNAME_padding_NAMEEND_VAL temp767_56)))
(assert (= temp767_58 #x0000000000000000))
(assert (= temp767_59 #x0000000000000005))
(assert (= temp767_60 temp767_59))
(assert (= temp767_61 (select ARGNAME_padding_NAMEEND_VAL temp767_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp767_41 temp767_38)
             (bvslt temp767_45 temp767_42)
             (bvslt temp767_49 temp767_46)
             (bvslt temp767_53 temp767_50)
             (bvslt temp767_57 temp767_54)
             (bvslt temp767_61 temp767_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp767_62 #x0000000000000000))
(assert (= var1716002 temp767_62))
(assert (= temp767_63 #x0000000000000000))
(assert (= temp767_64 temp767_63))
(assert (= temp767_65 (select ARGNAME_stride_NAMEEND_VAL temp767_64)))
(assert (= temp767_66 #x0000000000000001))
(assert (= temp767_67 temp767_66))
(assert (= temp767_68 (select ARGNAME_stride_NAMEEND_VAL temp767_67)))
(assert (= temp767_69 #x0000000000000002))
(assert (= temp767_70 temp767_69))
(assert (= temp767_71 (select ARGNAME_stride_NAMEEND_VAL temp767_70)))
(assert (= temp767_72 #x0000000000000003))
(assert (= temp767_73 temp767_72))
(assert (= temp767_74 (select ARGNAME_stride_NAMEEND_VAL temp767_73)))
(assert (= temp767_75 #x0000000000000004))
(assert (= temp767_76 temp767_75))
(assert (= temp767_77 (select ARGNAME_stride_NAMEEND_VAL temp767_76)))
(assert (= temp767_78 #x0000000000000005))
(assert (= temp767_79 temp767_78))
(assert (= temp767_80 (select ARGNAME_stride_NAMEEND_VAL temp767_79)))
(assert (= temp767_81 #x0000000000000000))
(assert (= temp767_82 #x0000000000000000))
(assert (= temp767_83 temp767_82))
(assert (= temp767_84 (select ARGNAME_stride_NAMEEND_VAL temp767_83)))
(assert (= temp767_85 #x0000000000000000))
(assert (= temp767_86 #x0000000000000001))
(assert (= temp767_87 temp767_86))
(assert (= temp767_88 (select ARGNAME_stride_NAMEEND_VAL temp767_87)))
(assert (= temp767_89 #x0000000000000000))
(assert (= temp767_90 #x0000000000000002))
(assert (= temp767_91 temp767_90))
(assert (= temp767_92 (select ARGNAME_stride_NAMEEND_VAL temp767_91)))
(assert (= temp767_93 #x0000000000000000))
(assert (= temp767_94 #x0000000000000003))
(assert (= temp767_95 temp767_94))
(assert (= temp767_96 (select ARGNAME_stride_NAMEEND_VAL temp767_95)))
(assert (= temp767_97 #x0000000000000000))
(assert (= temp767_98 #x0000000000000004))
(assert (= temp767_99 temp767_98))
(assert (= temp767_100 (select ARGNAME_stride_NAMEEND_VAL temp767_99)))
(assert (= temp767_101 #x0000000000000000))
(assert (= temp767_102 #x0000000000000005))
(assert (= temp767_103 temp767_102))
(assert (= temp767_104 (select ARGNAME_stride_NAMEEND_VAL temp767_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp767_84 temp767_81)
             (bvsle temp767_88 temp767_85)
             (bvsle temp767_92 temp767_89)
             (bvsle temp767_96 temp767_93)
             (bvsle temp767_100 temp767_97)
             (bvsle temp767_104 temp767_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp767_105 #x0000000000000000))
(assert (= var1716023 temp767_105))
(assert (= temp767_106 #x0000000000000000))
(assert (= var1704114 temp767_106))
(assert (= temp767_107 #x0000000000000000))
(assert (= temp767_108 temp767_107))
(assert (= temp767_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp767_108)))
(assert (= temp767_110 #x0000000000000001))
(assert (= temp767_111 temp767_110))
(assert (= temp767_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp767_111)))
(assert (= temp767_113 #x0000000000000002))
(assert (= temp767_114 temp767_113))
(assert (= temp767_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp767_114)))
(assert (= temp767_116 #x0000000000000003))
(assert (= temp767_117 temp767_116))
(assert (= temp767_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp767_117)))
(assert (= temp767_119 #x0000000000000004))
(assert (= temp767_120 temp767_119))
(assert (= temp767_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp767_120)))
(assert (= temp767_122 #x0000000000000005))
(assert (= temp767_123 temp767_122))
(assert (= temp767_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp767_123)))
(assert (= temp767_126 var1704114))
(assert (= temp767_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp767_126)))
(assert (= temp767_125 temp767_127))
(assert (= var1716068
   (ite (bvslt temp767_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp767_128 #x0000000000000000))
(assert (= var1716068 temp767_128))
(assert (= temp767_129 #x0000000000000000))
(assert (= var1704114 temp767_129))
(assert (= temp767_131 var1704114))
(assert (= temp767_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp767_131)))
(assert (= temp767_130 temp767_132))
(assert (= var1716090 (bvsmod temp767_130 ARGNAME_groups_NAMEEND)))
(assert (= temp767_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp767_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp767_134 #x0000000000000001))
(assert (= var1716091 temp767_134))
(assert (= var1716110 var1716000))
(assert (= temp767_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp767_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp767_136 #x0000000000000001))
(assert (= var1716111 temp767_136))
(assert (= temp767_137 #x0000000000000001))
(assert (= var1705002 temp767_137))
(assert (= temp767_139 var1705002))
(assert (= temp767_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp767_139)))
(assert (= temp767_138 temp767_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp767_138)))
(assert (= temp767_141 #x0000000000000000))
(assert (= var1704114 temp767_141))
(assert (= temp767_143 var1704114))
(assert (= temp767_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp767_143)))
(assert (= temp767_142 temp767_144))
(assert (= temp767_145 #x0000000000000002))
(assert (= var1979241 temp767_145))
(assert (= temp767_146 #x0000000000000001))
(assert (= var1716281 temp767_146))
(assert (= temp767_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp767_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp767_148 #x0000000000000001))
(assert (= var997490 temp767_148))
(assert (= temp767_149 #x0000000000000001))
(assert (= var997620 temp767_149))
(assert (= var3486185 var997620))
(assert (= temp767_150 #x0000000000000000))
(assert (= var3686207 temp767_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp767_151 #x0000000000000002))
(assert (= var3815043 temp767_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp767_153 #xffffffffffffffff))
(assert (= temp767_152 temp767_153))
(assert (= temp767_154 #x0000000000000001))
(assert (= var997490 temp767_154))
(model-add temp767_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp767_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp767_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp767_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp767_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp767_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






