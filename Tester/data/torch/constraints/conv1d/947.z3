(declare-fun temp1261_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp1261_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp1261_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp1261_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp1261_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp1261_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp1261_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp1261_8 () (_ BitVec 64))
(declare-fun temp1261_10 () (_ BitVec 64))
(declare-fun temp1261_9 () (_ BitVec 64))
(declare-fun temp1261_12 () (_ BitVec 64))
(declare-fun temp1261_11 () (_ BitVec 64))
(declare-fun temp1261_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp1261_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp1261_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp1261_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp1261_17 () (_ BitVec 64))
(declare-fun temp1261_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp1261_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp1261_20 () (_ BitVec 64))
(declare-fun temp1261_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1261_22 () (_ BitVec 64))
(declare-fun temp1261_23 () (_ BitVec 64))
(declare-fun temp1261_24 () (_ BitVec 64))
(declare-fun temp1261_25 () (_ BitVec 64))
(declare-fun temp1261_26 () (_ BitVec 64))
(declare-fun temp1261_27 () (_ BitVec 64))
(declare-fun temp1261_28 () (_ BitVec 64))
(declare-fun temp1261_29 () (_ BitVec 64))
(declare-fun temp1261_30 () (_ BitVec 64))
(declare-fun temp1261_31 () (_ BitVec 64))
(declare-fun temp1261_32 () (_ BitVec 64))
(declare-fun temp1261_33 () (_ BitVec 64))
(declare-fun temp1261_34 () (_ BitVec 64))
(declare-fun temp1261_35 () (_ BitVec 64))
(declare-fun temp1261_36 () (_ BitVec 64))
(declare-fun temp1261_37 () (_ BitVec 64))
(declare-fun temp1261_38 () (_ BitVec 64))
(declare-fun temp1261_39 () (_ BitVec 64))
(declare-fun temp1261_40 () (_ BitVec 64))
(declare-fun temp1261_41 () (_ BitVec 64))
(declare-fun temp1261_42 () (_ BitVec 64))
(declare-fun temp1261_43 () (_ BitVec 64))
(declare-fun temp1261_44 () (_ BitVec 64))
(declare-fun temp1261_45 () (_ BitVec 64))
(declare-fun temp1261_46 () (_ BitVec 64))
(declare-fun temp1261_47 () (_ BitVec 64))
(declare-fun temp1261_48 () (_ BitVec 64))
(declare-fun temp1261_49 () (_ BitVec 64))
(declare-fun temp1261_50 () (_ BitVec 64))
(declare-fun temp1261_51 () (_ BitVec 64))
(declare-fun temp1261_52 () (_ BitVec 64))
(declare-fun temp1261_53 () (_ BitVec 64))
(declare-fun temp1261_54 () (_ BitVec 64))
(declare-fun temp1261_55 () (_ BitVec 64))
(declare-fun temp1261_56 () (_ BitVec 64))
(declare-fun temp1261_57 () (_ BitVec 64))
(declare-fun temp1261_58 () (_ BitVec 64))
(declare-fun temp1261_59 () (_ BitVec 64))
(declare-fun temp1261_60 () (_ BitVec 64))
(declare-fun temp1261_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp1261_62 () (_ BitVec 64))
(declare-fun temp1261_63 () (_ BitVec 64))
(declare-fun temp1261_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1261_65 () (_ BitVec 64))
(declare-fun temp1261_66 () (_ BitVec 64))
(declare-fun temp1261_67 () (_ BitVec 64))
(declare-fun temp1261_68 () (_ BitVec 64))
(declare-fun temp1261_69 () (_ BitVec 64))
(declare-fun temp1261_70 () (_ BitVec 64))
(declare-fun temp1261_71 () (_ BitVec 64))
(declare-fun temp1261_72 () (_ BitVec 64))
(declare-fun temp1261_73 () (_ BitVec 64))
(declare-fun temp1261_74 () (_ BitVec 64))
(declare-fun temp1261_75 () (_ BitVec 64))
(declare-fun temp1261_76 () (_ BitVec 64))
(declare-fun temp1261_77 () (_ BitVec 64))
(declare-fun temp1261_78 () (_ BitVec 64))
(declare-fun temp1261_79 () (_ BitVec 64))
(declare-fun temp1261_80 () (_ BitVec 64))
(declare-fun temp1261_81 () (_ BitVec 64))
(declare-fun temp1261_82 () (_ BitVec 64))
(declare-fun temp1261_83 () (_ BitVec 64))
(declare-fun temp1261_84 () (_ BitVec 64))
(declare-fun temp1261_85 () (_ BitVec 64))
(declare-fun temp1261_86 () (_ BitVec 64))
(declare-fun temp1261_87 () (_ BitVec 64))
(declare-fun temp1261_88 () (_ BitVec 64))
(declare-fun temp1261_89 () (_ BitVec 64))
(declare-fun temp1261_90 () (_ BitVec 64))
(declare-fun temp1261_91 () (_ BitVec 64))
(declare-fun temp1261_92 () (_ BitVec 64))
(declare-fun temp1261_93 () (_ BitVec 64))
(declare-fun temp1261_94 () (_ BitVec 64))
(declare-fun temp1261_95 () (_ BitVec 64))
(declare-fun temp1261_96 () (_ BitVec 64))
(declare-fun temp1261_97 () (_ BitVec 64))
(declare-fun temp1261_98 () (_ BitVec 64))
(declare-fun temp1261_99 () (_ BitVec 64))
(declare-fun temp1261_100 () (_ BitVec 64))
(declare-fun temp1261_101 () (_ BitVec 64))
(declare-fun temp1261_102 () (_ BitVec 64))
(declare-fun temp1261_103 () (_ BitVec 64))
(declare-fun temp1261_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp1261_105 () (_ BitVec 64))
(declare-fun temp1261_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp1261_107 () (_ BitVec 64))
(declare-fun temp1261_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1261_109 () (_ BitVec 64))
(declare-fun temp1261_110 () (_ BitVec 64))
(declare-fun temp1261_111 () (_ BitVec 64))
(declare-fun temp1261_112 () (_ BitVec 64))
(declare-fun temp1261_113 () (_ BitVec 64))
(declare-fun temp1261_114 () (_ BitVec 64))
(declare-fun temp1261_115 () (_ BitVec 64))
(declare-fun temp1261_116 () (_ BitVec 64))
(declare-fun temp1261_117 () (_ BitVec 64))
(declare-fun temp1261_118 () (_ BitVec 64))
(declare-fun temp1261_119 () (_ BitVec 64))
(declare-fun temp1261_120 () (_ BitVec 64))
(declare-fun temp1261_121 () (_ BitVec 64))
(declare-fun temp1261_122 () (_ BitVec 64))
(declare-fun temp1261_123 () (_ BitVec 64))
(declare-fun temp1261_124 () (_ BitVec 64))
(declare-fun temp1261_126 () (_ BitVec 64))
(declare-fun temp1261_127 () (_ BitVec 64))
(declare-fun temp1261_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp1261_128 () (_ BitVec 64))
(declare-fun temp1261_129 () (_ BitVec 64))
(declare-fun temp1261_131 () (_ BitVec 64))
(declare-fun temp1261_132 () (_ BitVec 64))
(declare-fun temp1261_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp1261_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp1261_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp1261_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp1261_136 () (_ BitVec 64))
(declare-fun temp1261_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp1261_139 () (_ BitVec 64))
(declare-fun temp1261_140 () (_ BitVec 64))
(declare-fun temp1261_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp1261_141 () (_ BitVec 64))
(declare-fun temp1261_143 () (_ BitVec 64))
(declare-fun temp1261_144 () (_ BitVec 64))
(declare-fun temp1261_142 () (_ BitVec 64))
(declare-fun temp1261_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp1261_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp1261_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp1261_148 () (_ BitVec 64))
(declare-fun temp1261_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp1261_150 () (_ BitVec 64))
(declare-fun var3880579 () (_ BitVec 64))
(declare-fun var3880581 () (_ BitVec 64))
(declare-fun var3946124 () (_ BitVec 64))
(declare-fun var3946125 () (_ BitVec 64))
(declare-fun temp1261_152 () (_ BitVec 64))
(declare-fun temp1261_151 () (_ BitVec 64))
(declare-fun temp1261_154 () (_ BitVec 64))
(declare-fun temp1261_153 () (_ BitVec 64))
(declare-fun temp1261_155 () (_ BitVec 64))
(assert (= temp1261_1 #x0000000000000001))
(assert (= var465453 temp1261_1))
(assert (= temp1261_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp1261_2)))
(assert (= temp1261_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp1261_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp1261_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp1261_4)))
(assert (= temp1261_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp1261_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp1261_6 #x0000000000000000))
(assert (= var465488 temp1261_6))
(assert (= temp1261_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp1261_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp1261_8 #x0000000000000001))
(assert (= var465522 temp1261_8))
(assert (= temp1261_10 #x0000000000000000))
(assert (= temp1261_9 temp1261_10))
(assert (= temp1261_12 #x0000000000000001))
(assert (= temp1261_11 temp1261_12))
(assert (= temp1261_13 #x0000000000000000))
(assert (= var863614 temp1261_13))
(assert (= temp1261_14 #x0000000000000001))
(assert (= var863635 temp1261_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp1261_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp1261_15)))
(assert (= temp1261_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1261_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1261_17 #x0000000000000000))
(assert (= var997373 temp1261_17))
(assert (= temp1261_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp1261_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1261_19 #x0000000000000000))
(assert (= var997418 temp1261_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp1261_20 #x0000000000000000))
(assert (= temp1261_21 temp1261_20))
(assert (= temp1261_22 (select ARGNAME_padding_NAMEEND_VAL temp1261_21)))
(assert (= temp1261_23 #x0000000000000001))
(assert (= temp1261_24 temp1261_23))
(assert (= temp1261_25 (select ARGNAME_padding_NAMEEND_VAL temp1261_24)))
(assert (= temp1261_26 #x0000000000000002))
(assert (= temp1261_27 temp1261_26))
(assert (= temp1261_28 (select ARGNAME_padding_NAMEEND_VAL temp1261_27)))
(assert (= temp1261_29 #x0000000000000003))
(assert (= temp1261_30 temp1261_29))
(assert (= temp1261_31 (select ARGNAME_padding_NAMEEND_VAL temp1261_30)))
(assert (= temp1261_32 #x0000000000000004))
(assert (= temp1261_33 temp1261_32))
(assert (= temp1261_34 (select ARGNAME_padding_NAMEEND_VAL temp1261_33)))
(assert (= temp1261_35 #x0000000000000005))
(assert (= temp1261_36 temp1261_35))
(assert (= temp1261_37 (select ARGNAME_padding_NAMEEND_VAL temp1261_36)))
(assert (= temp1261_38 #x0000000000000000))
(assert (= temp1261_39 #x0000000000000000))
(assert (= temp1261_40 temp1261_39))
(assert (= temp1261_41 (select ARGNAME_padding_NAMEEND_VAL temp1261_40)))
(assert (= temp1261_42 #x0000000000000000))
(assert (= temp1261_43 #x0000000000000001))
(assert (= temp1261_44 temp1261_43))
(assert (= temp1261_45 (select ARGNAME_padding_NAMEEND_VAL temp1261_44)))
(assert (= temp1261_46 #x0000000000000000))
(assert (= temp1261_47 #x0000000000000002))
(assert (= temp1261_48 temp1261_47))
(assert (= temp1261_49 (select ARGNAME_padding_NAMEEND_VAL temp1261_48)))
(assert (= temp1261_50 #x0000000000000000))
(assert (= temp1261_51 #x0000000000000003))
(assert (= temp1261_52 temp1261_51))
(assert (= temp1261_53 (select ARGNAME_padding_NAMEEND_VAL temp1261_52)))
(assert (= temp1261_54 #x0000000000000000))
(assert (= temp1261_55 #x0000000000000004))
(assert (= temp1261_56 temp1261_55))
(assert (= temp1261_57 (select ARGNAME_padding_NAMEEND_VAL temp1261_56)))
(assert (= temp1261_58 #x0000000000000000))
(assert (= temp1261_59 #x0000000000000005))
(assert (= temp1261_60 temp1261_59))
(assert (= temp1261_61 (select ARGNAME_padding_NAMEEND_VAL temp1261_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp1261_41 temp1261_38)
             (bvslt temp1261_45 temp1261_42)
             (bvslt temp1261_49 temp1261_46)
             (bvslt temp1261_53 temp1261_50)
             (bvslt temp1261_57 temp1261_54)
             (bvslt temp1261_61 temp1261_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1261_62 #x0000000000000000))
(assert (= var1716002 temp1261_62))
(assert (= temp1261_63 #x0000000000000000))
(assert (= temp1261_64 temp1261_63))
(assert (= temp1261_65 (select ARGNAME_stride_NAMEEND_VAL temp1261_64)))
(assert (= temp1261_66 #x0000000000000001))
(assert (= temp1261_67 temp1261_66))
(assert (= temp1261_68 (select ARGNAME_stride_NAMEEND_VAL temp1261_67)))
(assert (= temp1261_69 #x0000000000000002))
(assert (= temp1261_70 temp1261_69))
(assert (= temp1261_71 (select ARGNAME_stride_NAMEEND_VAL temp1261_70)))
(assert (= temp1261_72 #x0000000000000003))
(assert (= temp1261_73 temp1261_72))
(assert (= temp1261_74 (select ARGNAME_stride_NAMEEND_VAL temp1261_73)))
(assert (= temp1261_75 #x0000000000000004))
(assert (= temp1261_76 temp1261_75))
(assert (= temp1261_77 (select ARGNAME_stride_NAMEEND_VAL temp1261_76)))
(assert (= temp1261_78 #x0000000000000005))
(assert (= temp1261_79 temp1261_78))
(assert (= temp1261_80 (select ARGNAME_stride_NAMEEND_VAL temp1261_79)))
(assert (= temp1261_81 #x0000000000000000))
(assert (= temp1261_82 #x0000000000000000))
(assert (= temp1261_83 temp1261_82))
(assert (= temp1261_84 (select ARGNAME_stride_NAMEEND_VAL temp1261_83)))
(assert (= temp1261_85 #x0000000000000000))
(assert (= temp1261_86 #x0000000000000001))
(assert (= temp1261_87 temp1261_86))
(assert (= temp1261_88 (select ARGNAME_stride_NAMEEND_VAL temp1261_87)))
(assert (= temp1261_89 #x0000000000000000))
(assert (= temp1261_90 #x0000000000000002))
(assert (= temp1261_91 temp1261_90))
(assert (= temp1261_92 (select ARGNAME_stride_NAMEEND_VAL temp1261_91)))
(assert (= temp1261_93 #x0000000000000000))
(assert (= temp1261_94 #x0000000000000003))
(assert (= temp1261_95 temp1261_94))
(assert (= temp1261_96 (select ARGNAME_stride_NAMEEND_VAL temp1261_95)))
(assert (= temp1261_97 #x0000000000000000))
(assert (= temp1261_98 #x0000000000000004))
(assert (= temp1261_99 temp1261_98))
(assert (= temp1261_100 (select ARGNAME_stride_NAMEEND_VAL temp1261_99)))
(assert (= temp1261_101 #x0000000000000000))
(assert (= temp1261_102 #x0000000000000005))
(assert (= temp1261_103 temp1261_102))
(assert (= temp1261_104 (select ARGNAME_stride_NAMEEND_VAL temp1261_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp1261_84 temp1261_81)
             (bvsle temp1261_88 temp1261_85)
             (bvsle temp1261_92 temp1261_89)
             (bvsle temp1261_96 temp1261_93)
             (bvsle temp1261_100 temp1261_97)
             (bvsle temp1261_104 temp1261_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1261_105 #x0000000000000000))
(assert (= var1716023 temp1261_105))
(assert (= temp1261_106 #x0000000000000000))
(assert (= var1704114 temp1261_106))
(assert (= temp1261_107 #x0000000000000000))
(assert (= temp1261_108 temp1261_107))
(assert (= temp1261_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1261_108)))
(assert (= temp1261_110 #x0000000000000001))
(assert (= temp1261_111 temp1261_110))
(assert (= temp1261_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1261_111)))
(assert (= temp1261_113 #x0000000000000002))
(assert (= temp1261_114 temp1261_113))
(assert (= temp1261_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1261_114)))
(assert (= temp1261_116 #x0000000000000003))
(assert (= temp1261_117 temp1261_116))
(assert (= temp1261_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1261_117)))
(assert (= temp1261_119 #x0000000000000004))
(assert (= temp1261_120 temp1261_119))
(assert (= temp1261_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1261_120)))
(assert (= temp1261_122 #x0000000000000005))
(assert (= temp1261_123 temp1261_122))
(assert (= temp1261_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1261_123)))
(assert (= temp1261_126 var1704114))
(assert (= temp1261_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1261_126)))
(assert (= temp1261_125 temp1261_127))
(assert (= var1716068
   (ite (bvslt temp1261_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1261_128 #x0000000000000000))
(assert (= var1716068 temp1261_128))
(assert (= temp1261_129 #x0000000000000000))
(assert (= var1704114 temp1261_129))
(assert (= temp1261_131 var1704114))
(assert (= temp1261_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1261_131)))
(assert (= temp1261_130 temp1261_132))
(assert (= var1716090 (bvsmod temp1261_130 ARGNAME_groups_NAMEEND)))
(assert (= temp1261_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp1261_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp1261_134 #x0000000000000001))
(assert (= var1716091 temp1261_134))
(assert (= var1716110 var1716000))
(assert (= temp1261_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp1261_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp1261_136 #x0000000000000001))
(assert (= var1716111 temp1261_136))
(assert (= temp1261_137 #x0000000000000001))
(assert (= var1705002 temp1261_137))
(assert (= temp1261_139 var1705002))
(assert (= temp1261_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1261_139)))
(assert (= temp1261_138 temp1261_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp1261_138)))
(assert (= temp1261_141 #x0000000000000000))
(assert (= var1704114 temp1261_141))
(assert (= temp1261_143 var1704114))
(assert (= temp1261_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1261_143)))
(assert (= temp1261_142 temp1261_144))
(assert (= temp1261_145 #x0000000000000002))
(assert (= var1979241 temp1261_145))
(assert (= temp1261_146 #x0000000000000001))
(assert (= var1716281 temp1261_146))
(assert (= temp1261_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1261_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1261_148 #x0000000000000001))
(assert (= var997490 temp1261_148))
(assert (= temp1261_149 #x0000000000000001))
(assert (= var997620 temp1261_149))
(assert (= var3486185 var997620))
(assert (= temp1261_150 #x0000000000000002))
(assert (= var3880579 temp1261_150))
(assert (= var3880581 (bvsub ARGNAME_weight_NAMEEND_DIM var3880579)))
(assert (= var3946124 var3880579))
(assert (= var3946125 var3880581))
(assert (= temp1261_152 #xffffffffffffffff))
(assert (= temp1261_151 temp1261_152))
(assert (= temp1261_154 #xffffffffffffffff))
(assert (= temp1261_153 temp1261_154))
(assert (= temp1261_155 #x0000000000000001))
(assert (= var997490 temp1261_155))
(model-add temp1261_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp1261_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp1261_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp1261_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp1261_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp1261_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






