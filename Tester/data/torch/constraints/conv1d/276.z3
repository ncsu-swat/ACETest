(declare-fun temp366_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp366_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp366_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp366_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp366_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp366_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp366_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp366_8 () (_ BitVec 64))
(declare-fun temp366_10 () (_ BitVec 64))
(declare-fun temp366_9 () (_ BitVec 64))
(declare-fun temp366_12 () (_ BitVec 64))
(declare-fun temp366_11 () (_ BitVec 64))
(declare-fun temp366_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp366_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp366_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp366_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp366_17 () (_ BitVec 64))
(declare-fun temp366_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp366_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp366_20 () (_ BitVec 64))
(declare-fun temp366_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp366_22 () (_ BitVec 64))
(declare-fun temp366_23 () (_ BitVec 64))
(declare-fun temp366_24 () (_ BitVec 64))
(declare-fun temp366_25 () (_ BitVec 64))
(declare-fun temp366_26 () (_ BitVec 64))
(declare-fun temp366_27 () (_ BitVec 64))
(declare-fun temp366_28 () (_ BitVec 64))
(declare-fun temp366_29 () (_ BitVec 64))
(declare-fun temp366_30 () (_ BitVec 64))
(declare-fun temp366_31 () (_ BitVec 64))
(declare-fun temp366_32 () (_ BitVec 64))
(declare-fun temp366_33 () (_ BitVec 64))
(declare-fun temp366_34 () (_ BitVec 64))
(declare-fun temp366_35 () (_ BitVec 64))
(declare-fun temp366_36 () (_ BitVec 64))
(declare-fun temp366_37 () (_ BitVec 64))
(declare-fun temp366_38 () (_ BitVec 64))
(declare-fun temp366_39 () (_ BitVec 64))
(declare-fun temp366_40 () (_ BitVec 64))
(declare-fun temp366_41 () (_ BitVec 64))
(declare-fun temp366_42 () (_ BitVec 64))
(declare-fun temp366_43 () (_ BitVec 64))
(declare-fun temp366_44 () (_ BitVec 64))
(declare-fun temp366_45 () (_ BitVec 64))
(declare-fun temp366_46 () (_ BitVec 64))
(declare-fun temp366_47 () (_ BitVec 64))
(declare-fun temp366_48 () (_ BitVec 64))
(declare-fun temp366_49 () (_ BitVec 64))
(declare-fun temp366_50 () (_ BitVec 64))
(declare-fun temp366_51 () (_ BitVec 64))
(declare-fun temp366_52 () (_ BitVec 64))
(declare-fun temp366_53 () (_ BitVec 64))
(declare-fun temp366_54 () (_ BitVec 64))
(declare-fun temp366_55 () (_ BitVec 64))
(declare-fun temp366_56 () (_ BitVec 64))
(declare-fun temp366_57 () (_ BitVec 64))
(declare-fun temp366_58 () (_ BitVec 64))
(declare-fun temp366_59 () (_ BitVec 64))
(declare-fun temp366_60 () (_ BitVec 64))
(declare-fun temp366_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp366_62 () (_ BitVec 64))
(declare-fun temp366_63 () (_ BitVec 64))
(declare-fun temp366_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp366_65 () (_ BitVec 64))
(declare-fun temp366_66 () (_ BitVec 64))
(declare-fun temp366_67 () (_ BitVec 64))
(declare-fun temp366_68 () (_ BitVec 64))
(declare-fun temp366_69 () (_ BitVec 64))
(declare-fun temp366_70 () (_ BitVec 64))
(declare-fun temp366_71 () (_ BitVec 64))
(declare-fun temp366_72 () (_ BitVec 64))
(declare-fun temp366_73 () (_ BitVec 64))
(declare-fun temp366_74 () (_ BitVec 64))
(declare-fun temp366_75 () (_ BitVec 64))
(declare-fun temp366_76 () (_ BitVec 64))
(declare-fun temp366_77 () (_ BitVec 64))
(declare-fun temp366_78 () (_ BitVec 64))
(declare-fun temp366_79 () (_ BitVec 64))
(declare-fun temp366_80 () (_ BitVec 64))
(declare-fun temp366_81 () (_ BitVec 64))
(declare-fun temp366_82 () (_ BitVec 64))
(declare-fun temp366_83 () (_ BitVec 64))
(declare-fun temp366_84 () (_ BitVec 64))
(declare-fun temp366_85 () (_ BitVec 64))
(declare-fun temp366_86 () (_ BitVec 64))
(declare-fun temp366_87 () (_ BitVec 64))
(declare-fun temp366_88 () (_ BitVec 64))
(declare-fun temp366_89 () (_ BitVec 64))
(declare-fun temp366_90 () (_ BitVec 64))
(declare-fun temp366_91 () (_ BitVec 64))
(declare-fun temp366_92 () (_ BitVec 64))
(declare-fun temp366_93 () (_ BitVec 64))
(declare-fun temp366_94 () (_ BitVec 64))
(declare-fun temp366_95 () (_ BitVec 64))
(declare-fun temp366_96 () (_ BitVec 64))
(declare-fun temp366_97 () (_ BitVec 64))
(declare-fun temp366_98 () (_ BitVec 64))
(declare-fun temp366_99 () (_ BitVec 64))
(declare-fun temp366_100 () (_ BitVec 64))
(declare-fun temp366_101 () (_ BitVec 64))
(declare-fun temp366_102 () (_ BitVec 64))
(declare-fun temp366_103 () (_ BitVec 64))
(declare-fun temp366_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp366_105 () (_ BitVec 64))
(declare-fun temp366_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp366_107 () (_ BitVec 64))
(declare-fun temp366_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp366_109 () (_ BitVec 64))
(declare-fun temp366_110 () (_ BitVec 64))
(declare-fun temp366_111 () (_ BitVec 64))
(declare-fun temp366_112 () (_ BitVec 64))
(declare-fun temp366_113 () (_ BitVec 64))
(declare-fun temp366_114 () (_ BitVec 64))
(declare-fun temp366_115 () (_ BitVec 64))
(declare-fun temp366_116 () (_ BitVec 64))
(declare-fun temp366_117 () (_ BitVec 64))
(declare-fun temp366_118 () (_ BitVec 64))
(declare-fun temp366_119 () (_ BitVec 64))
(declare-fun temp366_120 () (_ BitVec 64))
(declare-fun temp366_121 () (_ BitVec 64))
(declare-fun temp366_122 () (_ BitVec 64))
(declare-fun temp366_123 () (_ BitVec 64))
(declare-fun temp366_124 () (_ BitVec 64))
(declare-fun temp366_126 () (_ BitVec 64))
(declare-fun temp366_127 () (_ BitVec 64))
(declare-fun temp366_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp366_128 () (_ BitVec 64))
(declare-fun temp366_129 () (_ BitVec 64))
(declare-fun temp366_131 () (_ BitVec 64))
(declare-fun temp366_132 () (_ BitVec 64))
(declare-fun temp366_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp366_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp366_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp366_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp366_136 () (_ BitVec 64))
(declare-fun temp366_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp366_139 () (_ BitVec 64))
(declare-fun temp366_140 () (_ BitVec 64))
(declare-fun temp366_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp366_141 () (_ BitVec 64))
(declare-fun temp366_143 () (_ BitVec 64))
(declare-fun temp366_144 () (_ BitVec 64))
(declare-fun temp366_142 () (_ BitVec 64))
(declare-fun temp366_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp366_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp366_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp366_148 () (_ BitVec 64))
(declare-fun temp366_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp366_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp366_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var5058960 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun temp366_152 () (_ BitVec 64))
(declare-fun var5648784 () (_ BitVec 64))
(declare-fun temp366_153 () (_ BitVec 64))
(assert (= temp366_1 #x0000000000000001))
(assert (= var465453 temp366_1))
(assert (= temp366_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp366_2)))
(assert (= temp366_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp366_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp366_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp366_4)))
(assert (= temp366_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp366_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp366_6 #x0000000000000000))
(assert (= var465488 temp366_6))
(assert (= temp366_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp366_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp366_8 #x0000000000000001))
(assert (= var465522 temp366_8))
(assert (= temp366_10 #x0000000000000000))
(assert (= temp366_9 temp366_10))
(assert (= temp366_12 #x0000000000000001))
(assert (= temp366_11 temp366_12))
(assert (= temp366_13 #x0000000000000000))
(assert (= var863614 temp366_13))
(assert (= temp366_14 #x0000000000000001))
(assert (= var863635 temp366_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp366_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp366_15)))
(assert (= temp366_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp366_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp366_17 #x0000000000000000))
(assert (= var997373 temp366_17))
(assert (= temp366_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp366_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp366_19 #x0000000000000000))
(assert (= var997418 temp366_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp366_20 #x0000000000000000))
(assert (= temp366_21 temp366_20))
(assert (= temp366_22 (select ARGNAME_padding_NAMEEND_VAL temp366_21)))
(assert (= temp366_23 #x0000000000000001))
(assert (= temp366_24 temp366_23))
(assert (= temp366_25 (select ARGNAME_padding_NAMEEND_VAL temp366_24)))
(assert (= temp366_26 #x0000000000000002))
(assert (= temp366_27 temp366_26))
(assert (= temp366_28 (select ARGNAME_padding_NAMEEND_VAL temp366_27)))
(assert (= temp366_29 #x0000000000000003))
(assert (= temp366_30 temp366_29))
(assert (= temp366_31 (select ARGNAME_padding_NAMEEND_VAL temp366_30)))
(assert (= temp366_32 #x0000000000000004))
(assert (= temp366_33 temp366_32))
(assert (= temp366_34 (select ARGNAME_padding_NAMEEND_VAL temp366_33)))
(assert (= temp366_35 #x0000000000000005))
(assert (= temp366_36 temp366_35))
(assert (= temp366_37 (select ARGNAME_padding_NAMEEND_VAL temp366_36)))
(assert (= temp366_38 #x0000000000000000))
(assert (= temp366_39 #x0000000000000000))
(assert (= temp366_40 temp366_39))
(assert (= temp366_41 (select ARGNAME_padding_NAMEEND_VAL temp366_40)))
(assert (= temp366_42 #x0000000000000000))
(assert (= temp366_43 #x0000000000000001))
(assert (= temp366_44 temp366_43))
(assert (= temp366_45 (select ARGNAME_padding_NAMEEND_VAL temp366_44)))
(assert (= temp366_46 #x0000000000000000))
(assert (= temp366_47 #x0000000000000002))
(assert (= temp366_48 temp366_47))
(assert (= temp366_49 (select ARGNAME_padding_NAMEEND_VAL temp366_48)))
(assert (= temp366_50 #x0000000000000000))
(assert (= temp366_51 #x0000000000000003))
(assert (= temp366_52 temp366_51))
(assert (= temp366_53 (select ARGNAME_padding_NAMEEND_VAL temp366_52)))
(assert (= temp366_54 #x0000000000000000))
(assert (= temp366_55 #x0000000000000004))
(assert (= temp366_56 temp366_55))
(assert (= temp366_57 (select ARGNAME_padding_NAMEEND_VAL temp366_56)))
(assert (= temp366_58 #x0000000000000000))
(assert (= temp366_59 #x0000000000000005))
(assert (= temp366_60 temp366_59))
(assert (= temp366_61 (select ARGNAME_padding_NAMEEND_VAL temp366_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp366_41 temp366_38)
             (bvslt temp366_45 temp366_42)
             (bvslt temp366_49 temp366_46)
             (bvslt temp366_53 temp366_50)
             (bvslt temp366_57 temp366_54)
             (bvslt temp366_61 temp366_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp366_62 #x0000000000000000))
(assert (= var1716002 temp366_62))
(assert (= temp366_63 #x0000000000000000))
(assert (= temp366_64 temp366_63))
(assert (= temp366_65 (select ARGNAME_stride_NAMEEND_VAL temp366_64)))
(assert (= temp366_66 #x0000000000000001))
(assert (= temp366_67 temp366_66))
(assert (= temp366_68 (select ARGNAME_stride_NAMEEND_VAL temp366_67)))
(assert (= temp366_69 #x0000000000000002))
(assert (= temp366_70 temp366_69))
(assert (= temp366_71 (select ARGNAME_stride_NAMEEND_VAL temp366_70)))
(assert (= temp366_72 #x0000000000000003))
(assert (= temp366_73 temp366_72))
(assert (= temp366_74 (select ARGNAME_stride_NAMEEND_VAL temp366_73)))
(assert (= temp366_75 #x0000000000000004))
(assert (= temp366_76 temp366_75))
(assert (= temp366_77 (select ARGNAME_stride_NAMEEND_VAL temp366_76)))
(assert (= temp366_78 #x0000000000000005))
(assert (= temp366_79 temp366_78))
(assert (= temp366_80 (select ARGNAME_stride_NAMEEND_VAL temp366_79)))
(assert (= temp366_81 #x0000000000000000))
(assert (= temp366_82 #x0000000000000000))
(assert (= temp366_83 temp366_82))
(assert (= temp366_84 (select ARGNAME_stride_NAMEEND_VAL temp366_83)))
(assert (= temp366_85 #x0000000000000000))
(assert (= temp366_86 #x0000000000000001))
(assert (= temp366_87 temp366_86))
(assert (= temp366_88 (select ARGNAME_stride_NAMEEND_VAL temp366_87)))
(assert (= temp366_89 #x0000000000000000))
(assert (= temp366_90 #x0000000000000002))
(assert (= temp366_91 temp366_90))
(assert (= temp366_92 (select ARGNAME_stride_NAMEEND_VAL temp366_91)))
(assert (= temp366_93 #x0000000000000000))
(assert (= temp366_94 #x0000000000000003))
(assert (= temp366_95 temp366_94))
(assert (= temp366_96 (select ARGNAME_stride_NAMEEND_VAL temp366_95)))
(assert (= temp366_97 #x0000000000000000))
(assert (= temp366_98 #x0000000000000004))
(assert (= temp366_99 temp366_98))
(assert (= temp366_100 (select ARGNAME_stride_NAMEEND_VAL temp366_99)))
(assert (= temp366_101 #x0000000000000000))
(assert (= temp366_102 #x0000000000000005))
(assert (= temp366_103 temp366_102))
(assert (= temp366_104 (select ARGNAME_stride_NAMEEND_VAL temp366_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp366_84 temp366_81)
             (bvsle temp366_88 temp366_85)
             (bvsle temp366_92 temp366_89)
             (bvsle temp366_96 temp366_93)
             (bvsle temp366_100 temp366_97)
             (bvsle temp366_104 temp366_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp366_105 #x0000000000000000))
(assert (= var1716023 temp366_105))
(assert (= temp366_106 #x0000000000000000))
(assert (= var1704114 temp366_106))
(assert (= temp366_107 #x0000000000000000))
(assert (= temp366_108 temp366_107))
(assert (= temp366_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp366_108)))
(assert (= temp366_110 #x0000000000000001))
(assert (= temp366_111 temp366_110))
(assert (= temp366_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp366_111)))
(assert (= temp366_113 #x0000000000000002))
(assert (= temp366_114 temp366_113))
(assert (= temp366_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp366_114)))
(assert (= temp366_116 #x0000000000000003))
(assert (= temp366_117 temp366_116))
(assert (= temp366_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp366_117)))
(assert (= temp366_119 #x0000000000000004))
(assert (= temp366_120 temp366_119))
(assert (= temp366_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp366_120)))
(assert (= temp366_122 #x0000000000000005))
(assert (= temp366_123 temp366_122))
(assert (= temp366_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp366_123)))
(assert (= temp366_126 var1704114))
(assert (= temp366_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp366_126)))
(assert (= temp366_125 temp366_127))
(assert (= var1716068
   (ite (bvslt temp366_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp366_128 #x0000000000000000))
(assert (= var1716068 temp366_128))
(assert (= temp366_129 #x0000000000000000))
(assert (= var1704114 temp366_129))
(assert (= temp366_131 var1704114))
(assert (= temp366_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp366_131)))
(assert (= temp366_130 temp366_132))
(assert (= var1716090 (bvsmod temp366_130 ARGNAME_groups_NAMEEND)))
(assert (= temp366_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp366_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp366_134 #x0000000000000001))
(assert (= var1716091 temp366_134))
(assert (= var1716110 var1716000))
(assert (= temp366_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp366_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp366_136 #x0000000000000001))
(assert (= var1716111 temp366_136))
(assert (= temp366_137 #x0000000000000001))
(assert (= var1705002 temp366_137))
(assert (= temp366_139 var1705002))
(assert (= temp366_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp366_139)))
(assert (= temp366_138 temp366_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp366_138)))
(assert (= temp366_141 #x0000000000000000))
(assert (= var1704114 temp366_141))
(assert (= temp366_143 var1704114))
(assert (= temp366_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp366_143)))
(assert (= temp366_142 temp366_144))
(assert (= temp366_145 #x0000000000000002))
(assert (= var1979241 temp366_145))
(assert (= temp366_146 #x0000000000000001))
(assert (= var1716281 temp366_146))
(assert (= temp366_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp366_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp366_148 #x0000000000000001))
(assert (= var997490 temp366_148))
(assert (= temp366_149 #x0000000000000001))
(assert (= var997620 temp366_149))
(assert (= var3486185 var997620))
(assert (= temp366_150 #x0000000000000000))
(assert (= var3686207 temp366_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp366_151 #x0000000000000002))
(assert (= var3815043 temp366_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var5058960 var997633))
(assert (= var5321104 var997633))
(assert (= temp366_152 #x0000000000000000))
(assert (= var5648784 temp366_152))
(assert (= temp366_153 #x0000000000000001))
(assert (= var997490 temp366_153))
(model-add temp366_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp366_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp366_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp366_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp366_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp366_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)





