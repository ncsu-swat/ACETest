(declare-fun temp685_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp685_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp685_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp685_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp685_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp685_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp685_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp685_8 () (_ BitVec 64))
(declare-fun temp685_10 () (_ BitVec 64))
(declare-fun temp685_9 () (_ BitVec 64))
(declare-fun temp685_12 () (_ BitVec 64))
(declare-fun temp685_11 () (_ BitVec 64))
(declare-fun temp685_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp685_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp685_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp685_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp685_17 () (_ BitVec 64))
(declare-fun temp685_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp685_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp685_20 () (_ BitVec 64))
(declare-fun temp685_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp685_22 () (_ BitVec 64))
(declare-fun temp685_23 () (_ BitVec 64))
(declare-fun temp685_24 () (_ BitVec 64))
(declare-fun temp685_25 () (_ BitVec 64))
(declare-fun temp685_26 () (_ BitVec 64))
(declare-fun temp685_27 () (_ BitVec 64))
(declare-fun temp685_28 () (_ BitVec 64))
(declare-fun temp685_29 () (_ BitVec 64))
(declare-fun temp685_30 () (_ BitVec 64))
(declare-fun temp685_31 () (_ BitVec 64))
(declare-fun temp685_32 () (_ BitVec 64))
(declare-fun temp685_33 () (_ BitVec 64))
(declare-fun temp685_34 () (_ BitVec 64))
(declare-fun temp685_35 () (_ BitVec 64))
(declare-fun temp685_36 () (_ BitVec 64))
(declare-fun temp685_37 () (_ BitVec 64))
(declare-fun temp685_38 () (_ BitVec 64))
(declare-fun temp685_39 () (_ BitVec 64))
(declare-fun temp685_40 () (_ BitVec 64))
(declare-fun temp685_41 () (_ BitVec 64))
(declare-fun temp685_42 () (_ BitVec 64))
(declare-fun temp685_43 () (_ BitVec 64))
(declare-fun temp685_44 () (_ BitVec 64))
(declare-fun temp685_45 () (_ BitVec 64))
(declare-fun temp685_46 () (_ BitVec 64))
(declare-fun temp685_47 () (_ BitVec 64))
(declare-fun temp685_48 () (_ BitVec 64))
(declare-fun temp685_49 () (_ BitVec 64))
(declare-fun temp685_50 () (_ BitVec 64))
(declare-fun temp685_51 () (_ BitVec 64))
(declare-fun temp685_52 () (_ BitVec 64))
(declare-fun temp685_53 () (_ BitVec 64))
(declare-fun temp685_54 () (_ BitVec 64))
(declare-fun temp685_55 () (_ BitVec 64))
(declare-fun temp685_56 () (_ BitVec 64))
(declare-fun temp685_57 () (_ BitVec 64))
(declare-fun temp685_58 () (_ BitVec 64))
(declare-fun temp685_59 () (_ BitVec 64))
(declare-fun temp685_60 () (_ BitVec 64))
(declare-fun temp685_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp685_62 () (_ BitVec 64))
(declare-fun temp685_63 () (_ BitVec 64))
(declare-fun temp685_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp685_65 () (_ BitVec 64))
(declare-fun temp685_66 () (_ BitVec 64))
(declare-fun temp685_67 () (_ BitVec 64))
(declare-fun temp685_68 () (_ BitVec 64))
(declare-fun temp685_69 () (_ BitVec 64))
(declare-fun temp685_70 () (_ BitVec 64))
(declare-fun temp685_71 () (_ BitVec 64))
(declare-fun temp685_72 () (_ BitVec 64))
(declare-fun temp685_73 () (_ BitVec 64))
(declare-fun temp685_74 () (_ BitVec 64))
(declare-fun temp685_75 () (_ BitVec 64))
(declare-fun temp685_76 () (_ BitVec 64))
(declare-fun temp685_77 () (_ BitVec 64))
(declare-fun temp685_78 () (_ BitVec 64))
(declare-fun temp685_79 () (_ BitVec 64))
(declare-fun temp685_80 () (_ BitVec 64))
(declare-fun temp685_81 () (_ BitVec 64))
(declare-fun temp685_82 () (_ BitVec 64))
(declare-fun temp685_83 () (_ BitVec 64))
(declare-fun temp685_84 () (_ BitVec 64))
(declare-fun temp685_85 () (_ BitVec 64))
(declare-fun temp685_86 () (_ BitVec 64))
(declare-fun temp685_87 () (_ BitVec 64))
(declare-fun temp685_88 () (_ BitVec 64))
(declare-fun temp685_89 () (_ BitVec 64))
(declare-fun temp685_90 () (_ BitVec 64))
(declare-fun temp685_91 () (_ BitVec 64))
(declare-fun temp685_92 () (_ BitVec 64))
(declare-fun temp685_93 () (_ BitVec 64))
(declare-fun temp685_94 () (_ BitVec 64))
(declare-fun temp685_95 () (_ BitVec 64))
(declare-fun temp685_96 () (_ BitVec 64))
(declare-fun temp685_97 () (_ BitVec 64))
(declare-fun temp685_98 () (_ BitVec 64))
(declare-fun temp685_99 () (_ BitVec 64))
(declare-fun temp685_100 () (_ BitVec 64))
(declare-fun temp685_101 () (_ BitVec 64))
(declare-fun temp685_102 () (_ BitVec 64))
(declare-fun temp685_103 () (_ BitVec 64))
(declare-fun temp685_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp685_105 () (_ BitVec 64))
(declare-fun temp685_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp685_107 () (_ BitVec 64))
(declare-fun temp685_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp685_109 () (_ BitVec 64))
(declare-fun temp685_110 () (_ BitVec 64))
(declare-fun temp685_111 () (_ BitVec 64))
(declare-fun temp685_112 () (_ BitVec 64))
(declare-fun temp685_113 () (_ BitVec 64))
(declare-fun temp685_114 () (_ BitVec 64))
(declare-fun temp685_115 () (_ BitVec 64))
(declare-fun temp685_116 () (_ BitVec 64))
(declare-fun temp685_117 () (_ BitVec 64))
(declare-fun temp685_118 () (_ BitVec 64))
(declare-fun temp685_119 () (_ BitVec 64))
(declare-fun temp685_120 () (_ BitVec 64))
(declare-fun temp685_121 () (_ BitVec 64))
(declare-fun temp685_122 () (_ BitVec 64))
(declare-fun temp685_123 () (_ BitVec 64))
(declare-fun temp685_124 () (_ BitVec 64))
(declare-fun temp685_126 () (_ BitVec 64))
(declare-fun temp685_127 () (_ BitVec 64))
(declare-fun temp685_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp685_128 () (_ BitVec 64))
(declare-fun temp685_129 () (_ BitVec 64))
(declare-fun temp685_131 () (_ BitVec 64))
(declare-fun temp685_132 () (_ BitVec 64))
(declare-fun temp685_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp685_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp685_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp685_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp685_136 () (_ BitVec 64))
(declare-fun temp685_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp685_139 () (_ BitVec 64))
(declare-fun temp685_140 () (_ BitVec 64))
(declare-fun temp685_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp685_141 () (_ BitVec 64))
(declare-fun temp685_143 () (_ BitVec 64))
(declare-fun temp685_144 () (_ BitVec 64))
(declare-fun temp685_142 () (_ BitVec 64))
(declare-fun temp685_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp685_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp685_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp685_148 () (_ BitVec 64))
(declare-fun temp685_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp685_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp685_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp685_153 () (_ BitVec 64))
(declare-fun temp685_152 () (_ BitVec 64))
(declare-fun temp685_155 () (_ BitVec 64))
(declare-fun temp685_154 () (_ BitVec 64))
(declare-fun temp685_156 () (_ BitVec 64))
(assert (= temp685_1 #x0000000000000001))
(assert (= var465453 temp685_1))
(assert (= temp685_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp685_2)))
(assert (= temp685_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp685_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp685_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp685_4)))
(assert (= temp685_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp685_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp685_6 #x0000000000000000))
(assert (= var465488 temp685_6))
(assert (= temp685_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp685_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp685_8 #x0000000000000001))
(assert (= var465522 temp685_8))
(assert (= temp685_10 #x0000000000000000))
(assert (= temp685_9 temp685_10))
(assert (= temp685_12 #x0000000000000001))
(assert (= temp685_11 temp685_12))
(assert (= temp685_13 #x0000000000000000))
(assert (= var863614 temp685_13))
(assert (= temp685_14 #x0000000000000001))
(assert (= var863635 temp685_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp685_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp685_15)))
(assert (= temp685_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp685_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp685_17 #x0000000000000000))
(assert (= var997373 temp685_17))
(assert (= temp685_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp685_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp685_19 #x0000000000000000))
(assert (= var997418 temp685_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp685_20 #x0000000000000000))
(assert (= temp685_21 temp685_20))
(assert (= temp685_22 (select ARGNAME_padding_NAMEEND_VAL temp685_21)))
(assert (= temp685_23 #x0000000000000001))
(assert (= temp685_24 temp685_23))
(assert (= temp685_25 (select ARGNAME_padding_NAMEEND_VAL temp685_24)))
(assert (= temp685_26 #x0000000000000002))
(assert (= temp685_27 temp685_26))
(assert (= temp685_28 (select ARGNAME_padding_NAMEEND_VAL temp685_27)))
(assert (= temp685_29 #x0000000000000003))
(assert (= temp685_30 temp685_29))
(assert (= temp685_31 (select ARGNAME_padding_NAMEEND_VAL temp685_30)))
(assert (= temp685_32 #x0000000000000004))
(assert (= temp685_33 temp685_32))
(assert (= temp685_34 (select ARGNAME_padding_NAMEEND_VAL temp685_33)))
(assert (= temp685_35 #x0000000000000005))
(assert (= temp685_36 temp685_35))
(assert (= temp685_37 (select ARGNAME_padding_NAMEEND_VAL temp685_36)))
(assert (= temp685_38 #x0000000000000000))
(assert (= temp685_39 #x0000000000000000))
(assert (= temp685_40 temp685_39))
(assert (= temp685_41 (select ARGNAME_padding_NAMEEND_VAL temp685_40)))
(assert (= temp685_42 #x0000000000000000))
(assert (= temp685_43 #x0000000000000001))
(assert (= temp685_44 temp685_43))
(assert (= temp685_45 (select ARGNAME_padding_NAMEEND_VAL temp685_44)))
(assert (= temp685_46 #x0000000000000000))
(assert (= temp685_47 #x0000000000000002))
(assert (= temp685_48 temp685_47))
(assert (= temp685_49 (select ARGNAME_padding_NAMEEND_VAL temp685_48)))
(assert (= temp685_50 #x0000000000000000))
(assert (= temp685_51 #x0000000000000003))
(assert (= temp685_52 temp685_51))
(assert (= temp685_53 (select ARGNAME_padding_NAMEEND_VAL temp685_52)))
(assert (= temp685_54 #x0000000000000000))
(assert (= temp685_55 #x0000000000000004))
(assert (= temp685_56 temp685_55))
(assert (= temp685_57 (select ARGNAME_padding_NAMEEND_VAL temp685_56)))
(assert (= temp685_58 #x0000000000000000))
(assert (= temp685_59 #x0000000000000005))
(assert (= temp685_60 temp685_59))
(assert (= temp685_61 (select ARGNAME_padding_NAMEEND_VAL temp685_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp685_41 temp685_38)
             (bvslt temp685_45 temp685_42)
             (bvslt temp685_49 temp685_46)
             (bvslt temp685_53 temp685_50)
             (bvslt temp685_57 temp685_54)
             (bvslt temp685_61 temp685_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp685_62 #x0000000000000000))
(assert (= var1716002 temp685_62))
(assert (= temp685_63 #x0000000000000000))
(assert (= temp685_64 temp685_63))
(assert (= temp685_65 (select ARGNAME_stride_NAMEEND_VAL temp685_64)))
(assert (= temp685_66 #x0000000000000001))
(assert (= temp685_67 temp685_66))
(assert (= temp685_68 (select ARGNAME_stride_NAMEEND_VAL temp685_67)))
(assert (= temp685_69 #x0000000000000002))
(assert (= temp685_70 temp685_69))
(assert (= temp685_71 (select ARGNAME_stride_NAMEEND_VAL temp685_70)))
(assert (= temp685_72 #x0000000000000003))
(assert (= temp685_73 temp685_72))
(assert (= temp685_74 (select ARGNAME_stride_NAMEEND_VAL temp685_73)))
(assert (= temp685_75 #x0000000000000004))
(assert (= temp685_76 temp685_75))
(assert (= temp685_77 (select ARGNAME_stride_NAMEEND_VAL temp685_76)))
(assert (= temp685_78 #x0000000000000005))
(assert (= temp685_79 temp685_78))
(assert (= temp685_80 (select ARGNAME_stride_NAMEEND_VAL temp685_79)))
(assert (= temp685_81 #x0000000000000000))
(assert (= temp685_82 #x0000000000000000))
(assert (= temp685_83 temp685_82))
(assert (= temp685_84 (select ARGNAME_stride_NAMEEND_VAL temp685_83)))
(assert (= temp685_85 #x0000000000000000))
(assert (= temp685_86 #x0000000000000001))
(assert (= temp685_87 temp685_86))
(assert (= temp685_88 (select ARGNAME_stride_NAMEEND_VAL temp685_87)))
(assert (= temp685_89 #x0000000000000000))
(assert (= temp685_90 #x0000000000000002))
(assert (= temp685_91 temp685_90))
(assert (= temp685_92 (select ARGNAME_stride_NAMEEND_VAL temp685_91)))
(assert (= temp685_93 #x0000000000000000))
(assert (= temp685_94 #x0000000000000003))
(assert (= temp685_95 temp685_94))
(assert (= temp685_96 (select ARGNAME_stride_NAMEEND_VAL temp685_95)))
(assert (= temp685_97 #x0000000000000000))
(assert (= temp685_98 #x0000000000000004))
(assert (= temp685_99 temp685_98))
(assert (= temp685_100 (select ARGNAME_stride_NAMEEND_VAL temp685_99)))
(assert (= temp685_101 #x0000000000000000))
(assert (= temp685_102 #x0000000000000005))
(assert (= temp685_103 temp685_102))
(assert (= temp685_104 (select ARGNAME_stride_NAMEEND_VAL temp685_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp685_84 temp685_81)
             (bvsle temp685_88 temp685_85)
             (bvsle temp685_92 temp685_89)
             (bvsle temp685_96 temp685_93)
             (bvsle temp685_100 temp685_97)
             (bvsle temp685_104 temp685_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp685_105 #x0000000000000000))
(assert (= var1716023 temp685_105))
(assert (= temp685_106 #x0000000000000000))
(assert (= var1704114 temp685_106))
(assert (= temp685_107 #x0000000000000000))
(assert (= temp685_108 temp685_107))
(assert (= temp685_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp685_108)))
(assert (= temp685_110 #x0000000000000001))
(assert (= temp685_111 temp685_110))
(assert (= temp685_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp685_111)))
(assert (= temp685_113 #x0000000000000002))
(assert (= temp685_114 temp685_113))
(assert (= temp685_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp685_114)))
(assert (= temp685_116 #x0000000000000003))
(assert (= temp685_117 temp685_116))
(assert (= temp685_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp685_117)))
(assert (= temp685_119 #x0000000000000004))
(assert (= temp685_120 temp685_119))
(assert (= temp685_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp685_120)))
(assert (= temp685_122 #x0000000000000005))
(assert (= temp685_123 temp685_122))
(assert (= temp685_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp685_123)))
(assert (= temp685_126 var1704114))
(assert (= temp685_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp685_126)))
(assert (= temp685_125 temp685_127))
(assert (= var1716068
   (ite (bvslt temp685_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp685_128 #x0000000000000000))
(assert (= var1716068 temp685_128))
(assert (= temp685_129 #x0000000000000000))
(assert (= var1704114 temp685_129))
(assert (= temp685_131 var1704114))
(assert (= temp685_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp685_131)))
(assert (= temp685_130 temp685_132))
(assert (= var1716090 (bvsmod temp685_130 ARGNAME_groups_NAMEEND)))
(assert (= temp685_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp685_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp685_134 #x0000000000000001))
(assert (= var1716091 temp685_134))
(assert (= var1716110 var1716000))
(assert (= temp685_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp685_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp685_136 #x0000000000000001))
(assert (= var1716111 temp685_136))
(assert (= temp685_137 #x0000000000000001))
(assert (= var1705002 temp685_137))
(assert (= temp685_139 var1705002))
(assert (= temp685_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp685_139)))
(assert (= temp685_138 temp685_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp685_138)))
(assert (= temp685_141 #x0000000000000000))
(assert (= var1704114 temp685_141))
(assert (= temp685_143 var1704114))
(assert (= temp685_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp685_143)))
(assert (= temp685_142 temp685_144))
(assert (= temp685_145 #x0000000000000002))
(assert (= var1979241 temp685_145))
(assert (= temp685_146 #x0000000000000001))
(assert (= var1716281 temp685_146))
(assert (= temp685_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp685_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp685_148 #x0000000000000001))
(assert (= var997490 temp685_148))
(assert (= temp685_149 #x0000000000000001))
(assert (= var997620 temp685_149))
(assert (= var3486185 var997620))
(assert (= temp685_150 #x0000000000000000))
(assert (= var3686207 temp685_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp685_151 #x0000000000000002))
(assert (= var3815043 temp685_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp685_153 #xffffffffffffffff))
(assert (= temp685_152 temp685_153))
(assert (= temp685_155 #xffffffffffffffff))
(assert (= temp685_154 temp685_155))
(assert (= temp685_156 #x0000000000000001))
(assert (= var997490 temp685_156))
(model-add temp685_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp685_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp685_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp685_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp685_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp685_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






