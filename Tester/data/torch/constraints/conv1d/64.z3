(declare-fun temp84_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp84_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp84_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp84_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp84_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp84_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp84_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp84_8 () (_ BitVec 64))
(declare-fun temp84_10 () (_ BitVec 64))
(declare-fun temp84_9 () (_ BitVec 64))
(declare-fun temp84_12 () (_ BitVec 64))
(declare-fun temp84_11 () (_ BitVec 64))
(declare-fun temp84_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp84_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp84_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp84_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp84_17 () (_ BitVec 64))
(declare-fun temp84_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp84_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp84_20 () (_ BitVec 64))
(declare-fun temp84_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp84_22 () (_ BitVec 64))
(declare-fun temp84_23 () (_ BitVec 64))
(declare-fun temp84_24 () (_ BitVec 64))
(declare-fun temp84_25 () (_ BitVec 64))
(declare-fun temp84_26 () (_ BitVec 64))
(declare-fun temp84_27 () (_ BitVec 64))
(declare-fun temp84_28 () (_ BitVec 64))
(declare-fun temp84_29 () (_ BitVec 64))
(declare-fun temp84_30 () (_ BitVec 64))
(declare-fun temp84_31 () (_ BitVec 64))
(declare-fun temp84_32 () (_ BitVec 64))
(declare-fun temp84_33 () (_ BitVec 64))
(declare-fun temp84_34 () (_ BitVec 64))
(declare-fun temp84_35 () (_ BitVec 64))
(declare-fun temp84_36 () (_ BitVec 64))
(declare-fun temp84_37 () (_ BitVec 64))
(declare-fun temp84_38 () (_ BitVec 64))
(declare-fun temp84_39 () (_ BitVec 64))
(declare-fun temp84_40 () (_ BitVec 64))
(declare-fun temp84_41 () (_ BitVec 64))
(declare-fun temp84_42 () (_ BitVec 64))
(declare-fun temp84_43 () (_ BitVec 64))
(declare-fun temp84_44 () (_ BitVec 64))
(declare-fun temp84_45 () (_ BitVec 64))
(declare-fun temp84_46 () (_ BitVec 64))
(declare-fun temp84_47 () (_ BitVec 64))
(declare-fun temp84_48 () (_ BitVec 64))
(declare-fun temp84_49 () (_ BitVec 64))
(declare-fun temp84_50 () (_ BitVec 64))
(declare-fun temp84_51 () (_ BitVec 64))
(declare-fun temp84_52 () (_ BitVec 64))
(declare-fun temp84_53 () (_ BitVec 64))
(declare-fun temp84_54 () (_ BitVec 64))
(declare-fun temp84_55 () (_ BitVec 64))
(declare-fun temp84_56 () (_ BitVec 64))
(declare-fun temp84_57 () (_ BitVec 64))
(declare-fun temp84_58 () (_ BitVec 64))
(declare-fun temp84_59 () (_ BitVec 64))
(declare-fun temp84_60 () (_ BitVec 64))
(declare-fun temp84_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp84_62 () (_ BitVec 64))
(declare-fun temp84_63 () (_ BitVec 64))
(declare-fun temp84_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp84_65 () (_ BitVec 64))
(declare-fun temp84_66 () (_ BitVec 64))
(declare-fun temp84_67 () (_ BitVec 64))
(declare-fun temp84_68 () (_ BitVec 64))
(declare-fun temp84_69 () (_ BitVec 64))
(declare-fun temp84_70 () (_ BitVec 64))
(declare-fun temp84_71 () (_ BitVec 64))
(declare-fun temp84_72 () (_ BitVec 64))
(declare-fun temp84_73 () (_ BitVec 64))
(declare-fun temp84_74 () (_ BitVec 64))
(declare-fun temp84_75 () (_ BitVec 64))
(declare-fun temp84_76 () (_ BitVec 64))
(declare-fun temp84_77 () (_ BitVec 64))
(declare-fun temp84_78 () (_ BitVec 64))
(declare-fun temp84_79 () (_ BitVec 64))
(declare-fun temp84_80 () (_ BitVec 64))
(declare-fun temp84_81 () (_ BitVec 64))
(declare-fun temp84_82 () (_ BitVec 64))
(declare-fun temp84_83 () (_ BitVec 64))
(declare-fun temp84_84 () (_ BitVec 64))
(declare-fun temp84_85 () (_ BitVec 64))
(declare-fun temp84_86 () (_ BitVec 64))
(declare-fun temp84_87 () (_ BitVec 64))
(declare-fun temp84_88 () (_ BitVec 64))
(declare-fun temp84_89 () (_ BitVec 64))
(declare-fun temp84_90 () (_ BitVec 64))
(declare-fun temp84_91 () (_ BitVec 64))
(declare-fun temp84_92 () (_ BitVec 64))
(declare-fun temp84_93 () (_ BitVec 64))
(declare-fun temp84_94 () (_ BitVec 64))
(declare-fun temp84_95 () (_ BitVec 64))
(declare-fun temp84_96 () (_ BitVec 64))
(declare-fun temp84_97 () (_ BitVec 64))
(declare-fun temp84_98 () (_ BitVec 64))
(declare-fun temp84_99 () (_ BitVec 64))
(declare-fun temp84_100 () (_ BitVec 64))
(declare-fun temp84_101 () (_ BitVec 64))
(declare-fun temp84_102 () (_ BitVec 64))
(declare-fun temp84_103 () (_ BitVec 64))
(declare-fun temp84_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp84_105 () (_ BitVec 64))
(declare-fun temp84_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp84_107 () (_ BitVec 64))
(declare-fun temp84_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp84_109 () (_ BitVec 64))
(declare-fun temp84_110 () (_ BitVec 64))
(declare-fun temp84_111 () (_ BitVec 64))
(declare-fun temp84_112 () (_ BitVec 64))
(declare-fun temp84_113 () (_ BitVec 64))
(declare-fun temp84_114 () (_ BitVec 64))
(declare-fun temp84_115 () (_ BitVec 64))
(declare-fun temp84_116 () (_ BitVec 64))
(declare-fun temp84_117 () (_ BitVec 64))
(declare-fun temp84_118 () (_ BitVec 64))
(declare-fun temp84_119 () (_ BitVec 64))
(declare-fun temp84_120 () (_ BitVec 64))
(declare-fun temp84_121 () (_ BitVec 64))
(declare-fun temp84_122 () (_ BitVec 64))
(declare-fun temp84_123 () (_ BitVec 64))
(declare-fun temp84_124 () (_ BitVec 64))
(declare-fun temp84_126 () (_ BitVec 64))
(declare-fun temp84_127 () (_ BitVec 64))
(declare-fun temp84_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp84_128 () (_ BitVec 64))
(declare-fun temp84_129 () (_ BitVec 64))
(declare-fun temp84_131 () (_ BitVec 64))
(declare-fun temp84_132 () (_ BitVec 64))
(declare-fun temp84_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp84_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp84_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp84_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp84_136 () (_ BitVec 64))
(declare-fun temp84_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp84_139 () (_ BitVec 64))
(declare-fun temp84_140 () (_ BitVec 64))
(declare-fun temp84_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp84_141 () (_ BitVec 64))
(declare-fun temp84_143 () (_ BitVec 64))
(declare-fun temp84_144 () (_ BitVec 64))
(declare-fun temp84_142 () (_ BitVec 64))
(declare-fun temp84_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp84_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp84_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp84_148 () (_ BitVec 64))
(declare-fun temp84_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp84_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp84_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var4272528 () (_ BitVec 64))
(declare-fun var997926 () (_ BitVec 64))
(declare-fun temp84_152 () (_ BitVec 64))
(declare-fun var997927 () (_ BitVec 64))
(declare-fun temp84_154 () (_ BitVec 64))
(declare-fun temp84_153 () (_ BitVec 64))
(declare-fun temp84_155 () (_ BitVec 64))
(declare-fun var5705194 () (_ BitVec 64))
(declare-fun temp84_157 () (_ BitVec 64))
(declare-fun temp84_156 () (_ BitVec 64))
(declare-fun temp84_158 () (_ BitVec 64))
(assert (= temp84_1 #x0000000000000001))
(assert (= var465453 temp84_1))
(assert (= temp84_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp84_2)))
(assert (= temp84_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp84_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp84_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp84_4)))
(assert (= temp84_5 #x0000000000000000))
(assert (= var465487 (ite (= var465486 temp84_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp84_6 #x0000000000000000))
(assert (= var465488 temp84_6))
(assert (= temp84_7 #x0000000000000000))
(assert (= var465522 (ite (= var465485 temp84_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp84_8 #x0000000000000001))
(assert (= var465522 temp84_8))
(assert (= temp84_10 #x0000000000000000))
(assert (= temp84_9 temp84_10))
(assert (= temp84_12 #x0000000000000001))
(assert (= temp84_11 temp84_12))
(assert (= temp84_13 #x0000000000000000))
(assert (= var863614 temp84_13))
(assert (= temp84_14 #x0000000000000001))
(assert (= var863635 temp84_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp84_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp84_15)))
(assert (= temp84_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp84_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp84_17 #x0000000000000000))
(assert (= var997373 temp84_17))
(assert (= temp84_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp84_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp84_19 #x0000000000000000))
(assert (= var997418 temp84_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp84_20 #x0000000000000000))
(assert (= temp84_21 temp84_20))
(assert (= temp84_22 (select ARGNAME_padding_NAMEEND_VAL temp84_21)))
(assert (= temp84_23 #x0000000000000001))
(assert (= temp84_24 temp84_23))
(assert (= temp84_25 (select ARGNAME_padding_NAMEEND_VAL temp84_24)))
(assert (= temp84_26 #x0000000000000002))
(assert (= temp84_27 temp84_26))
(assert (= temp84_28 (select ARGNAME_padding_NAMEEND_VAL temp84_27)))
(assert (= temp84_29 #x0000000000000003))
(assert (= temp84_30 temp84_29))
(assert (= temp84_31 (select ARGNAME_padding_NAMEEND_VAL temp84_30)))
(assert (= temp84_32 #x0000000000000004))
(assert (= temp84_33 temp84_32))
(assert (= temp84_34 (select ARGNAME_padding_NAMEEND_VAL temp84_33)))
(assert (= temp84_35 #x0000000000000005))
(assert (= temp84_36 temp84_35))
(assert (= temp84_37 (select ARGNAME_padding_NAMEEND_VAL temp84_36)))
(assert (= temp84_38 #x0000000000000000))
(assert (= temp84_39 #x0000000000000000))
(assert (= temp84_40 temp84_39))
(assert (= temp84_41 (select ARGNAME_padding_NAMEEND_VAL temp84_40)))
(assert (= temp84_42 #x0000000000000000))
(assert (= temp84_43 #x0000000000000001))
(assert (= temp84_44 temp84_43))
(assert (= temp84_45 (select ARGNAME_padding_NAMEEND_VAL temp84_44)))
(assert (= temp84_46 #x0000000000000000))
(assert (= temp84_47 #x0000000000000002))
(assert (= temp84_48 temp84_47))
(assert (= temp84_49 (select ARGNAME_padding_NAMEEND_VAL temp84_48)))
(assert (= temp84_50 #x0000000000000000))
(assert (= temp84_51 #x0000000000000003))
(assert (= temp84_52 temp84_51))
(assert (= temp84_53 (select ARGNAME_padding_NAMEEND_VAL temp84_52)))
(assert (= temp84_54 #x0000000000000000))
(assert (= temp84_55 #x0000000000000004))
(assert (= temp84_56 temp84_55))
(assert (= temp84_57 (select ARGNAME_padding_NAMEEND_VAL temp84_56)))
(assert (= temp84_58 #x0000000000000000))
(assert (= temp84_59 #x0000000000000005))
(assert (= temp84_60 temp84_59))
(assert (= temp84_61 (select ARGNAME_padding_NAMEEND_VAL temp84_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp84_41 temp84_38)
             (bvslt temp84_45 temp84_42)
             (bvslt temp84_49 temp84_46)
             (bvslt temp84_53 temp84_50)
             (bvslt temp84_57 temp84_54)
             (bvslt temp84_61 temp84_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp84_62 #x0000000000000000))
(assert (= var1716002 temp84_62))
(assert (= temp84_63 #x0000000000000000))
(assert (= temp84_64 temp84_63))
(assert (= temp84_65 (select ARGNAME_stride_NAMEEND_VAL temp84_64)))
(assert (= temp84_66 #x0000000000000001))
(assert (= temp84_67 temp84_66))
(assert (= temp84_68 (select ARGNAME_stride_NAMEEND_VAL temp84_67)))
(assert (= temp84_69 #x0000000000000002))
(assert (= temp84_70 temp84_69))
(assert (= temp84_71 (select ARGNAME_stride_NAMEEND_VAL temp84_70)))
(assert (= temp84_72 #x0000000000000003))
(assert (= temp84_73 temp84_72))
(assert (= temp84_74 (select ARGNAME_stride_NAMEEND_VAL temp84_73)))
(assert (= temp84_75 #x0000000000000004))
(assert (= temp84_76 temp84_75))
(assert (= temp84_77 (select ARGNAME_stride_NAMEEND_VAL temp84_76)))
(assert (= temp84_78 #x0000000000000005))
(assert (= temp84_79 temp84_78))
(assert (= temp84_80 (select ARGNAME_stride_NAMEEND_VAL temp84_79)))
(assert (= temp84_81 #x0000000000000000))
(assert (= temp84_82 #x0000000000000000))
(assert (= temp84_83 temp84_82))
(assert (= temp84_84 (select ARGNAME_stride_NAMEEND_VAL temp84_83)))
(assert (= temp84_85 #x0000000000000000))
(assert (= temp84_86 #x0000000000000001))
(assert (= temp84_87 temp84_86))
(assert (= temp84_88 (select ARGNAME_stride_NAMEEND_VAL temp84_87)))
(assert (= temp84_89 #x0000000000000000))
(assert (= temp84_90 #x0000000000000002))
(assert (= temp84_91 temp84_90))
(assert (= temp84_92 (select ARGNAME_stride_NAMEEND_VAL temp84_91)))
(assert (= temp84_93 #x0000000000000000))
(assert (= temp84_94 #x0000000000000003))
(assert (= temp84_95 temp84_94))
(assert (= temp84_96 (select ARGNAME_stride_NAMEEND_VAL temp84_95)))
(assert (= temp84_97 #x0000000000000000))
(assert (= temp84_98 #x0000000000000004))
(assert (= temp84_99 temp84_98))
(assert (= temp84_100 (select ARGNAME_stride_NAMEEND_VAL temp84_99)))
(assert (= temp84_101 #x0000000000000000))
(assert (= temp84_102 #x0000000000000005))
(assert (= temp84_103 temp84_102))
(assert (= temp84_104 (select ARGNAME_stride_NAMEEND_VAL temp84_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp84_84 temp84_81)
             (bvsle temp84_88 temp84_85)
             (bvsle temp84_92 temp84_89)
             (bvsle temp84_96 temp84_93)
             (bvsle temp84_100 temp84_97)
             (bvsle temp84_104 temp84_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp84_105 #x0000000000000000))
(assert (= var1716023 temp84_105))
(assert (= temp84_106 #x0000000000000000))
(assert (= var1704114 temp84_106))
(assert (= temp84_107 #x0000000000000000))
(assert (= temp84_108 temp84_107))
(assert (= temp84_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp84_108)))
(assert (= temp84_110 #x0000000000000001))
(assert (= temp84_111 temp84_110))
(assert (= temp84_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp84_111)))
(assert (= temp84_113 #x0000000000000002))
(assert (= temp84_114 temp84_113))
(assert (= temp84_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp84_114)))
(assert (= temp84_116 #x0000000000000003))
(assert (= temp84_117 temp84_116))
(assert (= temp84_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp84_117)))
(assert (= temp84_119 #x0000000000000004))
(assert (= temp84_120 temp84_119))
(assert (= temp84_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp84_120)))
(assert (= temp84_122 #x0000000000000005))
(assert (= temp84_123 temp84_122))
(assert (= temp84_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp84_123)))
(assert (= temp84_126 var1704114))
(assert (= temp84_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp84_126)))
(assert (= temp84_125 temp84_127))
(assert (= var1716068
   (ite (bvslt temp84_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp84_128 #x0000000000000000))
(assert (= var1716068 temp84_128))
(assert (= temp84_129 #x0000000000000000))
(assert (= var1704114 temp84_129))
(assert (= temp84_131 var1704114))
(assert (= temp84_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp84_131)))
(assert (= temp84_130 temp84_132))
(assert (= var1716090 (bvsmod temp84_130 ARGNAME_groups_NAMEEND)))
(assert (= temp84_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp84_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp84_134 #x0000000000000001))
(assert (= var1716091 temp84_134))
(assert (= var1716110 var1716000))
(assert (= temp84_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp84_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp84_136 #x0000000000000001))
(assert (= var1716111 temp84_136))
(assert (= temp84_137 #x0000000000000001))
(assert (= var1705002 temp84_137))
(assert (= temp84_139 var1705002))
(assert (= temp84_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp84_139)))
(assert (= temp84_138 temp84_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp84_138)))
(assert (= temp84_141 #x0000000000000000))
(assert (= var1704114 temp84_141))
(assert (= temp84_143 var1704114))
(assert (= temp84_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp84_143)))
(assert (= temp84_142 temp84_144))
(assert (= temp84_145 #x0000000000000002))
(assert (= var1979241 temp84_145))
(assert (= temp84_146 #x0000000000000001))
(assert (= var1716281 temp84_146))
(assert (= temp84_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp84_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp84_148 #x0000000000000001))
(assert (= var997490 temp84_148))
(assert (= temp84_149 #x0000000000000001))
(assert (= var997620 temp84_149))
(assert (= var3486185 var997620))
(assert (= temp84_150 #x0000000000000000))
(assert (= var3686207 temp84_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp84_151 #x0000000000000002))
(assert (= var3815043 temp84_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var4272528 var997633))
(assert (= var997926 var997345))
(assert (= temp84_152 #x0000000000000000))
(assert (= var997927
   (ite (distinct var997926 temp84_152) #x0000000000000001 #x0000000000000000)))
(assert (= temp84_154 #x0000000000000001))
(assert (= temp84_153 temp84_154))
(assert (= temp84_155 #x0000000000000001))
(assert (= var5705194 temp84_155))
(assert (= temp84_157 #xffffffffffffffff))
(assert (= temp84_156 temp84_157))
(assert (= temp84_158 #x0000000000000001))
(assert (= var997490 temp84_158))
(model-add temp84_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp84_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp84_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp84_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp84_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp84_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






