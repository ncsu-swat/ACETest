(declare-fun temp566_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp566_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp566_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp566_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp566_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp566_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp566_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp566_8 () (_ BitVec 64))
(declare-fun temp566_10 () (_ BitVec 64))
(declare-fun temp566_9 () (_ BitVec 64))
(declare-fun temp566_12 () (_ BitVec 64))
(declare-fun temp566_11 () (_ BitVec 64))
(declare-fun temp566_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp566_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp566_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp566_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp566_17 () (_ BitVec 64))
(declare-fun temp566_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp566_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp566_20 () (_ BitVec 64))
(declare-fun temp566_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp566_22 () (_ BitVec 64))
(declare-fun temp566_23 () (_ BitVec 64))
(declare-fun temp566_24 () (_ BitVec 64))
(declare-fun temp566_25 () (_ BitVec 64))
(declare-fun temp566_26 () (_ BitVec 64))
(declare-fun temp566_27 () (_ BitVec 64))
(declare-fun temp566_28 () (_ BitVec 64))
(declare-fun temp566_29 () (_ BitVec 64))
(declare-fun temp566_30 () (_ BitVec 64))
(declare-fun temp566_31 () (_ BitVec 64))
(declare-fun temp566_32 () (_ BitVec 64))
(declare-fun temp566_33 () (_ BitVec 64))
(declare-fun temp566_34 () (_ BitVec 64))
(declare-fun temp566_35 () (_ BitVec 64))
(declare-fun temp566_36 () (_ BitVec 64))
(declare-fun temp566_37 () (_ BitVec 64))
(declare-fun temp566_38 () (_ BitVec 64))
(declare-fun temp566_39 () (_ BitVec 64))
(declare-fun temp566_40 () (_ BitVec 64))
(declare-fun temp566_41 () (_ BitVec 64))
(declare-fun temp566_42 () (_ BitVec 64))
(declare-fun temp566_43 () (_ BitVec 64))
(declare-fun temp566_44 () (_ BitVec 64))
(declare-fun temp566_45 () (_ BitVec 64))
(declare-fun temp566_46 () (_ BitVec 64))
(declare-fun temp566_47 () (_ BitVec 64))
(declare-fun temp566_48 () (_ BitVec 64))
(declare-fun temp566_49 () (_ BitVec 64))
(declare-fun temp566_50 () (_ BitVec 64))
(declare-fun temp566_51 () (_ BitVec 64))
(declare-fun temp566_52 () (_ BitVec 64))
(declare-fun temp566_53 () (_ BitVec 64))
(declare-fun temp566_54 () (_ BitVec 64))
(declare-fun temp566_55 () (_ BitVec 64))
(declare-fun temp566_56 () (_ BitVec 64))
(declare-fun temp566_57 () (_ BitVec 64))
(declare-fun temp566_58 () (_ BitVec 64))
(declare-fun temp566_59 () (_ BitVec 64))
(declare-fun temp566_60 () (_ BitVec 64))
(declare-fun temp566_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp566_62 () (_ BitVec 64))
(declare-fun temp566_63 () (_ BitVec 64))
(declare-fun temp566_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp566_65 () (_ BitVec 64))
(declare-fun temp566_66 () (_ BitVec 64))
(declare-fun temp566_67 () (_ BitVec 64))
(declare-fun temp566_68 () (_ BitVec 64))
(declare-fun temp566_69 () (_ BitVec 64))
(declare-fun temp566_70 () (_ BitVec 64))
(declare-fun temp566_71 () (_ BitVec 64))
(declare-fun temp566_72 () (_ BitVec 64))
(declare-fun temp566_73 () (_ BitVec 64))
(declare-fun temp566_74 () (_ BitVec 64))
(declare-fun temp566_75 () (_ BitVec 64))
(declare-fun temp566_76 () (_ BitVec 64))
(declare-fun temp566_77 () (_ BitVec 64))
(declare-fun temp566_78 () (_ BitVec 64))
(declare-fun temp566_79 () (_ BitVec 64))
(declare-fun temp566_80 () (_ BitVec 64))
(declare-fun temp566_81 () (_ BitVec 64))
(declare-fun temp566_82 () (_ BitVec 64))
(declare-fun temp566_83 () (_ BitVec 64))
(declare-fun temp566_84 () (_ BitVec 64))
(declare-fun temp566_85 () (_ BitVec 64))
(declare-fun temp566_86 () (_ BitVec 64))
(declare-fun temp566_87 () (_ BitVec 64))
(declare-fun temp566_88 () (_ BitVec 64))
(declare-fun temp566_89 () (_ BitVec 64))
(declare-fun temp566_90 () (_ BitVec 64))
(declare-fun temp566_91 () (_ BitVec 64))
(declare-fun temp566_92 () (_ BitVec 64))
(declare-fun temp566_93 () (_ BitVec 64))
(declare-fun temp566_94 () (_ BitVec 64))
(declare-fun temp566_95 () (_ BitVec 64))
(declare-fun temp566_96 () (_ BitVec 64))
(declare-fun temp566_97 () (_ BitVec 64))
(declare-fun temp566_98 () (_ BitVec 64))
(declare-fun temp566_99 () (_ BitVec 64))
(declare-fun temp566_100 () (_ BitVec 64))
(declare-fun temp566_101 () (_ BitVec 64))
(declare-fun temp566_102 () (_ BitVec 64))
(declare-fun temp566_103 () (_ BitVec 64))
(declare-fun temp566_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp566_105 () (_ BitVec 64))
(declare-fun temp566_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp566_107 () (_ BitVec 64))
(declare-fun temp566_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp566_109 () (_ BitVec 64))
(declare-fun temp566_110 () (_ BitVec 64))
(declare-fun temp566_111 () (_ BitVec 64))
(declare-fun temp566_112 () (_ BitVec 64))
(declare-fun temp566_113 () (_ BitVec 64))
(declare-fun temp566_114 () (_ BitVec 64))
(declare-fun temp566_115 () (_ BitVec 64))
(declare-fun temp566_116 () (_ BitVec 64))
(declare-fun temp566_117 () (_ BitVec 64))
(declare-fun temp566_118 () (_ BitVec 64))
(declare-fun temp566_119 () (_ BitVec 64))
(declare-fun temp566_120 () (_ BitVec 64))
(declare-fun temp566_121 () (_ BitVec 64))
(declare-fun temp566_122 () (_ BitVec 64))
(declare-fun temp566_123 () (_ BitVec 64))
(declare-fun temp566_124 () (_ BitVec 64))
(declare-fun temp566_126 () (_ BitVec 64))
(declare-fun temp566_127 () (_ BitVec 64))
(declare-fun temp566_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp566_128 () (_ BitVec 64))
(declare-fun temp566_129 () (_ BitVec 64))
(declare-fun temp566_131 () (_ BitVec 64))
(declare-fun temp566_132 () (_ BitVec 64))
(declare-fun temp566_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp566_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp566_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp566_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp566_136 () (_ BitVec 64))
(declare-fun temp566_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp566_139 () (_ BitVec 64))
(declare-fun temp566_140 () (_ BitVec 64))
(declare-fun temp566_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp566_141 () (_ BitVec 64))
(declare-fun temp566_143 () (_ BitVec 64))
(declare-fun temp566_144 () (_ BitVec 64))
(declare-fun temp566_142 () (_ BitVec 64))
(declare-fun temp566_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp566_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp566_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp566_148 () (_ BitVec 64))
(declare-fun temp566_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp566_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp566_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp566_152 () (_ BitVec 64))
(assert (= temp566_1 #x0000000000000001))
(assert (= var465453 temp566_1))
(assert (= temp566_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp566_2)))
(assert (= temp566_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp566_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp566_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp566_4)))
(assert (= temp566_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp566_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp566_6 #x0000000000000000))
(assert (= var465488 temp566_6))
(assert (= temp566_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp566_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp566_8 #x0000000000000001))
(assert (= var465522 temp566_8))
(assert (= temp566_10 #x0000000000000000))
(assert (= temp566_9 temp566_10))
(assert (= temp566_12 #x0000000000000001))
(assert (= temp566_11 temp566_12))
(assert (= temp566_13 #x0000000000000000))
(assert (= var863614 temp566_13))
(assert (= temp566_14 #x0000000000000001))
(assert (= var863635 temp566_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp566_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp566_15)))
(assert (= temp566_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp566_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp566_17 #x0000000000000000))
(assert (= var997373 temp566_17))
(assert (= temp566_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp566_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp566_19 #x0000000000000000))
(assert (= var997418 temp566_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp566_20 #x0000000000000000))
(assert (= temp566_21 temp566_20))
(assert (= temp566_22 (select ARGNAME_padding_NAMEEND_VAL temp566_21)))
(assert (= temp566_23 #x0000000000000001))
(assert (= temp566_24 temp566_23))
(assert (= temp566_25 (select ARGNAME_padding_NAMEEND_VAL temp566_24)))
(assert (= temp566_26 #x0000000000000002))
(assert (= temp566_27 temp566_26))
(assert (= temp566_28 (select ARGNAME_padding_NAMEEND_VAL temp566_27)))
(assert (= temp566_29 #x0000000000000003))
(assert (= temp566_30 temp566_29))
(assert (= temp566_31 (select ARGNAME_padding_NAMEEND_VAL temp566_30)))
(assert (= temp566_32 #x0000000000000004))
(assert (= temp566_33 temp566_32))
(assert (= temp566_34 (select ARGNAME_padding_NAMEEND_VAL temp566_33)))
(assert (= temp566_35 #x0000000000000005))
(assert (= temp566_36 temp566_35))
(assert (= temp566_37 (select ARGNAME_padding_NAMEEND_VAL temp566_36)))
(assert (= temp566_38 #x0000000000000000))
(assert (= temp566_39 #x0000000000000000))
(assert (= temp566_40 temp566_39))
(assert (= temp566_41 (select ARGNAME_padding_NAMEEND_VAL temp566_40)))
(assert (= temp566_42 #x0000000000000000))
(assert (= temp566_43 #x0000000000000001))
(assert (= temp566_44 temp566_43))
(assert (= temp566_45 (select ARGNAME_padding_NAMEEND_VAL temp566_44)))
(assert (= temp566_46 #x0000000000000000))
(assert (= temp566_47 #x0000000000000002))
(assert (= temp566_48 temp566_47))
(assert (= temp566_49 (select ARGNAME_padding_NAMEEND_VAL temp566_48)))
(assert (= temp566_50 #x0000000000000000))
(assert (= temp566_51 #x0000000000000003))
(assert (= temp566_52 temp566_51))
(assert (= temp566_53 (select ARGNAME_padding_NAMEEND_VAL temp566_52)))
(assert (= temp566_54 #x0000000000000000))
(assert (= temp566_55 #x0000000000000004))
(assert (= temp566_56 temp566_55))
(assert (= temp566_57 (select ARGNAME_padding_NAMEEND_VAL temp566_56)))
(assert (= temp566_58 #x0000000000000000))
(assert (= temp566_59 #x0000000000000005))
(assert (= temp566_60 temp566_59))
(assert (= temp566_61 (select ARGNAME_padding_NAMEEND_VAL temp566_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp566_41 temp566_38)
             (bvslt temp566_45 temp566_42)
             (bvslt temp566_49 temp566_46)
             (bvslt temp566_53 temp566_50)
             (bvslt temp566_57 temp566_54)
             (bvslt temp566_61 temp566_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp566_62 #x0000000000000000))
(assert (= var1716002 temp566_62))
(assert (= temp566_63 #x0000000000000000))
(assert (= temp566_64 temp566_63))
(assert (= temp566_65 (select ARGNAME_stride_NAMEEND_VAL temp566_64)))
(assert (= temp566_66 #x0000000000000001))
(assert (= temp566_67 temp566_66))
(assert (= temp566_68 (select ARGNAME_stride_NAMEEND_VAL temp566_67)))
(assert (= temp566_69 #x0000000000000002))
(assert (= temp566_70 temp566_69))
(assert (= temp566_71 (select ARGNAME_stride_NAMEEND_VAL temp566_70)))
(assert (= temp566_72 #x0000000000000003))
(assert (= temp566_73 temp566_72))
(assert (= temp566_74 (select ARGNAME_stride_NAMEEND_VAL temp566_73)))
(assert (= temp566_75 #x0000000000000004))
(assert (= temp566_76 temp566_75))
(assert (= temp566_77 (select ARGNAME_stride_NAMEEND_VAL temp566_76)))
(assert (= temp566_78 #x0000000000000005))
(assert (= temp566_79 temp566_78))
(assert (= temp566_80 (select ARGNAME_stride_NAMEEND_VAL temp566_79)))
(assert (= temp566_81 #x0000000000000000))
(assert (= temp566_82 #x0000000000000000))
(assert (= temp566_83 temp566_82))
(assert (= temp566_84 (select ARGNAME_stride_NAMEEND_VAL temp566_83)))
(assert (= temp566_85 #x0000000000000000))
(assert (= temp566_86 #x0000000000000001))
(assert (= temp566_87 temp566_86))
(assert (= temp566_88 (select ARGNAME_stride_NAMEEND_VAL temp566_87)))
(assert (= temp566_89 #x0000000000000000))
(assert (= temp566_90 #x0000000000000002))
(assert (= temp566_91 temp566_90))
(assert (= temp566_92 (select ARGNAME_stride_NAMEEND_VAL temp566_91)))
(assert (= temp566_93 #x0000000000000000))
(assert (= temp566_94 #x0000000000000003))
(assert (= temp566_95 temp566_94))
(assert (= temp566_96 (select ARGNAME_stride_NAMEEND_VAL temp566_95)))
(assert (= temp566_97 #x0000000000000000))
(assert (= temp566_98 #x0000000000000004))
(assert (= temp566_99 temp566_98))
(assert (= temp566_100 (select ARGNAME_stride_NAMEEND_VAL temp566_99)))
(assert (= temp566_101 #x0000000000000000))
(assert (= temp566_102 #x0000000000000005))
(assert (= temp566_103 temp566_102))
(assert (= temp566_104 (select ARGNAME_stride_NAMEEND_VAL temp566_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp566_84 temp566_81)
             (bvsle temp566_88 temp566_85)
             (bvsle temp566_92 temp566_89)
             (bvsle temp566_96 temp566_93)
             (bvsle temp566_100 temp566_97)
             (bvsle temp566_104 temp566_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp566_105 #x0000000000000000))
(assert (= var1716023 temp566_105))
(assert (= temp566_106 #x0000000000000000))
(assert (= var1704114 temp566_106))
(assert (= temp566_107 #x0000000000000000))
(assert (= temp566_108 temp566_107))
(assert (= temp566_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp566_108)))
(assert (= temp566_110 #x0000000000000001))
(assert (= temp566_111 temp566_110))
(assert (= temp566_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp566_111)))
(assert (= temp566_113 #x0000000000000002))
(assert (= temp566_114 temp566_113))
(assert (= temp566_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp566_114)))
(assert (= temp566_116 #x0000000000000003))
(assert (= temp566_117 temp566_116))
(assert (= temp566_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp566_117)))
(assert (= temp566_119 #x0000000000000004))
(assert (= temp566_120 temp566_119))
(assert (= temp566_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp566_120)))
(assert (= temp566_122 #x0000000000000005))
(assert (= temp566_123 temp566_122))
(assert (= temp566_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp566_123)))
(assert (= temp566_126 var1704114))
(assert (= temp566_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp566_126)))
(assert (= temp566_125 temp566_127))
(assert (= var1716068
   (ite (bvslt temp566_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp566_128 #x0000000000000000))
(assert (= var1716068 temp566_128))
(assert (= temp566_129 #x0000000000000000))
(assert (= var1704114 temp566_129))
(assert (= temp566_131 var1704114))
(assert (= temp566_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp566_131)))
(assert (= temp566_130 temp566_132))
(assert (= var1716090 (bvsmod temp566_130 ARGNAME_groups_NAMEEND)))
(assert (= temp566_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp566_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp566_134 #x0000000000000001))
(assert (= var1716091 temp566_134))
(assert (= var1716110 var1716000))
(assert (= temp566_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp566_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp566_136 #x0000000000000001))
(assert (= var1716111 temp566_136))
(assert (= temp566_137 #x0000000000000001))
(assert (= var1705002 temp566_137))
(assert (= temp566_139 var1705002))
(assert (= temp566_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp566_139)))
(assert (= temp566_138 temp566_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp566_138)))
(assert (= temp566_141 #x0000000000000000))
(assert (= var1704114 temp566_141))
(assert (= temp566_143 var1704114))
(assert (= temp566_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp566_143)))
(assert (= temp566_142 temp566_144))
(assert (= temp566_145 #x0000000000000002))
(assert (= var1979241 temp566_145))
(assert (= temp566_146 #x0000000000000001))
(assert (= var1716281 temp566_146))
(assert (= temp566_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp566_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp566_148 #x0000000000000001))
(assert (= var997490 temp566_148))
(assert (= temp566_149 #x0000000000000001))
(assert (= var997620 temp566_149))
(assert (= var3486185 var997620))
(assert (= temp566_150 #x0000000000000000))
(assert (= var3686207 temp566_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp566_151 #x0000000000000002))
(assert (= var3815043 temp566_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp566_152 #x0000000000000001))
(assert (= var997490 temp566_152))
(model-add temp566_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp566_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp566_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp566_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp566_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp566_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






