(declare-fun temp10134_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp10134_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp10134_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp10134_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp10134_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp10134_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp10134_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp10134_8 () (_ BitVec 64))
(declare-fun temp10134_10 () (_ BitVec 64))
(declare-fun temp10134_9 () (_ BitVec 64))
(declare-fun temp10134_12 () (_ BitVec 64))
(declare-fun temp10134_11 () (_ BitVec 64))
(declare-fun temp10134_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp10134_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp10134_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp10134_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp10134_17 () (_ BitVec 64))
(declare-fun temp10134_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp10134_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp10134_20 () (_ BitVec 64))
(declare-fun temp10134_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10134_22 () (_ BitVec 64))
(declare-fun temp10134_23 () (_ BitVec 64))
(declare-fun temp10134_24 () (_ BitVec 64))
(declare-fun temp10134_25 () (_ BitVec 64))
(declare-fun temp10134_26 () (_ BitVec 64))
(declare-fun temp10134_27 () (_ BitVec 64))
(declare-fun temp10134_28 () (_ BitVec 64))
(declare-fun temp10134_29 () (_ BitVec 64))
(declare-fun temp10134_30 () (_ BitVec 64))
(declare-fun temp10134_31 () (_ BitVec 64))
(declare-fun temp10134_32 () (_ BitVec 64))
(declare-fun temp10134_33 () (_ BitVec 64))
(declare-fun temp10134_34 () (_ BitVec 64))
(declare-fun temp10134_35 () (_ BitVec 64))
(declare-fun temp10134_36 () (_ BitVec 64))
(declare-fun temp10134_37 () (_ BitVec 64))
(declare-fun temp10134_38 () (_ BitVec 64))
(declare-fun temp10134_39 () (_ BitVec 64))
(declare-fun temp10134_40 () (_ BitVec 64))
(declare-fun temp10134_41 () (_ BitVec 64))
(declare-fun temp10134_42 () (_ BitVec 64))
(declare-fun temp10134_43 () (_ BitVec 64))
(declare-fun temp10134_44 () (_ BitVec 64))
(declare-fun temp10134_45 () (_ BitVec 64))
(declare-fun temp10134_46 () (_ BitVec 64))
(declare-fun temp10134_47 () (_ BitVec 64))
(declare-fun temp10134_48 () (_ BitVec 64))
(declare-fun temp10134_49 () (_ BitVec 64))
(declare-fun temp10134_50 () (_ BitVec 64))
(declare-fun temp10134_51 () (_ BitVec 64))
(declare-fun temp10134_52 () (_ BitVec 64))
(declare-fun temp10134_53 () (_ BitVec 64))
(declare-fun temp10134_54 () (_ BitVec 64))
(declare-fun temp10134_55 () (_ BitVec 64))
(declare-fun temp10134_56 () (_ BitVec 64))
(declare-fun temp10134_57 () (_ BitVec 64))
(declare-fun temp10134_58 () (_ BitVec 64))
(declare-fun temp10134_59 () (_ BitVec 64))
(declare-fun temp10134_60 () (_ BitVec 64))
(declare-fun temp10134_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp10134_62 () (_ BitVec 64))
(declare-fun temp10134_63 () (_ BitVec 64))
(declare-fun temp10134_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10134_65 () (_ BitVec 64))
(declare-fun temp10134_66 () (_ BitVec 64))
(declare-fun temp10134_67 () (_ BitVec 64))
(declare-fun temp10134_68 () (_ BitVec 64))
(declare-fun temp10134_69 () (_ BitVec 64))
(declare-fun temp10134_70 () (_ BitVec 64))
(declare-fun temp10134_71 () (_ BitVec 64))
(declare-fun temp10134_72 () (_ BitVec 64))
(declare-fun temp10134_73 () (_ BitVec 64))
(declare-fun temp10134_74 () (_ BitVec 64))
(declare-fun temp10134_75 () (_ BitVec 64))
(declare-fun temp10134_76 () (_ BitVec 64))
(declare-fun temp10134_77 () (_ BitVec 64))
(declare-fun temp10134_78 () (_ BitVec 64))
(declare-fun temp10134_79 () (_ BitVec 64))
(declare-fun temp10134_80 () (_ BitVec 64))
(declare-fun temp10134_81 () (_ BitVec 64))
(declare-fun temp10134_82 () (_ BitVec 64))
(declare-fun temp10134_83 () (_ BitVec 64))
(declare-fun temp10134_84 () (_ BitVec 64))
(declare-fun temp10134_85 () (_ BitVec 64))
(declare-fun temp10134_86 () (_ BitVec 64))
(declare-fun temp10134_87 () (_ BitVec 64))
(declare-fun temp10134_88 () (_ BitVec 64))
(declare-fun temp10134_89 () (_ BitVec 64))
(declare-fun temp10134_90 () (_ BitVec 64))
(declare-fun temp10134_91 () (_ BitVec 64))
(declare-fun temp10134_92 () (_ BitVec 64))
(declare-fun temp10134_93 () (_ BitVec 64))
(declare-fun temp10134_94 () (_ BitVec 64))
(declare-fun temp10134_95 () (_ BitVec 64))
(declare-fun temp10134_96 () (_ BitVec 64))
(declare-fun temp10134_97 () (_ BitVec 64))
(declare-fun temp10134_98 () (_ BitVec 64))
(declare-fun temp10134_99 () (_ BitVec 64))
(declare-fun temp10134_100 () (_ BitVec 64))
(declare-fun temp10134_101 () (_ BitVec 64))
(declare-fun temp10134_102 () (_ BitVec 64))
(declare-fun temp10134_103 () (_ BitVec 64))
(declare-fun temp10134_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp10134_105 () (_ BitVec 64))
(declare-fun temp10134_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp10134_107 () (_ BitVec 64))
(declare-fun temp10134_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10134_109 () (_ BitVec 64))
(declare-fun temp10134_110 () (_ BitVec 64))
(declare-fun temp10134_111 () (_ BitVec 64))
(declare-fun temp10134_112 () (_ BitVec 64))
(declare-fun temp10134_113 () (_ BitVec 64))
(declare-fun temp10134_114 () (_ BitVec 64))
(declare-fun temp10134_115 () (_ BitVec 64))
(declare-fun temp10134_116 () (_ BitVec 64))
(declare-fun temp10134_117 () (_ BitVec 64))
(declare-fun temp10134_118 () (_ BitVec 64))
(declare-fun temp10134_119 () (_ BitVec 64))
(declare-fun temp10134_120 () (_ BitVec 64))
(declare-fun temp10134_121 () (_ BitVec 64))
(declare-fun temp10134_122 () (_ BitVec 64))
(declare-fun temp10134_123 () (_ BitVec 64))
(declare-fun temp10134_124 () (_ BitVec 64))
(declare-fun temp10134_126 () (_ BitVec 64))
(declare-fun temp10134_127 () (_ BitVec 64))
(declare-fun temp10134_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp10134_128 () (_ BitVec 64))
(declare-fun temp10134_129 () (_ BitVec 64))
(declare-fun temp10134_131 () (_ BitVec 64))
(declare-fun temp10134_132 () (_ BitVec 64))
(declare-fun temp10134_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp10134_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp10134_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp10134_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp10134_136 () (_ BitVec 64))
(declare-fun temp10134_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp10134_139 () (_ BitVec 64))
(declare-fun temp10134_140 () (_ BitVec 64))
(declare-fun temp10134_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp10134_141 () (_ BitVec 64))
(declare-fun temp10134_143 () (_ BitVec 64))
(declare-fun temp10134_144 () (_ BitVec 64))
(declare-fun temp10134_142 () (_ BitVec 64))
(declare-fun temp10134_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp10134_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp10134_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp10134_148 () (_ BitVec 64))
(declare-fun temp10134_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp10134_150 () (_ BitVec 64))
(declare-fun var3486352 () (_ BitVec 64))
(declare-fun var3486179 () (_ BitVec 64))
(declare-fun var997629 () (_ BitVec 64))
(declare-fun var3751705 () (_ BitVec 64))
(declare-fun temp10134_151 () (_ BitVec 64))
(declare-fun temp10134_152 () (_ BitVec 64))
(declare-fun temp10134_153 () (_ BitVec 64))
(declare-fun var3946115 () (_ BitVec 64))
(declare-fun var3946117 () (_ BitVec 64))
(declare-fun var4011660 () (_ BitVec 64))
(declare-fun var4011661 () (_ BitVec 64))
(declare-fun temp10134_154 () (_ BitVec 64))
(declare-fun var997820 () (_ BitVec 64))
(declare-fun temp10134_155 () (_ BitVec 64))
(declare-fun var997821 () (_ BitVec 64))
(declare-fun var5128013 () (_ BitVec 64))
(declare-fun temp10134_157 () (_ BitVec 64))
(declare-fun temp10134_156 () (_ BitVec 64))
(declare-fun temp10134_158 () (_ BitVec 64))
(declare-fun var5705194 () (_ BitVec 64))
(declare-fun temp10134_160 () (_ BitVec 64))
(declare-fun temp10134_159 () (_ BitVec 64))
(declare-fun temp10134_161 () (_ BitVec 64))
(assert (= temp10134_1 #x0000000000000001))
(assert (= var465453 temp10134_1))
(assert (= temp10134_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp10134_2)))
(assert (= temp10134_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp10134_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp10134_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp10134_4)))
(assert (= temp10134_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp10134_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp10134_6 #x0000000000000000))
(assert (= var465488 temp10134_6))
(assert (= temp10134_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp10134_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp10134_8 #x0000000000000001))
(assert (= var465522 temp10134_8))
(assert (= temp10134_10 #x0000000000000000))
(assert (= temp10134_9 temp10134_10))
(assert (= temp10134_12 #x0000000000000001))
(assert (= temp10134_11 temp10134_12))
(assert (= temp10134_13 #x0000000000000000))
(assert (= var863614 temp10134_13))
(assert (= temp10134_14 #x0000000000000001))
(assert (= var863635 temp10134_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp10134_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp10134_15)))
(assert (= temp10134_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10134_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10134_17 #x0000000000000000))
(assert (= var997373 temp10134_17))
(assert (= temp10134_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp10134_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10134_19 #x0000000000000000))
(assert (= var997418 temp10134_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp10134_20 #x0000000000000000))
(assert (= temp10134_21 temp10134_20))
(assert (= temp10134_22 (select ARGNAME_padding_NAMEEND_VAL temp10134_21)))
(assert (= temp10134_23 #x0000000000000001))
(assert (= temp10134_24 temp10134_23))
(assert (= temp10134_25 (select ARGNAME_padding_NAMEEND_VAL temp10134_24)))
(assert (= temp10134_26 #x0000000000000002))
(assert (= temp10134_27 temp10134_26))
(assert (= temp10134_28 (select ARGNAME_padding_NAMEEND_VAL temp10134_27)))
(assert (= temp10134_29 #x0000000000000003))
(assert (= temp10134_30 temp10134_29))
(assert (= temp10134_31 (select ARGNAME_padding_NAMEEND_VAL temp10134_30)))
(assert (= temp10134_32 #x0000000000000004))
(assert (= temp10134_33 temp10134_32))
(assert (= temp10134_34 (select ARGNAME_padding_NAMEEND_VAL temp10134_33)))
(assert (= temp10134_35 #x0000000000000005))
(assert (= temp10134_36 temp10134_35))
(assert (= temp10134_37 (select ARGNAME_padding_NAMEEND_VAL temp10134_36)))
(assert (= temp10134_38 #x0000000000000000))
(assert (= temp10134_39 #x0000000000000000))
(assert (= temp10134_40 temp10134_39))
(assert (= temp10134_41 (select ARGNAME_padding_NAMEEND_VAL temp10134_40)))
(assert (= temp10134_42 #x0000000000000000))
(assert (= temp10134_43 #x0000000000000001))
(assert (= temp10134_44 temp10134_43))
(assert (= temp10134_45 (select ARGNAME_padding_NAMEEND_VAL temp10134_44)))
(assert (= temp10134_46 #x0000000000000000))
(assert (= temp10134_47 #x0000000000000002))
(assert (= temp10134_48 temp10134_47))
(assert (= temp10134_49 (select ARGNAME_padding_NAMEEND_VAL temp10134_48)))
(assert (= temp10134_50 #x0000000000000000))
(assert (= temp10134_51 #x0000000000000003))
(assert (= temp10134_52 temp10134_51))
(assert (= temp10134_53 (select ARGNAME_padding_NAMEEND_VAL temp10134_52)))
(assert (= temp10134_54 #x0000000000000000))
(assert (= temp10134_55 #x0000000000000004))
(assert (= temp10134_56 temp10134_55))
(assert (= temp10134_57 (select ARGNAME_padding_NAMEEND_VAL temp10134_56)))
(assert (= temp10134_58 #x0000000000000000))
(assert (= temp10134_59 #x0000000000000005))
(assert (= temp10134_60 temp10134_59))
(assert (= temp10134_61 (select ARGNAME_padding_NAMEEND_VAL temp10134_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp10134_41 temp10134_38)
             (bvslt temp10134_45 temp10134_42)
             (bvslt temp10134_49 temp10134_46)
             (bvslt temp10134_53 temp10134_50)
             (bvslt temp10134_57 temp10134_54)
             (bvslt temp10134_61 temp10134_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10134_62 #x0000000000000000))
(assert (= var1716002 temp10134_62))
(assert (= temp10134_63 #x0000000000000000))
(assert (= temp10134_64 temp10134_63))
(assert (= temp10134_65 (select ARGNAME_stride_NAMEEND_VAL temp10134_64)))
(assert (= temp10134_66 #x0000000000000001))
(assert (= temp10134_67 temp10134_66))
(assert (= temp10134_68 (select ARGNAME_stride_NAMEEND_VAL temp10134_67)))
(assert (= temp10134_69 #x0000000000000002))
(assert (= temp10134_70 temp10134_69))
(assert (= temp10134_71 (select ARGNAME_stride_NAMEEND_VAL temp10134_70)))
(assert (= temp10134_72 #x0000000000000003))
(assert (= temp10134_73 temp10134_72))
(assert (= temp10134_74 (select ARGNAME_stride_NAMEEND_VAL temp10134_73)))
(assert (= temp10134_75 #x0000000000000004))
(assert (= temp10134_76 temp10134_75))
(assert (= temp10134_77 (select ARGNAME_stride_NAMEEND_VAL temp10134_76)))
(assert (= temp10134_78 #x0000000000000005))
(assert (= temp10134_79 temp10134_78))
(assert (= temp10134_80 (select ARGNAME_stride_NAMEEND_VAL temp10134_79)))
(assert (= temp10134_81 #x0000000000000000))
(assert (= temp10134_82 #x0000000000000000))
(assert (= temp10134_83 temp10134_82))
(assert (= temp10134_84 (select ARGNAME_stride_NAMEEND_VAL temp10134_83)))
(assert (= temp10134_85 #x0000000000000000))
(assert (= temp10134_86 #x0000000000000001))
(assert (= temp10134_87 temp10134_86))
(assert (= temp10134_88 (select ARGNAME_stride_NAMEEND_VAL temp10134_87)))
(assert (= temp10134_89 #x0000000000000000))
(assert (= temp10134_90 #x0000000000000002))
(assert (= temp10134_91 temp10134_90))
(assert (= temp10134_92 (select ARGNAME_stride_NAMEEND_VAL temp10134_91)))
(assert (= temp10134_93 #x0000000000000000))
(assert (= temp10134_94 #x0000000000000003))
(assert (= temp10134_95 temp10134_94))
(assert (= temp10134_96 (select ARGNAME_stride_NAMEEND_VAL temp10134_95)))
(assert (= temp10134_97 #x0000000000000000))
(assert (= temp10134_98 #x0000000000000004))
(assert (= temp10134_99 temp10134_98))
(assert (= temp10134_100 (select ARGNAME_stride_NAMEEND_VAL temp10134_99)))
(assert (= temp10134_101 #x0000000000000000))
(assert (= temp10134_102 #x0000000000000005))
(assert (= temp10134_103 temp10134_102))
(assert (= temp10134_104 (select ARGNAME_stride_NAMEEND_VAL temp10134_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp10134_84 temp10134_81)
             (bvsle temp10134_88 temp10134_85)
             (bvsle temp10134_92 temp10134_89)
             (bvsle temp10134_96 temp10134_93)
             (bvsle temp10134_100 temp10134_97)
             (bvsle temp10134_104 temp10134_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10134_105 #x0000000000000000))
(assert (= var1716023 temp10134_105))
(assert (= temp10134_106 #x0000000000000000))
(assert (= var1704114 temp10134_106))
(assert (= temp10134_107 #x0000000000000000))
(assert (= temp10134_108 temp10134_107))
(assert (= temp10134_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10134_108)))
(assert (= temp10134_110 #x0000000000000001))
(assert (= temp10134_111 temp10134_110))
(assert (= temp10134_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10134_111)))
(assert (= temp10134_113 #x0000000000000002))
(assert (= temp10134_114 temp10134_113))
(assert (= temp10134_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10134_114)))
(assert (= temp10134_116 #x0000000000000003))
(assert (= temp10134_117 temp10134_116))
(assert (= temp10134_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10134_117)))
(assert (= temp10134_119 #x0000000000000004))
(assert (= temp10134_120 temp10134_119))
(assert (= temp10134_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10134_120)))
(assert (= temp10134_122 #x0000000000000005))
(assert (= temp10134_123 temp10134_122))
(assert (= temp10134_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10134_123)))
(assert (= temp10134_126 var1704114))
(assert (= temp10134_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10134_126)))
(assert (= temp10134_125 temp10134_127))
(assert (= var1716068
   (ite (bvslt temp10134_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10134_128 #x0000000000000000))
(assert (= var1716068 temp10134_128))
(assert (= temp10134_129 #x0000000000000000))
(assert (= var1704114 temp10134_129))
(assert (= temp10134_131 var1704114))
(assert (= temp10134_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10134_131)))
(assert (= temp10134_130 temp10134_132))
(assert (= var1716090 (bvsmod temp10134_130 ARGNAME_groups_NAMEEND)))
(assert (= temp10134_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp10134_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp10134_134 #x0000000000000001))
(assert (= var1716091 temp10134_134))
(assert (= var1716110 var1716000))
(assert (= temp10134_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp10134_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp10134_136 #x0000000000000001))
(assert (= var1716111 temp10134_136))
(assert (= temp10134_137 #x0000000000000001))
(assert (= var1705002 temp10134_137))
(assert (= temp10134_139 var1705002))
(assert (= temp10134_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10134_139)))
(assert (= temp10134_138 temp10134_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp10134_138)))
(assert (= temp10134_141 #x0000000000000000))
(assert (= var1704114 temp10134_141))
(assert (= temp10134_143 var1704114))
(assert (= temp10134_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10134_143)))
(assert (= temp10134_142 temp10134_144))
(assert (= temp10134_145 #x0000000000000002))
(assert (= var1979241 temp10134_145))
(assert (= temp10134_146 #x0000000000000001))
(assert (= var1716281 temp10134_146))
(assert (= temp10134_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10134_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10134_148 #x0000000000000001))
(assert (= var997490 temp10134_148))
(assert (= temp10134_149 #x0000000000000001))
(assert (= var997620 temp10134_149))
(assert (= var3486185 var997620))
(assert (= temp10134_150 #x0000000000000002))
(assert (= var3486352 temp10134_150))
(assert (= var3486179 var3486352))
(assert (= var997629 var3486179))
(assert (= var3751705 var997629))
(assert (= temp10134_151 #x0000000000000002))
(assert (= temp10134_152 #x0000000000000003))
(assert (or false (= var3751705 temp10134_151) (= var3751705 temp10134_152)))
(assert (= temp10134_153 #x0000000000000002))
(assert (= var3946115 temp10134_153))
(assert (= var3946117 (bvsub ARGNAME_weight_NAMEEND_DIM var3946115)))
(assert (= var4011660 var3946115))
(assert (= var4011661 var3946117))
(assert (= temp10134_154 #x0000000000000002))
(assert (or false (= var997629 temp10134_154)))
(assert (= var997820 var997345))
(assert (= temp10134_155 #x0000000000000000))
(assert (= var997821
   (ite (distinct var997820 temp10134_155)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var5128013 var997821))
(assert (= temp10134_157 #x0000000000000001))
(assert (= temp10134_156 temp10134_157))
(assert (= temp10134_158 #x0000000000000001))
(assert (= var5705194 temp10134_158))
(assert (= temp10134_160 #xffffffffffffffff))
(assert (= temp10134_159 temp10134_160))
(assert (= temp10134_161 #x0000000000000001))
(assert (= var997490 temp10134_161))
(model-add temp10134_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp10134_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp10134_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp10134_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp10134_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp10134_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






