(declare-fun temp766_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp766_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp766_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp766_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp766_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp766_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp766_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp766_8 () (_ BitVec 64))
(declare-fun temp766_10 () (_ BitVec 64))
(declare-fun temp766_9 () (_ BitVec 64))
(declare-fun temp766_12 () (_ BitVec 64))
(declare-fun temp766_11 () (_ BitVec 64))
(declare-fun temp766_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp766_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp766_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp766_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp766_17 () (_ BitVec 64))
(declare-fun temp766_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp766_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp766_20 () (_ BitVec 64))
(declare-fun temp766_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp766_22 () (_ BitVec 64))
(declare-fun temp766_23 () (_ BitVec 64))
(declare-fun temp766_24 () (_ BitVec 64))
(declare-fun temp766_25 () (_ BitVec 64))
(declare-fun temp766_26 () (_ BitVec 64))
(declare-fun temp766_27 () (_ BitVec 64))
(declare-fun temp766_28 () (_ BitVec 64))
(declare-fun temp766_29 () (_ BitVec 64))
(declare-fun temp766_30 () (_ BitVec 64))
(declare-fun temp766_31 () (_ BitVec 64))
(declare-fun temp766_32 () (_ BitVec 64))
(declare-fun temp766_33 () (_ BitVec 64))
(declare-fun temp766_34 () (_ BitVec 64))
(declare-fun temp766_35 () (_ BitVec 64))
(declare-fun temp766_36 () (_ BitVec 64))
(declare-fun temp766_37 () (_ BitVec 64))
(declare-fun temp766_38 () (_ BitVec 64))
(declare-fun temp766_39 () (_ BitVec 64))
(declare-fun temp766_40 () (_ BitVec 64))
(declare-fun temp766_41 () (_ BitVec 64))
(declare-fun temp766_42 () (_ BitVec 64))
(declare-fun temp766_43 () (_ BitVec 64))
(declare-fun temp766_44 () (_ BitVec 64))
(declare-fun temp766_45 () (_ BitVec 64))
(declare-fun temp766_46 () (_ BitVec 64))
(declare-fun temp766_47 () (_ BitVec 64))
(declare-fun temp766_48 () (_ BitVec 64))
(declare-fun temp766_49 () (_ BitVec 64))
(declare-fun temp766_50 () (_ BitVec 64))
(declare-fun temp766_51 () (_ BitVec 64))
(declare-fun temp766_52 () (_ BitVec 64))
(declare-fun temp766_53 () (_ BitVec 64))
(declare-fun temp766_54 () (_ BitVec 64))
(declare-fun temp766_55 () (_ BitVec 64))
(declare-fun temp766_56 () (_ BitVec 64))
(declare-fun temp766_57 () (_ BitVec 64))
(declare-fun temp766_58 () (_ BitVec 64))
(declare-fun temp766_59 () (_ BitVec 64))
(declare-fun temp766_60 () (_ BitVec 64))
(declare-fun temp766_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp766_62 () (_ BitVec 64))
(declare-fun temp766_63 () (_ BitVec 64))
(declare-fun temp766_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp766_65 () (_ BitVec 64))
(declare-fun temp766_66 () (_ BitVec 64))
(declare-fun temp766_67 () (_ BitVec 64))
(declare-fun temp766_68 () (_ BitVec 64))
(declare-fun temp766_69 () (_ BitVec 64))
(declare-fun temp766_70 () (_ BitVec 64))
(declare-fun temp766_71 () (_ BitVec 64))
(declare-fun temp766_72 () (_ BitVec 64))
(declare-fun temp766_73 () (_ BitVec 64))
(declare-fun temp766_74 () (_ BitVec 64))
(declare-fun temp766_75 () (_ BitVec 64))
(declare-fun temp766_76 () (_ BitVec 64))
(declare-fun temp766_77 () (_ BitVec 64))
(declare-fun temp766_78 () (_ BitVec 64))
(declare-fun temp766_79 () (_ BitVec 64))
(declare-fun temp766_80 () (_ BitVec 64))
(declare-fun temp766_81 () (_ BitVec 64))
(declare-fun temp766_82 () (_ BitVec 64))
(declare-fun temp766_83 () (_ BitVec 64))
(declare-fun temp766_84 () (_ BitVec 64))
(declare-fun temp766_85 () (_ BitVec 64))
(declare-fun temp766_86 () (_ BitVec 64))
(declare-fun temp766_87 () (_ BitVec 64))
(declare-fun temp766_88 () (_ BitVec 64))
(declare-fun temp766_89 () (_ BitVec 64))
(declare-fun temp766_90 () (_ BitVec 64))
(declare-fun temp766_91 () (_ BitVec 64))
(declare-fun temp766_92 () (_ BitVec 64))
(declare-fun temp766_93 () (_ BitVec 64))
(declare-fun temp766_94 () (_ BitVec 64))
(declare-fun temp766_95 () (_ BitVec 64))
(declare-fun temp766_96 () (_ BitVec 64))
(declare-fun temp766_97 () (_ BitVec 64))
(declare-fun temp766_98 () (_ BitVec 64))
(declare-fun temp766_99 () (_ BitVec 64))
(declare-fun temp766_100 () (_ BitVec 64))
(declare-fun temp766_101 () (_ BitVec 64))
(declare-fun temp766_102 () (_ BitVec 64))
(declare-fun temp766_103 () (_ BitVec 64))
(declare-fun temp766_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp766_105 () (_ BitVec 64))
(declare-fun temp766_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp766_107 () (_ BitVec 64))
(declare-fun temp766_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp766_109 () (_ BitVec 64))
(declare-fun temp766_110 () (_ BitVec 64))
(declare-fun temp766_111 () (_ BitVec 64))
(declare-fun temp766_112 () (_ BitVec 64))
(declare-fun temp766_113 () (_ BitVec 64))
(declare-fun temp766_114 () (_ BitVec 64))
(declare-fun temp766_115 () (_ BitVec 64))
(declare-fun temp766_116 () (_ BitVec 64))
(declare-fun temp766_117 () (_ BitVec 64))
(declare-fun temp766_118 () (_ BitVec 64))
(declare-fun temp766_119 () (_ BitVec 64))
(declare-fun temp766_120 () (_ BitVec 64))
(declare-fun temp766_121 () (_ BitVec 64))
(declare-fun temp766_122 () (_ BitVec 64))
(declare-fun temp766_123 () (_ BitVec 64))
(declare-fun temp766_124 () (_ BitVec 64))
(declare-fun temp766_126 () (_ BitVec 64))
(declare-fun temp766_127 () (_ BitVec 64))
(declare-fun temp766_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp766_128 () (_ BitVec 64))
(declare-fun temp766_129 () (_ BitVec 64))
(declare-fun temp766_131 () (_ BitVec 64))
(declare-fun temp766_132 () (_ BitVec 64))
(declare-fun temp766_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp766_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp766_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp766_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp766_136 () (_ BitVec 64))
(declare-fun temp766_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp766_139 () (_ BitVec 64))
(declare-fun temp766_140 () (_ BitVec 64))
(declare-fun temp766_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp766_141 () (_ BitVec 64))
(declare-fun temp766_143 () (_ BitVec 64))
(declare-fun temp766_144 () (_ BitVec 64))
(declare-fun temp766_142 () (_ BitVec 64))
(declare-fun temp766_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp766_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp766_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp766_148 () (_ BitVec 64))
(declare-fun temp766_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp766_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp766_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp766_153 () (_ BitVec 64))
(declare-fun temp766_152 () (_ BitVec 64))
(declare-fun temp766_154 () (_ BitVec 64))
(assert (= temp766_1 #x0000000000000001))
(assert (= var465453 temp766_1))
(assert (= temp766_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp766_2)))
(assert (= temp766_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp766_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp766_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp766_4)))
(assert (= temp766_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp766_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp766_6 #x0000000000000000))
(assert (= var465488 temp766_6))
(assert (= temp766_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp766_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp766_8 #x0000000000000001))
(assert (= var465522 temp766_8))
(assert (= temp766_10 #x0000000000000000))
(assert (= temp766_9 temp766_10))
(assert (= temp766_12 #x0000000000000001))
(assert (= temp766_11 temp766_12))
(assert (= temp766_13 #x0000000000000000))
(assert (= var863614 temp766_13))
(assert (= temp766_14 #x0000000000000001))
(assert (= var863635 temp766_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp766_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp766_15)))
(assert (= temp766_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp766_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp766_17 #x0000000000000000))
(assert (= var997373 temp766_17))
(assert (= temp766_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp766_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp766_19 #x0000000000000000))
(assert (= var997418 temp766_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp766_20 #x0000000000000000))
(assert (= temp766_21 temp766_20))
(assert (= temp766_22 (select ARGNAME_padding_NAMEEND_VAL temp766_21)))
(assert (= temp766_23 #x0000000000000001))
(assert (= temp766_24 temp766_23))
(assert (= temp766_25 (select ARGNAME_padding_NAMEEND_VAL temp766_24)))
(assert (= temp766_26 #x0000000000000002))
(assert (= temp766_27 temp766_26))
(assert (= temp766_28 (select ARGNAME_padding_NAMEEND_VAL temp766_27)))
(assert (= temp766_29 #x0000000000000003))
(assert (= temp766_30 temp766_29))
(assert (= temp766_31 (select ARGNAME_padding_NAMEEND_VAL temp766_30)))
(assert (= temp766_32 #x0000000000000004))
(assert (= temp766_33 temp766_32))
(assert (= temp766_34 (select ARGNAME_padding_NAMEEND_VAL temp766_33)))
(assert (= temp766_35 #x0000000000000005))
(assert (= temp766_36 temp766_35))
(assert (= temp766_37 (select ARGNAME_padding_NAMEEND_VAL temp766_36)))
(assert (= temp766_38 #x0000000000000000))
(assert (= temp766_39 #x0000000000000000))
(assert (= temp766_40 temp766_39))
(assert (= temp766_41 (select ARGNAME_padding_NAMEEND_VAL temp766_40)))
(assert (= temp766_42 #x0000000000000000))
(assert (= temp766_43 #x0000000000000001))
(assert (= temp766_44 temp766_43))
(assert (= temp766_45 (select ARGNAME_padding_NAMEEND_VAL temp766_44)))
(assert (= temp766_46 #x0000000000000000))
(assert (= temp766_47 #x0000000000000002))
(assert (= temp766_48 temp766_47))
(assert (= temp766_49 (select ARGNAME_padding_NAMEEND_VAL temp766_48)))
(assert (= temp766_50 #x0000000000000000))
(assert (= temp766_51 #x0000000000000003))
(assert (= temp766_52 temp766_51))
(assert (= temp766_53 (select ARGNAME_padding_NAMEEND_VAL temp766_52)))
(assert (= temp766_54 #x0000000000000000))
(assert (= temp766_55 #x0000000000000004))
(assert (= temp766_56 temp766_55))
(assert (= temp766_57 (select ARGNAME_padding_NAMEEND_VAL temp766_56)))
(assert (= temp766_58 #x0000000000000000))
(assert (= temp766_59 #x0000000000000005))
(assert (= temp766_60 temp766_59))
(assert (= temp766_61 (select ARGNAME_padding_NAMEEND_VAL temp766_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp766_41 temp766_38)
             (bvslt temp766_45 temp766_42)
             (bvslt temp766_49 temp766_46)
             (bvslt temp766_53 temp766_50)
             (bvslt temp766_57 temp766_54)
             (bvslt temp766_61 temp766_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp766_62 #x0000000000000000))
(assert (= var1716002 temp766_62))
(assert (= temp766_63 #x0000000000000000))
(assert (= temp766_64 temp766_63))
(assert (= temp766_65 (select ARGNAME_stride_NAMEEND_VAL temp766_64)))
(assert (= temp766_66 #x0000000000000001))
(assert (= temp766_67 temp766_66))
(assert (= temp766_68 (select ARGNAME_stride_NAMEEND_VAL temp766_67)))
(assert (= temp766_69 #x0000000000000002))
(assert (= temp766_70 temp766_69))
(assert (= temp766_71 (select ARGNAME_stride_NAMEEND_VAL temp766_70)))
(assert (= temp766_72 #x0000000000000003))
(assert (= temp766_73 temp766_72))
(assert (= temp766_74 (select ARGNAME_stride_NAMEEND_VAL temp766_73)))
(assert (= temp766_75 #x0000000000000004))
(assert (= temp766_76 temp766_75))
(assert (= temp766_77 (select ARGNAME_stride_NAMEEND_VAL temp766_76)))
(assert (= temp766_78 #x0000000000000005))
(assert (= temp766_79 temp766_78))
(assert (= temp766_80 (select ARGNAME_stride_NAMEEND_VAL temp766_79)))
(assert (= temp766_81 #x0000000000000000))
(assert (= temp766_82 #x0000000000000000))
(assert (= temp766_83 temp766_82))
(assert (= temp766_84 (select ARGNAME_stride_NAMEEND_VAL temp766_83)))
(assert (= temp766_85 #x0000000000000000))
(assert (= temp766_86 #x0000000000000001))
(assert (= temp766_87 temp766_86))
(assert (= temp766_88 (select ARGNAME_stride_NAMEEND_VAL temp766_87)))
(assert (= temp766_89 #x0000000000000000))
(assert (= temp766_90 #x0000000000000002))
(assert (= temp766_91 temp766_90))
(assert (= temp766_92 (select ARGNAME_stride_NAMEEND_VAL temp766_91)))
(assert (= temp766_93 #x0000000000000000))
(assert (= temp766_94 #x0000000000000003))
(assert (= temp766_95 temp766_94))
(assert (= temp766_96 (select ARGNAME_stride_NAMEEND_VAL temp766_95)))
(assert (= temp766_97 #x0000000000000000))
(assert (= temp766_98 #x0000000000000004))
(assert (= temp766_99 temp766_98))
(assert (= temp766_100 (select ARGNAME_stride_NAMEEND_VAL temp766_99)))
(assert (= temp766_101 #x0000000000000000))
(assert (= temp766_102 #x0000000000000005))
(assert (= temp766_103 temp766_102))
(assert (= temp766_104 (select ARGNAME_stride_NAMEEND_VAL temp766_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp766_84 temp766_81)
             (bvsle temp766_88 temp766_85)
             (bvsle temp766_92 temp766_89)
             (bvsle temp766_96 temp766_93)
             (bvsle temp766_100 temp766_97)
             (bvsle temp766_104 temp766_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp766_105 #x0000000000000000))
(assert (= var1716023 temp766_105))
(assert (= temp766_106 #x0000000000000000))
(assert (= var1704114 temp766_106))
(assert (= temp766_107 #x0000000000000000))
(assert (= temp766_108 temp766_107))
(assert (= temp766_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp766_108)))
(assert (= temp766_110 #x0000000000000001))
(assert (= temp766_111 temp766_110))
(assert (= temp766_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp766_111)))
(assert (= temp766_113 #x0000000000000002))
(assert (= temp766_114 temp766_113))
(assert (= temp766_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp766_114)))
(assert (= temp766_116 #x0000000000000003))
(assert (= temp766_117 temp766_116))
(assert (= temp766_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp766_117)))
(assert (= temp766_119 #x0000000000000004))
(assert (= temp766_120 temp766_119))
(assert (= temp766_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp766_120)))
(assert (= temp766_122 #x0000000000000005))
(assert (= temp766_123 temp766_122))
(assert (= temp766_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp766_123)))
(assert (= temp766_126 var1704114))
(assert (= temp766_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp766_126)))
(assert (= temp766_125 temp766_127))
(assert (= var1716068
   (ite (bvslt temp766_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp766_128 #x0000000000000000))
(assert (= var1716068 temp766_128))
(assert (= temp766_129 #x0000000000000000))
(assert (= var1704114 temp766_129))
(assert (= temp766_131 var1704114))
(assert (= temp766_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp766_131)))
(assert (= temp766_130 temp766_132))
(assert (= var1716090 (bvsmod temp766_130 ARGNAME_groups_NAMEEND)))
(assert (= temp766_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp766_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp766_134 #x0000000000000001))
(assert (= var1716091 temp766_134))
(assert (= var1716110 var1716000))
(assert (= temp766_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp766_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp766_136 #x0000000000000001))
(assert (= var1716111 temp766_136))
(assert (= temp766_137 #x0000000000000001))
(assert (= var1705002 temp766_137))
(assert (= temp766_139 var1705002))
(assert (= temp766_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp766_139)))
(assert (= temp766_138 temp766_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp766_138)))
(assert (= temp766_141 #x0000000000000000))
(assert (= var1704114 temp766_141))
(assert (= temp766_143 var1704114))
(assert (= temp766_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp766_143)))
(assert (= temp766_142 temp766_144))
(assert (= temp766_145 #x0000000000000002))
(assert (= var1979241 temp766_145))
(assert (= temp766_146 #x0000000000000001))
(assert (= var1716281 temp766_146))
(assert (= temp766_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp766_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp766_148 #x0000000000000001))
(assert (= var997490 temp766_148))
(assert (= temp766_149 #x0000000000000001))
(assert (= var997620 temp766_149))
(assert (= var3486185 var997620))
(assert (= temp766_150 #x0000000000000000))
(assert (= var3686207 temp766_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp766_151 #x0000000000000002))
(assert (= var3815043 temp766_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp766_153 #xffffffffffffffff))
(assert (= temp766_152 temp766_153))
(assert (= temp766_154 #x0000000000000001))
(assert (= var997490 temp766_154))
(model-add temp766_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp766_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp766_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp766_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp766_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp766_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






