(declare-fun temp986_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp986_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp986_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp986_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp986_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp986_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp986_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp986_8 () (_ BitVec 64))
(declare-fun temp986_10 () (_ BitVec 64))
(declare-fun temp986_9 () (_ BitVec 64))
(declare-fun temp986_12 () (_ BitVec 64))
(declare-fun temp986_11 () (_ BitVec 64))
(declare-fun temp986_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp986_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp986_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp986_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp986_17 () (_ BitVec 64))
(declare-fun temp986_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp986_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp986_20 () (_ BitVec 64))
(declare-fun temp986_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp986_22 () (_ BitVec 64))
(declare-fun temp986_23 () (_ BitVec 64))
(declare-fun temp986_24 () (_ BitVec 64))
(declare-fun temp986_25 () (_ BitVec 64))
(declare-fun temp986_26 () (_ BitVec 64))
(declare-fun temp986_27 () (_ BitVec 64))
(declare-fun temp986_28 () (_ BitVec 64))
(declare-fun temp986_29 () (_ BitVec 64))
(declare-fun temp986_30 () (_ BitVec 64))
(declare-fun temp986_31 () (_ BitVec 64))
(declare-fun temp986_32 () (_ BitVec 64))
(declare-fun temp986_33 () (_ BitVec 64))
(declare-fun temp986_34 () (_ BitVec 64))
(declare-fun temp986_35 () (_ BitVec 64))
(declare-fun temp986_36 () (_ BitVec 64))
(declare-fun temp986_37 () (_ BitVec 64))
(declare-fun temp986_38 () (_ BitVec 64))
(declare-fun temp986_39 () (_ BitVec 64))
(declare-fun temp986_40 () (_ BitVec 64))
(declare-fun temp986_41 () (_ BitVec 64))
(declare-fun temp986_42 () (_ BitVec 64))
(declare-fun temp986_43 () (_ BitVec 64))
(declare-fun temp986_44 () (_ BitVec 64))
(declare-fun temp986_45 () (_ BitVec 64))
(declare-fun temp986_46 () (_ BitVec 64))
(declare-fun temp986_47 () (_ BitVec 64))
(declare-fun temp986_48 () (_ BitVec 64))
(declare-fun temp986_49 () (_ BitVec 64))
(declare-fun temp986_50 () (_ BitVec 64))
(declare-fun temp986_51 () (_ BitVec 64))
(declare-fun temp986_52 () (_ BitVec 64))
(declare-fun temp986_53 () (_ BitVec 64))
(declare-fun temp986_54 () (_ BitVec 64))
(declare-fun temp986_55 () (_ BitVec 64))
(declare-fun temp986_56 () (_ BitVec 64))
(declare-fun temp986_57 () (_ BitVec 64))
(declare-fun temp986_58 () (_ BitVec 64))
(declare-fun temp986_59 () (_ BitVec 64))
(declare-fun temp986_60 () (_ BitVec 64))
(declare-fun temp986_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp986_62 () (_ BitVec 64))
(declare-fun temp986_63 () (_ BitVec 64))
(declare-fun temp986_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp986_65 () (_ BitVec 64))
(declare-fun temp986_66 () (_ BitVec 64))
(declare-fun temp986_67 () (_ BitVec 64))
(declare-fun temp986_68 () (_ BitVec 64))
(declare-fun temp986_69 () (_ BitVec 64))
(declare-fun temp986_70 () (_ BitVec 64))
(declare-fun temp986_71 () (_ BitVec 64))
(declare-fun temp986_72 () (_ BitVec 64))
(declare-fun temp986_73 () (_ BitVec 64))
(declare-fun temp986_74 () (_ BitVec 64))
(declare-fun temp986_75 () (_ BitVec 64))
(declare-fun temp986_76 () (_ BitVec 64))
(declare-fun temp986_77 () (_ BitVec 64))
(declare-fun temp986_78 () (_ BitVec 64))
(declare-fun temp986_79 () (_ BitVec 64))
(declare-fun temp986_80 () (_ BitVec 64))
(declare-fun temp986_81 () (_ BitVec 64))
(declare-fun temp986_82 () (_ BitVec 64))
(declare-fun temp986_83 () (_ BitVec 64))
(declare-fun temp986_84 () (_ BitVec 64))
(declare-fun temp986_85 () (_ BitVec 64))
(declare-fun temp986_86 () (_ BitVec 64))
(declare-fun temp986_87 () (_ BitVec 64))
(declare-fun temp986_88 () (_ BitVec 64))
(declare-fun temp986_89 () (_ BitVec 64))
(declare-fun temp986_90 () (_ BitVec 64))
(declare-fun temp986_91 () (_ BitVec 64))
(declare-fun temp986_92 () (_ BitVec 64))
(declare-fun temp986_93 () (_ BitVec 64))
(declare-fun temp986_94 () (_ BitVec 64))
(declare-fun temp986_95 () (_ BitVec 64))
(declare-fun temp986_96 () (_ BitVec 64))
(declare-fun temp986_97 () (_ BitVec 64))
(declare-fun temp986_98 () (_ BitVec 64))
(declare-fun temp986_99 () (_ BitVec 64))
(declare-fun temp986_100 () (_ BitVec 64))
(declare-fun temp986_101 () (_ BitVec 64))
(declare-fun temp986_102 () (_ BitVec 64))
(declare-fun temp986_103 () (_ BitVec 64))
(declare-fun temp986_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp986_105 () (_ BitVec 64))
(declare-fun temp986_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp986_107 () (_ BitVec 64))
(declare-fun temp986_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp986_109 () (_ BitVec 64))
(declare-fun temp986_110 () (_ BitVec 64))
(declare-fun temp986_111 () (_ BitVec 64))
(declare-fun temp986_112 () (_ BitVec 64))
(declare-fun temp986_113 () (_ BitVec 64))
(declare-fun temp986_114 () (_ BitVec 64))
(declare-fun temp986_115 () (_ BitVec 64))
(declare-fun temp986_116 () (_ BitVec 64))
(declare-fun temp986_117 () (_ BitVec 64))
(declare-fun temp986_118 () (_ BitVec 64))
(declare-fun temp986_119 () (_ BitVec 64))
(declare-fun temp986_120 () (_ BitVec 64))
(declare-fun temp986_121 () (_ BitVec 64))
(declare-fun temp986_122 () (_ BitVec 64))
(declare-fun temp986_123 () (_ BitVec 64))
(declare-fun temp986_124 () (_ BitVec 64))
(declare-fun temp986_126 () (_ BitVec 64))
(declare-fun temp986_127 () (_ BitVec 64))
(declare-fun temp986_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp986_128 () (_ BitVec 64))
(declare-fun temp986_129 () (_ BitVec 64))
(declare-fun temp986_131 () (_ BitVec 64))
(declare-fun temp986_132 () (_ BitVec 64))
(declare-fun temp986_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp986_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp986_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp986_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp986_136 () (_ BitVec 64))
(declare-fun temp986_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp986_139 () (_ BitVec 64))
(declare-fun temp986_140 () (_ BitVec 64))
(declare-fun temp986_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp986_141 () (_ BitVec 64))
(declare-fun temp986_143 () (_ BitVec 64))
(declare-fun temp986_144 () (_ BitVec 64))
(declare-fun temp986_142 () (_ BitVec 64))
(declare-fun temp986_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp986_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp986_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp986_148 () (_ BitVec 64))
(declare-fun temp986_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp986_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp986_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp986_152 () (_ BitVec 64))
(assert (= temp986_1 #x0000000000000001))
(assert (= var465453 temp986_1))
(assert (= temp986_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp986_2)))
(assert (= temp986_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp986_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp986_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp986_4)))
(assert (= temp986_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp986_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp986_6 #x0000000000000000))
(assert (= var465488 temp986_6))
(assert (= temp986_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp986_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp986_8 #x0000000000000001))
(assert (= var465522 temp986_8))
(assert (= temp986_10 #x0000000000000000))
(assert (= temp986_9 temp986_10))
(assert (= temp986_12 #x0000000000000001))
(assert (= temp986_11 temp986_12))
(assert (= temp986_13 #x0000000000000000))
(assert (= var863614 temp986_13))
(assert (= temp986_14 #x0000000000000001))
(assert (= var863635 temp986_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp986_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp986_15)))
(assert (= temp986_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp986_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp986_17 #x0000000000000000))
(assert (= var997373 temp986_17))
(assert (= temp986_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp986_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp986_19 #x0000000000000000))
(assert (= var997418 temp986_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp986_20 #x0000000000000000))
(assert (= temp986_21 temp986_20))
(assert (= temp986_22 (select ARGNAME_padding_NAMEEND_VAL temp986_21)))
(assert (= temp986_23 #x0000000000000001))
(assert (= temp986_24 temp986_23))
(assert (= temp986_25 (select ARGNAME_padding_NAMEEND_VAL temp986_24)))
(assert (= temp986_26 #x0000000000000002))
(assert (= temp986_27 temp986_26))
(assert (= temp986_28 (select ARGNAME_padding_NAMEEND_VAL temp986_27)))
(assert (= temp986_29 #x0000000000000003))
(assert (= temp986_30 temp986_29))
(assert (= temp986_31 (select ARGNAME_padding_NAMEEND_VAL temp986_30)))
(assert (= temp986_32 #x0000000000000004))
(assert (= temp986_33 temp986_32))
(assert (= temp986_34 (select ARGNAME_padding_NAMEEND_VAL temp986_33)))
(assert (= temp986_35 #x0000000000000005))
(assert (= temp986_36 temp986_35))
(assert (= temp986_37 (select ARGNAME_padding_NAMEEND_VAL temp986_36)))
(assert (= temp986_38 #x0000000000000000))
(assert (= temp986_39 #x0000000000000000))
(assert (= temp986_40 temp986_39))
(assert (= temp986_41 (select ARGNAME_padding_NAMEEND_VAL temp986_40)))
(assert (= temp986_42 #x0000000000000000))
(assert (= temp986_43 #x0000000000000001))
(assert (= temp986_44 temp986_43))
(assert (= temp986_45 (select ARGNAME_padding_NAMEEND_VAL temp986_44)))
(assert (= temp986_46 #x0000000000000000))
(assert (= temp986_47 #x0000000000000002))
(assert (= temp986_48 temp986_47))
(assert (= temp986_49 (select ARGNAME_padding_NAMEEND_VAL temp986_48)))
(assert (= temp986_50 #x0000000000000000))
(assert (= temp986_51 #x0000000000000003))
(assert (= temp986_52 temp986_51))
(assert (= temp986_53 (select ARGNAME_padding_NAMEEND_VAL temp986_52)))
(assert (= temp986_54 #x0000000000000000))
(assert (= temp986_55 #x0000000000000004))
(assert (= temp986_56 temp986_55))
(assert (= temp986_57 (select ARGNAME_padding_NAMEEND_VAL temp986_56)))
(assert (= temp986_58 #x0000000000000000))
(assert (= temp986_59 #x0000000000000005))
(assert (= temp986_60 temp986_59))
(assert (= temp986_61 (select ARGNAME_padding_NAMEEND_VAL temp986_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp986_41 temp986_38)
             (bvslt temp986_45 temp986_42)
             (bvslt temp986_49 temp986_46)
             (bvslt temp986_53 temp986_50)
             (bvslt temp986_57 temp986_54)
             (bvslt temp986_61 temp986_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp986_62 #x0000000000000000))
(assert (= var1716002 temp986_62))
(assert (= temp986_63 #x0000000000000000))
(assert (= temp986_64 temp986_63))
(assert (= temp986_65 (select ARGNAME_stride_NAMEEND_VAL temp986_64)))
(assert (= temp986_66 #x0000000000000001))
(assert (= temp986_67 temp986_66))
(assert (= temp986_68 (select ARGNAME_stride_NAMEEND_VAL temp986_67)))
(assert (= temp986_69 #x0000000000000002))
(assert (= temp986_70 temp986_69))
(assert (= temp986_71 (select ARGNAME_stride_NAMEEND_VAL temp986_70)))
(assert (= temp986_72 #x0000000000000003))
(assert (= temp986_73 temp986_72))
(assert (= temp986_74 (select ARGNAME_stride_NAMEEND_VAL temp986_73)))
(assert (= temp986_75 #x0000000000000004))
(assert (= temp986_76 temp986_75))
(assert (= temp986_77 (select ARGNAME_stride_NAMEEND_VAL temp986_76)))
(assert (= temp986_78 #x0000000000000005))
(assert (= temp986_79 temp986_78))
(assert (= temp986_80 (select ARGNAME_stride_NAMEEND_VAL temp986_79)))
(assert (= temp986_81 #x0000000000000000))
(assert (= temp986_82 #x0000000000000000))
(assert (= temp986_83 temp986_82))
(assert (= temp986_84 (select ARGNAME_stride_NAMEEND_VAL temp986_83)))
(assert (= temp986_85 #x0000000000000000))
(assert (= temp986_86 #x0000000000000001))
(assert (= temp986_87 temp986_86))
(assert (= temp986_88 (select ARGNAME_stride_NAMEEND_VAL temp986_87)))
(assert (= temp986_89 #x0000000000000000))
(assert (= temp986_90 #x0000000000000002))
(assert (= temp986_91 temp986_90))
(assert (= temp986_92 (select ARGNAME_stride_NAMEEND_VAL temp986_91)))
(assert (= temp986_93 #x0000000000000000))
(assert (= temp986_94 #x0000000000000003))
(assert (= temp986_95 temp986_94))
(assert (= temp986_96 (select ARGNAME_stride_NAMEEND_VAL temp986_95)))
(assert (= temp986_97 #x0000000000000000))
(assert (= temp986_98 #x0000000000000004))
(assert (= temp986_99 temp986_98))
(assert (= temp986_100 (select ARGNAME_stride_NAMEEND_VAL temp986_99)))
(assert (= temp986_101 #x0000000000000000))
(assert (= temp986_102 #x0000000000000005))
(assert (= temp986_103 temp986_102))
(assert (= temp986_104 (select ARGNAME_stride_NAMEEND_VAL temp986_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp986_84 temp986_81)
             (bvsle temp986_88 temp986_85)
             (bvsle temp986_92 temp986_89)
             (bvsle temp986_96 temp986_93)
             (bvsle temp986_100 temp986_97)
             (bvsle temp986_104 temp986_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp986_105 #x0000000000000000))
(assert (= var1716023 temp986_105))
(assert (= temp986_106 #x0000000000000000))
(assert (= var1704114 temp986_106))
(assert (= temp986_107 #x0000000000000000))
(assert (= temp986_108 temp986_107))
(assert (= temp986_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp986_108)))
(assert (= temp986_110 #x0000000000000001))
(assert (= temp986_111 temp986_110))
(assert (= temp986_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp986_111)))
(assert (= temp986_113 #x0000000000000002))
(assert (= temp986_114 temp986_113))
(assert (= temp986_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp986_114)))
(assert (= temp986_116 #x0000000000000003))
(assert (= temp986_117 temp986_116))
(assert (= temp986_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp986_117)))
(assert (= temp986_119 #x0000000000000004))
(assert (= temp986_120 temp986_119))
(assert (= temp986_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp986_120)))
(assert (= temp986_122 #x0000000000000005))
(assert (= temp986_123 temp986_122))
(assert (= temp986_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp986_123)))
(assert (= temp986_126 var1704114))
(assert (= temp986_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp986_126)))
(assert (= temp986_125 temp986_127))
(assert (= var1716068
   (ite (bvslt temp986_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp986_128 #x0000000000000000))
(assert (= var1716068 temp986_128))
(assert (= temp986_129 #x0000000000000000))
(assert (= var1704114 temp986_129))
(assert (= temp986_131 var1704114))
(assert (= temp986_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp986_131)))
(assert (= temp986_130 temp986_132))
(assert (= var1716090 (bvsmod temp986_130 ARGNAME_groups_NAMEEND)))
(assert (= temp986_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp986_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp986_134 #x0000000000000001))
(assert (= var1716091 temp986_134))
(assert (= var1716110 var1716000))
(assert (= temp986_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp986_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp986_136 #x0000000000000001))
(assert (= var1716111 temp986_136))
(assert (= temp986_137 #x0000000000000001))
(assert (= var1705002 temp986_137))
(assert (= temp986_139 var1705002))
(assert (= temp986_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp986_139)))
(assert (= temp986_138 temp986_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp986_138)))
(assert (= temp986_141 #x0000000000000000))
(assert (= var1704114 temp986_141))
(assert (= temp986_143 var1704114))
(assert (= temp986_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp986_143)))
(assert (= temp986_142 temp986_144))
(assert (= temp986_145 #x0000000000000002))
(assert (= var1979241 temp986_145))
(assert (= temp986_146 #x0000000000000001))
(assert (= var1716281 temp986_146))
(assert (= temp986_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp986_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp986_148 #x0000000000000001))
(assert (= var997490 temp986_148))
(assert (= temp986_149 #x0000000000000001))
(assert (= var997620 temp986_149))
(assert (= var3486185 var997620))
(assert (= temp986_150 #x0000000000000000))
(assert (= var3686207 temp986_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp986_151 #x0000000000000002))
(assert (= var3815043 temp986_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp986_152 #x0000000000000001))
(assert (= var997490 temp986_152))
(model-add temp986_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp986_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp986_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp986_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp986_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp986_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






