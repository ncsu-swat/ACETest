(declare-fun temp967_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp967_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp967_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp967_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp967_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp967_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp967_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp967_8 () (_ BitVec 64))
(declare-fun temp967_10 () (_ BitVec 64))
(declare-fun temp967_9 () (_ BitVec 64))
(declare-fun temp967_12 () (_ BitVec 64))
(declare-fun temp967_11 () (_ BitVec 64))
(declare-fun temp967_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp967_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp967_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp967_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp967_17 () (_ BitVec 64))
(declare-fun temp967_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp967_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp967_20 () (_ BitVec 64))
(declare-fun temp967_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp967_22 () (_ BitVec 64))
(declare-fun temp967_23 () (_ BitVec 64))
(declare-fun temp967_24 () (_ BitVec 64))
(declare-fun temp967_25 () (_ BitVec 64))
(declare-fun temp967_26 () (_ BitVec 64))
(declare-fun temp967_27 () (_ BitVec 64))
(declare-fun temp967_28 () (_ BitVec 64))
(declare-fun temp967_29 () (_ BitVec 64))
(declare-fun temp967_30 () (_ BitVec 64))
(declare-fun temp967_31 () (_ BitVec 64))
(declare-fun temp967_32 () (_ BitVec 64))
(declare-fun temp967_33 () (_ BitVec 64))
(declare-fun temp967_34 () (_ BitVec 64))
(declare-fun temp967_35 () (_ BitVec 64))
(declare-fun temp967_36 () (_ BitVec 64))
(declare-fun temp967_37 () (_ BitVec 64))
(declare-fun temp967_38 () (_ BitVec 64))
(declare-fun temp967_39 () (_ BitVec 64))
(declare-fun temp967_40 () (_ BitVec 64))
(declare-fun temp967_41 () (_ BitVec 64))
(declare-fun temp967_42 () (_ BitVec 64))
(declare-fun temp967_43 () (_ BitVec 64))
(declare-fun temp967_44 () (_ BitVec 64))
(declare-fun temp967_45 () (_ BitVec 64))
(declare-fun temp967_46 () (_ BitVec 64))
(declare-fun temp967_47 () (_ BitVec 64))
(declare-fun temp967_48 () (_ BitVec 64))
(declare-fun temp967_49 () (_ BitVec 64))
(declare-fun temp967_50 () (_ BitVec 64))
(declare-fun temp967_51 () (_ BitVec 64))
(declare-fun temp967_52 () (_ BitVec 64))
(declare-fun temp967_53 () (_ BitVec 64))
(declare-fun temp967_54 () (_ BitVec 64))
(declare-fun temp967_55 () (_ BitVec 64))
(declare-fun temp967_56 () (_ BitVec 64))
(declare-fun temp967_57 () (_ BitVec 64))
(declare-fun temp967_58 () (_ BitVec 64))
(declare-fun temp967_59 () (_ BitVec 64))
(declare-fun temp967_60 () (_ BitVec 64))
(declare-fun temp967_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp967_62 () (_ BitVec 64))
(declare-fun temp967_63 () (_ BitVec 64))
(declare-fun temp967_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp967_65 () (_ BitVec 64))
(declare-fun temp967_66 () (_ BitVec 64))
(declare-fun temp967_67 () (_ BitVec 64))
(declare-fun temp967_68 () (_ BitVec 64))
(declare-fun temp967_69 () (_ BitVec 64))
(declare-fun temp967_70 () (_ BitVec 64))
(declare-fun temp967_71 () (_ BitVec 64))
(declare-fun temp967_72 () (_ BitVec 64))
(declare-fun temp967_73 () (_ BitVec 64))
(declare-fun temp967_74 () (_ BitVec 64))
(declare-fun temp967_75 () (_ BitVec 64))
(declare-fun temp967_76 () (_ BitVec 64))
(declare-fun temp967_77 () (_ BitVec 64))
(declare-fun temp967_78 () (_ BitVec 64))
(declare-fun temp967_79 () (_ BitVec 64))
(declare-fun temp967_80 () (_ BitVec 64))
(declare-fun temp967_81 () (_ BitVec 64))
(declare-fun temp967_82 () (_ BitVec 64))
(declare-fun temp967_83 () (_ BitVec 64))
(declare-fun temp967_84 () (_ BitVec 64))
(declare-fun temp967_85 () (_ BitVec 64))
(declare-fun temp967_86 () (_ BitVec 64))
(declare-fun temp967_87 () (_ BitVec 64))
(declare-fun temp967_88 () (_ BitVec 64))
(declare-fun temp967_89 () (_ BitVec 64))
(declare-fun temp967_90 () (_ BitVec 64))
(declare-fun temp967_91 () (_ BitVec 64))
(declare-fun temp967_92 () (_ BitVec 64))
(declare-fun temp967_93 () (_ BitVec 64))
(declare-fun temp967_94 () (_ BitVec 64))
(declare-fun temp967_95 () (_ BitVec 64))
(declare-fun temp967_96 () (_ BitVec 64))
(declare-fun temp967_97 () (_ BitVec 64))
(declare-fun temp967_98 () (_ BitVec 64))
(declare-fun temp967_99 () (_ BitVec 64))
(declare-fun temp967_100 () (_ BitVec 64))
(declare-fun temp967_101 () (_ BitVec 64))
(declare-fun temp967_102 () (_ BitVec 64))
(declare-fun temp967_103 () (_ BitVec 64))
(declare-fun temp967_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp967_105 () (_ BitVec 64))
(declare-fun temp967_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp967_107 () (_ BitVec 64))
(declare-fun temp967_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp967_109 () (_ BitVec 64))
(declare-fun temp967_110 () (_ BitVec 64))
(declare-fun temp967_111 () (_ BitVec 64))
(declare-fun temp967_112 () (_ BitVec 64))
(declare-fun temp967_113 () (_ BitVec 64))
(declare-fun temp967_114 () (_ BitVec 64))
(declare-fun temp967_115 () (_ BitVec 64))
(declare-fun temp967_116 () (_ BitVec 64))
(declare-fun temp967_117 () (_ BitVec 64))
(declare-fun temp967_118 () (_ BitVec 64))
(declare-fun temp967_119 () (_ BitVec 64))
(declare-fun temp967_120 () (_ BitVec 64))
(declare-fun temp967_121 () (_ BitVec 64))
(declare-fun temp967_122 () (_ BitVec 64))
(declare-fun temp967_123 () (_ BitVec 64))
(declare-fun temp967_124 () (_ BitVec 64))
(declare-fun temp967_126 () (_ BitVec 64))
(declare-fun temp967_127 () (_ BitVec 64))
(declare-fun temp967_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp967_128 () (_ BitVec 64))
(declare-fun temp967_129 () (_ BitVec 64))
(declare-fun temp967_131 () (_ BitVec 64))
(declare-fun temp967_132 () (_ BitVec 64))
(declare-fun temp967_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp967_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp967_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp967_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp967_136 () (_ BitVec 64))
(declare-fun temp967_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp967_139 () (_ BitVec 64))
(declare-fun temp967_140 () (_ BitVec 64))
(declare-fun temp967_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp967_141 () (_ BitVec 64))
(declare-fun temp967_143 () (_ BitVec 64))
(declare-fun temp967_144 () (_ BitVec 64))
(declare-fun temp967_142 () (_ BitVec 64))
(declare-fun temp967_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp967_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp967_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp967_148 () (_ BitVec 64))
(declare-fun temp967_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp967_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp967_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp967_152 () (_ BitVec 64))
(assert (= temp967_1 #x0000000000000001))
(assert (= var465453 temp967_1))
(assert (= temp967_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp967_2)))
(assert (= temp967_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp967_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp967_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp967_4)))
(assert (= temp967_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp967_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp967_6 #x0000000000000000))
(assert (= var465488 temp967_6))
(assert (= temp967_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp967_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp967_8 #x0000000000000001))
(assert (= var465522 temp967_8))
(assert (= temp967_10 #x0000000000000000))
(assert (= temp967_9 temp967_10))
(assert (= temp967_12 #x0000000000000001))
(assert (= temp967_11 temp967_12))
(assert (= temp967_13 #x0000000000000000))
(assert (= var863614 temp967_13))
(assert (= temp967_14 #x0000000000000001))
(assert (= var863635 temp967_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp967_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp967_15)))
(assert (= temp967_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp967_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp967_17 #x0000000000000000))
(assert (= var997373 temp967_17))
(assert (= temp967_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp967_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp967_19 #x0000000000000000))
(assert (= var997418 temp967_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp967_20 #x0000000000000000))
(assert (= temp967_21 temp967_20))
(assert (= temp967_22 (select ARGNAME_padding_NAMEEND_VAL temp967_21)))
(assert (= temp967_23 #x0000000000000001))
(assert (= temp967_24 temp967_23))
(assert (= temp967_25 (select ARGNAME_padding_NAMEEND_VAL temp967_24)))
(assert (= temp967_26 #x0000000000000002))
(assert (= temp967_27 temp967_26))
(assert (= temp967_28 (select ARGNAME_padding_NAMEEND_VAL temp967_27)))
(assert (= temp967_29 #x0000000000000003))
(assert (= temp967_30 temp967_29))
(assert (= temp967_31 (select ARGNAME_padding_NAMEEND_VAL temp967_30)))
(assert (= temp967_32 #x0000000000000004))
(assert (= temp967_33 temp967_32))
(assert (= temp967_34 (select ARGNAME_padding_NAMEEND_VAL temp967_33)))
(assert (= temp967_35 #x0000000000000005))
(assert (= temp967_36 temp967_35))
(assert (= temp967_37 (select ARGNAME_padding_NAMEEND_VAL temp967_36)))
(assert (= temp967_38 #x0000000000000000))
(assert (= temp967_39 #x0000000000000000))
(assert (= temp967_40 temp967_39))
(assert (= temp967_41 (select ARGNAME_padding_NAMEEND_VAL temp967_40)))
(assert (= temp967_42 #x0000000000000000))
(assert (= temp967_43 #x0000000000000001))
(assert (= temp967_44 temp967_43))
(assert (= temp967_45 (select ARGNAME_padding_NAMEEND_VAL temp967_44)))
(assert (= temp967_46 #x0000000000000000))
(assert (= temp967_47 #x0000000000000002))
(assert (= temp967_48 temp967_47))
(assert (= temp967_49 (select ARGNAME_padding_NAMEEND_VAL temp967_48)))
(assert (= temp967_50 #x0000000000000000))
(assert (= temp967_51 #x0000000000000003))
(assert (= temp967_52 temp967_51))
(assert (= temp967_53 (select ARGNAME_padding_NAMEEND_VAL temp967_52)))
(assert (= temp967_54 #x0000000000000000))
(assert (= temp967_55 #x0000000000000004))
(assert (= temp967_56 temp967_55))
(assert (= temp967_57 (select ARGNAME_padding_NAMEEND_VAL temp967_56)))
(assert (= temp967_58 #x0000000000000000))
(assert (= temp967_59 #x0000000000000005))
(assert (= temp967_60 temp967_59))
(assert (= temp967_61 (select ARGNAME_padding_NAMEEND_VAL temp967_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp967_41 temp967_38)
             (bvslt temp967_45 temp967_42)
             (bvslt temp967_49 temp967_46)
             (bvslt temp967_53 temp967_50)
             (bvslt temp967_57 temp967_54)
             (bvslt temp967_61 temp967_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp967_62 #x0000000000000000))
(assert (= var1716002 temp967_62))
(assert (= temp967_63 #x0000000000000000))
(assert (= temp967_64 temp967_63))
(assert (= temp967_65 (select ARGNAME_stride_NAMEEND_VAL temp967_64)))
(assert (= temp967_66 #x0000000000000001))
(assert (= temp967_67 temp967_66))
(assert (= temp967_68 (select ARGNAME_stride_NAMEEND_VAL temp967_67)))
(assert (= temp967_69 #x0000000000000002))
(assert (= temp967_70 temp967_69))
(assert (= temp967_71 (select ARGNAME_stride_NAMEEND_VAL temp967_70)))
(assert (= temp967_72 #x0000000000000003))
(assert (= temp967_73 temp967_72))
(assert (= temp967_74 (select ARGNAME_stride_NAMEEND_VAL temp967_73)))
(assert (= temp967_75 #x0000000000000004))
(assert (= temp967_76 temp967_75))
(assert (= temp967_77 (select ARGNAME_stride_NAMEEND_VAL temp967_76)))
(assert (= temp967_78 #x0000000000000005))
(assert (= temp967_79 temp967_78))
(assert (= temp967_80 (select ARGNAME_stride_NAMEEND_VAL temp967_79)))
(assert (= temp967_81 #x0000000000000000))
(assert (= temp967_82 #x0000000000000000))
(assert (= temp967_83 temp967_82))
(assert (= temp967_84 (select ARGNAME_stride_NAMEEND_VAL temp967_83)))
(assert (= temp967_85 #x0000000000000000))
(assert (= temp967_86 #x0000000000000001))
(assert (= temp967_87 temp967_86))
(assert (= temp967_88 (select ARGNAME_stride_NAMEEND_VAL temp967_87)))
(assert (= temp967_89 #x0000000000000000))
(assert (= temp967_90 #x0000000000000002))
(assert (= temp967_91 temp967_90))
(assert (= temp967_92 (select ARGNAME_stride_NAMEEND_VAL temp967_91)))
(assert (= temp967_93 #x0000000000000000))
(assert (= temp967_94 #x0000000000000003))
(assert (= temp967_95 temp967_94))
(assert (= temp967_96 (select ARGNAME_stride_NAMEEND_VAL temp967_95)))
(assert (= temp967_97 #x0000000000000000))
(assert (= temp967_98 #x0000000000000004))
(assert (= temp967_99 temp967_98))
(assert (= temp967_100 (select ARGNAME_stride_NAMEEND_VAL temp967_99)))
(assert (= temp967_101 #x0000000000000000))
(assert (= temp967_102 #x0000000000000005))
(assert (= temp967_103 temp967_102))
(assert (= temp967_104 (select ARGNAME_stride_NAMEEND_VAL temp967_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp967_84 temp967_81)
             (bvsle temp967_88 temp967_85)
             (bvsle temp967_92 temp967_89)
             (bvsle temp967_96 temp967_93)
             (bvsle temp967_100 temp967_97)
             (bvsle temp967_104 temp967_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp967_105 #x0000000000000000))
(assert (= var1716023 temp967_105))
(assert (= temp967_106 #x0000000000000000))
(assert (= var1704114 temp967_106))
(assert (= temp967_107 #x0000000000000000))
(assert (= temp967_108 temp967_107))
(assert (= temp967_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp967_108)))
(assert (= temp967_110 #x0000000000000001))
(assert (= temp967_111 temp967_110))
(assert (= temp967_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp967_111)))
(assert (= temp967_113 #x0000000000000002))
(assert (= temp967_114 temp967_113))
(assert (= temp967_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp967_114)))
(assert (= temp967_116 #x0000000000000003))
(assert (= temp967_117 temp967_116))
(assert (= temp967_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp967_117)))
(assert (= temp967_119 #x0000000000000004))
(assert (= temp967_120 temp967_119))
(assert (= temp967_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp967_120)))
(assert (= temp967_122 #x0000000000000005))
(assert (= temp967_123 temp967_122))
(assert (= temp967_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp967_123)))
(assert (= temp967_126 var1704114))
(assert (= temp967_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp967_126)))
(assert (= temp967_125 temp967_127))
(assert (= var1716068
   (ite (bvslt temp967_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp967_128 #x0000000000000000))
(assert (= var1716068 temp967_128))
(assert (= temp967_129 #x0000000000000000))
(assert (= var1704114 temp967_129))
(assert (= temp967_131 var1704114))
(assert (= temp967_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp967_131)))
(assert (= temp967_130 temp967_132))
(assert (= var1716090 (bvsmod temp967_130 ARGNAME_groups_NAMEEND)))
(assert (= temp967_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp967_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp967_134 #x0000000000000001))
(assert (= var1716091 temp967_134))
(assert (= var1716110 var1716000))
(assert (= temp967_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp967_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp967_136 #x0000000000000001))
(assert (= var1716111 temp967_136))
(assert (= temp967_137 #x0000000000000001))
(assert (= var1705002 temp967_137))
(assert (= temp967_139 var1705002))
(assert (= temp967_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp967_139)))
(assert (= temp967_138 temp967_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp967_138)))
(assert (= temp967_141 #x0000000000000000))
(assert (= var1704114 temp967_141))
(assert (= temp967_143 var1704114))
(assert (= temp967_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp967_143)))
(assert (= temp967_142 temp967_144))
(assert (= temp967_145 #x0000000000000002))
(assert (= var1979241 temp967_145))
(assert (= temp967_146 #x0000000000000001))
(assert (= var1716281 temp967_146))
(assert (= temp967_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp967_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp967_148 #x0000000000000001))
(assert (= var997490 temp967_148))
(assert (= temp967_149 #x0000000000000001))
(assert (= var997620 temp967_149))
(assert (= var3486185 var997620))
(assert (= temp967_150 #x0000000000000000))
(assert (= var3686207 temp967_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp967_151 #x0000000000000002))
(assert (= var3815043 temp967_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp967_152 #x0000000000000001))
(assert (= var997490 temp967_152))
(model-add temp967_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp967_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp967_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp967_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp967_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp967_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






