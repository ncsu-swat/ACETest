(declare-fun temp772_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp772_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp772_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp772_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp772_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp772_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp772_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp772_8 () (_ BitVec 64))
(declare-fun temp772_10 () (_ BitVec 64))
(declare-fun temp772_9 () (_ BitVec 64))
(declare-fun temp772_12 () (_ BitVec 64))
(declare-fun temp772_11 () (_ BitVec 64))
(declare-fun temp772_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp772_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp772_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp772_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp772_17 () (_ BitVec 64))
(declare-fun temp772_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp772_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp772_20 () (_ BitVec 64))
(declare-fun temp772_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp772_22 () (_ BitVec 64))
(declare-fun temp772_23 () (_ BitVec 64))
(declare-fun temp772_24 () (_ BitVec 64))
(declare-fun temp772_25 () (_ BitVec 64))
(declare-fun temp772_26 () (_ BitVec 64))
(declare-fun temp772_27 () (_ BitVec 64))
(declare-fun temp772_28 () (_ BitVec 64))
(declare-fun temp772_29 () (_ BitVec 64))
(declare-fun temp772_30 () (_ BitVec 64))
(declare-fun temp772_31 () (_ BitVec 64))
(declare-fun temp772_32 () (_ BitVec 64))
(declare-fun temp772_33 () (_ BitVec 64))
(declare-fun temp772_34 () (_ BitVec 64))
(declare-fun temp772_35 () (_ BitVec 64))
(declare-fun temp772_36 () (_ BitVec 64))
(declare-fun temp772_37 () (_ BitVec 64))
(declare-fun temp772_38 () (_ BitVec 64))
(declare-fun temp772_39 () (_ BitVec 64))
(declare-fun temp772_40 () (_ BitVec 64))
(declare-fun temp772_41 () (_ BitVec 64))
(declare-fun temp772_42 () (_ BitVec 64))
(declare-fun temp772_43 () (_ BitVec 64))
(declare-fun temp772_44 () (_ BitVec 64))
(declare-fun temp772_45 () (_ BitVec 64))
(declare-fun temp772_46 () (_ BitVec 64))
(declare-fun temp772_47 () (_ BitVec 64))
(declare-fun temp772_48 () (_ BitVec 64))
(declare-fun temp772_49 () (_ BitVec 64))
(declare-fun temp772_50 () (_ BitVec 64))
(declare-fun temp772_51 () (_ BitVec 64))
(declare-fun temp772_52 () (_ BitVec 64))
(declare-fun temp772_53 () (_ BitVec 64))
(declare-fun temp772_54 () (_ BitVec 64))
(declare-fun temp772_55 () (_ BitVec 64))
(declare-fun temp772_56 () (_ BitVec 64))
(declare-fun temp772_57 () (_ BitVec 64))
(declare-fun temp772_58 () (_ BitVec 64))
(declare-fun temp772_59 () (_ BitVec 64))
(declare-fun temp772_60 () (_ BitVec 64))
(declare-fun temp772_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp772_62 () (_ BitVec 64))
(declare-fun temp772_63 () (_ BitVec 64))
(declare-fun temp772_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp772_65 () (_ BitVec 64))
(declare-fun temp772_66 () (_ BitVec 64))
(declare-fun temp772_67 () (_ BitVec 64))
(declare-fun temp772_68 () (_ BitVec 64))
(declare-fun temp772_69 () (_ BitVec 64))
(declare-fun temp772_70 () (_ BitVec 64))
(declare-fun temp772_71 () (_ BitVec 64))
(declare-fun temp772_72 () (_ BitVec 64))
(declare-fun temp772_73 () (_ BitVec 64))
(declare-fun temp772_74 () (_ BitVec 64))
(declare-fun temp772_75 () (_ BitVec 64))
(declare-fun temp772_76 () (_ BitVec 64))
(declare-fun temp772_77 () (_ BitVec 64))
(declare-fun temp772_78 () (_ BitVec 64))
(declare-fun temp772_79 () (_ BitVec 64))
(declare-fun temp772_80 () (_ BitVec 64))
(declare-fun temp772_81 () (_ BitVec 64))
(declare-fun temp772_82 () (_ BitVec 64))
(declare-fun temp772_83 () (_ BitVec 64))
(declare-fun temp772_84 () (_ BitVec 64))
(declare-fun temp772_85 () (_ BitVec 64))
(declare-fun temp772_86 () (_ BitVec 64))
(declare-fun temp772_87 () (_ BitVec 64))
(declare-fun temp772_88 () (_ BitVec 64))
(declare-fun temp772_89 () (_ BitVec 64))
(declare-fun temp772_90 () (_ BitVec 64))
(declare-fun temp772_91 () (_ BitVec 64))
(declare-fun temp772_92 () (_ BitVec 64))
(declare-fun temp772_93 () (_ BitVec 64))
(declare-fun temp772_94 () (_ BitVec 64))
(declare-fun temp772_95 () (_ BitVec 64))
(declare-fun temp772_96 () (_ BitVec 64))
(declare-fun temp772_97 () (_ BitVec 64))
(declare-fun temp772_98 () (_ BitVec 64))
(declare-fun temp772_99 () (_ BitVec 64))
(declare-fun temp772_100 () (_ BitVec 64))
(declare-fun temp772_101 () (_ BitVec 64))
(declare-fun temp772_102 () (_ BitVec 64))
(declare-fun temp772_103 () (_ BitVec 64))
(declare-fun temp772_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp772_105 () (_ BitVec 64))
(declare-fun temp772_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp772_107 () (_ BitVec 64))
(declare-fun temp772_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp772_109 () (_ BitVec 64))
(declare-fun temp772_110 () (_ BitVec 64))
(declare-fun temp772_111 () (_ BitVec 64))
(declare-fun temp772_112 () (_ BitVec 64))
(declare-fun temp772_113 () (_ BitVec 64))
(declare-fun temp772_114 () (_ BitVec 64))
(declare-fun temp772_115 () (_ BitVec 64))
(declare-fun temp772_116 () (_ BitVec 64))
(declare-fun temp772_117 () (_ BitVec 64))
(declare-fun temp772_118 () (_ BitVec 64))
(declare-fun temp772_119 () (_ BitVec 64))
(declare-fun temp772_120 () (_ BitVec 64))
(declare-fun temp772_121 () (_ BitVec 64))
(declare-fun temp772_122 () (_ BitVec 64))
(declare-fun temp772_123 () (_ BitVec 64))
(declare-fun temp772_124 () (_ BitVec 64))
(declare-fun temp772_126 () (_ BitVec 64))
(declare-fun temp772_127 () (_ BitVec 64))
(declare-fun temp772_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp772_128 () (_ BitVec 64))
(declare-fun temp772_129 () (_ BitVec 64))
(declare-fun temp772_131 () (_ BitVec 64))
(declare-fun temp772_132 () (_ BitVec 64))
(declare-fun temp772_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp772_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp772_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp772_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp772_136 () (_ BitVec 64))
(declare-fun temp772_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp772_139 () (_ BitVec 64))
(declare-fun temp772_140 () (_ BitVec 64))
(declare-fun temp772_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp772_141 () (_ BitVec 64))
(declare-fun temp772_143 () (_ BitVec 64))
(declare-fun temp772_144 () (_ BitVec 64))
(declare-fun temp772_142 () (_ BitVec 64))
(declare-fun temp772_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp772_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp772_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp772_148 () (_ BitVec 64))
(declare-fun temp772_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp772_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp772_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp772_153 () (_ BitVec 64))
(declare-fun temp772_152 () (_ BitVec 64))
(declare-fun temp772_154 () (_ BitVec 64))
(assert (= temp772_1 #x0000000000000001))
(assert (= var465453 temp772_1))
(assert (= temp772_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp772_2)))
(assert (= temp772_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp772_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp772_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp772_4)))
(assert (= temp772_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp772_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp772_6 #x0000000000000000))
(assert (= var465488 temp772_6))
(assert (= temp772_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp772_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp772_8 #x0000000000000001))
(assert (= var465522 temp772_8))
(assert (= temp772_10 #x0000000000000000))
(assert (= temp772_9 temp772_10))
(assert (= temp772_12 #x0000000000000001))
(assert (= temp772_11 temp772_12))
(assert (= temp772_13 #x0000000000000000))
(assert (= var863614 temp772_13))
(assert (= temp772_14 #x0000000000000001))
(assert (= var863635 temp772_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp772_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp772_15)))
(assert (= temp772_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp772_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp772_17 #x0000000000000000))
(assert (= var997373 temp772_17))
(assert (= temp772_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp772_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp772_19 #x0000000000000000))
(assert (= var997418 temp772_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp772_20 #x0000000000000000))
(assert (= temp772_21 temp772_20))
(assert (= temp772_22 (select ARGNAME_padding_NAMEEND_VAL temp772_21)))
(assert (= temp772_23 #x0000000000000001))
(assert (= temp772_24 temp772_23))
(assert (= temp772_25 (select ARGNAME_padding_NAMEEND_VAL temp772_24)))
(assert (= temp772_26 #x0000000000000002))
(assert (= temp772_27 temp772_26))
(assert (= temp772_28 (select ARGNAME_padding_NAMEEND_VAL temp772_27)))
(assert (= temp772_29 #x0000000000000003))
(assert (= temp772_30 temp772_29))
(assert (= temp772_31 (select ARGNAME_padding_NAMEEND_VAL temp772_30)))
(assert (= temp772_32 #x0000000000000004))
(assert (= temp772_33 temp772_32))
(assert (= temp772_34 (select ARGNAME_padding_NAMEEND_VAL temp772_33)))
(assert (= temp772_35 #x0000000000000005))
(assert (= temp772_36 temp772_35))
(assert (= temp772_37 (select ARGNAME_padding_NAMEEND_VAL temp772_36)))
(assert (= temp772_38 #x0000000000000000))
(assert (= temp772_39 #x0000000000000000))
(assert (= temp772_40 temp772_39))
(assert (= temp772_41 (select ARGNAME_padding_NAMEEND_VAL temp772_40)))
(assert (= temp772_42 #x0000000000000000))
(assert (= temp772_43 #x0000000000000001))
(assert (= temp772_44 temp772_43))
(assert (= temp772_45 (select ARGNAME_padding_NAMEEND_VAL temp772_44)))
(assert (= temp772_46 #x0000000000000000))
(assert (= temp772_47 #x0000000000000002))
(assert (= temp772_48 temp772_47))
(assert (= temp772_49 (select ARGNAME_padding_NAMEEND_VAL temp772_48)))
(assert (= temp772_50 #x0000000000000000))
(assert (= temp772_51 #x0000000000000003))
(assert (= temp772_52 temp772_51))
(assert (= temp772_53 (select ARGNAME_padding_NAMEEND_VAL temp772_52)))
(assert (= temp772_54 #x0000000000000000))
(assert (= temp772_55 #x0000000000000004))
(assert (= temp772_56 temp772_55))
(assert (= temp772_57 (select ARGNAME_padding_NAMEEND_VAL temp772_56)))
(assert (= temp772_58 #x0000000000000000))
(assert (= temp772_59 #x0000000000000005))
(assert (= temp772_60 temp772_59))
(assert (= temp772_61 (select ARGNAME_padding_NAMEEND_VAL temp772_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp772_41 temp772_38)
             (bvslt temp772_45 temp772_42)
             (bvslt temp772_49 temp772_46)
             (bvslt temp772_53 temp772_50)
             (bvslt temp772_57 temp772_54)
             (bvslt temp772_61 temp772_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp772_62 #x0000000000000000))
(assert (= var1716002 temp772_62))
(assert (= temp772_63 #x0000000000000000))
(assert (= temp772_64 temp772_63))
(assert (= temp772_65 (select ARGNAME_stride_NAMEEND_VAL temp772_64)))
(assert (= temp772_66 #x0000000000000001))
(assert (= temp772_67 temp772_66))
(assert (= temp772_68 (select ARGNAME_stride_NAMEEND_VAL temp772_67)))
(assert (= temp772_69 #x0000000000000002))
(assert (= temp772_70 temp772_69))
(assert (= temp772_71 (select ARGNAME_stride_NAMEEND_VAL temp772_70)))
(assert (= temp772_72 #x0000000000000003))
(assert (= temp772_73 temp772_72))
(assert (= temp772_74 (select ARGNAME_stride_NAMEEND_VAL temp772_73)))
(assert (= temp772_75 #x0000000000000004))
(assert (= temp772_76 temp772_75))
(assert (= temp772_77 (select ARGNAME_stride_NAMEEND_VAL temp772_76)))
(assert (= temp772_78 #x0000000000000005))
(assert (= temp772_79 temp772_78))
(assert (= temp772_80 (select ARGNAME_stride_NAMEEND_VAL temp772_79)))
(assert (= temp772_81 #x0000000000000000))
(assert (= temp772_82 #x0000000000000000))
(assert (= temp772_83 temp772_82))
(assert (= temp772_84 (select ARGNAME_stride_NAMEEND_VAL temp772_83)))
(assert (= temp772_85 #x0000000000000000))
(assert (= temp772_86 #x0000000000000001))
(assert (= temp772_87 temp772_86))
(assert (= temp772_88 (select ARGNAME_stride_NAMEEND_VAL temp772_87)))
(assert (= temp772_89 #x0000000000000000))
(assert (= temp772_90 #x0000000000000002))
(assert (= temp772_91 temp772_90))
(assert (= temp772_92 (select ARGNAME_stride_NAMEEND_VAL temp772_91)))
(assert (= temp772_93 #x0000000000000000))
(assert (= temp772_94 #x0000000000000003))
(assert (= temp772_95 temp772_94))
(assert (= temp772_96 (select ARGNAME_stride_NAMEEND_VAL temp772_95)))
(assert (= temp772_97 #x0000000000000000))
(assert (= temp772_98 #x0000000000000004))
(assert (= temp772_99 temp772_98))
(assert (= temp772_100 (select ARGNAME_stride_NAMEEND_VAL temp772_99)))
(assert (= temp772_101 #x0000000000000000))
(assert (= temp772_102 #x0000000000000005))
(assert (= temp772_103 temp772_102))
(assert (= temp772_104 (select ARGNAME_stride_NAMEEND_VAL temp772_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp772_84 temp772_81)
             (bvsle temp772_88 temp772_85)
             (bvsle temp772_92 temp772_89)
             (bvsle temp772_96 temp772_93)
             (bvsle temp772_100 temp772_97)
             (bvsle temp772_104 temp772_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp772_105 #x0000000000000000))
(assert (= var1716023 temp772_105))
(assert (= temp772_106 #x0000000000000000))
(assert (= var1704114 temp772_106))
(assert (= temp772_107 #x0000000000000000))
(assert (= temp772_108 temp772_107))
(assert (= temp772_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp772_108)))
(assert (= temp772_110 #x0000000000000001))
(assert (= temp772_111 temp772_110))
(assert (= temp772_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp772_111)))
(assert (= temp772_113 #x0000000000000002))
(assert (= temp772_114 temp772_113))
(assert (= temp772_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp772_114)))
(assert (= temp772_116 #x0000000000000003))
(assert (= temp772_117 temp772_116))
(assert (= temp772_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp772_117)))
(assert (= temp772_119 #x0000000000000004))
(assert (= temp772_120 temp772_119))
(assert (= temp772_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp772_120)))
(assert (= temp772_122 #x0000000000000005))
(assert (= temp772_123 temp772_122))
(assert (= temp772_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp772_123)))
(assert (= temp772_126 var1704114))
(assert (= temp772_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp772_126)))
(assert (= temp772_125 temp772_127))
(assert (= var1716068
   (ite (bvslt temp772_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp772_128 #x0000000000000000))
(assert (= var1716068 temp772_128))
(assert (= temp772_129 #x0000000000000000))
(assert (= var1704114 temp772_129))
(assert (= temp772_131 var1704114))
(assert (= temp772_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp772_131)))
(assert (= temp772_130 temp772_132))
(assert (= var1716090 (bvsmod temp772_130 ARGNAME_groups_NAMEEND)))
(assert (= temp772_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp772_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp772_134 #x0000000000000001))
(assert (= var1716091 temp772_134))
(assert (= var1716110 var1716000))
(assert (= temp772_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp772_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp772_136 #x0000000000000001))
(assert (= var1716111 temp772_136))
(assert (= temp772_137 #x0000000000000001))
(assert (= var1705002 temp772_137))
(assert (= temp772_139 var1705002))
(assert (= temp772_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp772_139)))
(assert (= temp772_138 temp772_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp772_138)))
(assert (= temp772_141 #x0000000000000000))
(assert (= var1704114 temp772_141))
(assert (= temp772_143 var1704114))
(assert (= temp772_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp772_143)))
(assert (= temp772_142 temp772_144))
(assert (= temp772_145 #x0000000000000002))
(assert (= var1979241 temp772_145))
(assert (= temp772_146 #x0000000000000001))
(assert (= var1716281 temp772_146))
(assert (= temp772_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp772_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp772_148 #x0000000000000001))
(assert (= var997490 temp772_148))
(assert (= temp772_149 #x0000000000000001))
(assert (= var997620 temp772_149))
(assert (= var3486185 var997620))
(assert (= temp772_150 #x0000000000000000))
(assert (= var3686207 temp772_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp772_151 #x0000000000000002))
(assert (= var3815043 temp772_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp772_153 #xffffffffffffffff))
(assert (= temp772_152 temp772_153))
(assert (= temp772_154 #x0000000000000001))
(assert (= var997490 temp772_154))
(model-add temp772_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp772_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp772_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp772_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp772_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp772_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)





