(declare-fun temp66_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp66_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp66_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp66_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp66_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp66_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp66_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp66_8 () (_ BitVec 64))
(declare-fun temp66_10 () (_ BitVec 64))
(declare-fun temp66_9 () (_ BitVec 64))
(declare-fun temp66_12 () (_ BitVec 64))
(declare-fun temp66_11 () (_ BitVec 64))
(declare-fun temp66_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp66_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp66_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp66_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp66_17 () (_ BitVec 64))
(declare-fun temp66_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp66_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp66_20 () (_ BitVec 64))
(declare-fun temp66_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp66_22 () (_ BitVec 64))
(declare-fun temp66_23 () (_ BitVec 64))
(declare-fun temp66_24 () (_ BitVec 64))
(declare-fun temp66_25 () (_ BitVec 64))
(declare-fun temp66_26 () (_ BitVec 64))
(declare-fun temp66_27 () (_ BitVec 64))
(declare-fun temp66_28 () (_ BitVec 64))
(declare-fun temp66_29 () (_ BitVec 64))
(declare-fun temp66_30 () (_ BitVec 64))
(declare-fun temp66_31 () (_ BitVec 64))
(declare-fun temp66_32 () (_ BitVec 64))
(declare-fun temp66_33 () (_ BitVec 64))
(declare-fun temp66_34 () (_ BitVec 64))
(declare-fun temp66_35 () (_ BitVec 64))
(declare-fun temp66_36 () (_ BitVec 64))
(declare-fun temp66_37 () (_ BitVec 64))
(declare-fun temp66_38 () (_ BitVec 64))
(declare-fun temp66_39 () (_ BitVec 64))
(declare-fun temp66_40 () (_ BitVec 64))
(declare-fun temp66_41 () (_ BitVec 64))
(declare-fun temp66_42 () (_ BitVec 64))
(declare-fun temp66_43 () (_ BitVec 64))
(declare-fun temp66_44 () (_ BitVec 64))
(declare-fun temp66_45 () (_ BitVec 64))
(declare-fun temp66_46 () (_ BitVec 64))
(declare-fun temp66_47 () (_ BitVec 64))
(declare-fun temp66_48 () (_ BitVec 64))
(declare-fun temp66_49 () (_ BitVec 64))
(declare-fun temp66_50 () (_ BitVec 64))
(declare-fun temp66_51 () (_ BitVec 64))
(declare-fun temp66_52 () (_ BitVec 64))
(declare-fun temp66_53 () (_ BitVec 64))
(declare-fun temp66_54 () (_ BitVec 64))
(declare-fun temp66_55 () (_ BitVec 64))
(declare-fun temp66_56 () (_ BitVec 64))
(declare-fun temp66_57 () (_ BitVec 64))
(declare-fun temp66_58 () (_ BitVec 64))
(declare-fun temp66_59 () (_ BitVec 64))
(declare-fun temp66_60 () (_ BitVec 64))
(declare-fun temp66_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp66_62 () (_ BitVec 64))
(declare-fun temp66_63 () (_ BitVec 64))
(declare-fun temp66_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp66_65 () (_ BitVec 64))
(declare-fun temp66_66 () (_ BitVec 64))
(declare-fun temp66_67 () (_ BitVec 64))
(declare-fun temp66_68 () (_ BitVec 64))
(declare-fun temp66_69 () (_ BitVec 64))
(declare-fun temp66_70 () (_ BitVec 64))
(declare-fun temp66_71 () (_ BitVec 64))
(declare-fun temp66_72 () (_ BitVec 64))
(declare-fun temp66_73 () (_ BitVec 64))
(declare-fun temp66_74 () (_ BitVec 64))
(declare-fun temp66_75 () (_ BitVec 64))
(declare-fun temp66_76 () (_ BitVec 64))
(declare-fun temp66_77 () (_ BitVec 64))
(declare-fun temp66_78 () (_ BitVec 64))
(declare-fun temp66_79 () (_ BitVec 64))
(declare-fun temp66_80 () (_ BitVec 64))
(declare-fun temp66_81 () (_ BitVec 64))
(declare-fun temp66_82 () (_ BitVec 64))
(declare-fun temp66_83 () (_ BitVec 64))
(declare-fun temp66_84 () (_ BitVec 64))
(declare-fun temp66_85 () (_ BitVec 64))
(declare-fun temp66_86 () (_ BitVec 64))
(declare-fun temp66_87 () (_ BitVec 64))
(declare-fun temp66_88 () (_ BitVec 64))
(declare-fun temp66_89 () (_ BitVec 64))
(declare-fun temp66_90 () (_ BitVec 64))
(declare-fun temp66_91 () (_ BitVec 64))
(declare-fun temp66_92 () (_ BitVec 64))
(declare-fun temp66_93 () (_ BitVec 64))
(declare-fun temp66_94 () (_ BitVec 64))
(declare-fun temp66_95 () (_ BitVec 64))
(declare-fun temp66_96 () (_ BitVec 64))
(declare-fun temp66_97 () (_ BitVec 64))
(declare-fun temp66_98 () (_ BitVec 64))
(declare-fun temp66_99 () (_ BitVec 64))
(declare-fun temp66_100 () (_ BitVec 64))
(declare-fun temp66_101 () (_ BitVec 64))
(declare-fun temp66_102 () (_ BitVec 64))
(declare-fun temp66_103 () (_ BitVec 64))
(declare-fun temp66_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp66_105 () (_ BitVec 64))
(declare-fun temp66_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp66_107 () (_ BitVec 64))
(declare-fun temp66_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp66_109 () (_ BitVec 64))
(declare-fun temp66_110 () (_ BitVec 64))
(declare-fun temp66_111 () (_ BitVec 64))
(declare-fun temp66_112 () (_ BitVec 64))
(declare-fun temp66_113 () (_ BitVec 64))
(declare-fun temp66_114 () (_ BitVec 64))
(declare-fun temp66_115 () (_ BitVec 64))
(declare-fun temp66_116 () (_ BitVec 64))
(declare-fun temp66_117 () (_ BitVec 64))
(declare-fun temp66_118 () (_ BitVec 64))
(declare-fun temp66_119 () (_ BitVec 64))
(declare-fun temp66_120 () (_ BitVec 64))
(declare-fun temp66_121 () (_ BitVec 64))
(declare-fun temp66_122 () (_ BitVec 64))
(declare-fun temp66_123 () (_ BitVec 64))
(declare-fun temp66_124 () (_ BitVec 64))
(declare-fun temp66_126 () (_ BitVec 64))
(declare-fun temp66_127 () (_ BitVec 64))
(declare-fun temp66_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp66_128 () (_ BitVec 64))
(declare-fun temp66_129 () (_ BitVec 64))
(declare-fun temp66_131 () (_ BitVec 64))
(declare-fun temp66_132 () (_ BitVec 64))
(declare-fun temp66_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp66_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp66_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp66_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp66_136 () (_ BitVec 64))
(declare-fun temp66_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp66_139 () (_ BitVec 64))
(declare-fun temp66_140 () (_ BitVec 64))
(declare-fun temp66_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp66_141 () (_ BitVec 64))
(declare-fun temp66_143 () (_ BitVec 64))
(declare-fun temp66_144 () (_ BitVec 64))
(declare-fun temp66_142 () (_ BitVec 64))
(declare-fun temp66_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp66_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp66_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp66_148 () (_ BitVec 64))
(declare-fun temp66_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp66_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp66_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var997926 () (_ BitVec 64))
(declare-fun temp66_152 () (_ BitVec 64))
(declare-fun var997927 () (_ BitVec 64))
(declare-fun temp66_154 () (_ BitVec 64))
(declare-fun temp66_153 () (_ BitVec 64))
(declare-fun temp66_155 () (_ BitVec 64))
(declare-fun var5901802 () (_ BitVec 64))
(declare-fun temp66_157 () (_ BitVec 64))
(declare-fun temp66_156 () (_ BitVec 64))
(declare-fun temp66_158 () (_ BitVec 64))
(assert (= temp66_1 #x0000000000000001))
(assert (= var465453 temp66_1))
(assert (= temp66_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp66_2)))
(assert (= temp66_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp66_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp66_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp66_4)))
(assert (= temp66_5 #x0000000000000000))
(assert (= var465487 (ite (= var465486 temp66_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp66_6 #x0000000000000000))
(assert (= var465488 temp66_6))
(assert (= temp66_7 #x0000000000000000))
(assert (= var465522 (ite (= var465485 temp66_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp66_8 #x0000000000000001))
(assert (= var465522 temp66_8))
(assert (= temp66_10 #x0000000000000000))
(assert (= temp66_9 temp66_10))
(assert (= temp66_12 #x0000000000000001))
(assert (= temp66_11 temp66_12))
(assert (= temp66_13 #x0000000000000000))
(assert (= var863614 temp66_13))
(assert (= temp66_14 #x0000000000000001))
(assert (= var863635 temp66_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp66_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp66_15)))
(assert (= temp66_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp66_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_17 #x0000000000000000))
(assert (= var997373 temp66_17))
(assert (= temp66_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp66_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_19 #x0000000000000000))
(assert (= var997418 temp66_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp66_20 #x0000000000000000))
(assert (= temp66_21 temp66_20))
(assert (= temp66_22 (select ARGNAME_padding_NAMEEND_VAL temp66_21)))
(assert (= temp66_23 #x0000000000000001))
(assert (= temp66_24 temp66_23))
(assert (= temp66_25 (select ARGNAME_padding_NAMEEND_VAL temp66_24)))
(assert (= temp66_26 #x0000000000000002))
(assert (= temp66_27 temp66_26))
(assert (= temp66_28 (select ARGNAME_padding_NAMEEND_VAL temp66_27)))
(assert (= temp66_29 #x0000000000000003))
(assert (= temp66_30 temp66_29))
(assert (= temp66_31 (select ARGNAME_padding_NAMEEND_VAL temp66_30)))
(assert (= temp66_32 #x0000000000000004))
(assert (= temp66_33 temp66_32))
(assert (= temp66_34 (select ARGNAME_padding_NAMEEND_VAL temp66_33)))
(assert (= temp66_35 #x0000000000000005))
(assert (= temp66_36 temp66_35))
(assert (= temp66_37 (select ARGNAME_padding_NAMEEND_VAL temp66_36)))
(assert (= temp66_38 #x0000000000000000))
(assert (= temp66_39 #x0000000000000000))
(assert (= temp66_40 temp66_39))
(assert (= temp66_41 (select ARGNAME_padding_NAMEEND_VAL temp66_40)))
(assert (= temp66_42 #x0000000000000000))
(assert (= temp66_43 #x0000000000000001))
(assert (= temp66_44 temp66_43))
(assert (= temp66_45 (select ARGNAME_padding_NAMEEND_VAL temp66_44)))
(assert (= temp66_46 #x0000000000000000))
(assert (= temp66_47 #x0000000000000002))
(assert (= temp66_48 temp66_47))
(assert (= temp66_49 (select ARGNAME_padding_NAMEEND_VAL temp66_48)))
(assert (= temp66_50 #x0000000000000000))
(assert (= temp66_51 #x0000000000000003))
(assert (= temp66_52 temp66_51))
(assert (= temp66_53 (select ARGNAME_padding_NAMEEND_VAL temp66_52)))
(assert (= temp66_54 #x0000000000000000))
(assert (= temp66_55 #x0000000000000004))
(assert (= temp66_56 temp66_55))
(assert (= temp66_57 (select ARGNAME_padding_NAMEEND_VAL temp66_56)))
(assert (= temp66_58 #x0000000000000000))
(assert (= temp66_59 #x0000000000000005))
(assert (= temp66_60 temp66_59))
(assert (= temp66_61 (select ARGNAME_padding_NAMEEND_VAL temp66_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp66_41 temp66_38)
             (bvslt temp66_45 temp66_42)
             (bvslt temp66_49 temp66_46)
             (bvslt temp66_53 temp66_50)
             (bvslt temp66_57 temp66_54)
             (bvslt temp66_61 temp66_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_62 #x0000000000000000))
(assert (= var1716002 temp66_62))
(assert (= temp66_63 #x0000000000000000))
(assert (= temp66_64 temp66_63))
(assert (= temp66_65 (select ARGNAME_stride_NAMEEND_VAL temp66_64)))
(assert (= temp66_66 #x0000000000000001))
(assert (= temp66_67 temp66_66))
(assert (= temp66_68 (select ARGNAME_stride_NAMEEND_VAL temp66_67)))
(assert (= temp66_69 #x0000000000000002))
(assert (= temp66_70 temp66_69))
(assert (= temp66_71 (select ARGNAME_stride_NAMEEND_VAL temp66_70)))
(assert (= temp66_72 #x0000000000000003))
(assert (= temp66_73 temp66_72))
(assert (= temp66_74 (select ARGNAME_stride_NAMEEND_VAL temp66_73)))
(assert (= temp66_75 #x0000000000000004))
(assert (= temp66_76 temp66_75))
(assert (= temp66_77 (select ARGNAME_stride_NAMEEND_VAL temp66_76)))
(assert (= temp66_78 #x0000000000000005))
(assert (= temp66_79 temp66_78))
(assert (= temp66_80 (select ARGNAME_stride_NAMEEND_VAL temp66_79)))
(assert (= temp66_81 #x0000000000000000))
(assert (= temp66_82 #x0000000000000000))
(assert (= temp66_83 temp66_82))
(assert (= temp66_84 (select ARGNAME_stride_NAMEEND_VAL temp66_83)))
(assert (= temp66_85 #x0000000000000000))
(assert (= temp66_86 #x0000000000000001))
(assert (= temp66_87 temp66_86))
(assert (= temp66_88 (select ARGNAME_stride_NAMEEND_VAL temp66_87)))
(assert (= temp66_89 #x0000000000000000))
(assert (= temp66_90 #x0000000000000002))
(assert (= temp66_91 temp66_90))
(assert (= temp66_92 (select ARGNAME_stride_NAMEEND_VAL temp66_91)))
(assert (= temp66_93 #x0000000000000000))
(assert (= temp66_94 #x0000000000000003))
(assert (= temp66_95 temp66_94))
(assert (= temp66_96 (select ARGNAME_stride_NAMEEND_VAL temp66_95)))
(assert (= temp66_97 #x0000000000000000))
(assert (= temp66_98 #x0000000000000004))
(assert (= temp66_99 temp66_98))
(assert (= temp66_100 (select ARGNAME_stride_NAMEEND_VAL temp66_99)))
(assert (= temp66_101 #x0000000000000000))
(assert (= temp66_102 #x0000000000000005))
(assert (= temp66_103 temp66_102))
(assert (= temp66_104 (select ARGNAME_stride_NAMEEND_VAL temp66_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp66_84 temp66_81)
             (bvsle temp66_88 temp66_85)
             (bvsle temp66_92 temp66_89)
             (bvsle temp66_96 temp66_93)
             (bvsle temp66_100 temp66_97)
             (bvsle temp66_104 temp66_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_105 #x0000000000000000))
(assert (= var1716023 temp66_105))
(assert (= temp66_106 #x0000000000000000))
(assert (= var1704114 temp66_106))
(assert (= temp66_107 #x0000000000000000))
(assert (= temp66_108 temp66_107))
(assert (= temp66_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp66_108)))
(assert (= temp66_110 #x0000000000000001))
(assert (= temp66_111 temp66_110))
(assert (= temp66_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp66_111)))
(assert (= temp66_113 #x0000000000000002))
(assert (= temp66_114 temp66_113))
(assert (= temp66_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp66_114)))
(assert (= temp66_116 #x0000000000000003))
(assert (= temp66_117 temp66_116))
(assert (= temp66_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp66_117)))
(assert (= temp66_119 #x0000000000000004))
(assert (= temp66_120 temp66_119))
(assert (= temp66_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp66_120)))
(assert (= temp66_122 #x0000000000000005))
(assert (= temp66_123 temp66_122))
(assert (= temp66_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp66_123)))
(assert (= temp66_126 var1704114))
(assert (= temp66_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp66_126)))
(assert (= temp66_125 temp66_127))
(assert (= var1716068
   (ite (bvslt temp66_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_128 #x0000000000000000))
(assert (= var1716068 temp66_128))
(assert (= temp66_129 #x0000000000000000))
(assert (= var1704114 temp66_129))
(assert (= temp66_131 var1704114))
(assert (= temp66_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp66_131)))
(assert (= temp66_130 temp66_132))
(assert (= var1716090 (bvsmod temp66_130 ARGNAME_groups_NAMEEND)))
(assert (= temp66_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp66_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp66_134 #x0000000000000001))
(assert (= var1716091 temp66_134))
(assert (= var1716110 var1716000))
(assert (= temp66_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp66_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp66_136 #x0000000000000001))
(assert (= var1716111 temp66_136))
(assert (= temp66_137 #x0000000000000001))
(assert (= var1705002 temp66_137))
(assert (= temp66_139 var1705002))
(assert (= temp66_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp66_139)))
(assert (= temp66_138 temp66_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp66_138)))
(assert (= temp66_141 #x0000000000000000))
(assert (= var1704114 temp66_141))
(assert (= temp66_143 var1704114))
(assert (= temp66_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp66_143)))
(assert (= temp66_142 temp66_144))
(assert (= temp66_145 #x0000000000000002))
(assert (= var1979241 temp66_145))
(assert (= temp66_146 #x0000000000000001))
(assert (= var1716281 temp66_146))
(assert (= temp66_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp66_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_148 #x0000000000000001))
(assert (= var997490 temp66_148))
(assert (= temp66_149 #x0000000000000001))
(assert (= var997620 temp66_149))
(assert (= var3486185 var997620))
(assert (= temp66_150 #x0000000000000000))
(assert (= var3686207 temp66_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp66_151 #x0000000000000002))
(assert (= var3815043 temp66_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var4469136 var997633))
(assert (= var997926 var997345))
(assert (= temp66_152 #x0000000000000000))
(assert (= var997927
   (ite (distinct var997926 temp66_152) #x0000000000000001 #x0000000000000000)))
(assert (= temp66_154 #x0000000000000001))
(assert (= temp66_153 temp66_154))
(assert (= temp66_155 #x0000000000000001))
(assert (= var5901802 temp66_155))
(assert (= temp66_157 #xffffffffffffffff))
(assert (= temp66_156 temp66_157))
(assert (= temp66_158 #x0000000000000001))
(assert (= var997490 temp66_158))
(model-add temp66_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp66_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp66_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp66_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp66_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp66_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






