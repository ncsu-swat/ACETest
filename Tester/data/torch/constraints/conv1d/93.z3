(declare-fun temp123_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp123_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp123_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp123_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp123_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp123_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp123_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp123_8 () (_ BitVec 64))
(declare-fun temp123_10 () (_ BitVec 64))
(declare-fun temp123_9 () (_ BitVec 64))
(declare-fun temp123_12 () (_ BitVec 64))
(declare-fun temp123_11 () (_ BitVec 64))
(declare-fun temp123_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp123_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp123_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp123_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp123_17 () (_ BitVec 64))
(declare-fun temp123_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp123_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp123_20 () (_ BitVec 64))
(declare-fun temp123_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp123_22 () (_ BitVec 64))
(declare-fun temp123_23 () (_ BitVec 64))
(declare-fun temp123_24 () (_ BitVec 64))
(declare-fun temp123_25 () (_ BitVec 64))
(declare-fun temp123_26 () (_ BitVec 64))
(declare-fun temp123_27 () (_ BitVec 64))
(declare-fun temp123_28 () (_ BitVec 64))
(declare-fun temp123_29 () (_ BitVec 64))
(declare-fun temp123_30 () (_ BitVec 64))
(declare-fun temp123_31 () (_ BitVec 64))
(declare-fun temp123_32 () (_ BitVec 64))
(declare-fun temp123_33 () (_ BitVec 64))
(declare-fun temp123_34 () (_ BitVec 64))
(declare-fun temp123_35 () (_ BitVec 64))
(declare-fun temp123_36 () (_ BitVec 64))
(declare-fun temp123_37 () (_ BitVec 64))
(declare-fun temp123_38 () (_ BitVec 64))
(declare-fun temp123_39 () (_ BitVec 64))
(declare-fun temp123_40 () (_ BitVec 64))
(declare-fun temp123_41 () (_ BitVec 64))
(declare-fun temp123_42 () (_ BitVec 64))
(declare-fun temp123_43 () (_ BitVec 64))
(declare-fun temp123_44 () (_ BitVec 64))
(declare-fun temp123_45 () (_ BitVec 64))
(declare-fun temp123_46 () (_ BitVec 64))
(declare-fun temp123_47 () (_ BitVec 64))
(declare-fun temp123_48 () (_ BitVec 64))
(declare-fun temp123_49 () (_ BitVec 64))
(declare-fun temp123_50 () (_ BitVec 64))
(declare-fun temp123_51 () (_ BitVec 64))
(declare-fun temp123_52 () (_ BitVec 64))
(declare-fun temp123_53 () (_ BitVec 64))
(declare-fun temp123_54 () (_ BitVec 64))
(declare-fun temp123_55 () (_ BitVec 64))
(declare-fun temp123_56 () (_ BitVec 64))
(declare-fun temp123_57 () (_ BitVec 64))
(declare-fun temp123_58 () (_ BitVec 64))
(declare-fun temp123_59 () (_ BitVec 64))
(declare-fun temp123_60 () (_ BitVec 64))
(declare-fun temp123_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp123_62 () (_ BitVec 64))
(declare-fun temp123_63 () (_ BitVec 64))
(declare-fun temp123_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp123_65 () (_ BitVec 64))
(declare-fun temp123_66 () (_ BitVec 64))
(declare-fun temp123_67 () (_ BitVec 64))
(declare-fun temp123_68 () (_ BitVec 64))
(declare-fun temp123_69 () (_ BitVec 64))
(declare-fun temp123_70 () (_ BitVec 64))
(declare-fun temp123_71 () (_ BitVec 64))
(declare-fun temp123_72 () (_ BitVec 64))
(declare-fun temp123_73 () (_ BitVec 64))
(declare-fun temp123_74 () (_ BitVec 64))
(declare-fun temp123_75 () (_ BitVec 64))
(declare-fun temp123_76 () (_ BitVec 64))
(declare-fun temp123_77 () (_ BitVec 64))
(declare-fun temp123_78 () (_ BitVec 64))
(declare-fun temp123_79 () (_ BitVec 64))
(declare-fun temp123_80 () (_ BitVec 64))
(declare-fun temp123_81 () (_ BitVec 64))
(declare-fun temp123_82 () (_ BitVec 64))
(declare-fun temp123_83 () (_ BitVec 64))
(declare-fun temp123_84 () (_ BitVec 64))
(declare-fun temp123_85 () (_ BitVec 64))
(declare-fun temp123_86 () (_ BitVec 64))
(declare-fun temp123_87 () (_ BitVec 64))
(declare-fun temp123_88 () (_ BitVec 64))
(declare-fun temp123_89 () (_ BitVec 64))
(declare-fun temp123_90 () (_ BitVec 64))
(declare-fun temp123_91 () (_ BitVec 64))
(declare-fun temp123_92 () (_ BitVec 64))
(declare-fun temp123_93 () (_ BitVec 64))
(declare-fun temp123_94 () (_ BitVec 64))
(declare-fun temp123_95 () (_ BitVec 64))
(declare-fun temp123_96 () (_ BitVec 64))
(declare-fun temp123_97 () (_ BitVec 64))
(declare-fun temp123_98 () (_ BitVec 64))
(declare-fun temp123_99 () (_ BitVec 64))
(declare-fun temp123_100 () (_ BitVec 64))
(declare-fun temp123_101 () (_ BitVec 64))
(declare-fun temp123_102 () (_ BitVec 64))
(declare-fun temp123_103 () (_ BitVec 64))
(declare-fun temp123_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp123_105 () (_ BitVec 64))
(declare-fun temp123_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp123_107 () (_ BitVec 64))
(declare-fun temp123_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp123_109 () (_ BitVec 64))
(declare-fun temp123_110 () (_ BitVec 64))
(declare-fun temp123_111 () (_ BitVec 64))
(declare-fun temp123_112 () (_ BitVec 64))
(declare-fun temp123_113 () (_ BitVec 64))
(declare-fun temp123_114 () (_ BitVec 64))
(declare-fun temp123_115 () (_ BitVec 64))
(declare-fun temp123_116 () (_ BitVec 64))
(declare-fun temp123_117 () (_ BitVec 64))
(declare-fun temp123_118 () (_ BitVec 64))
(declare-fun temp123_119 () (_ BitVec 64))
(declare-fun temp123_120 () (_ BitVec 64))
(declare-fun temp123_121 () (_ BitVec 64))
(declare-fun temp123_122 () (_ BitVec 64))
(declare-fun temp123_123 () (_ BitVec 64))
(declare-fun temp123_124 () (_ BitVec 64))
(declare-fun temp123_126 () (_ BitVec 64))
(declare-fun temp123_127 () (_ BitVec 64))
(declare-fun temp123_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp123_128 () (_ BitVec 64))
(declare-fun temp123_129 () (_ BitVec 64))
(declare-fun temp123_131 () (_ BitVec 64))
(declare-fun temp123_132 () (_ BitVec 64))
(declare-fun temp123_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp123_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp123_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp123_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp123_136 () (_ BitVec 64))
(declare-fun temp123_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp123_139 () (_ BitVec 64))
(declare-fun temp123_140 () (_ BitVec 64))
(declare-fun temp123_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp123_141 () (_ BitVec 64))
(declare-fun temp123_143 () (_ BitVec 64))
(declare-fun temp123_144 () (_ BitVec 64))
(declare-fun temp123_142 () (_ BitVec 64))
(declare-fun temp123_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp123_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp123_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp123_148 () (_ BitVec 64))
(declare-fun temp123_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp123_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp123_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp123_153 () (_ BitVec 64))
(declare-fun temp123_152 () (_ BitVec 64))
(declare-fun temp123_155 () (_ BitVec 64))
(declare-fun temp123_154 () (_ BitVec 64))
(declare-fun temp123_156 () (_ BitVec 64))
(assert (= temp123_1 #x0000000000000001))
(assert (= var465453 temp123_1))
(assert (= temp123_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp123_2)))
(assert (= temp123_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp123_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp123_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp123_4)))
(assert (= temp123_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp123_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp123_6 #x0000000000000000))
(assert (= var465488 temp123_6))
(assert (= temp123_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp123_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp123_8 #x0000000000000001))
(assert (= var465522 temp123_8))
(assert (= temp123_10 #x0000000000000000))
(assert (= temp123_9 temp123_10))
(assert (= temp123_12 #x0000000000000001))
(assert (= temp123_11 temp123_12))
(assert (= temp123_13 #x0000000000000000))
(assert (= var863614 temp123_13))
(assert (= temp123_14 #x0000000000000001))
(assert (= var863635 temp123_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp123_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp123_15)))
(assert (= temp123_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp123_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp123_17 #x0000000000000000))
(assert (= var997373 temp123_17))
(assert (= temp123_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp123_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp123_19 #x0000000000000000))
(assert (= var997418 temp123_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp123_20 #x0000000000000000))
(assert (= temp123_21 temp123_20))
(assert (= temp123_22 (select ARGNAME_padding_NAMEEND_VAL temp123_21)))
(assert (= temp123_23 #x0000000000000001))
(assert (= temp123_24 temp123_23))
(assert (= temp123_25 (select ARGNAME_padding_NAMEEND_VAL temp123_24)))
(assert (= temp123_26 #x0000000000000002))
(assert (= temp123_27 temp123_26))
(assert (= temp123_28 (select ARGNAME_padding_NAMEEND_VAL temp123_27)))
(assert (= temp123_29 #x0000000000000003))
(assert (= temp123_30 temp123_29))
(assert (= temp123_31 (select ARGNAME_padding_NAMEEND_VAL temp123_30)))
(assert (= temp123_32 #x0000000000000004))
(assert (= temp123_33 temp123_32))
(assert (= temp123_34 (select ARGNAME_padding_NAMEEND_VAL temp123_33)))
(assert (= temp123_35 #x0000000000000005))
(assert (= temp123_36 temp123_35))
(assert (= temp123_37 (select ARGNAME_padding_NAMEEND_VAL temp123_36)))
(assert (= temp123_38 #x0000000000000000))
(assert (= temp123_39 #x0000000000000000))
(assert (= temp123_40 temp123_39))
(assert (= temp123_41 (select ARGNAME_padding_NAMEEND_VAL temp123_40)))
(assert (= temp123_42 #x0000000000000000))
(assert (= temp123_43 #x0000000000000001))
(assert (= temp123_44 temp123_43))
(assert (= temp123_45 (select ARGNAME_padding_NAMEEND_VAL temp123_44)))
(assert (= temp123_46 #x0000000000000000))
(assert (= temp123_47 #x0000000000000002))
(assert (= temp123_48 temp123_47))
(assert (= temp123_49 (select ARGNAME_padding_NAMEEND_VAL temp123_48)))
(assert (= temp123_50 #x0000000000000000))
(assert (= temp123_51 #x0000000000000003))
(assert (= temp123_52 temp123_51))
(assert (= temp123_53 (select ARGNAME_padding_NAMEEND_VAL temp123_52)))
(assert (= temp123_54 #x0000000000000000))
(assert (= temp123_55 #x0000000000000004))
(assert (= temp123_56 temp123_55))
(assert (= temp123_57 (select ARGNAME_padding_NAMEEND_VAL temp123_56)))
(assert (= temp123_58 #x0000000000000000))
(assert (= temp123_59 #x0000000000000005))
(assert (= temp123_60 temp123_59))
(assert (= temp123_61 (select ARGNAME_padding_NAMEEND_VAL temp123_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp123_41 temp123_38)
             (bvslt temp123_45 temp123_42)
             (bvslt temp123_49 temp123_46)
             (bvslt temp123_53 temp123_50)
             (bvslt temp123_57 temp123_54)
             (bvslt temp123_61 temp123_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp123_62 #x0000000000000000))
(assert (= var1716002 temp123_62))
(assert (= temp123_63 #x0000000000000000))
(assert (= temp123_64 temp123_63))
(assert (= temp123_65 (select ARGNAME_stride_NAMEEND_VAL temp123_64)))
(assert (= temp123_66 #x0000000000000001))
(assert (= temp123_67 temp123_66))
(assert (= temp123_68 (select ARGNAME_stride_NAMEEND_VAL temp123_67)))
(assert (= temp123_69 #x0000000000000002))
(assert (= temp123_70 temp123_69))
(assert (= temp123_71 (select ARGNAME_stride_NAMEEND_VAL temp123_70)))
(assert (= temp123_72 #x0000000000000003))
(assert (= temp123_73 temp123_72))
(assert (= temp123_74 (select ARGNAME_stride_NAMEEND_VAL temp123_73)))
(assert (= temp123_75 #x0000000000000004))
(assert (= temp123_76 temp123_75))
(assert (= temp123_77 (select ARGNAME_stride_NAMEEND_VAL temp123_76)))
(assert (= temp123_78 #x0000000000000005))
(assert (= temp123_79 temp123_78))
(assert (= temp123_80 (select ARGNAME_stride_NAMEEND_VAL temp123_79)))
(assert (= temp123_81 #x0000000000000000))
(assert (= temp123_82 #x0000000000000000))
(assert (= temp123_83 temp123_82))
(assert (= temp123_84 (select ARGNAME_stride_NAMEEND_VAL temp123_83)))
(assert (= temp123_85 #x0000000000000000))
(assert (= temp123_86 #x0000000000000001))
(assert (= temp123_87 temp123_86))
(assert (= temp123_88 (select ARGNAME_stride_NAMEEND_VAL temp123_87)))
(assert (= temp123_89 #x0000000000000000))
(assert (= temp123_90 #x0000000000000002))
(assert (= temp123_91 temp123_90))
(assert (= temp123_92 (select ARGNAME_stride_NAMEEND_VAL temp123_91)))
(assert (= temp123_93 #x0000000000000000))
(assert (= temp123_94 #x0000000000000003))
(assert (= temp123_95 temp123_94))
(assert (= temp123_96 (select ARGNAME_stride_NAMEEND_VAL temp123_95)))
(assert (= temp123_97 #x0000000000000000))
(assert (= temp123_98 #x0000000000000004))
(assert (= temp123_99 temp123_98))
(assert (= temp123_100 (select ARGNAME_stride_NAMEEND_VAL temp123_99)))
(assert (= temp123_101 #x0000000000000000))
(assert (= temp123_102 #x0000000000000005))
(assert (= temp123_103 temp123_102))
(assert (= temp123_104 (select ARGNAME_stride_NAMEEND_VAL temp123_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp123_84 temp123_81)
             (bvsle temp123_88 temp123_85)
             (bvsle temp123_92 temp123_89)
             (bvsle temp123_96 temp123_93)
             (bvsle temp123_100 temp123_97)
             (bvsle temp123_104 temp123_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp123_105 #x0000000000000000))
(assert (= var1716023 temp123_105))
(assert (= temp123_106 #x0000000000000000))
(assert (= var1704114 temp123_106))
(assert (= temp123_107 #x0000000000000000))
(assert (= temp123_108 temp123_107))
(assert (= temp123_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp123_108)))
(assert (= temp123_110 #x0000000000000001))
(assert (= temp123_111 temp123_110))
(assert (= temp123_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp123_111)))
(assert (= temp123_113 #x0000000000000002))
(assert (= temp123_114 temp123_113))
(assert (= temp123_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp123_114)))
(assert (= temp123_116 #x0000000000000003))
(assert (= temp123_117 temp123_116))
(assert (= temp123_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp123_117)))
(assert (= temp123_119 #x0000000000000004))
(assert (= temp123_120 temp123_119))
(assert (= temp123_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp123_120)))
(assert (= temp123_122 #x0000000000000005))
(assert (= temp123_123 temp123_122))
(assert (= temp123_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp123_123)))
(assert (= temp123_126 var1704114))
(assert (= temp123_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp123_126)))
(assert (= temp123_125 temp123_127))
(assert (= var1716068
   (ite (bvslt temp123_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp123_128 #x0000000000000000))
(assert (= var1716068 temp123_128))
(assert (= temp123_129 #x0000000000000000))
(assert (= var1704114 temp123_129))
(assert (= temp123_131 var1704114))
(assert (= temp123_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp123_131)))
(assert (= temp123_130 temp123_132))
(assert (= var1716090 (bvsmod temp123_130 ARGNAME_groups_NAMEEND)))
(assert (= temp123_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp123_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp123_134 #x0000000000000001))
(assert (= var1716091 temp123_134))
(assert (= var1716110 var1716000))
(assert (= temp123_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp123_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp123_136 #x0000000000000001))
(assert (= var1716111 temp123_136))
(assert (= temp123_137 #x0000000000000001))
(assert (= var1705002 temp123_137))
(assert (= temp123_139 var1705002))
(assert (= temp123_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp123_139)))
(assert (= temp123_138 temp123_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp123_138)))
(assert (= temp123_141 #x0000000000000000))
(assert (= var1704114 temp123_141))
(assert (= temp123_143 var1704114))
(assert (= temp123_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp123_143)))
(assert (= temp123_142 temp123_144))
(assert (= temp123_145 #x0000000000000002))
(assert (= var1979241 temp123_145))
(assert (= temp123_146 #x0000000000000001))
(assert (= var1716281 temp123_146))
(assert (= temp123_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp123_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp123_148 #x0000000000000001))
(assert (= var997490 temp123_148))
(assert (= temp123_149 #x0000000000000001))
(assert (= var997620 temp123_149))
(assert (= var3486185 var997620))
(assert (= temp123_150 #x0000000000000000))
(assert (= var3686207 temp123_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp123_151 #x0000000000000002))
(assert (= var3815043 temp123_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp123_153 #xffffffffffffffff))
(assert (= temp123_152 temp123_153))
(assert (= temp123_155 #xffffffffffffffff))
(assert (= temp123_154 temp123_155))
(assert (= temp123_156 #x0000000000000001))
(assert (= var997490 temp123_156))
(model-add temp123_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp123_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp123_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp123_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp123_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp123_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






