(declare-fun temp95_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp95_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp95_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp95_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp95_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp95_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp95_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp95_8 () (_ BitVec 64))
(declare-fun temp95_10 () (_ BitVec 64))
(declare-fun temp95_9 () (_ BitVec 64))
(declare-fun temp95_12 () (_ BitVec 64))
(declare-fun temp95_11 () (_ BitVec 64))
(declare-fun temp95_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp95_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp95_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp95_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp95_17 () (_ BitVec 64))
(declare-fun temp95_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp95_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp95_20 () (_ BitVec 64))
(declare-fun temp95_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp95_22 () (_ BitVec 64))
(declare-fun temp95_23 () (_ BitVec 64))
(declare-fun temp95_24 () (_ BitVec 64))
(declare-fun temp95_25 () (_ BitVec 64))
(declare-fun temp95_26 () (_ BitVec 64))
(declare-fun temp95_27 () (_ BitVec 64))
(declare-fun temp95_28 () (_ BitVec 64))
(declare-fun temp95_29 () (_ BitVec 64))
(declare-fun temp95_30 () (_ BitVec 64))
(declare-fun temp95_31 () (_ BitVec 64))
(declare-fun temp95_32 () (_ BitVec 64))
(declare-fun temp95_33 () (_ BitVec 64))
(declare-fun temp95_34 () (_ BitVec 64))
(declare-fun temp95_35 () (_ BitVec 64))
(declare-fun temp95_36 () (_ BitVec 64))
(declare-fun temp95_37 () (_ BitVec 64))
(declare-fun temp95_38 () (_ BitVec 64))
(declare-fun temp95_39 () (_ BitVec 64))
(declare-fun temp95_40 () (_ BitVec 64))
(declare-fun temp95_41 () (_ BitVec 64))
(declare-fun temp95_42 () (_ BitVec 64))
(declare-fun temp95_43 () (_ BitVec 64))
(declare-fun temp95_44 () (_ BitVec 64))
(declare-fun temp95_45 () (_ BitVec 64))
(declare-fun temp95_46 () (_ BitVec 64))
(declare-fun temp95_47 () (_ BitVec 64))
(declare-fun temp95_48 () (_ BitVec 64))
(declare-fun temp95_49 () (_ BitVec 64))
(declare-fun temp95_50 () (_ BitVec 64))
(declare-fun temp95_51 () (_ BitVec 64))
(declare-fun temp95_52 () (_ BitVec 64))
(declare-fun temp95_53 () (_ BitVec 64))
(declare-fun temp95_54 () (_ BitVec 64))
(declare-fun temp95_55 () (_ BitVec 64))
(declare-fun temp95_56 () (_ BitVec 64))
(declare-fun temp95_57 () (_ BitVec 64))
(declare-fun temp95_58 () (_ BitVec 64))
(declare-fun temp95_59 () (_ BitVec 64))
(declare-fun temp95_60 () (_ BitVec 64))
(declare-fun temp95_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp95_62 () (_ BitVec 64))
(declare-fun temp95_63 () (_ BitVec 64))
(declare-fun temp95_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp95_65 () (_ BitVec 64))
(declare-fun temp95_66 () (_ BitVec 64))
(declare-fun temp95_67 () (_ BitVec 64))
(declare-fun temp95_68 () (_ BitVec 64))
(declare-fun temp95_69 () (_ BitVec 64))
(declare-fun temp95_70 () (_ BitVec 64))
(declare-fun temp95_71 () (_ BitVec 64))
(declare-fun temp95_72 () (_ BitVec 64))
(declare-fun temp95_73 () (_ BitVec 64))
(declare-fun temp95_74 () (_ BitVec 64))
(declare-fun temp95_75 () (_ BitVec 64))
(declare-fun temp95_76 () (_ BitVec 64))
(declare-fun temp95_77 () (_ BitVec 64))
(declare-fun temp95_78 () (_ BitVec 64))
(declare-fun temp95_79 () (_ BitVec 64))
(declare-fun temp95_80 () (_ BitVec 64))
(declare-fun temp95_81 () (_ BitVec 64))
(declare-fun temp95_82 () (_ BitVec 64))
(declare-fun temp95_83 () (_ BitVec 64))
(declare-fun temp95_84 () (_ BitVec 64))
(declare-fun temp95_85 () (_ BitVec 64))
(declare-fun temp95_86 () (_ BitVec 64))
(declare-fun temp95_87 () (_ BitVec 64))
(declare-fun temp95_88 () (_ BitVec 64))
(declare-fun temp95_89 () (_ BitVec 64))
(declare-fun temp95_90 () (_ BitVec 64))
(declare-fun temp95_91 () (_ BitVec 64))
(declare-fun temp95_92 () (_ BitVec 64))
(declare-fun temp95_93 () (_ BitVec 64))
(declare-fun temp95_94 () (_ BitVec 64))
(declare-fun temp95_95 () (_ BitVec 64))
(declare-fun temp95_96 () (_ BitVec 64))
(declare-fun temp95_97 () (_ BitVec 64))
(declare-fun temp95_98 () (_ BitVec 64))
(declare-fun temp95_99 () (_ BitVec 64))
(declare-fun temp95_100 () (_ BitVec 64))
(declare-fun temp95_101 () (_ BitVec 64))
(declare-fun temp95_102 () (_ BitVec 64))
(declare-fun temp95_103 () (_ BitVec 64))
(declare-fun temp95_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp95_105 () (_ BitVec 64))
(declare-fun temp95_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp95_107 () (_ BitVec 64))
(declare-fun temp95_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp95_109 () (_ BitVec 64))
(declare-fun temp95_110 () (_ BitVec 64))
(declare-fun temp95_111 () (_ BitVec 64))
(declare-fun temp95_112 () (_ BitVec 64))
(declare-fun temp95_113 () (_ BitVec 64))
(declare-fun temp95_114 () (_ BitVec 64))
(declare-fun temp95_115 () (_ BitVec 64))
(declare-fun temp95_116 () (_ BitVec 64))
(declare-fun temp95_117 () (_ BitVec 64))
(declare-fun temp95_118 () (_ BitVec 64))
(declare-fun temp95_119 () (_ BitVec 64))
(declare-fun temp95_120 () (_ BitVec 64))
(declare-fun temp95_121 () (_ BitVec 64))
(declare-fun temp95_122 () (_ BitVec 64))
(declare-fun temp95_123 () (_ BitVec 64))
(declare-fun temp95_124 () (_ BitVec 64))
(declare-fun temp95_126 () (_ BitVec 64))
(declare-fun temp95_127 () (_ BitVec 64))
(declare-fun temp95_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp95_128 () (_ BitVec 64))
(declare-fun temp95_129 () (_ BitVec 64))
(declare-fun temp95_131 () (_ BitVec 64))
(declare-fun temp95_132 () (_ BitVec 64))
(declare-fun temp95_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp95_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp95_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp95_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp95_136 () (_ BitVec 64))
(declare-fun temp95_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp95_139 () (_ BitVec 64))
(declare-fun temp95_140 () (_ BitVec 64))
(declare-fun temp95_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp95_141 () (_ BitVec 64))
(declare-fun temp95_143 () (_ BitVec 64))
(declare-fun temp95_144 () (_ BitVec 64))
(declare-fun temp95_142 () (_ BitVec 64))
(declare-fun temp95_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp95_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp95_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp95_148 () (_ BitVec 64))
(declare-fun temp95_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp95_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp95_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp95_153 () (_ BitVec 64))
(declare-fun temp95_152 () (_ BitVec 64))
(declare-fun temp95_155 () (_ BitVec 64))
(declare-fun temp95_154 () (_ BitVec 64))
(declare-fun temp95_156 () (_ BitVec 64))
(assert (= temp95_1 #x0000000000000001))
(assert (= var465453 temp95_1))
(assert (= temp95_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp95_2)))
(assert (= temp95_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp95_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp95_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp95_4)))
(assert (= temp95_5 #x0000000000000000))
(assert (= var465487 (ite (= var465486 temp95_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp95_6 #x0000000000000000))
(assert (= var465488 temp95_6))
(assert (= temp95_7 #x0000000000000000))
(assert (= var465522 (ite (= var465485 temp95_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp95_8 #x0000000000000001))
(assert (= var465522 temp95_8))
(assert (= temp95_10 #x0000000000000000))
(assert (= temp95_9 temp95_10))
(assert (= temp95_12 #x0000000000000001))
(assert (= temp95_11 temp95_12))
(assert (= temp95_13 #x0000000000000000))
(assert (= var863614 temp95_13))
(assert (= temp95_14 #x0000000000000001))
(assert (= var863635 temp95_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp95_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp95_15)))
(assert (= temp95_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp95_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp95_17 #x0000000000000000))
(assert (= var997373 temp95_17))
(assert (= temp95_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp95_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp95_19 #x0000000000000000))
(assert (= var997418 temp95_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp95_20 #x0000000000000000))
(assert (= temp95_21 temp95_20))
(assert (= temp95_22 (select ARGNAME_padding_NAMEEND_VAL temp95_21)))
(assert (= temp95_23 #x0000000000000001))
(assert (= temp95_24 temp95_23))
(assert (= temp95_25 (select ARGNAME_padding_NAMEEND_VAL temp95_24)))
(assert (= temp95_26 #x0000000000000002))
(assert (= temp95_27 temp95_26))
(assert (= temp95_28 (select ARGNAME_padding_NAMEEND_VAL temp95_27)))
(assert (= temp95_29 #x0000000000000003))
(assert (= temp95_30 temp95_29))
(assert (= temp95_31 (select ARGNAME_padding_NAMEEND_VAL temp95_30)))
(assert (= temp95_32 #x0000000000000004))
(assert (= temp95_33 temp95_32))
(assert (= temp95_34 (select ARGNAME_padding_NAMEEND_VAL temp95_33)))
(assert (= temp95_35 #x0000000000000005))
(assert (= temp95_36 temp95_35))
(assert (= temp95_37 (select ARGNAME_padding_NAMEEND_VAL temp95_36)))
(assert (= temp95_38 #x0000000000000000))
(assert (= temp95_39 #x0000000000000000))
(assert (= temp95_40 temp95_39))
(assert (= temp95_41 (select ARGNAME_padding_NAMEEND_VAL temp95_40)))
(assert (= temp95_42 #x0000000000000000))
(assert (= temp95_43 #x0000000000000001))
(assert (= temp95_44 temp95_43))
(assert (= temp95_45 (select ARGNAME_padding_NAMEEND_VAL temp95_44)))
(assert (= temp95_46 #x0000000000000000))
(assert (= temp95_47 #x0000000000000002))
(assert (= temp95_48 temp95_47))
(assert (= temp95_49 (select ARGNAME_padding_NAMEEND_VAL temp95_48)))
(assert (= temp95_50 #x0000000000000000))
(assert (= temp95_51 #x0000000000000003))
(assert (= temp95_52 temp95_51))
(assert (= temp95_53 (select ARGNAME_padding_NAMEEND_VAL temp95_52)))
(assert (= temp95_54 #x0000000000000000))
(assert (= temp95_55 #x0000000000000004))
(assert (= temp95_56 temp95_55))
(assert (= temp95_57 (select ARGNAME_padding_NAMEEND_VAL temp95_56)))
(assert (= temp95_58 #x0000000000000000))
(assert (= temp95_59 #x0000000000000005))
(assert (= temp95_60 temp95_59))
(assert (= temp95_61 (select ARGNAME_padding_NAMEEND_VAL temp95_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp95_41 temp95_38)
             (bvslt temp95_45 temp95_42)
             (bvslt temp95_49 temp95_46)
             (bvslt temp95_53 temp95_50)
             (bvslt temp95_57 temp95_54)
             (bvslt temp95_61 temp95_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp95_62 #x0000000000000000))
(assert (= var1716002 temp95_62))
(assert (= temp95_63 #x0000000000000000))
(assert (= temp95_64 temp95_63))
(assert (= temp95_65 (select ARGNAME_stride_NAMEEND_VAL temp95_64)))
(assert (= temp95_66 #x0000000000000001))
(assert (= temp95_67 temp95_66))
(assert (= temp95_68 (select ARGNAME_stride_NAMEEND_VAL temp95_67)))
(assert (= temp95_69 #x0000000000000002))
(assert (= temp95_70 temp95_69))
(assert (= temp95_71 (select ARGNAME_stride_NAMEEND_VAL temp95_70)))
(assert (= temp95_72 #x0000000000000003))
(assert (= temp95_73 temp95_72))
(assert (= temp95_74 (select ARGNAME_stride_NAMEEND_VAL temp95_73)))
(assert (= temp95_75 #x0000000000000004))
(assert (= temp95_76 temp95_75))
(assert (= temp95_77 (select ARGNAME_stride_NAMEEND_VAL temp95_76)))
(assert (= temp95_78 #x0000000000000005))
(assert (= temp95_79 temp95_78))
(assert (= temp95_80 (select ARGNAME_stride_NAMEEND_VAL temp95_79)))
(assert (= temp95_81 #x0000000000000000))
(assert (= temp95_82 #x0000000000000000))
(assert (= temp95_83 temp95_82))
(assert (= temp95_84 (select ARGNAME_stride_NAMEEND_VAL temp95_83)))
(assert (= temp95_85 #x0000000000000000))
(assert (= temp95_86 #x0000000000000001))
(assert (= temp95_87 temp95_86))
(assert (= temp95_88 (select ARGNAME_stride_NAMEEND_VAL temp95_87)))
(assert (= temp95_89 #x0000000000000000))
(assert (= temp95_90 #x0000000000000002))
(assert (= temp95_91 temp95_90))
(assert (= temp95_92 (select ARGNAME_stride_NAMEEND_VAL temp95_91)))
(assert (= temp95_93 #x0000000000000000))
(assert (= temp95_94 #x0000000000000003))
(assert (= temp95_95 temp95_94))
(assert (= temp95_96 (select ARGNAME_stride_NAMEEND_VAL temp95_95)))
(assert (= temp95_97 #x0000000000000000))
(assert (= temp95_98 #x0000000000000004))
(assert (= temp95_99 temp95_98))
(assert (= temp95_100 (select ARGNAME_stride_NAMEEND_VAL temp95_99)))
(assert (= temp95_101 #x0000000000000000))
(assert (= temp95_102 #x0000000000000005))
(assert (= temp95_103 temp95_102))
(assert (= temp95_104 (select ARGNAME_stride_NAMEEND_VAL temp95_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp95_84 temp95_81)
             (bvsle temp95_88 temp95_85)
             (bvsle temp95_92 temp95_89)
             (bvsle temp95_96 temp95_93)
             (bvsle temp95_100 temp95_97)
             (bvsle temp95_104 temp95_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp95_105 #x0000000000000000))
(assert (= var1716023 temp95_105))
(assert (= temp95_106 #x0000000000000000))
(assert (= var1704114 temp95_106))
(assert (= temp95_107 #x0000000000000000))
(assert (= temp95_108 temp95_107))
(assert (= temp95_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp95_108)))
(assert (= temp95_110 #x0000000000000001))
(assert (= temp95_111 temp95_110))
(assert (= temp95_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp95_111)))
(assert (= temp95_113 #x0000000000000002))
(assert (= temp95_114 temp95_113))
(assert (= temp95_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp95_114)))
(assert (= temp95_116 #x0000000000000003))
(assert (= temp95_117 temp95_116))
(assert (= temp95_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp95_117)))
(assert (= temp95_119 #x0000000000000004))
(assert (= temp95_120 temp95_119))
(assert (= temp95_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp95_120)))
(assert (= temp95_122 #x0000000000000005))
(assert (= temp95_123 temp95_122))
(assert (= temp95_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp95_123)))
(assert (= temp95_126 var1704114))
(assert (= temp95_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp95_126)))
(assert (= temp95_125 temp95_127))
(assert (= var1716068
   (ite (bvslt temp95_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp95_128 #x0000000000000000))
(assert (= var1716068 temp95_128))
(assert (= temp95_129 #x0000000000000000))
(assert (= var1704114 temp95_129))
(assert (= temp95_131 var1704114))
(assert (= temp95_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp95_131)))
(assert (= temp95_130 temp95_132))
(assert (= var1716090 (bvsmod temp95_130 ARGNAME_groups_NAMEEND)))
(assert (= temp95_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp95_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp95_134 #x0000000000000001))
(assert (= var1716091 temp95_134))
(assert (= var1716110 var1716000))
(assert (= temp95_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp95_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp95_136 #x0000000000000001))
(assert (= var1716111 temp95_136))
(assert (= temp95_137 #x0000000000000001))
(assert (= var1705002 temp95_137))
(assert (= temp95_139 var1705002))
(assert (= temp95_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp95_139)))
(assert (= temp95_138 temp95_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp95_138)))
(assert (= temp95_141 #x0000000000000000))
(assert (= var1704114 temp95_141))
(assert (= temp95_143 var1704114))
(assert (= temp95_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp95_143)))
(assert (= temp95_142 temp95_144))
(assert (= temp95_145 #x0000000000000002))
(assert (= var1979241 temp95_145))
(assert (= temp95_146 #x0000000000000001))
(assert (= var1716281 temp95_146))
(assert (= temp95_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp95_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp95_148 #x0000000000000001))
(assert (= var997490 temp95_148))
(assert (= temp95_149 #x0000000000000001))
(assert (= var997620 temp95_149))
(assert (= var3486185 var997620))
(assert (= temp95_150 #x0000000000000000))
(assert (= var3686207 temp95_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp95_151 #x0000000000000002))
(assert (= var3815043 temp95_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp95_153 #xffffffffffffffff))
(assert (= temp95_152 temp95_153))
(assert (= temp95_155 #xffffffffffffffff))
(assert (= temp95_154 temp95_155))
(assert (= temp95_156 #x0000000000000001))
(assert (= var997490 temp95_156))
(model-add temp95_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp95_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp95_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp95_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp95_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp95_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






