(declare-fun temp1078_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp1078_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp1078_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp1078_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp1078_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp1078_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp1078_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp1078_8 () (_ BitVec 64))
(declare-fun temp1078_10 () (_ BitVec 64))
(declare-fun temp1078_9 () (_ BitVec 64))
(declare-fun temp1078_12 () (_ BitVec 64))
(declare-fun temp1078_11 () (_ BitVec 64))
(declare-fun temp1078_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp1078_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp1078_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp1078_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp1078_17 () (_ BitVec 64))
(declare-fun temp1078_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp1078_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp1078_20 () (_ BitVec 64))
(declare-fun temp1078_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1078_22 () (_ BitVec 64))
(declare-fun temp1078_23 () (_ BitVec 64))
(declare-fun temp1078_24 () (_ BitVec 64))
(declare-fun temp1078_25 () (_ BitVec 64))
(declare-fun temp1078_26 () (_ BitVec 64))
(declare-fun temp1078_27 () (_ BitVec 64))
(declare-fun temp1078_28 () (_ BitVec 64))
(declare-fun temp1078_29 () (_ BitVec 64))
(declare-fun temp1078_30 () (_ BitVec 64))
(declare-fun temp1078_31 () (_ BitVec 64))
(declare-fun temp1078_32 () (_ BitVec 64))
(declare-fun temp1078_33 () (_ BitVec 64))
(declare-fun temp1078_34 () (_ BitVec 64))
(declare-fun temp1078_35 () (_ BitVec 64))
(declare-fun temp1078_36 () (_ BitVec 64))
(declare-fun temp1078_37 () (_ BitVec 64))
(declare-fun temp1078_38 () (_ BitVec 64))
(declare-fun temp1078_39 () (_ BitVec 64))
(declare-fun temp1078_40 () (_ BitVec 64))
(declare-fun temp1078_41 () (_ BitVec 64))
(declare-fun temp1078_42 () (_ BitVec 64))
(declare-fun temp1078_43 () (_ BitVec 64))
(declare-fun temp1078_44 () (_ BitVec 64))
(declare-fun temp1078_45 () (_ BitVec 64))
(declare-fun temp1078_46 () (_ BitVec 64))
(declare-fun temp1078_47 () (_ BitVec 64))
(declare-fun temp1078_48 () (_ BitVec 64))
(declare-fun temp1078_49 () (_ BitVec 64))
(declare-fun temp1078_50 () (_ BitVec 64))
(declare-fun temp1078_51 () (_ BitVec 64))
(declare-fun temp1078_52 () (_ BitVec 64))
(declare-fun temp1078_53 () (_ BitVec 64))
(declare-fun temp1078_54 () (_ BitVec 64))
(declare-fun temp1078_55 () (_ BitVec 64))
(declare-fun temp1078_56 () (_ BitVec 64))
(declare-fun temp1078_57 () (_ BitVec 64))
(declare-fun temp1078_58 () (_ BitVec 64))
(declare-fun temp1078_59 () (_ BitVec 64))
(declare-fun temp1078_60 () (_ BitVec 64))
(declare-fun temp1078_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp1078_62 () (_ BitVec 64))
(declare-fun temp1078_63 () (_ BitVec 64))
(declare-fun temp1078_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1078_65 () (_ BitVec 64))
(declare-fun temp1078_66 () (_ BitVec 64))
(declare-fun temp1078_67 () (_ BitVec 64))
(declare-fun temp1078_68 () (_ BitVec 64))
(declare-fun temp1078_69 () (_ BitVec 64))
(declare-fun temp1078_70 () (_ BitVec 64))
(declare-fun temp1078_71 () (_ BitVec 64))
(declare-fun temp1078_72 () (_ BitVec 64))
(declare-fun temp1078_73 () (_ BitVec 64))
(declare-fun temp1078_74 () (_ BitVec 64))
(declare-fun temp1078_75 () (_ BitVec 64))
(declare-fun temp1078_76 () (_ BitVec 64))
(declare-fun temp1078_77 () (_ BitVec 64))
(declare-fun temp1078_78 () (_ BitVec 64))
(declare-fun temp1078_79 () (_ BitVec 64))
(declare-fun temp1078_80 () (_ BitVec 64))
(declare-fun temp1078_81 () (_ BitVec 64))
(declare-fun temp1078_82 () (_ BitVec 64))
(declare-fun temp1078_83 () (_ BitVec 64))
(declare-fun temp1078_84 () (_ BitVec 64))
(declare-fun temp1078_85 () (_ BitVec 64))
(declare-fun temp1078_86 () (_ BitVec 64))
(declare-fun temp1078_87 () (_ BitVec 64))
(declare-fun temp1078_88 () (_ BitVec 64))
(declare-fun temp1078_89 () (_ BitVec 64))
(declare-fun temp1078_90 () (_ BitVec 64))
(declare-fun temp1078_91 () (_ BitVec 64))
(declare-fun temp1078_92 () (_ BitVec 64))
(declare-fun temp1078_93 () (_ BitVec 64))
(declare-fun temp1078_94 () (_ BitVec 64))
(declare-fun temp1078_95 () (_ BitVec 64))
(declare-fun temp1078_96 () (_ BitVec 64))
(declare-fun temp1078_97 () (_ BitVec 64))
(declare-fun temp1078_98 () (_ BitVec 64))
(declare-fun temp1078_99 () (_ BitVec 64))
(declare-fun temp1078_100 () (_ BitVec 64))
(declare-fun temp1078_101 () (_ BitVec 64))
(declare-fun temp1078_102 () (_ BitVec 64))
(declare-fun temp1078_103 () (_ BitVec 64))
(declare-fun temp1078_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp1078_105 () (_ BitVec 64))
(declare-fun temp1078_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp1078_107 () (_ BitVec 64))
(declare-fun temp1078_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1078_109 () (_ BitVec 64))
(declare-fun temp1078_110 () (_ BitVec 64))
(declare-fun temp1078_111 () (_ BitVec 64))
(declare-fun temp1078_112 () (_ BitVec 64))
(declare-fun temp1078_113 () (_ BitVec 64))
(declare-fun temp1078_114 () (_ BitVec 64))
(declare-fun temp1078_115 () (_ BitVec 64))
(declare-fun temp1078_116 () (_ BitVec 64))
(declare-fun temp1078_117 () (_ BitVec 64))
(declare-fun temp1078_118 () (_ BitVec 64))
(declare-fun temp1078_119 () (_ BitVec 64))
(declare-fun temp1078_120 () (_ BitVec 64))
(declare-fun temp1078_121 () (_ BitVec 64))
(declare-fun temp1078_122 () (_ BitVec 64))
(declare-fun temp1078_123 () (_ BitVec 64))
(declare-fun temp1078_124 () (_ BitVec 64))
(declare-fun temp1078_126 () (_ BitVec 64))
(declare-fun temp1078_127 () (_ BitVec 64))
(declare-fun temp1078_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp1078_128 () (_ BitVec 64))
(declare-fun temp1078_129 () (_ BitVec 64))
(declare-fun temp1078_131 () (_ BitVec 64))
(declare-fun temp1078_132 () (_ BitVec 64))
(declare-fun temp1078_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp1078_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp1078_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp1078_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp1078_136 () (_ BitVec 64))
(declare-fun temp1078_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp1078_139 () (_ BitVec 64))
(declare-fun temp1078_140 () (_ BitVec 64))
(declare-fun temp1078_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp1078_141 () (_ BitVec 64))
(declare-fun temp1078_143 () (_ BitVec 64))
(declare-fun temp1078_144 () (_ BitVec 64))
(declare-fun temp1078_142 () (_ BitVec 64))
(declare-fun temp1078_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp1078_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp1078_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp1078_148 () (_ BitVec 64))
(declare-fun temp1078_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp1078_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp1078_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var3944848 () (_ BitVec 64))
(declare-fun var4206992 () (_ BitVec 64))
(declare-fun temp1078_152 () (_ BitVec 64))
(declare-fun var998846 () (_ BitVec 64))
(declare-fun temp1078_153 () (_ BitVec 64))
(declare-fun temp1078_154 () (_ BitVec 64))
(declare-fun var4535939 () (_ BitVec 64))
(declare-fun temp1078_155 () (_ BitVec 64))
(assert (= temp1078_1 #x0000000000000001))
(assert (= var465453 temp1078_1))
(assert (= temp1078_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp1078_2)))
(assert (= temp1078_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp1078_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp1078_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp1078_4)))
(assert (= temp1078_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp1078_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp1078_6 #x0000000000000000))
(assert (= var465488 temp1078_6))
(assert (= temp1078_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp1078_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp1078_8 #x0000000000000001))
(assert (= var465522 temp1078_8))
(assert (= temp1078_10 #x0000000000000000))
(assert (= temp1078_9 temp1078_10))
(assert (= temp1078_12 #x0000000000000001))
(assert (= temp1078_11 temp1078_12))
(assert (= temp1078_13 #x0000000000000000))
(assert (= var863614 temp1078_13))
(assert (= temp1078_14 #x0000000000000001))
(assert (= var863635 temp1078_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp1078_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp1078_15)))
(assert (= temp1078_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1078_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1078_17 #x0000000000000000))
(assert (= var997373 temp1078_17))
(assert (= temp1078_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp1078_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1078_19 #x0000000000000000))
(assert (= var997418 temp1078_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp1078_20 #x0000000000000000))
(assert (= temp1078_21 temp1078_20))
(assert (= temp1078_22 (select ARGNAME_padding_NAMEEND_VAL temp1078_21)))
(assert (= temp1078_23 #x0000000000000001))
(assert (= temp1078_24 temp1078_23))
(assert (= temp1078_25 (select ARGNAME_padding_NAMEEND_VAL temp1078_24)))
(assert (= temp1078_26 #x0000000000000002))
(assert (= temp1078_27 temp1078_26))
(assert (= temp1078_28 (select ARGNAME_padding_NAMEEND_VAL temp1078_27)))
(assert (= temp1078_29 #x0000000000000003))
(assert (= temp1078_30 temp1078_29))
(assert (= temp1078_31 (select ARGNAME_padding_NAMEEND_VAL temp1078_30)))
(assert (= temp1078_32 #x0000000000000004))
(assert (= temp1078_33 temp1078_32))
(assert (= temp1078_34 (select ARGNAME_padding_NAMEEND_VAL temp1078_33)))
(assert (= temp1078_35 #x0000000000000005))
(assert (= temp1078_36 temp1078_35))
(assert (= temp1078_37 (select ARGNAME_padding_NAMEEND_VAL temp1078_36)))
(assert (= temp1078_38 #x0000000000000000))
(assert (= temp1078_39 #x0000000000000000))
(assert (= temp1078_40 temp1078_39))
(assert (= temp1078_41 (select ARGNAME_padding_NAMEEND_VAL temp1078_40)))
(assert (= temp1078_42 #x0000000000000000))
(assert (= temp1078_43 #x0000000000000001))
(assert (= temp1078_44 temp1078_43))
(assert (= temp1078_45 (select ARGNAME_padding_NAMEEND_VAL temp1078_44)))
(assert (= temp1078_46 #x0000000000000000))
(assert (= temp1078_47 #x0000000000000002))
(assert (= temp1078_48 temp1078_47))
(assert (= temp1078_49 (select ARGNAME_padding_NAMEEND_VAL temp1078_48)))
(assert (= temp1078_50 #x0000000000000000))
(assert (= temp1078_51 #x0000000000000003))
(assert (= temp1078_52 temp1078_51))
(assert (= temp1078_53 (select ARGNAME_padding_NAMEEND_VAL temp1078_52)))
(assert (= temp1078_54 #x0000000000000000))
(assert (= temp1078_55 #x0000000000000004))
(assert (= temp1078_56 temp1078_55))
(assert (= temp1078_57 (select ARGNAME_padding_NAMEEND_VAL temp1078_56)))
(assert (= temp1078_58 #x0000000000000000))
(assert (= temp1078_59 #x0000000000000005))
(assert (= temp1078_60 temp1078_59))
(assert (= temp1078_61 (select ARGNAME_padding_NAMEEND_VAL temp1078_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp1078_41 temp1078_38)
             (bvslt temp1078_45 temp1078_42)
             (bvslt temp1078_49 temp1078_46)
             (bvslt temp1078_53 temp1078_50)
             (bvslt temp1078_57 temp1078_54)
             (bvslt temp1078_61 temp1078_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1078_62 #x0000000000000000))
(assert (= var1716002 temp1078_62))
(assert (= temp1078_63 #x0000000000000000))
(assert (= temp1078_64 temp1078_63))
(assert (= temp1078_65 (select ARGNAME_stride_NAMEEND_VAL temp1078_64)))
(assert (= temp1078_66 #x0000000000000001))
(assert (= temp1078_67 temp1078_66))
(assert (= temp1078_68 (select ARGNAME_stride_NAMEEND_VAL temp1078_67)))
(assert (= temp1078_69 #x0000000000000002))
(assert (= temp1078_70 temp1078_69))
(assert (= temp1078_71 (select ARGNAME_stride_NAMEEND_VAL temp1078_70)))
(assert (= temp1078_72 #x0000000000000003))
(assert (= temp1078_73 temp1078_72))
(assert (= temp1078_74 (select ARGNAME_stride_NAMEEND_VAL temp1078_73)))
(assert (= temp1078_75 #x0000000000000004))
(assert (= temp1078_76 temp1078_75))
(assert (= temp1078_77 (select ARGNAME_stride_NAMEEND_VAL temp1078_76)))
(assert (= temp1078_78 #x0000000000000005))
(assert (= temp1078_79 temp1078_78))
(assert (= temp1078_80 (select ARGNAME_stride_NAMEEND_VAL temp1078_79)))
(assert (= temp1078_81 #x0000000000000000))
(assert (= temp1078_82 #x0000000000000000))
(assert (= temp1078_83 temp1078_82))
(assert (= temp1078_84 (select ARGNAME_stride_NAMEEND_VAL temp1078_83)))
(assert (= temp1078_85 #x0000000000000000))
(assert (= temp1078_86 #x0000000000000001))
(assert (= temp1078_87 temp1078_86))
(assert (= temp1078_88 (select ARGNAME_stride_NAMEEND_VAL temp1078_87)))
(assert (= temp1078_89 #x0000000000000000))
(assert (= temp1078_90 #x0000000000000002))
(assert (= temp1078_91 temp1078_90))
(assert (= temp1078_92 (select ARGNAME_stride_NAMEEND_VAL temp1078_91)))
(assert (= temp1078_93 #x0000000000000000))
(assert (= temp1078_94 #x0000000000000003))
(assert (= temp1078_95 temp1078_94))
(assert (= temp1078_96 (select ARGNAME_stride_NAMEEND_VAL temp1078_95)))
(assert (= temp1078_97 #x0000000000000000))
(assert (= temp1078_98 #x0000000000000004))
(assert (= temp1078_99 temp1078_98))
(assert (= temp1078_100 (select ARGNAME_stride_NAMEEND_VAL temp1078_99)))
(assert (= temp1078_101 #x0000000000000000))
(assert (= temp1078_102 #x0000000000000005))
(assert (= temp1078_103 temp1078_102))
(assert (= temp1078_104 (select ARGNAME_stride_NAMEEND_VAL temp1078_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp1078_84 temp1078_81)
             (bvsle temp1078_88 temp1078_85)
             (bvsle temp1078_92 temp1078_89)
             (bvsle temp1078_96 temp1078_93)
             (bvsle temp1078_100 temp1078_97)
             (bvsle temp1078_104 temp1078_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1078_105 #x0000000000000000))
(assert (= var1716023 temp1078_105))
(assert (= temp1078_106 #x0000000000000000))
(assert (= var1704114 temp1078_106))
(assert (= temp1078_107 #x0000000000000000))
(assert (= temp1078_108 temp1078_107))
(assert (= temp1078_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1078_108)))
(assert (= temp1078_110 #x0000000000000001))
(assert (= temp1078_111 temp1078_110))
(assert (= temp1078_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1078_111)))
(assert (= temp1078_113 #x0000000000000002))
(assert (= temp1078_114 temp1078_113))
(assert (= temp1078_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1078_114)))
(assert (= temp1078_116 #x0000000000000003))
(assert (= temp1078_117 temp1078_116))
(assert (= temp1078_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1078_117)))
(assert (= temp1078_119 #x0000000000000004))
(assert (= temp1078_120 temp1078_119))
(assert (= temp1078_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1078_120)))
(assert (= temp1078_122 #x0000000000000005))
(assert (= temp1078_123 temp1078_122))
(assert (= temp1078_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1078_123)))
(assert (= temp1078_126 var1704114))
(assert (= temp1078_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1078_126)))
(assert (= temp1078_125 temp1078_127))
(assert (= var1716068
   (ite (bvslt temp1078_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1078_128 #x0000000000000000))
(assert (= var1716068 temp1078_128))
(assert (= temp1078_129 #x0000000000000000))
(assert (= var1704114 temp1078_129))
(assert (= temp1078_131 var1704114))
(assert (= temp1078_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1078_131)))
(assert (= temp1078_130 temp1078_132))
(assert (= var1716090 (bvsmod temp1078_130 ARGNAME_groups_NAMEEND)))
(assert (= temp1078_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp1078_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp1078_134 #x0000000000000001))
(assert (= var1716091 temp1078_134))
(assert (= var1716110 var1716000))
(assert (= temp1078_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp1078_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp1078_136 #x0000000000000001))
(assert (= var1716111 temp1078_136))
(assert (= temp1078_137 #x0000000000000001))
(assert (= var1705002 temp1078_137))
(assert (= temp1078_139 var1705002))
(assert (= temp1078_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1078_139)))
(assert (= temp1078_138 temp1078_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp1078_138)))
(assert (= temp1078_141 #x0000000000000000))
(assert (= var1704114 temp1078_141))
(assert (= temp1078_143 var1704114))
(assert (= temp1078_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1078_143)))
(assert (= temp1078_142 temp1078_144))
(assert (= temp1078_145 #x0000000000000002))
(assert (= var1979241 temp1078_145))
(assert (= temp1078_146 #x0000000000000001))
(assert (= var1716281 temp1078_146))
(assert (= temp1078_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1078_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1078_148 #x0000000000000001))
(assert (= var997490 temp1078_148))
(assert (= temp1078_149 #x0000000000000001))
(assert (= var997620 temp1078_149))
(assert (= var3486185 var997620))
(assert (= temp1078_150 #x0000000000000000))
(assert (= var3686207 temp1078_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp1078_151 #x0000000000000002))
(assert (= var3815043 temp1078_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var3944848 var997633))
(assert (= var4206992 var997633))
(assert (= temp1078_152 #x0000000000000001))
(assert (= var998846
   (ite (= ARGNAME_groups_NAMEEND temp1078_152)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1078_153 #x0000000000000000))
(assert (= var998846 temp1078_153))
(assert (= temp1078_154 #x0000000000000002))
(assert (= var4535939 temp1078_154))
(assert (= temp1078_155 #x0000000000000001))
(assert (= var997490 temp1078_155))
(model-add temp1078_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp1078_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp1078_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp1078_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp1078_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp1078_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






