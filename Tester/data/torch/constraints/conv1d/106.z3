(declare-fun temp140_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp140_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp140_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp140_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp140_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp140_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp140_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp140_8 () (_ BitVec 64))
(declare-fun temp140_10 () (_ BitVec 64))
(declare-fun temp140_9 () (_ BitVec 64))
(declare-fun temp140_12 () (_ BitVec 64))
(declare-fun temp140_11 () (_ BitVec 64))
(declare-fun temp140_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp140_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp140_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp140_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp140_17 () (_ BitVec 64))
(declare-fun temp140_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp140_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp140_20 () (_ BitVec 64))
(declare-fun temp140_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp140_22 () (_ BitVec 64))
(declare-fun temp140_23 () (_ BitVec 64))
(declare-fun temp140_24 () (_ BitVec 64))
(declare-fun temp140_25 () (_ BitVec 64))
(declare-fun temp140_26 () (_ BitVec 64))
(declare-fun temp140_27 () (_ BitVec 64))
(declare-fun temp140_28 () (_ BitVec 64))
(declare-fun temp140_29 () (_ BitVec 64))
(declare-fun temp140_30 () (_ BitVec 64))
(declare-fun temp140_31 () (_ BitVec 64))
(declare-fun temp140_32 () (_ BitVec 64))
(declare-fun temp140_33 () (_ BitVec 64))
(declare-fun temp140_34 () (_ BitVec 64))
(declare-fun temp140_35 () (_ BitVec 64))
(declare-fun temp140_36 () (_ BitVec 64))
(declare-fun temp140_37 () (_ BitVec 64))
(declare-fun temp140_38 () (_ BitVec 64))
(declare-fun temp140_39 () (_ BitVec 64))
(declare-fun temp140_40 () (_ BitVec 64))
(declare-fun temp140_41 () (_ BitVec 64))
(declare-fun temp140_42 () (_ BitVec 64))
(declare-fun temp140_43 () (_ BitVec 64))
(declare-fun temp140_44 () (_ BitVec 64))
(declare-fun temp140_45 () (_ BitVec 64))
(declare-fun temp140_46 () (_ BitVec 64))
(declare-fun temp140_47 () (_ BitVec 64))
(declare-fun temp140_48 () (_ BitVec 64))
(declare-fun temp140_49 () (_ BitVec 64))
(declare-fun temp140_50 () (_ BitVec 64))
(declare-fun temp140_51 () (_ BitVec 64))
(declare-fun temp140_52 () (_ BitVec 64))
(declare-fun temp140_53 () (_ BitVec 64))
(declare-fun temp140_54 () (_ BitVec 64))
(declare-fun temp140_55 () (_ BitVec 64))
(declare-fun temp140_56 () (_ BitVec 64))
(declare-fun temp140_57 () (_ BitVec 64))
(declare-fun temp140_58 () (_ BitVec 64))
(declare-fun temp140_59 () (_ BitVec 64))
(declare-fun temp140_60 () (_ BitVec 64))
(declare-fun temp140_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp140_62 () (_ BitVec 64))
(declare-fun temp140_63 () (_ BitVec 64))
(declare-fun temp140_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp140_65 () (_ BitVec 64))
(declare-fun temp140_66 () (_ BitVec 64))
(declare-fun temp140_67 () (_ BitVec 64))
(declare-fun temp140_68 () (_ BitVec 64))
(declare-fun temp140_69 () (_ BitVec 64))
(declare-fun temp140_70 () (_ BitVec 64))
(declare-fun temp140_71 () (_ BitVec 64))
(declare-fun temp140_72 () (_ BitVec 64))
(declare-fun temp140_73 () (_ BitVec 64))
(declare-fun temp140_74 () (_ BitVec 64))
(declare-fun temp140_75 () (_ BitVec 64))
(declare-fun temp140_76 () (_ BitVec 64))
(declare-fun temp140_77 () (_ BitVec 64))
(declare-fun temp140_78 () (_ BitVec 64))
(declare-fun temp140_79 () (_ BitVec 64))
(declare-fun temp140_80 () (_ BitVec 64))
(declare-fun temp140_81 () (_ BitVec 64))
(declare-fun temp140_82 () (_ BitVec 64))
(declare-fun temp140_83 () (_ BitVec 64))
(declare-fun temp140_84 () (_ BitVec 64))
(declare-fun temp140_85 () (_ BitVec 64))
(declare-fun temp140_86 () (_ BitVec 64))
(declare-fun temp140_87 () (_ BitVec 64))
(declare-fun temp140_88 () (_ BitVec 64))
(declare-fun temp140_89 () (_ BitVec 64))
(declare-fun temp140_90 () (_ BitVec 64))
(declare-fun temp140_91 () (_ BitVec 64))
(declare-fun temp140_92 () (_ BitVec 64))
(declare-fun temp140_93 () (_ BitVec 64))
(declare-fun temp140_94 () (_ BitVec 64))
(declare-fun temp140_95 () (_ BitVec 64))
(declare-fun temp140_96 () (_ BitVec 64))
(declare-fun temp140_97 () (_ BitVec 64))
(declare-fun temp140_98 () (_ BitVec 64))
(declare-fun temp140_99 () (_ BitVec 64))
(declare-fun temp140_100 () (_ BitVec 64))
(declare-fun temp140_101 () (_ BitVec 64))
(declare-fun temp140_102 () (_ BitVec 64))
(declare-fun temp140_103 () (_ BitVec 64))
(declare-fun temp140_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp140_105 () (_ BitVec 64))
(declare-fun temp140_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp140_107 () (_ BitVec 64))
(declare-fun temp140_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp140_109 () (_ BitVec 64))
(declare-fun temp140_110 () (_ BitVec 64))
(declare-fun temp140_111 () (_ BitVec 64))
(declare-fun temp140_112 () (_ BitVec 64))
(declare-fun temp140_113 () (_ BitVec 64))
(declare-fun temp140_114 () (_ BitVec 64))
(declare-fun temp140_115 () (_ BitVec 64))
(declare-fun temp140_116 () (_ BitVec 64))
(declare-fun temp140_117 () (_ BitVec 64))
(declare-fun temp140_118 () (_ BitVec 64))
(declare-fun temp140_119 () (_ BitVec 64))
(declare-fun temp140_120 () (_ BitVec 64))
(declare-fun temp140_121 () (_ BitVec 64))
(declare-fun temp140_122 () (_ BitVec 64))
(declare-fun temp140_123 () (_ BitVec 64))
(declare-fun temp140_124 () (_ BitVec 64))
(declare-fun temp140_126 () (_ BitVec 64))
(declare-fun temp140_127 () (_ BitVec 64))
(declare-fun temp140_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp140_128 () (_ BitVec 64))
(declare-fun temp140_129 () (_ BitVec 64))
(declare-fun temp140_131 () (_ BitVec 64))
(declare-fun temp140_132 () (_ BitVec 64))
(declare-fun temp140_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp140_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp140_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp140_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp140_136 () (_ BitVec 64))
(declare-fun temp140_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp140_139 () (_ BitVec 64))
(declare-fun temp140_140 () (_ BitVec 64))
(declare-fun temp140_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp140_141 () (_ BitVec 64))
(declare-fun temp140_143 () (_ BitVec 64))
(declare-fun temp140_144 () (_ BitVec 64))
(declare-fun temp140_142 () (_ BitVec 64))
(declare-fun temp140_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp140_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp140_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp140_148 () (_ BitVec 64))
(declare-fun temp140_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp140_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp140_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp140_153 () (_ BitVec 64))
(declare-fun temp140_152 () (_ BitVec 64))
(declare-fun temp140_155 () (_ BitVec 64))
(declare-fun temp140_154 () (_ BitVec 64))
(declare-fun temp140_156 () (_ BitVec 64))
(assert (= temp140_1 #x0000000000000001))
(assert (= var465453 temp140_1))
(assert (= temp140_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp140_2)))
(assert (= temp140_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp140_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp140_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp140_4)))
(assert (= temp140_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp140_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp140_6 #x0000000000000000))
(assert (= var465488 temp140_6))
(assert (= temp140_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp140_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp140_8 #x0000000000000001))
(assert (= var465522 temp140_8))
(assert (= temp140_10 #x0000000000000000))
(assert (= temp140_9 temp140_10))
(assert (= temp140_12 #x0000000000000001))
(assert (= temp140_11 temp140_12))
(assert (= temp140_13 #x0000000000000000))
(assert (= var863614 temp140_13))
(assert (= temp140_14 #x0000000000000001))
(assert (= var863635 temp140_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp140_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp140_15)))
(assert (= temp140_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp140_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp140_17 #x0000000000000000))
(assert (= var997373 temp140_17))
(assert (= temp140_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp140_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp140_19 #x0000000000000000))
(assert (= var997418 temp140_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp140_20 #x0000000000000000))
(assert (= temp140_21 temp140_20))
(assert (= temp140_22 (select ARGNAME_padding_NAMEEND_VAL temp140_21)))
(assert (= temp140_23 #x0000000000000001))
(assert (= temp140_24 temp140_23))
(assert (= temp140_25 (select ARGNAME_padding_NAMEEND_VAL temp140_24)))
(assert (= temp140_26 #x0000000000000002))
(assert (= temp140_27 temp140_26))
(assert (= temp140_28 (select ARGNAME_padding_NAMEEND_VAL temp140_27)))
(assert (= temp140_29 #x0000000000000003))
(assert (= temp140_30 temp140_29))
(assert (= temp140_31 (select ARGNAME_padding_NAMEEND_VAL temp140_30)))
(assert (= temp140_32 #x0000000000000004))
(assert (= temp140_33 temp140_32))
(assert (= temp140_34 (select ARGNAME_padding_NAMEEND_VAL temp140_33)))
(assert (= temp140_35 #x0000000000000005))
(assert (= temp140_36 temp140_35))
(assert (= temp140_37 (select ARGNAME_padding_NAMEEND_VAL temp140_36)))
(assert (= temp140_38 #x0000000000000000))
(assert (= temp140_39 #x0000000000000000))
(assert (= temp140_40 temp140_39))
(assert (= temp140_41 (select ARGNAME_padding_NAMEEND_VAL temp140_40)))
(assert (= temp140_42 #x0000000000000000))
(assert (= temp140_43 #x0000000000000001))
(assert (= temp140_44 temp140_43))
(assert (= temp140_45 (select ARGNAME_padding_NAMEEND_VAL temp140_44)))
(assert (= temp140_46 #x0000000000000000))
(assert (= temp140_47 #x0000000000000002))
(assert (= temp140_48 temp140_47))
(assert (= temp140_49 (select ARGNAME_padding_NAMEEND_VAL temp140_48)))
(assert (= temp140_50 #x0000000000000000))
(assert (= temp140_51 #x0000000000000003))
(assert (= temp140_52 temp140_51))
(assert (= temp140_53 (select ARGNAME_padding_NAMEEND_VAL temp140_52)))
(assert (= temp140_54 #x0000000000000000))
(assert (= temp140_55 #x0000000000000004))
(assert (= temp140_56 temp140_55))
(assert (= temp140_57 (select ARGNAME_padding_NAMEEND_VAL temp140_56)))
(assert (= temp140_58 #x0000000000000000))
(assert (= temp140_59 #x0000000000000005))
(assert (= temp140_60 temp140_59))
(assert (= temp140_61 (select ARGNAME_padding_NAMEEND_VAL temp140_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp140_41 temp140_38)
             (bvslt temp140_45 temp140_42)
             (bvslt temp140_49 temp140_46)
             (bvslt temp140_53 temp140_50)
             (bvslt temp140_57 temp140_54)
             (bvslt temp140_61 temp140_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp140_62 #x0000000000000000))
(assert (= var1716002 temp140_62))
(assert (= temp140_63 #x0000000000000000))
(assert (= temp140_64 temp140_63))
(assert (= temp140_65 (select ARGNAME_stride_NAMEEND_VAL temp140_64)))
(assert (= temp140_66 #x0000000000000001))
(assert (= temp140_67 temp140_66))
(assert (= temp140_68 (select ARGNAME_stride_NAMEEND_VAL temp140_67)))
(assert (= temp140_69 #x0000000000000002))
(assert (= temp140_70 temp140_69))
(assert (= temp140_71 (select ARGNAME_stride_NAMEEND_VAL temp140_70)))
(assert (= temp140_72 #x0000000000000003))
(assert (= temp140_73 temp140_72))
(assert (= temp140_74 (select ARGNAME_stride_NAMEEND_VAL temp140_73)))
(assert (= temp140_75 #x0000000000000004))
(assert (= temp140_76 temp140_75))
(assert (= temp140_77 (select ARGNAME_stride_NAMEEND_VAL temp140_76)))
(assert (= temp140_78 #x0000000000000005))
(assert (= temp140_79 temp140_78))
(assert (= temp140_80 (select ARGNAME_stride_NAMEEND_VAL temp140_79)))
(assert (= temp140_81 #x0000000000000000))
(assert (= temp140_82 #x0000000000000000))
(assert (= temp140_83 temp140_82))
(assert (= temp140_84 (select ARGNAME_stride_NAMEEND_VAL temp140_83)))
(assert (= temp140_85 #x0000000000000000))
(assert (= temp140_86 #x0000000000000001))
(assert (= temp140_87 temp140_86))
(assert (= temp140_88 (select ARGNAME_stride_NAMEEND_VAL temp140_87)))
(assert (= temp140_89 #x0000000000000000))
(assert (= temp140_90 #x0000000000000002))
(assert (= temp140_91 temp140_90))
(assert (= temp140_92 (select ARGNAME_stride_NAMEEND_VAL temp140_91)))
(assert (= temp140_93 #x0000000000000000))
(assert (= temp140_94 #x0000000000000003))
(assert (= temp140_95 temp140_94))
(assert (= temp140_96 (select ARGNAME_stride_NAMEEND_VAL temp140_95)))
(assert (= temp140_97 #x0000000000000000))
(assert (= temp140_98 #x0000000000000004))
(assert (= temp140_99 temp140_98))
(assert (= temp140_100 (select ARGNAME_stride_NAMEEND_VAL temp140_99)))
(assert (= temp140_101 #x0000000000000000))
(assert (= temp140_102 #x0000000000000005))
(assert (= temp140_103 temp140_102))
(assert (= temp140_104 (select ARGNAME_stride_NAMEEND_VAL temp140_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp140_84 temp140_81)
             (bvsle temp140_88 temp140_85)
             (bvsle temp140_92 temp140_89)
             (bvsle temp140_96 temp140_93)
             (bvsle temp140_100 temp140_97)
             (bvsle temp140_104 temp140_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp140_105 #x0000000000000000))
(assert (= var1716023 temp140_105))
(assert (= temp140_106 #x0000000000000000))
(assert (= var1704114 temp140_106))
(assert (= temp140_107 #x0000000000000000))
(assert (= temp140_108 temp140_107))
(assert (= temp140_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp140_108)))
(assert (= temp140_110 #x0000000000000001))
(assert (= temp140_111 temp140_110))
(assert (= temp140_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp140_111)))
(assert (= temp140_113 #x0000000000000002))
(assert (= temp140_114 temp140_113))
(assert (= temp140_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp140_114)))
(assert (= temp140_116 #x0000000000000003))
(assert (= temp140_117 temp140_116))
(assert (= temp140_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp140_117)))
(assert (= temp140_119 #x0000000000000004))
(assert (= temp140_120 temp140_119))
(assert (= temp140_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp140_120)))
(assert (= temp140_122 #x0000000000000005))
(assert (= temp140_123 temp140_122))
(assert (= temp140_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp140_123)))
(assert (= temp140_126 var1704114))
(assert (= temp140_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp140_126)))
(assert (= temp140_125 temp140_127))
(assert (= var1716068
   (ite (bvslt temp140_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp140_128 #x0000000000000000))
(assert (= var1716068 temp140_128))
(assert (= temp140_129 #x0000000000000000))
(assert (= var1704114 temp140_129))
(assert (= temp140_131 var1704114))
(assert (= temp140_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp140_131)))
(assert (= temp140_130 temp140_132))
(assert (= var1716090 (bvsmod temp140_130 ARGNAME_groups_NAMEEND)))
(assert (= temp140_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp140_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp140_134 #x0000000000000001))
(assert (= var1716091 temp140_134))
(assert (= var1716110 var1716000))
(assert (= temp140_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp140_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp140_136 #x0000000000000001))
(assert (= var1716111 temp140_136))
(assert (= temp140_137 #x0000000000000001))
(assert (= var1705002 temp140_137))
(assert (= temp140_139 var1705002))
(assert (= temp140_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp140_139)))
(assert (= temp140_138 temp140_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp140_138)))
(assert (= temp140_141 #x0000000000000000))
(assert (= var1704114 temp140_141))
(assert (= temp140_143 var1704114))
(assert (= temp140_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp140_143)))
(assert (= temp140_142 temp140_144))
(assert (= temp140_145 #x0000000000000002))
(assert (= var1979241 temp140_145))
(assert (= temp140_146 #x0000000000000001))
(assert (= var1716281 temp140_146))
(assert (= temp140_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp140_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp140_148 #x0000000000000001))
(assert (= var997490 temp140_148))
(assert (= temp140_149 #x0000000000000001))
(assert (= var997620 temp140_149))
(assert (= var3486185 var997620))
(assert (= temp140_150 #x0000000000000000))
(assert (= var3686207 temp140_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp140_151 #x0000000000000002))
(assert (= var3815043 temp140_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp140_153 #xffffffffffffffff))
(assert (= temp140_152 temp140_153))
(assert (= temp140_155 #xffffffffffffffff))
(assert (= temp140_154 temp140_155))
(assert (= temp140_156 #x0000000000000001))
(assert (= var997490 temp140_156))
(model-add temp140_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp140_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp140_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp140_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp140_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp140_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)





