(declare-fun temp1306_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp1306_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp1306_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp1306_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp1306_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp1306_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp1306_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp1306_8 () (_ BitVec 64))
(declare-fun temp1306_10 () (_ BitVec 64))
(declare-fun temp1306_9 () (_ BitVec 64))
(declare-fun temp1306_12 () (_ BitVec 64))
(declare-fun temp1306_11 () (_ BitVec 64))
(declare-fun temp1306_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp1306_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp1306_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp1306_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp1306_17 () (_ BitVec 64))
(declare-fun temp1306_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp1306_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp1306_20 () (_ BitVec 64))
(declare-fun temp1306_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1306_22 () (_ BitVec 64))
(declare-fun temp1306_23 () (_ BitVec 64))
(declare-fun temp1306_24 () (_ BitVec 64))
(declare-fun temp1306_25 () (_ BitVec 64))
(declare-fun temp1306_26 () (_ BitVec 64))
(declare-fun temp1306_27 () (_ BitVec 64))
(declare-fun temp1306_28 () (_ BitVec 64))
(declare-fun temp1306_29 () (_ BitVec 64))
(declare-fun temp1306_30 () (_ BitVec 64))
(declare-fun temp1306_31 () (_ BitVec 64))
(declare-fun temp1306_32 () (_ BitVec 64))
(declare-fun temp1306_33 () (_ BitVec 64))
(declare-fun temp1306_34 () (_ BitVec 64))
(declare-fun temp1306_35 () (_ BitVec 64))
(declare-fun temp1306_36 () (_ BitVec 64))
(declare-fun temp1306_37 () (_ BitVec 64))
(declare-fun temp1306_38 () (_ BitVec 64))
(declare-fun temp1306_39 () (_ BitVec 64))
(declare-fun temp1306_40 () (_ BitVec 64))
(declare-fun temp1306_41 () (_ BitVec 64))
(declare-fun temp1306_42 () (_ BitVec 64))
(declare-fun temp1306_43 () (_ BitVec 64))
(declare-fun temp1306_44 () (_ BitVec 64))
(declare-fun temp1306_45 () (_ BitVec 64))
(declare-fun temp1306_46 () (_ BitVec 64))
(declare-fun temp1306_47 () (_ BitVec 64))
(declare-fun temp1306_48 () (_ BitVec 64))
(declare-fun temp1306_49 () (_ BitVec 64))
(declare-fun temp1306_50 () (_ BitVec 64))
(declare-fun temp1306_51 () (_ BitVec 64))
(declare-fun temp1306_52 () (_ BitVec 64))
(declare-fun temp1306_53 () (_ BitVec 64))
(declare-fun temp1306_54 () (_ BitVec 64))
(declare-fun temp1306_55 () (_ BitVec 64))
(declare-fun temp1306_56 () (_ BitVec 64))
(declare-fun temp1306_57 () (_ BitVec 64))
(declare-fun temp1306_58 () (_ BitVec 64))
(declare-fun temp1306_59 () (_ BitVec 64))
(declare-fun temp1306_60 () (_ BitVec 64))
(declare-fun temp1306_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp1306_62 () (_ BitVec 64))
(declare-fun temp1306_63 () (_ BitVec 64))
(declare-fun temp1306_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1306_65 () (_ BitVec 64))
(declare-fun temp1306_66 () (_ BitVec 64))
(declare-fun temp1306_67 () (_ BitVec 64))
(declare-fun temp1306_68 () (_ BitVec 64))
(declare-fun temp1306_69 () (_ BitVec 64))
(declare-fun temp1306_70 () (_ BitVec 64))
(declare-fun temp1306_71 () (_ BitVec 64))
(declare-fun temp1306_72 () (_ BitVec 64))
(declare-fun temp1306_73 () (_ BitVec 64))
(declare-fun temp1306_74 () (_ BitVec 64))
(declare-fun temp1306_75 () (_ BitVec 64))
(declare-fun temp1306_76 () (_ BitVec 64))
(declare-fun temp1306_77 () (_ BitVec 64))
(declare-fun temp1306_78 () (_ BitVec 64))
(declare-fun temp1306_79 () (_ BitVec 64))
(declare-fun temp1306_80 () (_ BitVec 64))
(declare-fun temp1306_81 () (_ BitVec 64))
(declare-fun temp1306_82 () (_ BitVec 64))
(declare-fun temp1306_83 () (_ BitVec 64))
(declare-fun temp1306_84 () (_ BitVec 64))
(declare-fun temp1306_85 () (_ BitVec 64))
(declare-fun temp1306_86 () (_ BitVec 64))
(declare-fun temp1306_87 () (_ BitVec 64))
(declare-fun temp1306_88 () (_ BitVec 64))
(declare-fun temp1306_89 () (_ BitVec 64))
(declare-fun temp1306_90 () (_ BitVec 64))
(declare-fun temp1306_91 () (_ BitVec 64))
(declare-fun temp1306_92 () (_ BitVec 64))
(declare-fun temp1306_93 () (_ BitVec 64))
(declare-fun temp1306_94 () (_ BitVec 64))
(declare-fun temp1306_95 () (_ BitVec 64))
(declare-fun temp1306_96 () (_ BitVec 64))
(declare-fun temp1306_97 () (_ BitVec 64))
(declare-fun temp1306_98 () (_ BitVec 64))
(declare-fun temp1306_99 () (_ BitVec 64))
(declare-fun temp1306_100 () (_ BitVec 64))
(declare-fun temp1306_101 () (_ BitVec 64))
(declare-fun temp1306_102 () (_ BitVec 64))
(declare-fun temp1306_103 () (_ BitVec 64))
(declare-fun temp1306_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp1306_105 () (_ BitVec 64))
(declare-fun temp1306_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp1306_107 () (_ BitVec 64))
(declare-fun temp1306_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1306_109 () (_ BitVec 64))
(declare-fun temp1306_110 () (_ BitVec 64))
(declare-fun temp1306_111 () (_ BitVec 64))
(declare-fun temp1306_112 () (_ BitVec 64))
(declare-fun temp1306_113 () (_ BitVec 64))
(declare-fun temp1306_114 () (_ BitVec 64))
(declare-fun temp1306_115 () (_ BitVec 64))
(declare-fun temp1306_116 () (_ BitVec 64))
(declare-fun temp1306_117 () (_ BitVec 64))
(declare-fun temp1306_118 () (_ BitVec 64))
(declare-fun temp1306_119 () (_ BitVec 64))
(declare-fun temp1306_120 () (_ BitVec 64))
(declare-fun temp1306_121 () (_ BitVec 64))
(declare-fun temp1306_122 () (_ BitVec 64))
(declare-fun temp1306_123 () (_ BitVec 64))
(declare-fun temp1306_124 () (_ BitVec 64))
(declare-fun temp1306_126 () (_ BitVec 64))
(declare-fun temp1306_127 () (_ BitVec 64))
(declare-fun temp1306_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp1306_128 () (_ BitVec 64))
(declare-fun temp1306_129 () (_ BitVec 64))
(declare-fun temp1306_131 () (_ BitVec 64))
(declare-fun temp1306_132 () (_ BitVec 64))
(declare-fun temp1306_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp1306_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp1306_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp1306_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp1306_136 () (_ BitVec 64))
(declare-fun temp1306_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp1306_139 () (_ BitVec 64))
(declare-fun temp1306_140 () (_ BitVec 64))
(declare-fun temp1306_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp1306_141 () (_ BitVec 64))
(declare-fun temp1306_143 () (_ BitVec 64))
(declare-fun temp1306_144 () (_ BitVec 64))
(declare-fun temp1306_142 () (_ BitVec 64))
(declare-fun temp1306_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp1306_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp1306_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp1306_148 () (_ BitVec 64))
(declare-fun temp1306_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp1306_150 () (_ BitVec 64))
(declare-fun var3880579 () (_ BitVec 64))
(declare-fun var3880581 () (_ BitVec 64))
(declare-fun var3946124 () (_ BitVec 64))
(declare-fun var3946125 () (_ BitVec 64))
(declare-fun temp1306_152 () (_ BitVec 64))
(declare-fun temp1306_151 () (_ BitVec 64))
(declare-fun temp1306_153 () (_ BitVec 64))
(assert (= temp1306_1 #x0000000000000001))
(assert (= var465453 temp1306_1))
(assert (= temp1306_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp1306_2)))
(assert (= temp1306_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp1306_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp1306_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp1306_4)))
(assert (= temp1306_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp1306_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp1306_6 #x0000000000000000))
(assert (= var465488 temp1306_6))
(assert (= temp1306_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp1306_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp1306_8 #x0000000000000001))
(assert (= var465522 temp1306_8))
(assert (= temp1306_10 #x0000000000000000))
(assert (= temp1306_9 temp1306_10))
(assert (= temp1306_12 #x0000000000000001))
(assert (= temp1306_11 temp1306_12))
(assert (= temp1306_13 #x0000000000000000))
(assert (= var863614 temp1306_13))
(assert (= temp1306_14 #x0000000000000001))
(assert (= var863635 temp1306_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp1306_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp1306_15)))
(assert (= temp1306_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1306_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1306_17 #x0000000000000000))
(assert (= var997373 temp1306_17))
(assert (= temp1306_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp1306_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1306_19 #x0000000000000000))
(assert (= var997418 temp1306_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp1306_20 #x0000000000000000))
(assert (= temp1306_21 temp1306_20))
(assert (= temp1306_22 (select ARGNAME_padding_NAMEEND_VAL temp1306_21)))
(assert (= temp1306_23 #x0000000000000001))
(assert (= temp1306_24 temp1306_23))
(assert (= temp1306_25 (select ARGNAME_padding_NAMEEND_VAL temp1306_24)))
(assert (= temp1306_26 #x0000000000000002))
(assert (= temp1306_27 temp1306_26))
(assert (= temp1306_28 (select ARGNAME_padding_NAMEEND_VAL temp1306_27)))
(assert (= temp1306_29 #x0000000000000003))
(assert (= temp1306_30 temp1306_29))
(assert (= temp1306_31 (select ARGNAME_padding_NAMEEND_VAL temp1306_30)))
(assert (= temp1306_32 #x0000000000000004))
(assert (= temp1306_33 temp1306_32))
(assert (= temp1306_34 (select ARGNAME_padding_NAMEEND_VAL temp1306_33)))
(assert (= temp1306_35 #x0000000000000005))
(assert (= temp1306_36 temp1306_35))
(assert (= temp1306_37 (select ARGNAME_padding_NAMEEND_VAL temp1306_36)))
(assert (= temp1306_38 #x0000000000000000))
(assert (= temp1306_39 #x0000000000000000))
(assert (= temp1306_40 temp1306_39))
(assert (= temp1306_41 (select ARGNAME_padding_NAMEEND_VAL temp1306_40)))
(assert (= temp1306_42 #x0000000000000000))
(assert (= temp1306_43 #x0000000000000001))
(assert (= temp1306_44 temp1306_43))
(assert (= temp1306_45 (select ARGNAME_padding_NAMEEND_VAL temp1306_44)))
(assert (= temp1306_46 #x0000000000000000))
(assert (= temp1306_47 #x0000000000000002))
(assert (= temp1306_48 temp1306_47))
(assert (= temp1306_49 (select ARGNAME_padding_NAMEEND_VAL temp1306_48)))
(assert (= temp1306_50 #x0000000000000000))
(assert (= temp1306_51 #x0000000000000003))
(assert (= temp1306_52 temp1306_51))
(assert (= temp1306_53 (select ARGNAME_padding_NAMEEND_VAL temp1306_52)))
(assert (= temp1306_54 #x0000000000000000))
(assert (= temp1306_55 #x0000000000000004))
(assert (= temp1306_56 temp1306_55))
(assert (= temp1306_57 (select ARGNAME_padding_NAMEEND_VAL temp1306_56)))
(assert (= temp1306_58 #x0000000000000000))
(assert (= temp1306_59 #x0000000000000005))
(assert (= temp1306_60 temp1306_59))
(assert (= temp1306_61 (select ARGNAME_padding_NAMEEND_VAL temp1306_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp1306_41 temp1306_38)
             (bvslt temp1306_45 temp1306_42)
             (bvslt temp1306_49 temp1306_46)
             (bvslt temp1306_53 temp1306_50)
             (bvslt temp1306_57 temp1306_54)
             (bvslt temp1306_61 temp1306_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1306_62 #x0000000000000000))
(assert (= var1716002 temp1306_62))
(assert (= temp1306_63 #x0000000000000000))
(assert (= temp1306_64 temp1306_63))
(assert (= temp1306_65 (select ARGNAME_stride_NAMEEND_VAL temp1306_64)))
(assert (= temp1306_66 #x0000000000000001))
(assert (= temp1306_67 temp1306_66))
(assert (= temp1306_68 (select ARGNAME_stride_NAMEEND_VAL temp1306_67)))
(assert (= temp1306_69 #x0000000000000002))
(assert (= temp1306_70 temp1306_69))
(assert (= temp1306_71 (select ARGNAME_stride_NAMEEND_VAL temp1306_70)))
(assert (= temp1306_72 #x0000000000000003))
(assert (= temp1306_73 temp1306_72))
(assert (= temp1306_74 (select ARGNAME_stride_NAMEEND_VAL temp1306_73)))
(assert (= temp1306_75 #x0000000000000004))
(assert (= temp1306_76 temp1306_75))
(assert (= temp1306_77 (select ARGNAME_stride_NAMEEND_VAL temp1306_76)))
(assert (= temp1306_78 #x0000000000000005))
(assert (= temp1306_79 temp1306_78))
(assert (= temp1306_80 (select ARGNAME_stride_NAMEEND_VAL temp1306_79)))
(assert (= temp1306_81 #x0000000000000000))
(assert (= temp1306_82 #x0000000000000000))
(assert (= temp1306_83 temp1306_82))
(assert (= temp1306_84 (select ARGNAME_stride_NAMEEND_VAL temp1306_83)))
(assert (= temp1306_85 #x0000000000000000))
(assert (= temp1306_86 #x0000000000000001))
(assert (= temp1306_87 temp1306_86))
(assert (= temp1306_88 (select ARGNAME_stride_NAMEEND_VAL temp1306_87)))
(assert (= temp1306_89 #x0000000000000000))
(assert (= temp1306_90 #x0000000000000002))
(assert (= temp1306_91 temp1306_90))
(assert (= temp1306_92 (select ARGNAME_stride_NAMEEND_VAL temp1306_91)))
(assert (= temp1306_93 #x0000000000000000))
(assert (= temp1306_94 #x0000000000000003))
(assert (= temp1306_95 temp1306_94))
(assert (= temp1306_96 (select ARGNAME_stride_NAMEEND_VAL temp1306_95)))
(assert (= temp1306_97 #x0000000000000000))
(assert (= temp1306_98 #x0000000000000004))
(assert (= temp1306_99 temp1306_98))
(assert (= temp1306_100 (select ARGNAME_stride_NAMEEND_VAL temp1306_99)))
(assert (= temp1306_101 #x0000000000000000))
(assert (= temp1306_102 #x0000000000000005))
(assert (= temp1306_103 temp1306_102))
(assert (= temp1306_104 (select ARGNAME_stride_NAMEEND_VAL temp1306_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp1306_84 temp1306_81)
             (bvsle temp1306_88 temp1306_85)
             (bvsle temp1306_92 temp1306_89)
             (bvsle temp1306_96 temp1306_93)
             (bvsle temp1306_100 temp1306_97)
             (bvsle temp1306_104 temp1306_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1306_105 #x0000000000000000))
(assert (= var1716023 temp1306_105))
(assert (= temp1306_106 #x0000000000000000))
(assert (= var1704114 temp1306_106))
(assert (= temp1306_107 #x0000000000000000))
(assert (= temp1306_108 temp1306_107))
(assert (= temp1306_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1306_108)))
(assert (= temp1306_110 #x0000000000000001))
(assert (= temp1306_111 temp1306_110))
(assert (= temp1306_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1306_111)))
(assert (= temp1306_113 #x0000000000000002))
(assert (= temp1306_114 temp1306_113))
(assert (= temp1306_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1306_114)))
(assert (= temp1306_116 #x0000000000000003))
(assert (= temp1306_117 temp1306_116))
(assert (= temp1306_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1306_117)))
(assert (= temp1306_119 #x0000000000000004))
(assert (= temp1306_120 temp1306_119))
(assert (= temp1306_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1306_120)))
(assert (= temp1306_122 #x0000000000000005))
(assert (= temp1306_123 temp1306_122))
(assert (= temp1306_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1306_123)))
(assert (= temp1306_126 var1704114))
(assert (= temp1306_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1306_126)))
(assert (= temp1306_125 temp1306_127))
(assert (= var1716068
   (ite (bvslt temp1306_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1306_128 #x0000000000000000))
(assert (= var1716068 temp1306_128))
(assert (= temp1306_129 #x0000000000000000))
(assert (= var1704114 temp1306_129))
(assert (= temp1306_131 var1704114))
(assert (= temp1306_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1306_131)))
(assert (= temp1306_130 temp1306_132))
(assert (= var1716090 (bvsmod temp1306_130 ARGNAME_groups_NAMEEND)))
(assert (= temp1306_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp1306_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp1306_134 #x0000000000000001))
(assert (= var1716091 temp1306_134))
(assert (= var1716110 var1716000))
(assert (= temp1306_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp1306_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp1306_136 #x0000000000000001))
(assert (= var1716111 temp1306_136))
(assert (= temp1306_137 #x0000000000000001))
(assert (= var1705002 temp1306_137))
(assert (= temp1306_139 var1705002))
(assert (= temp1306_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1306_139)))
(assert (= temp1306_138 temp1306_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp1306_138)))
(assert (= temp1306_141 #x0000000000000000))
(assert (= var1704114 temp1306_141))
(assert (= temp1306_143 var1704114))
(assert (= temp1306_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1306_143)))
(assert (= temp1306_142 temp1306_144))
(assert (= temp1306_145 #x0000000000000002))
(assert (= var1979241 temp1306_145))
(assert (= temp1306_146 #x0000000000000001))
(assert (= var1716281 temp1306_146))
(assert (= temp1306_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1306_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1306_148 #x0000000000000001))
(assert (= var997490 temp1306_148))
(assert (= temp1306_149 #x0000000000000001))
(assert (= var997620 temp1306_149))
(assert (= var3486185 var997620))
(assert (= temp1306_150 #x0000000000000002))
(assert (= var3880579 temp1306_150))
(assert (= var3880581 (bvsub ARGNAME_weight_NAMEEND_DIM var3880579)))
(assert (= var3946124 var3880579))
(assert (= var3946125 var3880581))
(assert (= temp1306_152 #xffffffffffffffff))
(assert (= temp1306_151 temp1306_152))
(assert (= temp1306_153 #x0000000000000001))
(assert (= var997490 temp1306_153))
(model-add temp1306_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp1306_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp1306_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp1306_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp1306_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp1306_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






