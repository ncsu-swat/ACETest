(declare-fun temp605_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp605_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp605_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp605_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp605_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp605_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp605_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp605_8 () (_ BitVec 64))
(declare-fun temp605_10 () (_ BitVec 64))
(declare-fun temp605_9 () (_ BitVec 64))
(declare-fun temp605_12 () (_ BitVec 64))
(declare-fun temp605_11 () (_ BitVec 64))
(declare-fun temp605_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp605_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp605_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp605_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp605_17 () (_ BitVec 64))
(declare-fun temp605_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp605_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp605_20 () (_ BitVec 64))
(declare-fun temp605_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp605_22 () (_ BitVec 64))
(declare-fun temp605_23 () (_ BitVec 64))
(declare-fun temp605_24 () (_ BitVec 64))
(declare-fun temp605_25 () (_ BitVec 64))
(declare-fun temp605_26 () (_ BitVec 64))
(declare-fun temp605_27 () (_ BitVec 64))
(declare-fun temp605_28 () (_ BitVec 64))
(declare-fun temp605_29 () (_ BitVec 64))
(declare-fun temp605_30 () (_ BitVec 64))
(declare-fun temp605_31 () (_ BitVec 64))
(declare-fun temp605_32 () (_ BitVec 64))
(declare-fun temp605_33 () (_ BitVec 64))
(declare-fun temp605_34 () (_ BitVec 64))
(declare-fun temp605_35 () (_ BitVec 64))
(declare-fun temp605_36 () (_ BitVec 64))
(declare-fun temp605_37 () (_ BitVec 64))
(declare-fun temp605_38 () (_ BitVec 64))
(declare-fun temp605_39 () (_ BitVec 64))
(declare-fun temp605_40 () (_ BitVec 64))
(declare-fun temp605_41 () (_ BitVec 64))
(declare-fun temp605_42 () (_ BitVec 64))
(declare-fun temp605_43 () (_ BitVec 64))
(declare-fun temp605_44 () (_ BitVec 64))
(declare-fun temp605_45 () (_ BitVec 64))
(declare-fun temp605_46 () (_ BitVec 64))
(declare-fun temp605_47 () (_ BitVec 64))
(declare-fun temp605_48 () (_ BitVec 64))
(declare-fun temp605_49 () (_ BitVec 64))
(declare-fun temp605_50 () (_ BitVec 64))
(declare-fun temp605_51 () (_ BitVec 64))
(declare-fun temp605_52 () (_ BitVec 64))
(declare-fun temp605_53 () (_ BitVec 64))
(declare-fun temp605_54 () (_ BitVec 64))
(declare-fun temp605_55 () (_ BitVec 64))
(declare-fun temp605_56 () (_ BitVec 64))
(declare-fun temp605_57 () (_ BitVec 64))
(declare-fun temp605_58 () (_ BitVec 64))
(declare-fun temp605_59 () (_ BitVec 64))
(declare-fun temp605_60 () (_ BitVec 64))
(declare-fun temp605_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp605_62 () (_ BitVec 64))
(declare-fun temp605_63 () (_ BitVec 64))
(declare-fun temp605_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp605_65 () (_ BitVec 64))
(declare-fun temp605_66 () (_ BitVec 64))
(declare-fun temp605_67 () (_ BitVec 64))
(declare-fun temp605_68 () (_ BitVec 64))
(declare-fun temp605_69 () (_ BitVec 64))
(declare-fun temp605_70 () (_ BitVec 64))
(declare-fun temp605_71 () (_ BitVec 64))
(declare-fun temp605_72 () (_ BitVec 64))
(declare-fun temp605_73 () (_ BitVec 64))
(declare-fun temp605_74 () (_ BitVec 64))
(declare-fun temp605_75 () (_ BitVec 64))
(declare-fun temp605_76 () (_ BitVec 64))
(declare-fun temp605_77 () (_ BitVec 64))
(declare-fun temp605_78 () (_ BitVec 64))
(declare-fun temp605_79 () (_ BitVec 64))
(declare-fun temp605_80 () (_ BitVec 64))
(declare-fun temp605_81 () (_ BitVec 64))
(declare-fun temp605_82 () (_ BitVec 64))
(declare-fun temp605_83 () (_ BitVec 64))
(declare-fun temp605_84 () (_ BitVec 64))
(declare-fun temp605_85 () (_ BitVec 64))
(declare-fun temp605_86 () (_ BitVec 64))
(declare-fun temp605_87 () (_ BitVec 64))
(declare-fun temp605_88 () (_ BitVec 64))
(declare-fun temp605_89 () (_ BitVec 64))
(declare-fun temp605_90 () (_ BitVec 64))
(declare-fun temp605_91 () (_ BitVec 64))
(declare-fun temp605_92 () (_ BitVec 64))
(declare-fun temp605_93 () (_ BitVec 64))
(declare-fun temp605_94 () (_ BitVec 64))
(declare-fun temp605_95 () (_ BitVec 64))
(declare-fun temp605_96 () (_ BitVec 64))
(declare-fun temp605_97 () (_ BitVec 64))
(declare-fun temp605_98 () (_ BitVec 64))
(declare-fun temp605_99 () (_ BitVec 64))
(declare-fun temp605_100 () (_ BitVec 64))
(declare-fun temp605_101 () (_ BitVec 64))
(declare-fun temp605_102 () (_ BitVec 64))
(declare-fun temp605_103 () (_ BitVec 64))
(declare-fun temp605_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp605_105 () (_ BitVec 64))
(declare-fun temp605_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp605_107 () (_ BitVec 64))
(declare-fun temp605_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp605_109 () (_ BitVec 64))
(declare-fun temp605_110 () (_ BitVec 64))
(declare-fun temp605_111 () (_ BitVec 64))
(declare-fun temp605_112 () (_ BitVec 64))
(declare-fun temp605_113 () (_ BitVec 64))
(declare-fun temp605_114 () (_ BitVec 64))
(declare-fun temp605_115 () (_ BitVec 64))
(declare-fun temp605_116 () (_ BitVec 64))
(declare-fun temp605_117 () (_ BitVec 64))
(declare-fun temp605_118 () (_ BitVec 64))
(declare-fun temp605_119 () (_ BitVec 64))
(declare-fun temp605_120 () (_ BitVec 64))
(declare-fun temp605_121 () (_ BitVec 64))
(declare-fun temp605_122 () (_ BitVec 64))
(declare-fun temp605_123 () (_ BitVec 64))
(declare-fun temp605_124 () (_ BitVec 64))
(declare-fun temp605_126 () (_ BitVec 64))
(declare-fun temp605_127 () (_ BitVec 64))
(declare-fun temp605_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp605_128 () (_ BitVec 64))
(declare-fun temp605_129 () (_ BitVec 64))
(declare-fun temp605_131 () (_ BitVec 64))
(declare-fun temp605_132 () (_ BitVec 64))
(declare-fun temp605_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp605_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp605_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp605_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp605_136 () (_ BitVec 64))
(declare-fun temp605_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp605_139 () (_ BitVec 64))
(declare-fun temp605_140 () (_ BitVec 64))
(declare-fun temp605_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp605_141 () (_ BitVec 64))
(declare-fun temp605_143 () (_ BitVec 64))
(declare-fun temp605_144 () (_ BitVec 64))
(declare-fun temp605_142 () (_ BitVec 64))
(declare-fun temp605_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp605_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp605_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp605_148 () (_ BitVec 64))
(declare-fun temp605_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp605_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp605_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var4272528 () (_ BitVec 64))
(declare-fun var997820 () (_ BitVec 64))
(declare-fun temp605_152 () (_ BitVec 64))
(declare-fun var997821 () (_ BitVec 64))
(declare-fun var4996941 () (_ BitVec 64))
(declare-fun temp605_153 () (_ BitVec 64))
(assert (= temp605_1 #x0000000000000001))
(assert (= var465453 temp605_1))
(assert (= temp605_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp605_2)))
(assert (= temp605_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp605_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp605_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp605_4)))
(assert (= temp605_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp605_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp605_6 #x0000000000000000))
(assert (= var465488 temp605_6))
(assert (= temp605_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp605_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp605_8 #x0000000000000001))
(assert (= var465522 temp605_8))
(assert (= temp605_10 #x0000000000000000))
(assert (= temp605_9 temp605_10))
(assert (= temp605_12 #x0000000000000001))
(assert (= temp605_11 temp605_12))
(assert (= temp605_13 #x0000000000000000))
(assert (= var863614 temp605_13))
(assert (= temp605_14 #x0000000000000001))
(assert (= var863635 temp605_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp605_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp605_15)))
(assert (= temp605_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp605_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_17 #x0000000000000000))
(assert (= var997373 temp605_17))
(assert (= temp605_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp605_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_19 #x0000000000000000))
(assert (= var997418 temp605_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp605_20 #x0000000000000000))
(assert (= temp605_21 temp605_20))
(assert (= temp605_22 (select ARGNAME_padding_NAMEEND_VAL temp605_21)))
(assert (= temp605_23 #x0000000000000001))
(assert (= temp605_24 temp605_23))
(assert (= temp605_25 (select ARGNAME_padding_NAMEEND_VAL temp605_24)))
(assert (= temp605_26 #x0000000000000002))
(assert (= temp605_27 temp605_26))
(assert (= temp605_28 (select ARGNAME_padding_NAMEEND_VAL temp605_27)))
(assert (= temp605_29 #x0000000000000003))
(assert (= temp605_30 temp605_29))
(assert (= temp605_31 (select ARGNAME_padding_NAMEEND_VAL temp605_30)))
(assert (= temp605_32 #x0000000000000004))
(assert (= temp605_33 temp605_32))
(assert (= temp605_34 (select ARGNAME_padding_NAMEEND_VAL temp605_33)))
(assert (= temp605_35 #x0000000000000005))
(assert (= temp605_36 temp605_35))
(assert (= temp605_37 (select ARGNAME_padding_NAMEEND_VAL temp605_36)))
(assert (= temp605_38 #x0000000000000000))
(assert (= temp605_39 #x0000000000000000))
(assert (= temp605_40 temp605_39))
(assert (= temp605_41 (select ARGNAME_padding_NAMEEND_VAL temp605_40)))
(assert (= temp605_42 #x0000000000000000))
(assert (= temp605_43 #x0000000000000001))
(assert (= temp605_44 temp605_43))
(assert (= temp605_45 (select ARGNAME_padding_NAMEEND_VAL temp605_44)))
(assert (= temp605_46 #x0000000000000000))
(assert (= temp605_47 #x0000000000000002))
(assert (= temp605_48 temp605_47))
(assert (= temp605_49 (select ARGNAME_padding_NAMEEND_VAL temp605_48)))
(assert (= temp605_50 #x0000000000000000))
(assert (= temp605_51 #x0000000000000003))
(assert (= temp605_52 temp605_51))
(assert (= temp605_53 (select ARGNAME_padding_NAMEEND_VAL temp605_52)))
(assert (= temp605_54 #x0000000000000000))
(assert (= temp605_55 #x0000000000000004))
(assert (= temp605_56 temp605_55))
(assert (= temp605_57 (select ARGNAME_padding_NAMEEND_VAL temp605_56)))
(assert (= temp605_58 #x0000000000000000))
(assert (= temp605_59 #x0000000000000005))
(assert (= temp605_60 temp605_59))
(assert (= temp605_61 (select ARGNAME_padding_NAMEEND_VAL temp605_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp605_41 temp605_38)
             (bvslt temp605_45 temp605_42)
             (bvslt temp605_49 temp605_46)
             (bvslt temp605_53 temp605_50)
             (bvslt temp605_57 temp605_54)
             (bvslt temp605_61 temp605_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_62 #x0000000000000000))
(assert (= var1716002 temp605_62))
(assert (= temp605_63 #x0000000000000000))
(assert (= temp605_64 temp605_63))
(assert (= temp605_65 (select ARGNAME_stride_NAMEEND_VAL temp605_64)))
(assert (= temp605_66 #x0000000000000001))
(assert (= temp605_67 temp605_66))
(assert (= temp605_68 (select ARGNAME_stride_NAMEEND_VAL temp605_67)))
(assert (= temp605_69 #x0000000000000002))
(assert (= temp605_70 temp605_69))
(assert (= temp605_71 (select ARGNAME_stride_NAMEEND_VAL temp605_70)))
(assert (= temp605_72 #x0000000000000003))
(assert (= temp605_73 temp605_72))
(assert (= temp605_74 (select ARGNAME_stride_NAMEEND_VAL temp605_73)))
(assert (= temp605_75 #x0000000000000004))
(assert (= temp605_76 temp605_75))
(assert (= temp605_77 (select ARGNAME_stride_NAMEEND_VAL temp605_76)))
(assert (= temp605_78 #x0000000000000005))
(assert (= temp605_79 temp605_78))
(assert (= temp605_80 (select ARGNAME_stride_NAMEEND_VAL temp605_79)))
(assert (= temp605_81 #x0000000000000000))
(assert (= temp605_82 #x0000000000000000))
(assert (= temp605_83 temp605_82))
(assert (= temp605_84 (select ARGNAME_stride_NAMEEND_VAL temp605_83)))
(assert (= temp605_85 #x0000000000000000))
(assert (= temp605_86 #x0000000000000001))
(assert (= temp605_87 temp605_86))
(assert (= temp605_88 (select ARGNAME_stride_NAMEEND_VAL temp605_87)))
(assert (= temp605_89 #x0000000000000000))
(assert (= temp605_90 #x0000000000000002))
(assert (= temp605_91 temp605_90))
(assert (= temp605_92 (select ARGNAME_stride_NAMEEND_VAL temp605_91)))
(assert (= temp605_93 #x0000000000000000))
(assert (= temp605_94 #x0000000000000003))
(assert (= temp605_95 temp605_94))
(assert (= temp605_96 (select ARGNAME_stride_NAMEEND_VAL temp605_95)))
(assert (= temp605_97 #x0000000000000000))
(assert (= temp605_98 #x0000000000000004))
(assert (= temp605_99 temp605_98))
(assert (= temp605_100 (select ARGNAME_stride_NAMEEND_VAL temp605_99)))
(assert (= temp605_101 #x0000000000000000))
(assert (= temp605_102 #x0000000000000005))
(assert (= temp605_103 temp605_102))
(assert (= temp605_104 (select ARGNAME_stride_NAMEEND_VAL temp605_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp605_84 temp605_81)
             (bvsle temp605_88 temp605_85)
             (bvsle temp605_92 temp605_89)
             (bvsle temp605_96 temp605_93)
             (bvsle temp605_100 temp605_97)
             (bvsle temp605_104 temp605_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_105 #x0000000000000000))
(assert (= var1716023 temp605_105))
(assert (= temp605_106 #x0000000000000000))
(assert (= var1704114 temp605_106))
(assert (= temp605_107 #x0000000000000000))
(assert (= temp605_108 temp605_107))
(assert (= temp605_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_108)))
(assert (= temp605_110 #x0000000000000001))
(assert (= temp605_111 temp605_110))
(assert (= temp605_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_111)))
(assert (= temp605_113 #x0000000000000002))
(assert (= temp605_114 temp605_113))
(assert (= temp605_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_114)))
(assert (= temp605_116 #x0000000000000003))
(assert (= temp605_117 temp605_116))
(assert (= temp605_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_117)))
(assert (= temp605_119 #x0000000000000004))
(assert (= temp605_120 temp605_119))
(assert (= temp605_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_120)))
(assert (= temp605_122 #x0000000000000005))
(assert (= temp605_123 temp605_122))
(assert (= temp605_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_123)))
(assert (= temp605_126 var1704114))
(assert (= temp605_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_126)))
(assert (= temp605_125 temp605_127))
(assert (= var1716068
   (ite (bvslt temp605_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_128 #x0000000000000000))
(assert (= var1716068 temp605_128))
(assert (= temp605_129 #x0000000000000000))
(assert (= var1704114 temp605_129))
(assert (= temp605_131 var1704114))
(assert (= temp605_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_131)))
(assert (= temp605_130 temp605_132))
(assert (= var1716090 (bvsmod temp605_130 ARGNAME_groups_NAMEEND)))
(assert (= temp605_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp605_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp605_134 #x0000000000000001))
(assert (= var1716091 temp605_134))
(assert (= var1716110 var1716000))
(assert (= temp605_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp605_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp605_136 #x0000000000000001))
(assert (= var1716111 temp605_136))
(assert (= temp605_137 #x0000000000000001))
(assert (= var1705002 temp605_137))
(assert (= temp605_139 var1705002))
(assert (= temp605_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_139)))
(assert (= temp605_138 temp605_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp605_138)))
(assert (= temp605_141 #x0000000000000000))
(assert (= var1704114 temp605_141))
(assert (= temp605_143 var1704114))
(assert (= temp605_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_143)))
(assert (= temp605_142 temp605_144))
(assert (= temp605_145 #x0000000000000002))
(assert (= var1979241 temp605_145))
(assert (= temp605_146 #x0000000000000001))
(assert (= var1716281 temp605_146))
(assert (= temp605_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp605_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_148 #x0000000000000001))
(assert (= var997490 temp605_148))
(assert (= temp605_149 #x0000000000000001))
(assert (= var997620 temp605_149))
(assert (= var3486185 var997620))
(assert (= temp605_150 #x0000000000000000))
(assert (= var3686207 temp605_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp605_151 #x0000000000000002))
(assert (= var3815043 temp605_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var4272528 var997633))
(assert (= var997820 var997345))
(assert (= temp605_152 #x0000000000000000))
(assert (= var997821
   (ite (distinct var997820 temp605_152) #x0000000000000001 #x0000000000000000)))
(assert (= var4996941 var997821))
(assert (= temp605_153 #x0000000000000001))
(assert (= var997490 temp605_153))
(model-add temp605_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp605_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp605_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp605_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp605_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp605_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






