(declare-fun temp1258_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp1258_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp1258_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp1258_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp1258_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp1258_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp1258_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp1258_8 () (_ BitVec 64))
(declare-fun temp1258_10 () (_ BitVec 64))
(declare-fun temp1258_9 () (_ BitVec 64))
(declare-fun temp1258_12 () (_ BitVec 64))
(declare-fun temp1258_11 () (_ BitVec 64))
(declare-fun temp1258_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp1258_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp1258_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp1258_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp1258_17 () (_ BitVec 64))
(declare-fun temp1258_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp1258_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp1258_20 () (_ BitVec 64))
(declare-fun temp1258_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1258_22 () (_ BitVec 64))
(declare-fun temp1258_23 () (_ BitVec 64))
(declare-fun temp1258_24 () (_ BitVec 64))
(declare-fun temp1258_25 () (_ BitVec 64))
(declare-fun temp1258_26 () (_ BitVec 64))
(declare-fun temp1258_27 () (_ BitVec 64))
(declare-fun temp1258_28 () (_ BitVec 64))
(declare-fun temp1258_29 () (_ BitVec 64))
(declare-fun temp1258_30 () (_ BitVec 64))
(declare-fun temp1258_31 () (_ BitVec 64))
(declare-fun temp1258_32 () (_ BitVec 64))
(declare-fun temp1258_33 () (_ BitVec 64))
(declare-fun temp1258_34 () (_ BitVec 64))
(declare-fun temp1258_35 () (_ BitVec 64))
(declare-fun temp1258_36 () (_ BitVec 64))
(declare-fun temp1258_37 () (_ BitVec 64))
(declare-fun temp1258_38 () (_ BitVec 64))
(declare-fun temp1258_39 () (_ BitVec 64))
(declare-fun temp1258_40 () (_ BitVec 64))
(declare-fun temp1258_41 () (_ BitVec 64))
(declare-fun temp1258_42 () (_ BitVec 64))
(declare-fun temp1258_43 () (_ BitVec 64))
(declare-fun temp1258_44 () (_ BitVec 64))
(declare-fun temp1258_45 () (_ BitVec 64))
(declare-fun temp1258_46 () (_ BitVec 64))
(declare-fun temp1258_47 () (_ BitVec 64))
(declare-fun temp1258_48 () (_ BitVec 64))
(declare-fun temp1258_49 () (_ BitVec 64))
(declare-fun temp1258_50 () (_ BitVec 64))
(declare-fun temp1258_51 () (_ BitVec 64))
(declare-fun temp1258_52 () (_ BitVec 64))
(declare-fun temp1258_53 () (_ BitVec 64))
(declare-fun temp1258_54 () (_ BitVec 64))
(declare-fun temp1258_55 () (_ BitVec 64))
(declare-fun temp1258_56 () (_ BitVec 64))
(declare-fun temp1258_57 () (_ BitVec 64))
(declare-fun temp1258_58 () (_ BitVec 64))
(declare-fun temp1258_59 () (_ BitVec 64))
(declare-fun temp1258_60 () (_ BitVec 64))
(declare-fun temp1258_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp1258_62 () (_ BitVec 64))
(declare-fun temp1258_63 () (_ BitVec 64))
(declare-fun temp1258_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1258_65 () (_ BitVec 64))
(declare-fun temp1258_66 () (_ BitVec 64))
(declare-fun temp1258_67 () (_ BitVec 64))
(declare-fun temp1258_68 () (_ BitVec 64))
(declare-fun temp1258_69 () (_ BitVec 64))
(declare-fun temp1258_70 () (_ BitVec 64))
(declare-fun temp1258_71 () (_ BitVec 64))
(declare-fun temp1258_72 () (_ BitVec 64))
(declare-fun temp1258_73 () (_ BitVec 64))
(declare-fun temp1258_74 () (_ BitVec 64))
(declare-fun temp1258_75 () (_ BitVec 64))
(declare-fun temp1258_76 () (_ BitVec 64))
(declare-fun temp1258_77 () (_ BitVec 64))
(declare-fun temp1258_78 () (_ BitVec 64))
(declare-fun temp1258_79 () (_ BitVec 64))
(declare-fun temp1258_80 () (_ BitVec 64))
(declare-fun temp1258_81 () (_ BitVec 64))
(declare-fun temp1258_82 () (_ BitVec 64))
(declare-fun temp1258_83 () (_ BitVec 64))
(declare-fun temp1258_84 () (_ BitVec 64))
(declare-fun temp1258_85 () (_ BitVec 64))
(declare-fun temp1258_86 () (_ BitVec 64))
(declare-fun temp1258_87 () (_ BitVec 64))
(declare-fun temp1258_88 () (_ BitVec 64))
(declare-fun temp1258_89 () (_ BitVec 64))
(declare-fun temp1258_90 () (_ BitVec 64))
(declare-fun temp1258_91 () (_ BitVec 64))
(declare-fun temp1258_92 () (_ BitVec 64))
(declare-fun temp1258_93 () (_ BitVec 64))
(declare-fun temp1258_94 () (_ BitVec 64))
(declare-fun temp1258_95 () (_ BitVec 64))
(declare-fun temp1258_96 () (_ BitVec 64))
(declare-fun temp1258_97 () (_ BitVec 64))
(declare-fun temp1258_98 () (_ BitVec 64))
(declare-fun temp1258_99 () (_ BitVec 64))
(declare-fun temp1258_100 () (_ BitVec 64))
(declare-fun temp1258_101 () (_ BitVec 64))
(declare-fun temp1258_102 () (_ BitVec 64))
(declare-fun temp1258_103 () (_ BitVec 64))
(declare-fun temp1258_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp1258_105 () (_ BitVec 64))
(declare-fun temp1258_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp1258_107 () (_ BitVec 64))
(declare-fun temp1258_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1258_109 () (_ BitVec 64))
(declare-fun temp1258_110 () (_ BitVec 64))
(declare-fun temp1258_111 () (_ BitVec 64))
(declare-fun temp1258_112 () (_ BitVec 64))
(declare-fun temp1258_113 () (_ BitVec 64))
(declare-fun temp1258_114 () (_ BitVec 64))
(declare-fun temp1258_115 () (_ BitVec 64))
(declare-fun temp1258_116 () (_ BitVec 64))
(declare-fun temp1258_117 () (_ BitVec 64))
(declare-fun temp1258_118 () (_ BitVec 64))
(declare-fun temp1258_119 () (_ BitVec 64))
(declare-fun temp1258_120 () (_ BitVec 64))
(declare-fun temp1258_121 () (_ BitVec 64))
(declare-fun temp1258_122 () (_ BitVec 64))
(declare-fun temp1258_123 () (_ BitVec 64))
(declare-fun temp1258_124 () (_ BitVec 64))
(declare-fun temp1258_126 () (_ BitVec 64))
(declare-fun temp1258_127 () (_ BitVec 64))
(declare-fun temp1258_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp1258_128 () (_ BitVec 64))
(declare-fun temp1258_129 () (_ BitVec 64))
(declare-fun temp1258_131 () (_ BitVec 64))
(declare-fun temp1258_132 () (_ BitVec 64))
(declare-fun temp1258_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp1258_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp1258_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp1258_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp1258_136 () (_ BitVec 64))
(declare-fun temp1258_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp1258_139 () (_ BitVec 64))
(declare-fun temp1258_140 () (_ BitVec 64))
(declare-fun temp1258_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp1258_141 () (_ BitVec 64))
(declare-fun temp1258_143 () (_ BitVec 64))
(declare-fun temp1258_144 () (_ BitVec 64))
(declare-fun temp1258_142 () (_ BitVec 64))
(declare-fun temp1258_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp1258_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp1258_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp1258_148 () (_ BitVec 64))
(declare-fun temp1258_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp1258_150 () (_ BitVec 64))
(declare-fun var3880579 () (_ BitVec 64))
(declare-fun var3880581 () (_ BitVec 64))
(declare-fun var3946124 () (_ BitVec 64))
(declare-fun var3946125 () (_ BitVec 64))
(declare-fun temp1258_152 () (_ BitVec 64))
(declare-fun temp1258_151 () (_ BitVec 64))
(declare-fun temp1258_154 () (_ BitVec 64))
(declare-fun temp1258_153 () (_ BitVec 64))
(declare-fun temp1258_155 () (_ BitVec 64))
(assert (= temp1258_1 #x0000000000000001))
(assert (= var465453 temp1258_1))
(assert (= temp1258_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp1258_2)))
(assert (= temp1258_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp1258_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp1258_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp1258_4)))
(assert (= temp1258_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp1258_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp1258_6 #x0000000000000000))
(assert (= var465488 temp1258_6))
(assert (= temp1258_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp1258_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp1258_8 #x0000000000000001))
(assert (= var465522 temp1258_8))
(assert (= temp1258_10 #x0000000000000000))
(assert (= temp1258_9 temp1258_10))
(assert (= temp1258_12 #x0000000000000001))
(assert (= temp1258_11 temp1258_12))
(assert (= temp1258_13 #x0000000000000000))
(assert (= var863614 temp1258_13))
(assert (= temp1258_14 #x0000000000000001))
(assert (= var863635 temp1258_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp1258_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp1258_15)))
(assert (= temp1258_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1258_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1258_17 #x0000000000000000))
(assert (= var997373 temp1258_17))
(assert (= temp1258_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp1258_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1258_19 #x0000000000000000))
(assert (= var997418 temp1258_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp1258_20 #x0000000000000000))
(assert (= temp1258_21 temp1258_20))
(assert (= temp1258_22 (select ARGNAME_padding_NAMEEND_VAL temp1258_21)))
(assert (= temp1258_23 #x0000000000000001))
(assert (= temp1258_24 temp1258_23))
(assert (= temp1258_25 (select ARGNAME_padding_NAMEEND_VAL temp1258_24)))
(assert (= temp1258_26 #x0000000000000002))
(assert (= temp1258_27 temp1258_26))
(assert (= temp1258_28 (select ARGNAME_padding_NAMEEND_VAL temp1258_27)))
(assert (= temp1258_29 #x0000000000000003))
(assert (= temp1258_30 temp1258_29))
(assert (= temp1258_31 (select ARGNAME_padding_NAMEEND_VAL temp1258_30)))
(assert (= temp1258_32 #x0000000000000004))
(assert (= temp1258_33 temp1258_32))
(assert (= temp1258_34 (select ARGNAME_padding_NAMEEND_VAL temp1258_33)))
(assert (= temp1258_35 #x0000000000000005))
(assert (= temp1258_36 temp1258_35))
(assert (= temp1258_37 (select ARGNAME_padding_NAMEEND_VAL temp1258_36)))
(assert (= temp1258_38 #x0000000000000000))
(assert (= temp1258_39 #x0000000000000000))
(assert (= temp1258_40 temp1258_39))
(assert (= temp1258_41 (select ARGNAME_padding_NAMEEND_VAL temp1258_40)))
(assert (= temp1258_42 #x0000000000000000))
(assert (= temp1258_43 #x0000000000000001))
(assert (= temp1258_44 temp1258_43))
(assert (= temp1258_45 (select ARGNAME_padding_NAMEEND_VAL temp1258_44)))
(assert (= temp1258_46 #x0000000000000000))
(assert (= temp1258_47 #x0000000000000002))
(assert (= temp1258_48 temp1258_47))
(assert (= temp1258_49 (select ARGNAME_padding_NAMEEND_VAL temp1258_48)))
(assert (= temp1258_50 #x0000000000000000))
(assert (= temp1258_51 #x0000000000000003))
(assert (= temp1258_52 temp1258_51))
(assert (= temp1258_53 (select ARGNAME_padding_NAMEEND_VAL temp1258_52)))
(assert (= temp1258_54 #x0000000000000000))
(assert (= temp1258_55 #x0000000000000004))
(assert (= temp1258_56 temp1258_55))
(assert (= temp1258_57 (select ARGNAME_padding_NAMEEND_VAL temp1258_56)))
(assert (= temp1258_58 #x0000000000000000))
(assert (= temp1258_59 #x0000000000000005))
(assert (= temp1258_60 temp1258_59))
(assert (= temp1258_61 (select ARGNAME_padding_NAMEEND_VAL temp1258_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp1258_41 temp1258_38)
             (bvslt temp1258_45 temp1258_42)
             (bvslt temp1258_49 temp1258_46)
             (bvslt temp1258_53 temp1258_50)
             (bvslt temp1258_57 temp1258_54)
             (bvslt temp1258_61 temp1258_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1258_62 #x0000000000000000))
(assert (= var1716002 temp1258_62))
(assert (= temp1258_63 #x0000000000000000))
(assert (= temp1258_64 temp1258_63))
(assert (= temp1258_65 (select ARGNAME_stride_NAMEEND_VAL temp1258_64)))
(assert (= temp1258_66 #x0000000000000001))
(assert (= temp1258_67 temp1258_66))
(assert (= temp1258_68 (select ARGNAME_stride_NAMEEND_VAL temp1258_67)))
(assert (= temp1258_69 #x0000000000000002))
(assert (= temp1258_70 temp1258_69))
(assert (= temp1258_71 (select ARGNAME_stride_NAMEEND_VAL temp1258_70)))
(assert (= temp1258_72 #x0000000000000003))
(assert (= temp1258_73 temp1258_72))
(assert (= temp1258_74 (select ARGNAME_stride_NAMEEND_VAL temp1258_73)))
(assert (= temp1258_75 #x0000000000000004))
(assert (= temp1258_76 temp1258_75))
(assert (= temp1258_77 (select ARGNAME_stride_NAMEEND_VAL temp1258_76)))
(assert (= temp1258_78 #x0000000000000005))
(assert (= temp1258_79 temp1258_78))
(assert (= temp1258_80 (select ARGNAME_stride_NAMEEND_VAL temp1258_79)))
(assert (= temp1258_81 #x0000000000000000))
(assert (= temp1258_82 #x0000000000000000))
(assert (= temp1258_83 temp1258_82))
(assert (= temp1258_84 (select ARGNAME_stride_NAMEEND_VAL temp1258_83)))
(assert (= temp1258_85 #x0000000000000000))
(assert (= temp1258_86 #x0000000000000001))
(assert (= temp1258_87 temp1258_86))
(assert (= temp1258_88 (select ARGNAME_stride_NAMEEND_VAL temp1258_87)))
(assert (= temp1258_89 #x0000000000000000))
(assert (= temp1258_90 #x0000000000000002))
(assert (= temp1258_91 temp1258_90))
(assert (= temp1258_92 (select ARGNAME_stride_NAMEEND_VAL temp1258_91)))
(assert (= temp1258_93 #x0000000000000000))
(assert (= temp1258_94 #x0000000000000003))
(assert (= temp1258_95 temp1258_94))
(assert (= temp1258_96 (select ARGNAME_stride_NAMEEND_VAL temp1258_95)))
(assert (= temp1258_97 #x0000000000000000))
(assert (= temp1258_98 #x0000000000000004))
(assert (= temp1258_99 temp1258_98))
(assert (= temp1258_100 (select ARGNAME_stride_NAMEEND_VAL temp1258_99)))
(assert (= temp1258_101 #x0000000000000000))
(assert (= temp1258_102 #x0000000000000005))
(assert (= temp1258_103 temp1258_102))
(assert (= temp1258_104 (select ARGNAME_stride_NAMEEND_VAL temp1258_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp1258_84 temp1258_81)
             (bvsle temp1258_88 temp1258_85)
             (bvsle temp1258_92 temp1258_89)
             (bvsle temp1258_96 temp1258_93)
             (bvsle temp1258_100 temp1258_97)
             (bvsle temp1258_104 temp1258_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1258_105 #x0000000000000000))
(assert (= var1716023 temp1258_105))
(assert (= temp1258_106 #x0000000000000000))
(assert (= var1704114 temp1258_106))
(assert (= temp1258_107 #x0000000000000000))
(assert (= temp1258_108 temp1258_107))
(assert (= temp1258_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1258_108)))
(assert (= temp1258_110 #x0000000000000001))
(assert (= temp1258_111 temp1258_110))
(assert (= temp1258_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1258_111)))
(assert (= temp1258_113 #x0000000000000002))
(assert (= temp1258_114 temp1258_113))
(assert (= temp1258_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1258_114)))
(assert (= temp1258_116 #x0000000000000003))
(assert (= temp1258_117 temp1258_116))
(assert (= temp1258_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1258_117)))
(assert (= temp1258_119 #x0000000000000004))
(assert (= temp1258_120 temp1258_119))
(assert (= temp1258_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1258_120)))
(assert (= temp1258_122 #x0000000000000005))
(assert (= temp1258_123 temp1258_122))
(assert (= temp1258_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1258_123)))
(assert (= temp1258_126 var1704114))
(assert (= temp1258_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1258_126)))
(assert (= temp1258_125 temp1258_127))
(assert (= var1716068
   (ite (bvslt temp1258_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1258_128 #x0000000000000000))
(assert (= var1716068 temp1258_128))
(assert (= temp1258_129 #x0000000000000000))
(assert (= var1704114 temp1258_129))
(assert (= temp1258_131 var1704114))
(assert (= temp1258_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1258_131)))
(assert (= temp1258_130 temp1258_132))
(assert (= var1716090 (bvsmod temp1258_130 ARGNAME_groups_NAMEEND)))
(assert (= temp1258_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp1258_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp1258_134 #x0000000000000001))
(assert (= var1716091 temp1258_134))
(assert (= var1716110 var1716000))
(assert (= temp1258_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp1258_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp1258_136 #x0000000000000001))
(assert (= var1716111 temp1258_136))
(assert (= temp1258_137 #x0000000000000001))
(assert (= var1705002 temp1258_137))
(assert (= temp1258_139 var1705002))
(assert (= temp1258_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1258_139)))
(assert (= temp1258_138 temp1258_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp1258_138)))
(assert (= temp1258_141 #x0000000000000000))
(assert (= var1704114 temp1258_141))
(assert (= temp1258_143 var1704114))
(assert (= temp1258_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1258_143)))
(assert (= temp1258_142 temp1258_144))
(assert (= temp1258_145 #x0000000000000002))
(assert (= var1979241 temp1258_145))
(assert (= temp1258_146 #x0000000000000001))
(assert (= var1716281 temp1258_146))
(assert (= temp1258_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1258_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1258_148 #x0000000000000001))
(assert (= var997490 temp1258_148))
(assert (= temp1258_149 #x0000000000000001))
(assert (= var997620 temp1258_149))
(assert (= var3486185 var997620))
(assert (= temp1258_150 #x0000000000000002))
(assert (= var3880579 temp1258_150))
(assert (= var3880581 (bvsub ARGNAME_weight_NAMEEND_DIM var3880579)))
(assert (= var3946124 var3880579))
(assert (= var3946125 var3880581))
(assert (= temp1258_152 #xffffffffffffffff))
(assert (= temp1258_151 temp1258_152))
(assert (= temp1258_154 #xffffffffffffffff))
(assert (= temp1258_153 temp1258_154))
(assert (= temp1258_155 #x0000000000000001))
(assert (= var997490 temp1258_155))
(model-add temp1258_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp1258_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp1258_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp1258_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp1258_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp1258_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






