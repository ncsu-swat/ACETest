(declare-fun temp389_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp389_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp389_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp389_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp389_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp389_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp389_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp389_8 () (_ BitVec 64))
(declare-fun temp389_10 () (_ BitVec 64))
(declare-fun temp389_9 () (_ BitVec 64))
(declare-fun temp389_12 () (_ BitVec 64))
(declare-fun temp389_11 () (_ BitVec 64))
(declare-fun temp389_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp389_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp389_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp389_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp389_17 () (_ BitVec 64))
(declare-fun temp389_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp389_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp389_20 () (_ BitVec 64))
(declare-fun temp389_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp389_22 () (_ BitVec 64))
(declare-fun temp389_23 () (_ BitVec 64))
(declare-fun temp389_24 () (_ BitVec 64))
(declare-fun temp389_25 () (_ BitVec 64))
(declare-fun temp389_26 () (_ BitVec 64))
(declare-fun temp389_27 () (_ BitVec 64))
(declare-fun temp389_28 () (_ BitVec 64))
(declare-fun temp389_29 () (_ BitVec 64))
(declare-fun temp389_30 () (_ BitVec 64))
(declare-fun temp389_31 () (_ BitVec 64))
(declare-fun temp389_32 () (_ BitVec 64))
(declare-fun temp389_33 () (_ BitVec 64))
(declare-fun temp389_34 () (_ BitVec 64))
(declare-fun temp389_35 () (_ BitVec 64))
(declare-fun temp389_36 () (_ BitVec 64))
(declare-fun temp389_37 () (_ BitVec 64))
(declare-fun temp389_38 () (_ BitVec 64))
(declare-fun temp389_39 () (_ BitVec 64))
(declare-fun temp389_40 () (_ BitVec 64))
(declare-fun temp389_41 () (_ BitVec 64))
(declare-fun temp389_42 () (_ BitVec 64))
(declare-fun temp389_43 () (_ BitVec 64))
(declare-fun temp389_44 () (_ BitVec 64))
(declare-fun temp389_45 () (_ BitVec 64))
(declare-fun temp389_46 () (_ BitVec 64))
(declare-fun temp389_47 () (_ BitVec 64))
(declare-fun temp389_48 () (_ BitVec 64))
(declare-fun temp389_49 () (_ BitVec 64))
(declare-fun temp389_50 () (_ BitVec 64))
(declare-fun temp389_51 () (_ BitVec 64))
(declare-fun temp389_52 () (_ BitVec 64))
(declare-fun temp389_53 () (_ BitVec 64))
(declare-fun temp389_54 () (_ BitVec 64))
(declare-fun temp389_55 () (_ BitVec 64))
(declare-fun temp389_56 () (_ BitVec 64))
(declare-fun temp389_57 () (_ BitVec 64))
(declare-fun temp389_58 () (_ BitVec 64))
(declare-fun temp389_59 () (_ BitVec 64))
(declare-fun temp389_60 () (_ BitVec 64))
(declare-fun temp389_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp389_62 () (_ BitVec 64))
(declare-fun temp389_63 () (_ BitVec 64))
(declare-fun temp389_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp389_65 () (_ BitVec 64))
(declare-fun temp389_66 () (_ BitVec 64))
(declare-fun temp389_67 () (_ BitVec 64))
(declare-fun temp389_68 () (_ BitVec 64))
(declare-fun temp389_69 () (_ BitVec 64))
(declare-fun temp389_70 () (_ BitVec 64))
(declare-fun temp389_71 () (_ BitVec 64))
(declare-fun temp389_72 () (_ BitVec 64))
(declare-fun temp389_73 () (_ BitVec 64))
(declare-fun temp389_74 () (_ BitVec 64))
(declare-fun temp389_75 () (_ BitVec 64))
(declare-fun temp389_76 () (_ BitVec 64))
(declare-fun temp389_77 () (_ BitVec 64))
(declare-fun temp389_78 () (_ BitVec 64))
(declare-fun temp389_79 () (_ BitVec 64))
(declare-fun temp389_80 () (_ BitVec 64))
(declare-fun temp389_81 () (_ BitVec 64))
(declare-fun temp389_82 () (_ BitVec 64))
(declare-fun temp389_83 () (_ BitVec 64))
(declare-fun temp389_84 () (_ BitVec 64))
(declare-fun temp389_85 () (_ BitVec 64))
(declare-fun temp389_86 () (_ BitVec 64))
(declare-fun temp389_87 () (_ BitVec 64))
(declare-fun temp389_88 () (_ BitVec 64))
(declare-fun temp389_89 () (_ BitVec 64))
(declare-fun temp389_90 () (_ BitVec 64))
(declare-fun temp389_91 () (_ BitVec 64))
(declare-fun temp389_92 () (_ BitVec 64))
(declare-fun temp389_93 () (_ BitVec 64))
(declare-fun temp389_94 () (_ BitVec 64))
(declare-fun temp389_95 () (_ BitVec 64))
(declare-fun temp389_96 () (_ BitVec 64))
(declare-fun temp389_97 () (_ BitVec 64))
(declare-fun temp389_98 () (_ BitVec 64))
(declare-fun temp389_99 () (_ BitVec 64))
(declare-fun temp389_100 () (_ BitVec 64))
(declare-fun temp389_101 () (_ BitVec 64))
(declare-fun temp389_102 () (_ BitVec 64))
(declare-fun temp389_103 () (_ BitVec 64))
(declare-fun temp389_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp389_105 () (_ BitVec 64))
(declare-fun temp389_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp389_107 () (_ BitVec 64))
(declare-fun temp389_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp389_109 () (_ BitVec 64))
(declare-fun temp389_110 () (_ BitVec 64))
(declare-fun temp389_111 () (_ BitVec 64))
(declare-fun temp389_112 () (_ BitVec 64))
(declare-fun temp389_113 () (_ BitVec 64))
(declare-fun temp389_114 () (_ BitVec 64))
(declare-fun temp389_115 () (_ BitVec 64))
(declare-fun temp389_116 () (_ BitVec 64))
(declare-fun temp389_117 () (_ BitVec 64))
(declare-fun temp389_118 () (_ BitVec 64))
(declare-fun temp389_119 () (_ BitVec 64))
(declare-fun temp389_120 () (_ BitVec 64))
(declare-fun temp389_121 () (_ BitVec 64))
(declare-fun temp389_122 () (_ BitVec 64))
(declare-fun temp389_123 () (_ BitVec 64))
(declare-fun temp389_124 () (_ BitVec 64))
(declare-fun temp389_126 () (_ BitVec 64))
(declare-fun temp389_127 () (_ BitVec 64))
(declare-fun temp389_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp389_128 () (_ BitVec 64))
(declare-fun temp389_129 () (_ BitVec 64))
(declare-fun temp389_131 () (_ BitVec 64))
(declare-fun temp389_132 () (_ BitVec 64))
(declare-fun temp389_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp389_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp389_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp389_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp389_136 () (_ BitVec 64))
(declare-fun temp389_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp389_139 () (_ BitVec 64))
(declare-fun temp389_140 () (_ BitVec 64))
(declare-fun temp389_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp389_141 () (_ BitVec 64))
(declare-fun temp389_143 () (_ BitVec 64))
(declare-fun temp389_144 () (_ BitVec 64))
(declare-fun temp389_142 () (_ BitVec 64))
(declare-fun temp389_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp389_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp389_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp389_148 () (_ BitVec 64))
(declare-fun temp389_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp389_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp389_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var4600208 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun temp389_152 () (_ BitVec 64))
(declare-fun var5190032 () (_ BitVec 64))
(declare-fun temp389_153 () (_ BitVec 64))
(assert (= temp389_1 #x0000000000000001))
(assert (= var465453 temp389_1))
(assert (= temp389_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp389_2)))
(assert (= temp389_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp389_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp389_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp389_4)))
(assert (= temp389_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp389_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp389_6 #x0000000000000000))
(assert (= var465488 temp389_6))
(assert (= temp389_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp389_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp389_8 #x0000000000000001))
(assert (= var465522 temp389_8))
(assert (= temp389_10 #x0000000000000000))
(assert (= temp389_9 temp389_10))
(assert (= temp389_12 #x0000000000000001))
(assert (= temp389_11 temp389_12))
(assert (= temp389_13 #x0000000000000000))
(assert (= var863614 temp389_13))
(assert (= temp389_14 #x0000000000000001))
(assert (= var863635 temp389_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp389_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp389_15)))
(assert (= temp389_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp389_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp389_17 #x0000000000000000))
(assert (= var997373 temp389_17))
(assert (= temp389_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp389_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp389_19 #x0000000000000000))
(assert (= var997418 temp389_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp389_20 #x0000000000000000))
(assert (= temp389_21 temp389_20))
(assert (= temp389_22 (select ARGNAME_padding_NAMEEND_VAL temp389_21)))
(assert (= temp389_23 #x0000000000000001))
(assert (= temp389_24 temp389_23))
(assert (= temp389_25 (select ARGNAME_padding_NAMEEND_VAL temp389_24)))
(assert (= temp389_26 #x0000000000000002))
(assert (= temp389_27 temp389_26))
(assert (= temp389_28 (select ARGNAME_padding_NAMEEND_VAL temp389_27)))
(assert (= temp389_29 #x0000000000000003))
(assert (= temp389_30 temp389_29))
(assert (= temp389_31 (select ARGNAME_padding_NAMEEND_VAL temp389_30)))
(assert (= temp389_32 #x0000000000000004))
(assert (= temp389_33 temp389_32))
(assert (= temp389_34 (select ARGNAME_padding_NAMEEND_VAL temp389_33)))
(assert (= temp389_35 #x0000000000000005))
(assert (= temp389_36 temp389_35))
(assert (= temp389_37 (select ARGNAME_padding_NAMEEND_VAL temp389_36)))
(assert (= temp389_38 #x0000000000000000))
(assert (= temp389_39 #x0000000000000000))
(assert (= temp389_40 temp389_39))
(assert (= temp389_41 (select ARGNAME_padding_NAMEEND_VAL temp389_40)))
(assert (= temp389_42 #x0000000000000000))
(assert (= temp389_43 #x0000000000000001))
(assert (= temp389_44 temp389_43))
(assert (= temp389_45 (select ARGNAME_padding_NAMEEND_VAL temp389_44)))
(assert (= temp389_46 #x0000000000000000))
(assert (= temp389_47 #x0000000000000002))
(assert (= temp389_48 temp389_47))
(assert (= temp389_49 (select ARGNAME_padding_NAMEEND_VAL temp389_48)))
(assert (= temp389_50 #x0000000000000000))
(assert (= temp389_51 #x0000000000000003))
(assert (= temp389_52 temp389_51))
(assert (= temp389_53 (select ARGNAME_padding_NAMEEND_VAL temp389_52)))
(assert (= temp389_54 #x0000000000000000))
(assert (= temp389_55 #x0000000000000004))
(assert (= temp389_56 temp389_55))
(assert (= temp389_57 (select ARGNAME_padding_NAMEEND_VAL temp389_56)))
(assert (= temp389_58 #x0000000000000000))
(assert (= temp389_59 #x0000000000000005))
(assert (= temp389_60 temp389_59))
(assert (= temp389_61 (select ARGNAME_padding_NAMEEND_VAL temp389_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp389_41 temp389_38)
             (bvslt temp389_45 temp389_42)
             (bvslt temp389_49 temp389_46)
             (bvslt temp389_53 temp389_50)
             (bvslt temp389_57 temp389_54)
             (bvslt temp389_61 temp389_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp389_62 #x0000000000000000))
(assert (= var1716002 temp389_62))
(assert (= temp389_63 #x0000000000000000))
(assert (= temp389_64 temp389_63))
(assert (= temp389_65 (select ARGNAME_stride_NAMEEND_VAL temp389_64)))
(assert (= temp389_66 #x0000000000000001))
(assert (= temp389_67 temp389_66))
(assert (= temp389_68 (select ARGNAME_stride_NAMEEND_VAL temp389_67)))
(assert (= temp389_69 #x0000000000000002))
(assert (= temp389_70 temp389_69))
(assert (= temp389_71 (select ARGNAME_stride_NAMEEND_VAL temp389_70)))
(assert (= temp389_72 #x0000000000000003))
(assert (= temp389_73 temp389_72))
(assert (= temp389_74 (select ARGNAME_stride_NAMEEND_VAL temp389_73)))
(assert (= temp389_75 #x0000000000000004))
(assert (= temp389_76 temp389_75))
(assert (= temp389_77 (select ARGNAME_stride_NAMEEND_VAL temp389_76)))
(assert (= temp389_78 #x0000000000000005))
(assert (= temp389_79 temp389_78))
(assert (= temp389_80 (select ARGNAME_stride_NAMEEND_VAL temp389_79)))
(assert (= temp389_81 #x0000000000000000))
(assert (= temp389_82 #x0000000000000000))
(assert (= temp389_83 temp389_82))
(assert (= temp389_84 (select ARGNAME_stride_NAMEEND_VAL temp389_83)))
(assert (= temp389_85 #x0000000000000000))
(assert (= temp389_86 #x0000000000000001))
(assert (= temp389_87 temp389_86))
(assert (= temp389_88 (select ARGNAME_stride_NAMEEND_VAL temp389_87)))
(assert (= temp389_89 #x0000000000000000))
(assert (= temp389_90 #x0000000000000002))
(assert (= temp389_91 temp389_90))
(assert (= temp389_92 (select ARGNAME_stride_NAMEEND_VAL temp389_91)))
(assert (= temp389_93 #x0000000000000000))
(assert (= temp389_94 #x0000000000000003))
(assert (= temp389_95 temp389_94))
(assert (= temp389_96 (select ARGNAME_stride_NAMEEND_VAL temp389_95)))
(assert (= temp389_97 #x0000000000000000))
(assert (= temp389_98 #x0000000000000004))
(assert (= temp389_99 temp389_98))
(assert (= temp389_100 (select ARGNAME_stride_NAMEEND_VAL temp389_99)))
(assert (= temp389_101 #x0000000000000000))
(assert (= temp389_102 #x0000000000000005))
(assert (= temp389_103 temp389_102))
(assert (= temp389_104 (select ARGNAME_stride_NAMEEND_VAL temp389_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp389_84 temp389_81)
             (bvsle temp389_88 temp389_85)
             (bvsle temp389_92 temp389_89)
             (bvsle temp389_96 temp389_93)
             (bvsle temp389_100 temp389_97)
             (bvsle temp389_104 temp389_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp389_105 #x0000000000000000))
(assert (= var1716023 temp389_105))
(assert (= temp389_106 #x0000000000000000))
(assert (= var1704114 temp389_106))
(assert (= temp389_107 #x0000000000000000))
(assert (= temp389_108 temp389_107))
(assert (= temp389_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp389_108)))
(assert (= temp389_110 #x0000000000000001))
(assert (= temp389_111 temp389_110))
(assert (= temp389_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp389_111)))
(assert (= temp389_113 #x0000000000000002))
(assert (= temp389_114 temp389_113))
(assert (= temp389_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp389_114)))
(assert (= temp389_116 #x0000000000000003))
(assert (= temp389_117 temp389_116))
(assert (= temp389_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp389_117)))
(assert (= temp389_119 #x0000000000000004))
(assert (= temp389_120 temp389_119))
(assert (= temp389_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp389_120)))
(assert (= temp389_122 #x0000000000000005))
(assert (= temp389_123 temp389_122))
(assert (= temp389_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp389_123)))
(assert (= temp389_126 var1704114))
(assert (= temp389_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp389_126)))
(assert (= temp389_125 temp389_127))
(assert (= var1716068
   (ite (bvslt temp389_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp389_128 #x0000000000000000))
(assert (= var1716068 temp389_128))
(assert (= temp389_129 #x0000000000000000))
(assert (= var1704114 temp389_129))
(assert (= temp389_131 var1704114))
(assert (= temp389_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp389_131)))
(assert (= temp389_130 temp389_132))
(assert (= var1716090 (bvsmod temp389_130 ARGNAME_groups_NAMEEND)))
(assert (= temp389_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp389_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp389_134 #x0000000000000001))
(assert (= var1716091 temp389_134))
(assert (= var1716110 var1716000))
(assert (= temp389_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp389_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp389_136 #x0000000000000001))
(assert (= var1716111 temp389_136))
(assert (= temp389_137 #x0000000000000001))
(assert (= var1705002 temp389_137))
(assert (= temp389_139 var1705002))
(assert (= temp389_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp389_139)))
(assert (= temp389_138 temp389_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp389_138)))
(assert (= temp389_141 #x0000000000000000))
(assert (= var1704114 temp389_141))
(assert (= temp389_143 var1704114))
(assert (= temp389_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp389_143)))
(assert (= temp389_142 temp389_144))
(assert (= temp389_145 #x0000000000000002))
(assert (= var1979241 temp389_145))
(assert (= temp389_146 #x0000000000000001))
(assert (= var1716281 temp389_146))
(assert (= temp389_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp389_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp389_148 #x0000000000000001))
(assert (= var997490 temp389_148))
(assert (= temp389_149 #x0000000000000001))
(assert (= var997620 temp389_149))
(assert (= var3486185 var997620))
(assert (= temp389_150 #x0000000000000000))
(assert (= var3686207 temp389_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp389_151 #x0000000000000002))
(assert (= var3815043 temp389_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var4600208 var997633))
(assert (= var4862352 var997633))
(assert (= temp389_152 #x0000000000000000))
(assert (= var5190032 temp389_152))
(assert (= temp389_153 #x0000000000000001))
(assert (= var997490 temp389_153))
(model-add temp389_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp389_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp389_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp389_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp389_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp389_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






