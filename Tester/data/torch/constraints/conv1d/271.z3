(declare-fun temp359_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp359_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp359_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp359_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp359_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp359_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp359_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp359_8 () (_ BitVec 64))
(declare-fun temp359_10 () (_ BitVec 64))
(declare-fun temp359_9 () (_ BitVec 64))
(declare-fun temp359_12 () (_ BitVec 64))
(declare-fun temp359_11 () (_ BitVec 64))
(declare-fun temp359_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp359_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp359_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp359_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp359_17 () (_ BitVec 64))
(declare-fun temp359_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp359_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp359_20 () (_ BitVec 64))
(declare-fun temp359_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp359_22 () (_ BitVec 64))
(declare-fun temp359_23 () (_ BitVec 64))
(declare-fun temp359_24 () (_ BitVec 64))
(declare-fun temp359_25 () (_ BitVec 64))
(declare-fun temp359_26 () (_ BitVec 64))
(declare-fun temp359_27 () (_ BitVec 64))
(declare-fun temp359_28 () (_ BitVec 64))
(declare-fun temp359_29 () (_ BitVec 64))
(declare-fun temp359_30 () (_ BitVec 64))
(declare-fun temp359_31 () (_ BitVec 64))
(declare-fun temp359_32 () (_ BitVec 64))
(declare-fun temp359_33 () (_ BitVec 64))
(declare-fun temp359_34 () (_ BitVec 64))
(declare-fun temp359_35 () (_ BitVec 64))
(declare-fun temp359_36 () (_ BitVec 64))
(declare-fun temp359_37 () (_ BitVec 64))
(declare-fun temp359_38 () (_ BitVec 64))
(declare-fun temp359_39 () (_ BitVec 64))
(declare-fun temp359_40 () (_ BitVec 64))
(declare-fun temp359_41 () (_ BitVec 64))
(declare-fun temp359_42 () (_ BitVec 64))
(declare-fun temp359_43 () (_ BitVec 64))
(declare-fun temp359_44 () (_ BitVec 64))
(declare-fun temp359_45 () (_ BitVec 64))
(declare-fun temp359_46 () (_ BitVec 64))
(declare-fun temp359_47 () (_ BitVec 64))
(declare-fun temp359_48 () (_ BitVec 64))
(declare-fun temp359_49 () (_ BitVec 64))
(declare-fun temp359_50 () (_ BitVec 64))
(declare-fun temp359_51 () (_ BitVec 64))
(declare-fun temp359_52 () (_ BitVec 64))
(declare-fun temp359_53 () (_ BitVec 64))
(declare-fun temp359_54 () (_ BitVec 64))
(declare-fun temp359_55 () (_ BitVec 64))
(declare-fun temp359_56 () (_ BitVec 64))
(declare-fun temp359_57 () (_ BitVec 64))
(declare-fun temp359_58 () (_ BitVec 64))
(declare-fun temp359_59 () (_ BitVec 64))
(declare-fun temp359_60 () (_ BitVec 64))
(declare-fun temp359_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp359_62 () (_ BitVec 64))
(declare-fun temp359_63 () (_ BitVec 64))
(declare-fun temp359_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp359_65 () (_ BitVec 64))
(declare-fun temp359_66 () (_ BitVec 64))
(declare-fun temp359_67 () (_ BitVec 64))
(declare-fun temp359_68 () (_ BitVec 64))
(declare-fun temp359_69 () (_ BitVec 64))
(declare-fun temp359_70 () (_ BitVec 64))
(declare-fun temp359_71 () (_ BitVec 64))
(declare-fun temp359_72 () (_ BitVec 64))
(declare-fun temp359_73 () (_ BitVec 64))
(declare-fun temp359_74 () (_ BitVec 64))
(declare-fun temp359_75 () (_ BitVec 64))
(declare-fun temp359_76 () (_ BitVec 64))
(declare-fun temp359_77 () (_ BitVec 64))
(declare-fun temp359_78 () (_ BitVec 64))
(declare-fun temp359_79 () (_ BitVec 64))
(declare-fun temp359_80 () (_ BitVec 64))
(declare-fun temp359_81 () (_ BitVec 64))
(declare-fun temp359_82 () (_ BitVec 64))
(declare-fun temp359_83 () (_ BitVec 64))
(declare-fun temp359_84 () (_ BitVec 64))
(declare-fun temp359_85 () (_ BitVec 64))
(declare-fun temp359_86 () (_ BitVec 64))
(declare-fun temp359_87 () (_ BitVec 64))
(declare-fun temp359_88 () (_ BitVec 64))
(declare-fun temp359_89 () (_ BitVec 64))
(declare-fun temp359_90 () (_ BitVec 64))
(declare-fun temp359_91 () (_ BitVec 64))
(declare-fun temp359_92 () (_ BitVec 64))
(declare-fun temp359_93 () (_ BitVec 64))
(declare-fun temp359_94 () (_ BitVec 64))
(declare-fun temp359_95 () (_ BitVec 64))
(declare-fun temp359_96 () (_ BitVec 64))
(declare-fun temp359_97 () (_ BitVec 64))
(declare-fun temp359_98 () (_ BitVec 64))
(declare-fun temp359_99 () (_ BitVec 64))
(declare-fun temp359_100 () (_ BitVec 64))
(declare-fun temp359_101 () (_ BitVec 64))
(declare-fun temp359_102 () (_ BitVec 64))
(declare-fun temp359_103 () (_ BitVec 64))
(declare-fun temp359_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp359_105 () (_ BitVec 64))
(declare-fun temp359_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp359_107 () (_ BitVec 64))
(declare-fun temp359_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp359_109 () (_ BitVec 64))
(declare-fun temp359_110 () (_ BitVec 64))
(declare-fun temp359_111 () (_ BitVec 64))
(declare-fun temp359_112 () (_ BitVec 64))
(declare-fun temp359_113 () (_ BitVec 64))
(declare-fun temp359_114 () (_ BitVec 64))
(declare-fun temp359_115 () (_ BitVec 64))
(declare-fun temp359_116 () (_ BitVec 64))
(declare-fun temp359_117 () (_ BitVec 64))
(declare-fun temp359_118 () (_ BitVec 64))
(declare-fun temp359_119 () (_ BitVec 64))
(declare-fun temp359_120 () (_ BitVec 64))
(declare-fun temp359_121 () (_ BitVec 64))
(declare-fun temp359_122 () (_ BitVec 64))
(declare-fun temp359_123 () (_ BitVec 64))
(declare-fun temp359_124 () (_ BitVec 64))
(declare-fun temp359_126 () (_ BitVec 64))
(declare-fun temp359_127 () (_ BitVec 64))
(declare-fun temp359_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp359_128 () (_ BitVec 64))
(declare-fun temp359_129 () (_ BitVec 64))
(declare-fun temp359_131 () (_ BitVec 64))
(declare-fun temp359_132 () (_ BitVec 64))
(declare-fun temp359_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp359_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp359_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp359_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp359_136 () (_ BitVec 64))
(declare-fun temp359_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp359_139 () (_ BitVec 64))
(declare-fun temp359_140 () (_ BitVec 64))
(declare-fun temp359_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp359_141 () (_ BitVec 64))
(declare-fun temp359_143 () (_ BitVec 64))
(declare-fun temp359_144 () (_ BitVec 64))
(declare-fun temp359_142 () (_ BitVec 64))
(declare-fun temp359_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp359_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp359_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp359_148 () (_ BitVec 64))
(declare-fun temp359_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp359_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp359_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp359_152 () (_ BitVec 64))
(assert (= temp359_1 #x0000000000000001))
(assert (= var465453 temp359_1))
(assert (= temp359_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp359_2)))
(assert (= temp359_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp359_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp359_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp359_4)))
(assert (= temp359_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp359_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp359_6 #x0000000000000000))
(assert (= var465488 temp359_6))
(assert (= temp359_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp359_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp359_8 #x0000000000000001))
(assert (= var465522 temp359_8))
(assert (= temp359_10 #x0000000000000000))
(assert (= temp359_9 temp359_10))
(assert (= temp359_12 #x0000000000000001))
(assert (= temp359_11 temp359_12))
(assert (= temp359_13 #x0000000000000000))
(assert (= var863614 temp359_13))
(assert (= temp359_14 #x0000000000000001))
(assert (= var863635 temp359_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp359_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp359_15)))
(assert (= temp359_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp359_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp359_17 #x0000000000000000))
(assert (= var997373 temp359_17))
(assert (= temp359_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp359_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp359_19 #x0000000000000000))
(assert (= var997418 temp359_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp359_20 #x0000000000000000))
(assert (= temp359_21 temp359_20))
(assert (= temp359_22 (select ARGNAME_padding_NAMEEND_VAL temp359_21)))
(assert (= temp359_23 #x0000000000000001))
(assert (= temp359_24 temp359_23))
(assert (= temp359_25 (select ARGNAME_padding_NAMEEND_VAL temp359_24)))
(assert (= temp359_26 #x0000000000000002))
(assert (= temp359_27 temp359_26))
(assert (= temp359_28 (select ARGNAME_padding_NAMEEND_VAL temp359_27)))
(assert (= temp359_29 #x0000000000000003))
(assert (= temp359_30 temp359_29))
(assert (= temp359_31 (select ARGNAME_padding_NAMEEND_VAL temp359_30)))
(assert (= temp359_32 #x0000000000000004))
(assert (= temp359_33 temp359_32))
(assert (= temp359_34 (select ARGNAME_padding_NAMEEND_VAL temp359_33)))
(assert (= temp359_35 #x0000000000000005))
(assert (= temp359_36 temp359_35))
(assert (= temp359_37 (select ARGNAME_padding_NAMEEND_VAL temp359_36)))
(assert (= temp359_38 #x0000000000000000))
(assert (= temp359_39 #x0000000000000000))
(assert (= temp359_40 temp359_39))
(assert (= temp359_41 (select ARGNAME_padding_NAMEEND_VAL temp359_40)))
(assert (= temp359_42 #x0000000000000000))
(assert (= temp359_43 #x0000000000000001))
(assert (= temp359_44 temp359_43))
(assert (= temp359_45 (select ARGNAME_padding_NAMEEND_VAL temp359_44)))
(assert (= temp359_46 #x0000000000000000))
(assert (= temp359_47 #x0000000000000002))
(assert (= temp359_48 temp359_47))
(assert (= temp359_49 (select ARGNAME_padding_NAMEEND_VAL temp359_48)))
(assert (= temp359_50 #x0000000000000000))
(assert (= temp359_51 #x0000000000000003))
(assert (= temp359_52 temp359_51))
(assert (= temp359_53 (select ARGNAME_padding_NAMEEND_VAL temp359_52)))
(assert (= temp359_54 #x0000000000000000))
(assert (= temp359_55 #x0000000000000004))
(assert (= temp359_56 temp359_55))
(assert (= temp359_57 (select ARGNAME_padding_NAMEEND_VAL temp359_56)))
(assert (= temp359_58 #x0000000000000000))
(assert (= temp359_59 #x0000000000000005))
(assert (= temp359_60 temp359_59))
(assert (= temp359_61 (select ARGNAME_padding_NAMEEND_VAL temp359_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp359_41 temp359_38)
             (bvslt temp359_45 temp359_42)
             (bvslt temp359_49 temp359_46)
             (bvslt temp359_53 temp359_50)
             (bvslt temp359_57 temp359_54)
             (bvslt temp359_61 temp359_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp359_62 #x0000000000000000))
(assert (= var1716002 temp359_62))
(assert (= temp359_63 #x0000000000000000))
(assert (= temp359_64 temp359_63))
(assert (= temp359_65 (select ARGNAME_stride_NAMEEND_VAL temp359_64)))
(assert (= temp359_66 #x0000000000000001))
(assert (= temp359_67 temp359_66))
(assert (= temp359_68 (select ARGNAME_stride_NAMEEND_VAL temp359_67)))
(assert (= temp359_69 #x0000000000000002))
(assert (= temp359_70 temp359_69))
(assert (= temp359_71 (select ARGNAME_stride_NAMEEND_VAL temp359_70)))
(assert (= temp359_72 #x0000000000000003))
(assert (= temp359_73 temp359_72))
(assert (= temp359_74 (select ARGNAME_stride_NAMEEND_VAL temp359_73)))
(assert (= temp359_75 #x0000000000000004))
(assert (= temp359_76 temp359_75))
(assert (= temp359_77 (select ARGNAME_stride_NAMEEND_VAL temp359_76)))
(assert (= temp359_78 #x0000000000000005))
(assert (= temp359_79 temp359_78))
(assert (= temp359_80 (select ARGNAME_stride_NAMEEND_VAL temp359_79)))
(assert (= temp359_81 #x0000000000000000))
(assert (= temp359_82 #x0000000000000000))
(assert (= temp359_83 temp359_82))
(assert (= temp359_84 (select ARGNAME_stride_NAMEEND_VAL temp359_83)))
(assert (= temp359_85 #x0000000000000000))
(assert (= temp359_86 #x0000000000000001))
(assert (= temp359_87 temp359_86))
(assert (= temp359_88 (select ARGNAME_stride_NAMEEND_VAL temp359_87)))
(assert (= temp359_89 #x0000000000000000))
(assert (= temp359_90 #x0000000000000002))
(assert (= temp359_91 temp359_90))
(assert (= temp359_92 (select ARGNAME_stride_NAMEEND_VAL temp359_91)))
(assert (= temp359_93 #x0000000000000000))
(assert (= temp359_94 #x0000000000000003))
(assert (= temp359_95 temp359_94))
(assert (= temp359_96 (select ARGNAME_stride_NAMEEND_VAL temp359_95)))
(assert (= temp359_97 #x0000000000000000))
(assert (= temp359_98 #x0000000000000004))
(assert (= temp359_99 temp359_98))
(assert (= temp359_100 (select ARGNAME_stride_NAMEEND_VAL temp359_99)))
(assert (= temp359_101 #x0000000000000000))
(assert (= temp359_102 #x0000000000000005))
(assert (= temp359_103 temp359_102))
(assert (= temp359_104 (select ARGNAME_stride_NAMEEND_VAL temp359_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp359_84 temp359_81)
             (bvsle temp359_88 temp359_85)
             (bvsle temp359_92 temp359_89)
             (bvsle temp359_96 temp359_93)
             (bvsle temp359_100 temp359_97)
             (bvsle temp359_104 temp359_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp359_105 #x0000000000000000))
(assert (= var1716023 temp359_105))
(assert (= temp359_106 #x0000000000000000))
(assert (= var1704114 temp359_106))
(assert (= temp359_107 #x0000000000000000))
(assert (= temp359_108 temp359_107))
(assert (= temp359_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp359_108)))
(assert (= temp359_110 #x0000000000000001))
(assert (= temp359_111 temp359_110))
(assert (= temp359_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp359_111)))
(assert (= temp359_113 #x0000000000000002))
(assert (= temp359_114 temp359_113))
(assert (= temp359_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp359_114)))
(assert (= temp359_116 #x0000000000000003))
(assert (= temp359_117 temp359_116))
(assert (= temp359_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp359_117)))
(assert (= temp359_119 #x0000000000000004))
(assert (= temp359_120 temp359_119))
(assert (= temp359_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp359_120)))
(assert (= temp359_122 #x0000000000000005))
(assert (= temp359_123 temp359_122))
(assert (= temp359_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp359_123)))
(assert (= temp359_126 var1704114))
(assert (= temp359_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp359_126)))
(assert (= temp359_125 temp359_127))
(assert (= var1716068
   (ite (bvslt temp359_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp359_128 #x0000000000000000))
(assert (= var1716068 temp359_128))
(assert (= temp359_129 #x0000000000000000))
(assert (= var1704114 temp359_129))
(assert (= temp359_131 var1704114))
(assert (= temp359_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp359_131)))
(assert (= temp359_130 temp359_132))
(assert (= var1716090 (bvsmod temp359_130 ARGNAME_groups_NAMEEND)))
(assert (= temp359_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp359_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp359_134 #x0000000000000001))
(assert (= var1716091 temp359_134))
(assert (= var1716110 var1716000))
(assert (= temp359_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp359_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp359_136 #x0000000000000001))
(assert (= var1716111 temp359_136))
(assert (= temp359_137 #x0000000000000001))
(assert (= var1705002 temp359_137))
(assert (= temp359_139 var1705002))
(assert (= temp359_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp359_139)))
(assert (= temp359_138 temp359_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp359_138)))
(assert (= temp359_141 #x0000000000000000))
(assert (= var1704114 temp359_141))
(assert (= temp359_143 var1704114))
(assert (= temp359_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp359_143)))
(assert (= temp359_142 temp359_144))
(assert (= temp359_145 #x0000000000000002))
(assert (= var1979241 temp359_145))
(assert (= temp359_146 #x0000000000000001))
(assert (= var1716281 temp359_146))
(assert (= temp359_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp359_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp359_148 #x0000000000000001))
(assert (= var997490 temp359_148))
(assert (= temp359_149 #x0000000000000001))
(assert (= var997620 temp359_149))
(assert (= var3486185 var997620))
(assert (= temp359_150 #x0000000000000000))
(assert (= var3686207 temp359_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp359_151 #x0000000000000002))
(assert (= var3815043 temp359_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp359_152 #x0000000000000001))
(assert (= var997490 temp359_152))
(model-add temp359_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp359_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp359_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp359_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp359_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp359_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






