(declare-fun temp1005_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp1005_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp1005_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp1005_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp1005_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp1005_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp1005_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp1005_8 () (_ BitVec 64))
(declare-fun temp1005_10 () (_ BitVec 64))
(declare-fun temp1005_9 () (_ BitVec 64))
(declare-fun temp1005_12 () (_ BitVec 64))
(declare-fun temp1005_11 () (_ BitVec 64))
(declare-fun temp1005_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp1005_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp1005_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp1005_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp1005_17 () (_ BitVec 64))
(declare-fun temp1005_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp1005_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp1005_20 () (_ BitVec 64))
(declare-fun temp1005_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1005_22 () (_ BitVec 64))
(declare-fun temp1005_23 () (_ BitVec 64))
(declare-fun temp1005_24 () (_ BitVec 64))
(declare-fun temp1005_25 () (_ BitVec 64))
(declare-fun temp1005_26 () (_ BitVec 64))
(declare-fun temp1005_27 () (_ BitVec 64))
(declare-fun temp1005_28 () (_ BitVec 64))
(declare-fun temp1005_29 () (_ BitVec 64))
(declare-fun temp1005_30 () (_ BitVec 64))
(declare-fun temp1005_31 () (_ BitVec 64))
(declare-fun temp1005_32 () (_ BitVec 64))
(declare-fun temp1005_33 () (_ BitVec 64))
(declare-fun temp1005_34 () (_ BitVec 64))
(declare-fun temp1005_35 () (_ BitVec 64))
(declare-fun temp1005_36 () (_ BitVec 64))
(declare-fun temp1005_37 () (_ BitVec 64))
(declare-fun temp1005_38 () (_ BitVec 64))
(declare-fun temp1005_39 () (_ BitVec 64))
(declare-fun temp1005_40 () (_ BitVec 64))
(declare-fun temp1005_41 () (_ BitVec 64))
(declare-fun temp1005_42 () (_ BitVec 64))
(declare-fun temp1005_43 () (_ BitVec 64))
(declare-fun temp1005_44 () (_ BitVec 64))
(declare-fun temp1005_45 () (_ BitVec 64))
(declare-fun temp1005_46 () (_ BitVec 64))
(declare-fun temp1005_47 () (_ BitVec 64))
(declare-fun temp1005_48 () (_ BitVec 64))
(declare-fun temp1005_49 () (_ BitVec 64))
(declare-fun temp1005_50 () (_ BitVec 64))
(declare-fun temp1005_51 () (_ BitVec 64))
(declare-fun temp1005_52 () (_ BitVec 64))
(declare-fun temp1005_53 () (_ BitVec 64))
(declare-fun temp1005_54 () (_ BitVec 64))
(declare-fun temp1005_55 () (_ BitVec 64))
(declare-fun temp1005_56 () (_ BitVec 64))
(declare-fun temp1005_57 () (_ BitVec 64))
(declare-fun temp1005_58 () (_ BitVec 64))
(declare-fun temp1005_59 () (_ BitVec 64))
(declare-fun temp1005_60 () (_ BitVec 64))
(declare-fun temp1005_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp1005_62 () (_ BitVec 64))
(declare-fun temp1005_63 () (_ BitVec 64))
(declare-fun temp1005_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1005_65 () (_ BitVec 64))
(declare-fun temp1005_66 () (_ BitVec 64))
(declare-fun temp1005_67 () (_ BitVec 64))
(declare-fun temp1005_68 () (_ BitVec 64))
(declare-fun temp1005_69 () (_ BitVec 64))
(declare-fun temp1005_70 () (_ BitVec 64))
(declare-fun temp1005_71 () (_ BitVec 64))
(declare-fun temp1005_72 () (_ BitVec 64))
(declare-fun temp1005_73 () (_ BitVec 64))
(declare-fun temp1005_74 () (_ BitVec 64))
(declare-fun temp1005_75 () (_ BitVec 64))
(declare-fun temp1005_76 () (_ BitVec 64))
(declare-fun temp1005_77 () (_ BitVec 64))
(declare-fun temp1005_78 () (_ BitVec 64))
(declare-fun temp1005_79 () (_ BitVec 64))
(declare-fun temp1005_80 () (_ BitVec 64))
(declare-fun temp1005_81 () (_ BitVec 64))
(declare-fun temp1005_82 () (_ BitVec 64))
(declare-fun temp1005_83 () (_ BitVec 64))
(declare-fun temp1005_84 () (_ BitVec 64))
(declare-fun temp1005_85 () (_ BitVec 64))
(declare-fun temp1005_86 () (_ BitVec 64))
(declare-fun temp1005_87 () (_ BitVec 64))
(declare-fun temp1005_88 () (_ BitVec 64))
(declare-fun temp1005_89 () (_ BitVec 64))
(declare-fun temp1005_90 () (_ BitVec 64))
(declare-fun temp1005_91 () (_ BitVec 64))
(declare-fun temp1005_92 () (_ BitVec 64))
(declare-fun temp1005_93 () (_ BitVec 64))
(declare-fun temp1005_94 () (_ BitVec 64))
(declare-fun temp1005_95 () (_ BitVec 64))
(declare-fun temp1005_96 () (_ BitVec 64))
(declare-fun temp1005_97 () (_ BitVec 64))
(declare-fun temp1005_98 () (_ BitVec 64))
(declare-fun temp1005_99 () (_ BitVec 64))
(declare-fun temp1005_100 () (_ BitVec 64))
(declare-fun temp1005_101 () (_ BitVec 64))
(declare-fun temp1005_102 () (_ BitVec 64))
(declare-fun temp1005_103 () (_ BitVec 64))
(declare-fun temp1005_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp1005_105 () (_ BitVec 64))
(declare-fun temp1005_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp1005_107 () (_ BitVec 64))
(declare-fun temp1005_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1005_109 () (_ BitVec 64))
(declare-fun temp1005_110 () (_ BitVec 64))
(declare-fun temp1005_111 () (_ BitVec 64))
(declare-fun temp1005_112 () (_ BitVec 64))
(declare-fun temp1005_113 () (_ BitVec 64))
(declare-fun temp1005_114 () (_ BitVec 64))
(declare-fun temp1005_115 () (_ BitVec 64))
(declare-fun temp1005_116 () (_ BitVec 64))
(declare-fun temp1005_117 () (_ BitVec 64))
(declare-fun temp1005_118 () (_ BitVec 64))
(declare-fun temp1005_119 () (_ BitVec 64))
(declare-fun temp1005_120 () (_ BitVec 64))
(declare-fun temp1005_121 () (_ BitVec 64))
(declare-fun temp1005_122 () (_ BitVec 64))
(declare-fun temp1005_123 () (_ BitVec 64))
(declare-fun temp1005_124 () (_ BitVec 64))
(declare-fun temp1005_126 () (_ BitVec 64))
(declare-fun temp1005_127 () (_ BitVec 64))
(declare-fun temp1005_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp1005_128 () (_ BitVec 64))
(declare-fun temp1005_129 () (_ BitVec 64))
(declare-fun temp1005_131 () (_ BitVec 64))
(declare-fun temp1005_132 () (_ BitVec 64))
(declare-fun temp1005_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp1005_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp1005_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp1005_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp1005_136 () (_ BitVec 64))
(declare-fun temp1005_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp1005_139 () (_ BitVec 64))
(declare-fun temp1005_140 () (_ BitVec 64))
(declare-fun temp1005_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp1005_141 () (_ BitVec 64))
(declare-fun temp1005_143 () (_ BitVec 64))
(declare-fun temp1005_144 () (_ BitVec 64))
(declare-fun temp1005_142 () (_ BitVec 64))
(declare-fun temp1005_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp1005_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp1005_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp1005_148 () (_ BitVec 64))
(declare-fun temp1005_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp1005_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp1005_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun temp1005_152 () (_ BitVec 64))
(assert (= temp1005_1 #x0000000000000001))
(assert (= var465453 temp1005_1))
(assert (= temp1005_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp1005_2)))
(assert (= temp1005_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp1005_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp1005_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp1005_4)))
(assert (= temp1005_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp1005_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp1005_6 #x0000000000000000))
(assert (= var465488 temp1005_6))
(assert (= temp1005_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp1005_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp1005_8 #x0000000000000001))
(assert (= var465522 temp1005_8))
(assert (= temp1005_10 #x0000000000000000))
(assert (= temp1005_9 temp1005_10))
(assert (= temp1005_12 #x0000000000000001))
(assert (= temp1005_11 temp1005_12))
(assert (= temp1005_13 #x0000000000000000))
(assert (= var863614 temp1005_13))
(assert (= temp1005_14 #x0000000000000001))
(assert (= var863635 temp1005_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp1005_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp1005_15)))
(assert (= temp1005_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1005_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1005_17 #x0000000000000000))
(assert (= var997373 temp1005_17))
(assert (= temp1005_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp1005_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1005_19 #x0000000000000000))
(assert (= var997418 temp1005_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp1005_20 #x0000000000000000))
(assert (= temp1005_21 temp1005_20))
(assert (= temp1005_22 (select ARGNAME_padding_NAMEEND_VAL temp1005_21)))
(assert (= temp1005_23 #x0000000000000001))
(assert (= temp1005_24 temp1005_23))
(assert (= temp1005_25 (select ARGNAME_padding_NAMEEND_VAL temp1005_24)))
(assert (= temp1005_26 #x0000000000000002))
(assert (= temp1005_27 temp1005_26))
(assert (= temp1005_28 (select ARGNAME_padding_NAMEEND_VAL temp1005_27)))
(assert (= temp1005_29 #x0000000000000003))
(assert (= temp1005_30 temp1005_29))
(assert (= temp1005_31 (select ARGNAME_padding_NAMEEND_VAL temp1005_30)))
(assert (= temp1005_32 #x0000000000000004))
(assert (= temp1005_33 temp1005_32))
(assert (= temp1005_34 (select ARGNAME_padding_NAMEEND_VAL temp1005_33)))
(assert (= temp1005_35 #x0000000000000005))
(assert (= temp1005_36 temp1005_35))
(assert (= temp1005_37 (select ARGNAME_padding_NAMEEND_VAL temp1005_36)))
(assert (= temp1005_38 #x0000000000000000))
(assert (= temp1005_39 #x0000000000000000))
(assert (= temp1005_40 temp1005_39))
(assert (= temp1005_41 (select ARGNAME_padding_NAMEEND_VAL temp1005_40)))
(assert (= temp1005_42 #x0000000000000000))
(assert (= temp1005_43 #x0000000000000001))
(assert (= temp1005_44 temp1005_43))
(assert (= temp1005_45 (select ARGNAME_padding_NAMEEND_VAL temp1005_44)))
(assert (= temp1005_46 #x0000000000000000))
(assert (= temp1005_47 #x0000000000000002))
(assert (= temp1005_48 temp1005_47))
(assert (= temp1005_49 (select ARGNAME_padding_NAMEEND_VAL temp1005_48)))
(assert (= temp1005_50 #x0000000000000000))
(assert (= temp1005_51 #x0000000000000003))
(assert (= temp1005_52 temp1005_51))
(assert (= temp1005_53 (select ARGNAME_padding_NAMEEND_VAL temp1005_52)))
(assert (= temp1005_54 #x0000000000000000))
(assert (= temp1005_55 #x0000000000000004))
(assert (= temp1005_56 temp1005_55))
(assert (= temp1005_57 (select ARGNAME_padding_NAMEEND_VAL temp1005_56)))
(assert (= temp1005_58 #x0000000000000000))
(assert (= temp1005_59 #x0000000000000005))
(assert (= temp1005_60 temp1005_59))
(assert (= temp1005_61 (select ARGNAME_padding_NAMEEND_VAL temp1005_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp1005_41 temp1005_38)
             (bvslt temp1005_45 temp1005_42)
             (bvslt temp1005_49 temp1005_46)
             (bvslt temp1005_53 temp1005_50)
             (bvslt temp1005_57 temp1005_54)
             (bvslt temp1005_61 temp1005_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1005_62 #x0000000000000000))
(assert (= var1716002 temp1005_62))
(assert (= temp1005_63 #x0000000000000000))
(assert (= temp1005_64 temp1005_63))
(assert (= temp1005_65 (select ARGNAME_stride_NAMEEND_VAL temp1005_64)))
(assert (= temp1005_66 #x0000000000000001))
(assert (= temp1005_67 temp1005_66))
(assert (= temp1005_68 (select ARGNAME_stride_NAMEEND_VAL temp1005_67)))
(assert (= temp1005_69 #x0000000000000002))
(assert (= temp1005_70 temp1005_69))
(assert (= temp1005_71 (select ARGNAME_stride_NAMEEND_VAL temp1005_70)))
(assert (= temp1005_72 #x0000000000000003))
(assert (= temp1005_73 temp1005_72))
(assert (= temp1005_74 (select ARGNAME_stride_NAMEEND_VAL temp1005_73)))
(assert (= temp1005_75 #x0000000000000004))
(assert (= temp1005_76 temp1005_75))
(assert (= temp1005_77 (select ARGNAME_stride_NAMEEND_VAL temp1005_76)))
(assert (= temp1005_78 #x0000000000000005))
(assert (= temp1005_79 temp1005_78))
(assert (= temp1005_80 (select ARGNAME_stride_NAMEEND_VAL temp1005_79)))
(assert (= temp1005_81 #x0000000000000000))
(assert (= temp1005_82 #x0000000000000000))
(assert (= temp1005_83 temp1005_82))
(assert (= temp1005_84 (select ARGNAME_stride_NAMEEND_VAL temp1005_83)))
(assert (= temp1005_85 #x0000000000000000))
(assert (= temp1005_86 #x0000000000000001))
(assert (= temp1005_87 temp1005_86))
(assert (= temp1005_88 (select ARGNAME_stride_NAMEEND_VAL temp1005_87)))
(assert (= temp1005_89 #x0000000000000000))
(assert (= temp1005_90 #x0000000000000002))
(assert (= temp1005_91 temp1005_90))
(assert (= temp1005_92 (select ARGNAME_stride_NAMEEND_VAL temp1005_91)))
(assert (= temp1005_93 #x0000000000000000))
(assert (= temp1005_94 #x0000000000000003))
(assert (= temp1005_95 temp1005_94))
(assert (= temp1005_96 (select ARGNAME_stride_NAMEEND_VAL temp1005_95)))
(assert (= temp1005_97 #x0000000000000000))
(assert (= temp1005_98 #x0000000000000004))
(assert (= temp1005_99 temp1005_98))
(assert (= temp1005_100 (select ARGNAME_stride_NAMEEND_VAL temp1005_99)))
(assert (= temp1005_101 #x0000000000000000))
(assert (= temp1005_102 #x0000000000000005))
(assert (= temp1005_103 temp1005_102))
(assert (= temp1005_104 (select ARGNAME_stride_NAMEEND_VAL temp1005_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp1005_84 temp1005_81)
             (bvsle temp1005_88 temp1005_85)
             (bvsle temp1005_92 temp1005_89)
             (bvsle temp1005_96 temp1005_93)
             (bvsle temp1005_100 temp1005_97)
             (bvsle temp1005_104 temp1005_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1005_105 #x0000000000000000))
(assert (= var1716023 temp1005_105))
(assert (= temp1005_106 #x0000000000000000))
(assert (= var1704114 temp1005_106))
(assert (= temp1005_107 #x0000000000000000))
(assert (= temp1005_108 temp1005_107))
(assert (= temp1005_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1005_108)))
(assert (= temp1005_110 #x0000000000000001))
(assert (= temp1005_111 temp1005_110))
(assert (= temp1005_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1005_111)))
(assert (= temp1005_113 #x0000000000000002))
(assert (= temp1005_114 temp1005_113))
(assert (= temp1005_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1005_114)))
(assert (= temp1005_116 #x0000000000000003))
(assert (= temp1005_117 temp1005_116))
(assert (= temp1005_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1005_117)))
(assert (= temp1005_119 #x0000000000000004))
(assert (= temp1005_120 temp1005_119))
(assert (= temp1005_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1005_120)))
(assert (= temp1005_122 #x0000000000000005))
(assert (= temp1005_123 temp1005_122))
(assert (= temp1005_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1005_123)))
(assert (= temp1005_126 var1704114))
(assert (= temp1005_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1005_126)))
(assert (= temp1005_125 temp1005_127))
(assert (= var1716068
   (ite (bvslt temp1005_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1005_128 #x0000000000000000))
(assert (= var1716068 temp1005_128))
(assert (= temp1005_129 #x0000000000000000))
(assert (= var1704114 temp1005_129))
(assert (= temp1005_131 var1704114))
(assert (= temp1005_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1005_131)))
(assert (= temp1005_130 temp1005_132))
(assert (= var1716090 (bvsmod temp1005_130 ARGNAME_groups_NAMEEND)))
(assert (= temp1005_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp1005_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp1005_134 #x0000000000000001))
(assert (= var1716091 temp1005_134))
(assert (= var1716110 var1716000))
(assert (= temp1005_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp1005_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp1005_136 #x0000000000000001))
(assert (= var1716111 temp1005_136))
(assert (= temp1005_137 #x0000000000000001))
(assert (= var1705002 temp1005_137))
(assert (= temp1005_139 var1705002))
(assert (= temp1005_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1005_139)))
(assert (= temp1005_138 temp1005_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp1005_138)))
(assert (= temp1005_141 #x0000000000000000))
(assert (= var1704114 temp1005_141))
(assert (= temp1005_143 var1704114))
(assert (= temp1005_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1005_143)))
(assert (= temp1005_142 temp1005_144))
(assert (= temp1005_145 #x0000000000000002))
(assert (= var1979241 temp1005_145))
(assert (= temp1005_146 #x0000000000000001))
(assert (= var1716281 temp1005_146))
(assert (= temp1005_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1005_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1005_148 #x0000000000000001))
(assert (= var997490 temp1005_148))
(assert (= temp1005_149 #x0000000000000001))
(assert (= var997620 temp1005_149))
(assert (= var3486185 var997620))
(assert (= temp1005_150 #x0000000000000000))
(assert (= var3686207 temp1005_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp1005_151 #x0000000000000002))
(assert (= var3815043 temp1005_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= temp1005_152 #x0000000000000001))
(assert (= var997490 temp1005_152))
(model-add temp1005_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp1005_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp1005_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp1005_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp1005_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp1005_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






