(declare-fun temp34_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp34_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp34_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp34_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp34_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp34_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp34_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp34_8 () (_ BitVec 64))
(declare-fun temp34_10 () (_ BitVec 64))
(declare-fun temp34_9 () (_ BitVec 64))
(declare-fun temp34_12 () (_ BitVec 64))
(declare-fun temp34_11 () (_ BitVec 64))
(declare-fun temp34_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp34_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp34_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp34_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp34_17 () (_ BitVec 64))
(declare-fun temp34_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp34_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp34_20 () (_ BitVec 64))
(declare-fun temp34_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp34_22 () (_ BitVec 64))
(declare-fun temp34_23 () (_ BitVec 64))
(declare-fun temp34_24 () (_ BitVec 64))
(declare-fun temp34_25 () (_ BitVec 64))
(declare-fun temp34_26 () (_ BitVec 64))
(declare-fun temp34_27 () (_ BitVec 64))
(declare-fun temp34_28 () (_ BitVec 64))
(declare-fun temp34_29 () (_ BitVec 64))
(declare-fun temp34_30 () (_ BitVec 64))
(declare-fun temp34_31 () (_ BitVec 64))
(declare-fun temp34_32 () (_ BitVec 64))
(declare-fun temp34_33 () (_ BitVec 64))
(declare-fun temp34_34 () (_ BitVec 64))
(declare-fun temp34_35 () (_ BitVec 64))
(declare-fun temp34_36 () (_ BitVec 64))
(declare-fun temp34_37 () (_ BitVec 64))
(declare-fun temp34_38 () (_ BitVec 64))
(declare-fun temp34_39 () (_ BitVec 64))
(declare-fun temp34_40 () (_ BitVec 64))
(declare-fun temp34_41 () (_ BitVec 64))
(declare-fun temp34_42 () (_ BitVec 64))
(declare-fun temp34_43 () (_ BitVec 64))
(declare-fun temp34_44 () (_ BitVec 64))
(declare-fun temp34_45 () (_ BitVec 64))
(declare-fun temp34_46 () (_ BitVec 64))
(declare-fun temp34_47 () (_ BitVec 64))
(declare-fun temp34_48 () (_ BitVec 64))
(declare-fun temp34_49 () (_ BitVec 64))
(declare-fun temp34_50 () (_ BitVec 64))
(declare-fun temp34_51 () (_ BitVec 64))
(declare-fun temp34_52 () (_ BitVec 64))
(declare-fun temp34_53 () (_ BitVec 64))
(declare-fun temp34_54 () (_ BitVec 64))
(declare-fun temp34_55 () (_ BitVec 64))
(declare-fun temp34_56 () (_ BitVec 64))
(declare-fun temp34_57 () (_ BitVec 64))
(declare-fun temp34_58 () (_ BitVec 64))
(declare-fun temp34_59 () (_ BitVec 64))
(declare-fun temp34_60 () (_ BitVec 64))
(declare-fun temp34_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp34_62 () (_ BitVec 64))
(declare-fun temp34_63 () (_ BitVec 64))
(declare-fun temp34_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp34_65 () (_ BitVec 64))
(declare-fun temp34_66 () (_ BitVec 64))
(declare-fun temp34_67 () (_ BitVec 64))
(declare-fun temp34_68 () (_ BitVec 64))
(declare-fun temp34_69 () (_ BitVec 64))
(declare-fun temp34_70 () (_ BitVec 64))
(declare-fun temp34_71 () (_ BitVec 64))
(declare-fun temp34_72 () (_ BitVec 64))
(declare-fun temp34_73 () (_ BitVec 64))
(declare-fun temp34_74 () (_ BitVec 64))
(declare-fun temp34_75 () (_ BitVec 64))
(declare-fun temp34_76 () (_ BitVec 64))
(declare-fun temp34_77 () (_ BitVec 64))
(declare-fun temp34_78 () (_ BitVec 64))
(declare-fun temp34_79 () (_ BitVec 64))
(declare-fun temp34_80 () (_ BitVec 64))
(declare-fun temp34_81 () (_ BitVec 64))
(declare-fun temp34_82 () (_ BitVec 64))
(declare-fun temp34_83 () (_ BitVec 64))
(declare-fun temp34_84 () (_ BitVec 64))
(declare-fun temp34_85 () (_ BitVec 64))
(declare-fun temp34_86 () (_ BitVec 64))
(declare-fun temp34_87 () (_ BitVec 64))
(declare-fun temp34_88 () (_ BitVec 64))
(declare-fun temp34_89 () (_ BitVec 64))
(declare-fun temp34_90 () (_ BitVec 64))
(declare-fun temp34_91 () (_ BitVec 64))
(declare-fun temp34_92 () (_ BitVec 64))
(declare-fun temp34_93 () (_ BitVec 64))
(declare-fun temp34_94 () (_ BitVec 64))
(declare-fun temp34_95 () (_ BitVec 64))
(declare-fun temp34_96 () (_ BitVec 64))
(declare-fun temp34_97 () (_ BitVec 64))
(declare-fun temp34_98 () (_ BitVec 64))
(declare-fun temp34_99 () (_ BitVec 64))
(declare-fun temp34_100 () (_ BitVec 64))
(declare-fun temp34_101 () (_ BitVec 64))
(declare-fun temp34_102 () (_ BitVec 64))
(declare-fun temp34_103 () (_ BitVec 64))
(declare-fun temp34_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp34_105 () (_ BitVec 64))
(declare-fun temp34_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp34_107 () (_ BitVec 64))
(declare-fun temp34_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp34_109 () (_ BitVec 64))
(declare-fun temp34_110 () (_ BitVec 64))
(declare-fun temp34_111 () (_ BitVec 64))
(declare-fun temp34_112 () (_ BitVec 64))
(declare-fun temp34_113 () (_ BitVec 64))
(declare-fun temp34_114 () (_ BitVec 64))
(declare-fun temp34_115 () (_ BitVec 64))
(declare-fun temp34_116 () (_ BitVec 64))
(declare-fun temp34_117 () (_ BitVec 64))
(declare-fun temp34_118 () (_ BitVec 64))
(declare-fun temp34_119 () (_ BitVec 64))
(declare-fun temp34_120 () (_ BitVec 64))
(declare-fun temp34_121 () (_ BitVec 64))
(declare-fun temp34_122 () (_ BitVec 64))
(declare-fun temp34_123 () (_ BitVec 64))
(declare-fun temp34_124 () (_ BitVec 64))
(declare-fun temp34_126 () (_ BitVec 64))
(declare-fun temp34_127 () (_ BitVec 64))
(declare-fun temp34_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp34_128 () (_ BitVec 64))
(declare-fun temp34_129 () (_ BitVec 64))
(declare-fun temp34_131 () (_ BitVec 64))
(declare-fun temp34_132 () (_ BitVec 64))
(declare-fun temp34_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp34_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp34_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp34_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp34_136 () (_ BitVec 64))
(declare-fun temp34_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp34_139 () (_ BitVec 64))
(declare-fun temp34_140 () (_ BitVec 64))
(declare-fun temp34_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp34_141 () (_ BitVec 64))
(declare-fun temp34_143 () (_ BitVec 64))
(declare-fun temp34_144 () (_ BitVec 64))
(declare-fun temp34_142 () (_ BitVec 64))
(declare-fun temp34_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp34_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp34_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp34_148 () (_ BitVec 64))
(declare-fun temp34_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp34_150 () (_ BitVec 64))
(declare-fun var3686207 () (_ BitVec 64))
(declare-fun var3686209 () (_ BitVec 64))
(declare-fun var3686166 () (_ BitVec 64))
(declare-fun var997633 () (_ BitVec 64))
(declare-fun temp34_151 () (_ BitVec 64))
(declare-fun var3815043 () (_ BitVec 64))
(declare-fun var3815045 () (_ BitVec 64))
(declare-fun var3880588 () (_ BitVec 64))
(declare-fun var3880589 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var997820 () (_ BitVec 64))
(declare-fun temp34_152 () (_ BitVec 64))
(declare-fun var997821 () (_ BitVec 64))
(declare-fun var5193549 () (_ BitVec 64))
(declare-fun temp34_154 () (_ BitVec 64))
(declare-fun temp34_153 () (_ BitVec 64))
(declare-fun temp34_155 () (_ BitVec 64))
(declare-fun var5770730 () (_ BitVec 64))
(declare-fun temp34_157 () (_ BitVec 64))
(declare-fun temp34_156 () (_ BitVec 64))
(declare-fun temp34_158 () (_ BitVec 64))
(assert (= temp34_1 #x0000000000000001))
(assert (= var465453 temp34_1))
(assert (= temp34_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp34_2)))
(assert (= temp34_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp34_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp34_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp34_4)))
(assert (= temp34_5 #x0000000000000000))
(assert (= var465487 (ite (= var465486 temp34_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp34_6 #x0000000000000000))
(assert (= var465488 temp34_6))
(assert (= temp34_7 #x0000000000000000))
(assert (= var465522 (ite (= var465485 temp34_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp34_8 #x0000000000000001))
(assert (= var465522 temp34_8))
(assert (= temp34_10 #x0000000000000000))
(assert (= temp34_9 temp34_10))
(assert (= temp34_12 #x0000000000000001))
(assert (= temp34_11 temp34_12))
(assert (= temp34_13 #x0000000000000000))
(assert (= var863614 temp34_13))
(assert (= temp34_14 #x0000000000000001))
(assert (= var863635 temp34_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp34_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp34_15)))
(assert (= temp34_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp34_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp34_17 #x0000000000000000))
(assert (= var997373 temp34_17))
(assert (= temp34_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp34_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp34_19 #x0000000000000000))
(assert (= var997418 temp34_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp34_20 #x0000000000000000))
(assert (= temp34_21 temp34_20))
(assert (= temp34_22 (select ARGNAME_padding_NAMEEND_VAL temp34_21)))
(assert (= temp34_23 #x0000000000000001))
(assert (= temp34_24 temp34_23))
(assert (= temp34_25 (select ARGNAME_padding_NAMEEND_VAL temp34_24)))
(assert (= temp34_26 #x0000000000000002))
(assert (= temp34_27 temp34_26))
(assert (= temp34_28 (select ARGNAME_padding_NAMEEND_VAL temp34_27)))
(assert (= temp34_29 #x0000000000000003))
(assert (= temp34_30 temp34_29))
(assert (= temp34_31 (select ARGNAME_padding_NAMEEND_VAL temp34_30)))
(assert (= temp34_32 #x0000000000000004))
(assert (= temp34_33 temp34_32))
(assert (= temp34_34 (select ARGNAME_padding_NAMEEND_VAL temp34_33)))
(assert (= temp34_35 #x0000000000000005))
(assert (= temp34_36 temp34_35))
(assert (= temp34_37 (select ARGNAME_padding_NAMEEND_VAL temp34_36)))
(assert (= temp34_38 #x0000000000000000))
(assert (= temp34_39 #x0000000000000000))
(assert (= temp34_40 temp34_39))
(assert (= temp34_41 (select ARGNAME_padding_NAMEEND_VAL temp34_40)))
(assert (= temp34_42 #x0000000000000000))
(assert (= temp34_43 #x0000000000000001))
(assert (= temp34_44 temp34_43))
(assert (= temp34_45 (select ARGNAME_padding_NAMEEND_VAL temp34_44)))
(assert (= temp34_46 #x0000000000000000))
(assert (= temp34_47 #x0000000000000002))
(assert (= temp34_48 temp34_47))
(assert (= temp34_49 (select ARGNAME_padding_NAMEEND_VAL temp34_48)))
(assert (= temp34_50 #x0000000000000000))
(assert (= temp34_51 #x0000000000000003))
(assert (= temp34_52 temp34_51))
(assert (= temp34_53 (select ARGNAME_padding_NAMEEND_VAL temp34_52)))
(assert (= temp34_54 #x0000000000000000))
(assert (= temp34_55 #x0000000000000004))
(assert (= temp34_56 temp34_55))
(assert (= temp34_57 (select ARGNAME_padding_NAMEEND_VAL temp34_56)))
(assert (= temp34_58 #x0000000000000000))
(assert (= temp34_59 #x0000000000000005))
(assert (= temp34_60 temp34_59))
(assert (= temp34_61 (select ARGNAME_padding_NAMEEND_VAL temp34_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp34_41 temp34_38)
             (bvslt temp34_45 temp34_42)
             (bvslt temp34_49 temp34_46)
             (bvslt temp34_53 temp34_50)
             (bvslt temp34_57 temp34_54)
             (bvslt temp34_61 temp34_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp34_62 #x0000000000000000))
(assert (= var1716002 temp34_62))
(assert (= temp34_63 #x0000000000000000))
(assert (= temp34_64 temp34_63))
(assert (= temp34_65 (select ARGNAME_stride_NAMEEND_VAL temp34_64)))
(assert (= temp34_66 #x0000000000000001))
(assert (= temp34_67 temp34_66))
(assert (= temp34_68 (select ARGNAME_stride_NAMEEND_VAL temp34_67)))
(assert (= temp34_69 #x0000000000000002))
(assert (= temp34_70 temp34_69))
(assert (= temp34_71 (select ARGNAME_stride_NAMEEND_VAL temp34_70)))
(assert (= temp34_72 #x0000000000000003))
(assert (= temp34_73 temp34_72))
(assert (= temp34_74 (select ARGNAME_stride_NAMEEND_VAL temp34_73)))
(assert (= temp34_75 #x0000000000000004))
(assert (= temp34_76 temp34_75))
(assert (= temp34_77 (select ARGNAME_stride_NAMEEND_VAL temp34_76)))
(assert (= temp34_78 #x0000000000000005))
(assert (= temp34_79 temp34_78))
(assert (= temp34_80 (select ARGNAME_stride_NAMEEND_VAL temp34_79)))
(assert (= temp34_81 #x0000000000000000))
(assert (= temp34_82 #x0000000000000000))
(assert (= temp34_83 temp34_82))
(assert (= temp34_84 (select ARGNAME_stride_NAMEEND_VAL temp34_83)))
(assert (= temp34_85 #x0000000000000000))
(assert (= temp34_86 #x0000000000000001))
(assert (= temp34_87 temp34_86))
(assert (= temp34_88 (select ARGNAME_stride_NAMEEND_VAL temp34_87)))
(assert (= temp34_89 #x0000000000000000))
(assert (= temp34_90 #x0000000000000002))
(assert (= temp34_91 temp34_90))
(assert (= temp34_92 (select ARGNAME_stride_NAMEEND_VAL temp34_91)))
(assert (= temp34_93 #x0000000000000000))
(assert (= temp34_94 #x0000000000000003))
(assert (= temp34_95 temp34_94))
(assert (= temp34_96 (select ARGNAME_stride_NAMEEND_VAL temp34_95)))
(assert (= temp34_97 #x0000000000000000))
(assert (= temp34_98 #x0000000000000004))
(assert (= temp34_99 temp34_98))
(assert (= temp34_100 (select ARGNAME_stride_NAMEEND_VAL temp34_99)))
(assert (= temp34_101 #x0000000000000000))
(assert (= temp34_102 #x0000000000000005))
(assert (= temp34_103 temp34_102))
(assert (= temp34_104 (select ARGNAME_stride_NAMEEND_VAL temp34_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp34_84 temp34_81)
             (bvsle temp34_88 temp34_85)
             (bvsle temp34_92 temp34_89)
             (bvsle temp34_96 temp34_93)
             (bvsle temp34_100 temp34_97)
             (bvsle temp34_104 temp34_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp34_105 #x0000000000000000))
(assert (= var1716023 temp34_105))
(assert (= temp34_106 #x0000000000000000))
(assert (= var1704114 temp34_106))
(assert (= temp34_107 #x0000000000000000))
(assert (= temp34_108 temp34_107))
(assert (= temp34_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp34_108)))
(assert (= temp34_110 #x0000000000000001))
(assert (= temp34_111 temp34_110))
(assert (= temp34_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp34_111)))
(assert (= temp34_113 #x0000000000000002))
(assert (= temp34_114 temp34_113))
(assert (= temp34_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp34_114)))
(assert (= temp34_116 #x0000000000000003))
(assert (= temp34_117 temp34_116))
(assert (= temp34_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp34_117)))
(assert (= temp34_119 #x0000000000000004))
(assert (= temp34_120 temp34_119))
(assert (= temp34_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp34_120)))
(assert (= temp34_122 #x0000000000000005))
(assert (= temp34_123 temp34_122))
(assert (= temp34_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp34_123)))
(assert (= temp34_126 var1704114))
(assert (= temp34_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp34_126)))
(assert (= temp34_125 temp34_127))
(assert (= var1716068
   (ite (bvslt temp34_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp34_128 #x0000000000000000))
(assert (= var1716068 temp34_128))
(assert (= temp34_129 #x0000000000000000))
(assert (= var1704114 temp34_129))
(assert (= temp34_131 var1704114))
(assert (= temp34_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp34_131)))
(assert (= temp34_130 temp34_132))
(assert (= var1716090 (bvsmod temp34_130 ARGNAME_groups_NAMEEND)))
(assert (= temp34_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp34_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp34_134 #x0000000000000001))
(assert (= var1716091 temp34_134))
(assert (= var1716110 var1716000))
(assert (= temp34_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp34_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp34_136 #x0000000000000001))
(assert (= var1716111 temp34_136))
(assert (= temp34_137 #x0000000000000001))
(assert (= var1705002 temp34_137))
(assert (= temp34_139 var1705002))
(assert (= temp34_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp34_139)))
(assert (= temp34_138 temp34_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp34_138)))
(assert (= temp34_141 #x0000000000000000))
(assert (= var1704114 temp34_141))
(assert (= temp34_143 var1704114))
(assert (= temp34_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp34_143)))
(assert (= temp34_142 temp34_144))
(assert (= temp34_145 #x0000000000000002))
(assert (= var1979241 temp34_145))
(assert (= temp34_146 #x0000000000000001))
(assert (= var1716281 temp34_146))
(assert (= temp34_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp34_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp34_148 #x0000000000000001))
(assert (= var997490 temp34_148))
(assert (= temp34_149 #x0000000000000001))
(assert (= var997620 temp34_149))
(assert (= var3486185 var997620))
(assert (= temp34_150 #x0000000000000000))
(assert (= var3686207 temp34_150))
(assert (= var3686209 var3686207))
(assert (= var3686166 var3686209))
(assert (= var997633 var3686166))
(assert (= temp34_151 #x0000000000000002))
(assert (= var3815043 temp34_151))
(assert (= var3815045 (bvsub ARGNAME_weight_NAMEEND_DIM var3815043)))
(assert (= var3880588 var3815043))
(assert (= var3880589 var3815045))
(assert (= var4469136 var997633))
(assert (= var997820 var997345))
(assert (= temp34_152 #x0000000000000000))
(assert (= var997821
   (ite (distinct var997820 temp34_152) #x0000000000000001 #x0000000000000000)))
(assert (= var5193549 var997821))
(assert (= temp34_154 #x0000000000000001))
(assert (= temp34_153 temp34_154))
(assert (= temp34_155 #x0000000000000001))
(assert (= var5770730 temp34_155))
(assert (= temp34_157 #xffffffffffffffff))
(assert (= temp34_156 temp34_157))
(assert (= temp34_158 #x0000000000000001))
(assert (= var997490 temp34_158))
(model-add temp34_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp34_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp34_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp34_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp34_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp34_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)






