(declare-fun temp1178_1 () (_ BitVec 64))
(declare-fun var465453 () (_ BitVec 64))
(declare-fun temp1178_2 () (_ BitVec 64))
(declare-fun var465469 () (_ BitVec 64))
(declare-fun temp1178_3 () (_ BitVec 64))
(declare-fun var465473 () (_ BitVec 64))
(declare-fun var465478 () (_ BitVec 64))
(declare-fun var465479 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var465480 () (_ BitVec 64))
(declare-fun var465483 () (_ BitVec 64))
(declare-fun var465484 () (_ BitVec 64))
(declare-fun var465485 () (_ BitVec 64))
(declare-fun temp1178_4 () (_ BitVec 64))
(declare-fun var465486 () (_ BitVec 64))
(declare-fun temp1178_5 () (_ BitVec 64))
(declare-fun var465487 () (_ BitVec 64))
(declare-fun temp1178_6 () (_ BitVec 64))
(declare-fun var465488 () (_ BitVec 64))
(declare-fun temp1178_7 () (_ BitVec 64))
(declare-fun var465522 () (_ BitVec 64))
(declare-fun temp1178_8 () (_ BitVec 64))
(declare-fun temp1178_10 () (_ BitVec 64))
(declare-fun temp1178_9 () (_ BitVec 64))
(declare-fun temp1178_12 () (_ BitVec 64))
(declare-fun temp1178_11 () (_ BitVec 64))
(declare-fun temp1178_13 () (_ BitVec 64))
(declare-fun var863614 () (_ BitVec 64))
(declare-fun temp1178_14 () (_ BitVec 64))
(declare-fun var863635 () (_ BitVec 64))
(declare-fun var997081 () (_ BitVec 64))
(declare-fun var997085 () (_ BitVec 64))
(declare-fun var997343 () (_ BitVec 64))
(declare-fun var997345 () (_ BitVec 64))
(declare-fun temp1178_15 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var997372 () (_ BitVec 64))
(declare-fun temp1178_16 () (_ BitVec 64))
(declare-fun var997373 () (_ BitVec 64))
(declare-fun temp1178_17 () (_ BitVec 64))
(declare-fun temp1178_18 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var997418 () (_ BitVec 64))
(declare-fun temp1178_19 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var1716000 () (_ BitVec 64))
(declare-fun temp1178_20 () (_ BitVec 64))
(declare-fun temp1178_21 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1178_22 () (_ BitVec 64))
(declare-fun temp1178_23 () (_ BitVec 64))
(declare-fun temp1178_24 () (_ BitVec 64))
(declare-fun temp1178_25 () (_ BitVec 64))
(declare-fun temp1178_26 () (_ BitVec 64))
(declare-fun temp1178_27 () (_ BitVec 64))
(declare-fun temp1178_28 () (_ BitVec 64))
(declare-fun temp1178_29 () (_ BitVec 64))
(declare-fun temp1178_30 () (_ BitVec 64))
(declare-fun temp1178_31 () (_ BitVec 64))
(declare-fun temp1178_32 () (_ BitVec 64))
(declare-fun temp1178_33 () (_ BitVec 64))
(declare-fun temp1178_34 () (_ BitVec 64))
(declare-fun temp1178_35 () (_ BitVec 64))
(declare-fun temp1178_36 () (_ BitVec 64))
(declare-fun temp1178_37 () (_ BitVec 64))
(declare-fun temp1178_38 () (_ BitVec 64))
(declare-fun temp1178_39 () (_ BitVec 64))
(declare-fun temp1178_40 () (_ BitVec 64))
(declare-fun temp1178_41 () (_ BitVec 64))
(declare-fun temp1178_42 () (_ BitVec 64))
(declare-fun temp1178_43 () (_ BitVec 64))
(declare-fun temp1178_44 () (_ BitVec 64))
(declare-fun temp1178_45 () (_ BitVec 64))
(declare-fun temp1178_46 () (_ BitVec 64))
(declare-fun temp1178_47 () (_ BitVec 64))
(declare-fun temp1178_48 () (_ BitVec 64))
(declare-fun temp1178_49 () (_ BitVec 64))
(declare-fun temp1178_50 () (_ BitVec 64))
(declare-fun temp1178_51 () (_ BitVec 64))
(declare-fun temp1178_52 () (_ BitVec 64))
(declare-fun temp1178_53 () (_ BitVec 64))
(declare-fun temp1178_54 () (_ BitVec 64))
(declare-fun temp1178_55 () (_ BitVec 64))
(declare-fun temp1178_56 () (_ BitVec 64))
(declare-fun temp1178_57 () (_ BitVec 64))
(declare-fun temp1178_58 () (_ BitVec 64))
(declare-fun temp1178_59 () (_ BitVec 64))
(declare-fun temp1178_60 () (_ BitVec 64))
(declare-fun temp1178_61 () (_ BitVec 64))
(declare-fun var1716002 () (_ BitVec 64))
(declare-fun temp1178_62 () (_ BitVec 64))
(declare-fun temp1178_63 () (_ BitVec 64))
(declare-fun temp1178_64 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1178_65 () (_ BitVec 64))
(declare-fun temp1178_66 () (_ BitVec 64))
(declare-fun temp1178_67 () (_ BitVec 64))
(declare-fun temp1178_68 () (_ BitVec 64))
(declare-fun temp1178_69 () (_ BitVec 64))
(declare-fun temp1178_70 () (_ BitVec 64))
(declare-fun temp1178_71 () (_ BitVec 64))
(declare-fun temp1178_72 () (_ BitVec 64))
(declare-fun temp1178_73 () (_ BitVec 64))
(declare-fun temp1178_74 () (_ BitVec 64))
(declare-fun temp1178_75 () (_ BitVec 64))
(declare-fun temp1178_76 () (_ BitVec 64))
(declare-fun temp1178_77 () (_ BitVec 64))
(declare-fun temp1178_78 () (_ BitVec 64))
(declare-fun temp1178_79 () (_ BitVec 64))
(declare-fun temp1178_80 () (_ BitVec 64))
(declare-fun temp1178_81 () (_ BitVec 64))
(declare-fun temp1178_82 () (_ BitVec 64))
(declare-fun temp1178_83 () (_ BitVec 64))
(declare-fun temp1178_84 () (_ BitVec 64))
(declare-fun temp1178_85 () (_ BitVec 64))
(declare-fun temp1178_86 () (_ BitVec 64))
(declare-fun temp1178_87 () (_ BitVec 64))
(declare-fun temp1178_88 () (_ BitVec 64))
(declare-fun temp1178_89 () (_ BitVec 64))
(declare-fun temp1178_90 () (_ BitVec 64))
(declare-fun temp1178_91 () (_ BitVec 64))
(declare-fun temp1178_92 () (_ BitVec 64))
(declare-fun temp1178_93 () (_ BitVec 64))
(declare-fun temp1178_94 () (_ BitVec 64))
(declare-fun temp1178_95 () (_ BitVec 64))
(declare-fun temp1178_96 () (_ BitVec 64))
(declare-fun temp1178_97 () (_ BitVec 64))
(declare-fun temp1178_98 () (_ BitVec 64))
(declare-fun temp1178_99 () (_ BitVec 64))
(declare-fun temp1178_100 () (_ BitVec 64))
(declare-fun temp1178_101 () (_ BitVec 64))
(declare-fun temp1178_102 () (_ BitVec 64))
(declare-fun temp1178_103 () (_ BitVec 64))
(declare-fun temp1178_104 () (_ BitVec 64))
(declare-fun var1716023 () (_ BitVec 64))
(declare-fun temp1178_105 () (_ BitVec 64))
(declare-fun temp1178_106 () (_ BitVec 64))
(declare-fun var1704114 () (_ BitVec 64))
(declare-fun temp1178_107 () (_ BitVec 64))
(declare-fun temp1178_108 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1178_109 () (_ BitVec 64))
(declare-fun temp1178_110 () (_ BitVec 64))
(declare-fun temp1178_111 () (_ BitVec 64))
(declare-fun temp1178_112 () (_ BitVec 64))
(declare-fun temp1178_113 () (_ BitVec 64))
(declare-fun temp1178_114 () (_ BitVec 64))
(declare-fun temp1178_115 () (_ BitVec 64))
(declare-fun temp1178_116 () (_ BitVec 64))
(declare-fun temp1178_117 () (_ BitVec 64))
(declare-fun temp1178_118 () (_ BitVec 64))
(declare-fun temp1178_119 () (_ BitVec 64))
(declare-fun temp1178_120 () (_ BitVec 64))
(declare-fun temp1178_121 () (_ BitVec 64))
(declare-fun temp1178_122 () (_ BitVec 64))
(declare-fun temp1178_123 () (_ BitVec 64))
(declare-fun temp1178_124 () (_ BitVec 64))
(declare-fun temp1178_126 () (_ BitVec 64))
(declare-fun temp1178_127 () (_ BitVec 64))
(declare-fun temp1178_125 () (_ BitVec 64))
(declare-fun var1716068 () (_ BitVec 64))
(declare-fun temp1178_128 () (_ BitVec 64))
(declare-fun temp1178_129 () (_ BitVec 64))
(declare-fun temp1178_131 () (_ BitVec 64))
(declare-fun temp1178_132 () (_ BitVec 64))
(declare-fun temp1178_130 () (_ BitVec 64))
(declare-fun var1716090 () (_ BitVec 64))
(declare-fun temp1178_133 () (_ BitVec 64))
(declare-fun var1716091 () (_ BitVec 64))
(declare-fun temp1178_134 () (_ BitVec 64))
(declare-fun var1716110 () (_ BitVec 64))
(declare-fun temp1178_135 () (_ BitVec 64))
(declare-fun var1716111 () (_ BitVec 64))
(declare-fun temp1178_136 () (_ BitVec 64))
(declare-fun temp1178_137 () (_ BitVec 64))
(declare-fun var1705002 () (_ BitVec 64))
(declare-fun temp1178_139 () (_ BitVec 64))
(declare-fun temp1178_140 () (_ BitVec 64))
(declare-fun temp1178_138 () (_ BitVec 64))
(declare-fun var1716123 () (_ BitVec 64))
(declare-fun temp1178_141 () (_ BitVec 64))
(declare-fun temp1178_143 () (_ BitVec 64))
(declare-fun temp1178_144 () (_ BitVec 64))
(declare-fun temp1178_142 () (_ BitVec 64))
(declare-fun temp1178_145 () (_ BitVec 64))
(declare-fun var1979241 () (_ BitVec 64))
(declare-fun temp1178_146 () (_ BitVec 64))
(declare-fun var1716281 () (_ BitVec 64))
(declare-fun temp1178_147 () (_ BitVec 64))
(declare-fun var997490 () (_ BitVec 64))
(declare-fun temp1178_148 () (_ BitVec 64))
(declare-fun temp1178_149 () (_ BitVec 64))
(declare-fun var997620 () (_ BitVec 64))
(declare-fun var3486185 () (_ BitVec 64))
(declare-fun temp1178_150 () (_ BitVec 64))
(declare-fun var3880579 () (_ BitVec 64))
(declare-fun var3880581 () (_ BitVec 64))
(declare-fun var3946124 () (_ BitVec 64))
(declare-fun var3946125 () (_ BitVec 64))
(declare-fun var997926 () (_ BitVec 64))
(declare-fun temp1178_151 () (_ BitVec 64))
(declare-fun var997927 () (_ BitVec 64))
(declare-fun temp1178_152 () (_ BitVec 64))
(assert (= temp1178_1 #x0000000000000001))
(assert (= var465453 temp1178_1))
(assert (= temp1178_2 #x0000000000000001))
(assert (= var465469 (bvadd var465453 temp1178_2)))
(assert (= temp1178_3 #x0000000000000002))
(assert (= var465473 (bvadd var465453 temp1178_3)))
(assert (= var465478 var465473))
(assert (= var465479
   (ite (= ARGNAME_input_NAMEEND_DIM var465478)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465480 var465479))
(assert (= var465483 var465469))
(assert (= var465484
   (ite (distinct ARGNAME_input_NAMEEND_DIM var465483)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var465485 var465480))
(assert (= temp1178_4 #x0000000000000001))
(assert (= var465486 (bvand var465485 temp1178_4)))
(assert (= temp1178_5 #x0000000000000000))
(assert (= var465487
   (ite (= var465486 temp1178_5) #x0000000000000001 #x0000000000000000)))
(assert (= var465488 (bvand var465484 var465487)))
(assert (= temp1178_6 #x0000000000000000))
(assert (= var465488 temp1178_6))
(assert (= temp1178_7 #x0000000000000000))
(assert (= var465522
   (ite (= var465485 temp1178_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp1178_8 #x0000000000000001))
(assert (= var465522 temp1178_8))
(assert (= temp1178_10 #x0000000000000000))
(assert (= temp1178_9 temp1178_10))
(assert (= temp1178_12 #x0000000000000001))
(assert (= temp1178_11 temp1178_12))
(assert (= temp1178_13 #x0000000000000000))
(assert (= var863614 temp1178_13))
(assert (= temp1178_14 #x0000000000000001))
(assert (= var863635 temp1178_14))
(assert (= var997081 var863614))
(assert (= var997085 var863635))
(assert (= var997343 var997081))
(assert (= var997345 var997085))
(assert (= temp1178_15 #xfffffffffffffffe))
(assert (= var997372 (bvadd ARGNAME_weight_NAMEEND_DIM temp1178_15)))
(assert (= temp1178_16 #x0000000000000003))
(assert (= var997373
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1178_16)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1178_17 #x0000000000000000))
(assert (= var997373 temp1178_17))
(assert (= temp1178_18 #x0000000000000001))
(assert (= var997418
   (ite (bvslt ARGNAME_groups_NAMEEND temp1178_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1178_19 #x0000000000000000))
(assert (= var997418 temp1178_19))
(assert (= ARGNAME_stride_NAMEEND_LEN var997372))
(assert (= ARGNAME_padding_NAMEEND_LEN var997372))
(assert (= ARGNAME_dilation_NAMEEND_LEN var997372))
(assert (= var1716000 var997343))
(assert (= temp1178_20 #x0000000000000000))
(assert (= temp1178_21 temp1178_20))
(assert (= temp1178_22 (select ARGNAME_padding_NAMEEND_VAL temp1178_21)))
(assert (= temp1178_23 #x0000000000000001))
(assert (= temp1178_24 temp1178_23))
(assert (= temp1178_25 (select ARGNAME_padding_NAMEEND_VAL temp1178_24)))
(assert (= temp1178_26 #x0000000000000002))
(assert (= temp1178_27 temp1178_26))
(assert (= temp1178_28 (select ARGNAME_padding_NAMEEND_VAL temp1178_27)))
(assert (= temp1178_29 #x0000000000000003))
(assert (= temp1178_30 temp1178_29))
(assert (= temp1178_31 (select ARGNAME_padding_NAMEEND_VAL temp1178_30)))
(assert (= temp1178_32 #x0000000000000004))
(assert (= temp1178_33 temp1178_32))
(assert (= temp1178_34 (select ARGNAME_padding_NAMEEND_VAL temp1178_33)))
(assert (= temp1178_35 #x0000000000000005))
(assert (= temp1178_36 temp1178_35))
(assert (= temp1178_37 (select ARGNAME_padding_NAMEEND_VAL temp1178_36)))
(assert (= temp1178_38 #x0000000000000000))
(assert (= temp1178_39 #x0000000000000000))
(assert (= temp1178_40 temp1178_39))
(assert (= temp1178_41 (select ARGNAME_padding_NAMEEND_VAL temp1178_40)))
(assert (= temp1178_42 #x0000000000000000))
(assert (= temp1178_43 #x0000000000000001))
(assert (= temp1178_44 temp1178_43))
(assert (= temp1178_45 (select ARGNAME_padding_NAMEEND_VAL temp1178_44)))
(assert (= temp1178_46 #x0000000000000000))
(assert (= temp1178_47 #x0000000000000002))
(assert (= temp1178_48 temp1178_47))
(assert (= temp1178_49 (select ARGNAME_padding_NAMEEND_VAL temp1178_48)))
(assert (= temp1178_50 #x0000000000000000))
(assert (= temp1178_51 #x0000000000000003))
(assert (= temp1178_52 temp1178_51))
(assert (= temp1178_53 (select ARGNAME_padding_NAMEEND_VAL temp1178_52)))
(assert (= temp1178_54 #x0000000000000000))
(assert (= temp1178_55 #x0000000000000004))
(assert (= temp1178_56 temp1178_55))
(assert (= temp1178_57 (select ARGNAME_padding_NAMEEND_VAL temp1178_56)))
(assert (= temp1178_58 #x0000000000000000))
(assert (= temp1178_59 #x0000000000000005))
(assert (= temp1178_60 temp1178_59))
(assert (= temp1178_61 (select ARGNAME_padding_NAMEEND_VAL temp1178_60)))
(assert (= var1716002
   (ite (and true
             (bvslt temp1178_41 temp1178_38)
             (bvslt temp1178_45 temp1178_42)
             (bvslt temp1178_49 temp1178_46)
             (bvslt temp1178_53 temp1178_50)
             (bvslt temp1178_57 temp1178_54)
             (bvslt temp1178_61 temp1178_58))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1178_62 #x0000000000000000))
(assert (= var1716002 temp1178_62))
(assert (= temp1178_63 #x0000000000000000))
(assert (= temp1178_64 temp1178_63))
(assert (= temp1178_65 (select ARGNAME_stride_NAMEEND_VAL temp1178_64)))
(assert (= temp1178_66 #x0000000000000001))
(assert (= temp1178_67 temp1178_66))
(assert (= temp1178_68 (select ARGNAME_stride_NAMEEND_VAL temp1178_67)))
(assert (= temp1178_69 #x0000000000000002))
(assert (= temp1178_70 temp1178_69))
(assert (= temp1178_71 (select ARGNAME_stride_NAMEEND_VAL temp1178_70)))
(assert (= temp1178_72 #x0000000000000003))
(assert (= temp1178_73 temp1178_72))
(assert (= temp1178_74 (select ARGNAME_stride_NAMEEND_VAL temp1178_73)))
(assert (= temp1178_75 #x0000000000000004))
(assert (= temp1178_76 temp1178_75))
(assert (= temp1178_77 (select ARGNAME_stride_NAMEEND_VAL temp1178_76)))
(assert (= temp1178_78 #x0000000000000005))
(assert (= temp1178_79 temp1178_78))
(assert (= temp1178_80 (select ARGNAME_stride_NAMEEND_VAL temp1178_79)))
(assert (= temp1178_81 #x0000000000000000))
(assert (= temp1178_82 #x0000000000000000))
(assert (= temp1178_83 temp1178_82))
(assert (= temp1178_84 (select ARGNAME_stride_NAMEEND_VAL temp1178_83)))
(assert (= temp1178_85 #x0000000000000000))
(assert (= temp1178_86 #x0000000000000001))
(assert (= temp1178_87 temp1178_86))
(assert (= temp1178_88 (select ARGNAME_stride_NAMEEND_VAL temp1178_87)))
(assert (= temp1178_89 #x0000000000000000))
(assert (= temp1178_90 #x0000000000000002))
(assert (= temp1178_91 temp1178_90))
(assert (= temp1178_92 (select ARGNAME_stride_NAMEEND_VAL temp1178_91)))
(assert (= temp1178_93 #x0000000000000000))
(assert (= temp1178_94 #x0000000000000003))
(assert (= temp1178_95 temp1178_94))
(assert (= temp1178_96 (select ARGNAME_stride_NAMEEND_VAL temp1178_95)))
(assert (= temp1178_97 #x0000000000000000))
(assert (= temp1178_98 #x0000000000000004))
(assert (= temp1178_99 temp1178_98))
(assert (= temp1178_100 (select ARGNAME_stride_NAMEEND_VAL temp1178_99)))
(assert (= temp1178_101 #x0000000000000000))
(assert (= temp1178_102 #x0000000000000005))
(assert (= temp1178_103 temp1178_102))
(assert (= temp1178_104 (select ARGNAME_stride_NAMEEND_VAL temp1178_103)))
(assert (= var1716023
   (ite (and true
             (bvsle temp1178_84 temp1178_81)
             (bvsle temp1178_88 temp1178_85)
             (bvsle temp1178_92 temp1178_89)
             (bvsle temp1178_96 temp1178_93)
             (bvsle temp1178_100 temp1178_97)
             (bvsle temp1178_104 temp1178_101))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1178_105 #x0000000000000000))
(assert (= var1716023 temp1178_105))
(assert (= temp1178_106 #x0000000000000000))
(assert (= var1704114 temp1178_106))
(assert (= temp1178_107 #x0000000000000000))
(assert (= temp1178_108 temp1178_107))
(assert (= temp1178_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1178_108)))
(assert (= temp1178_110 #x0000000000000001))
(assert (= temp1178_111 temp1178_110))
(assert (= temp1178_112 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1178_111)))
(assert (= temp1178_113 #x0000000000000002))
(assert (= temp1178_114 temp1178_113))
(assert (= temp1178_115 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1178_114)))
(assert (= temp1178_116 #x0000000000000003))
(assert (= temp1178_117 temp1178_116))
(assert (= temp1178_118 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1178_117)))
(assert (= temp1178_119 #x0000000000000004))
(assert (= temp1178_120 temp1178_119))
(assert (= temp1178_121 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1178_120)))
(assert (= temp1178_122 #x0000000000000005))
(assert (= temp1178_123 temp1178_122))
(assert (= temp1178_124 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1178_123)))
(assert (= temp1178_126 var1704114))
(assert (= temp1178_127 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1178_126)))
(assert (= temp1178_125 temp1178_127))
(assert (= var1716068
   (ite (bvslt temp1178_125 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1178_128 #x0000000000000000))
(assert (= var1716068 temp1178_128))
(assert (= temp1178_129 #x0000000000000000))
(assert (= var1704114 temp1178_129))
(assert (= temp1178_131 var1704114))
(assert (= temp1178_132 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1178_131)))
(assert (= temp1178_130 temp1178_132))
(assert (= var1716090 (bvsmod temp1178_130 ARGNAME_groups_NAMEEND)))
(assert (= temp1178_133 #x0000000000000000))
(assert (= var1716091
   (ite (= var1716090 temp1178_133) #x0000000000000001 #x0000000000000000)))
(assert (= temp1178_134 #x0000000000000001))
(assert (= var1716091 temp1178_134))
(assert (= var1716110 var1716000))
(assert (= temp1178_135 #x0000000000000000))
(assert (= var1716111
   (ite (= var1716110 temp1178_135) #x0000000000000001 #x0000000000000000)))
(assert (= temp1178_136 #x0000000000000001))
(assert (= var1716111 temp1178_136))
(assert (= temp1178_137 #x0000000000000001))
(assert (= var1705002 temp1178_137))
(assert (= temp1178_139 var1705002))
(assert (= temp1178_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1178_139)))
(assert (= temp1178_138 temp1178_140))
(assert (= var1716123 (bvmul ARGNAME_groups_NAMEEND temp1178_138)))
(assert (= temp1178_141 #x0000000000000000))
(assert (= var1704114 temp1178_141))
(assert (= temp1178_143 var1704114))
(assert (= temp1178_144 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1178_143)))
(assert (= temp1178_142 temp1178_144))
(assert (= temp1178_145 #x0000000000000002))
(assert (= var1979241 temp1178_145))
(assert (= temp1178_146 #x0000000000000001))
(assert (= var1716281 temp1178_146))
(assert (= temp1178_147 #x0000000000000003))
(assert (= var997490
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1178_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1178_148 #x0000000000000001))
(assert (= var997490 temp1178_148))
(assert (= temp1178_149 #x0000000000000001))
(assert (= var997620 temp1178_149))
(assert (= var3486185 var997620))
(assert (= temp1178_150 #x0000000000000002))
(assert (= var3880579 temp1178_150))
(assert (= var3880581 (bvsub ARGNAME_weight_NAMEEND_DIM var3880579)))
(assert (= var3946124 var3880579))
(assert (= var3946125 var3880581))
(assert (= var997926 var997345))
(assert (= temp1178_151 #x0000000000000000))
(assert (= var997927
   (ite (distinct var997926 temp1178_151) #x0000000000000001 #x0000000000000000)))
(assert (= temp1178_152 #x0000000000000001))
(assert (= var997490 temp1178_152))
(model-add temp1178_1 () (_ BitVec 64) #x0000000000000001)
(model-add var465453 () (_ BitVec 64) #x0000000000000001)
(model-add temp1178_2 () (_ BitVec 64) #x0000000000000001)
(model-add var465469 () (_ BitVec 64) #x0000000000000002)
(model-add temp1178_3 () (_ BitVec 64) #x0000000000000002)
(model-add var465473 () (_ BitVec 64) #x0000000000000003)
(model-add var465478 () (_ BitVec 64) #x0000000000000003)
(model-add var465479
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465480
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add var465483 () (_ BitVec 64) #x0000000000000002)
(model-add var465484
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000002)
                #x0000000000000000
                #x0000000000000001))
(model-add var465485
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000001
                #x0000000000000000))
(model-add temp1178_4 () (_ BitVec 64) #x0000000000000001)
(model-add var465486
           ()
           (_ BitVec 64)
           (concat #b000000000000000000000000000000000000000000000000000000000000000
                   (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                        #b1
                        #b0)))
(model-add temp1178_5 () (_ BitVec 64) #x0000000000000000)
(model-add var465487
           ()
           (_ BitVec 64)
           (ite (= ARGNAME_input_NAMEEND_DIM #x0000000000000003)
                #x0000000000000000
                #x0000000000000001))
(model-add temp1178_6 () (_ BitVec 64) #x0000000000000000)
(model-add var465488 () (_ BitVec 64) #x0000000000000000)





