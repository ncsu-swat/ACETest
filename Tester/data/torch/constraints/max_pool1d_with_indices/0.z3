(declare-fun temp1_1 () (_ BitVec 64))
(declare-fun temp1_2 () (_ BitVec 64))
(declare-fun var68410 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1_3 () (_ BitVec 64))
(declare-fun var134804 () (_ BitVec 64))
(declare-fun temp1_4 () (_ BitVec 64))
(declare-fun var134805 () (_ BitVec 64))
(declare-fun var134820 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var134821 () (_ BitVec 64))
(declare-fun temp1_5 () (_ BitVec 64))
(declare-fun var134825 () (_ BitVec 64))
(declare-fun temp1_6 () (_ BitVec 64))
(declare-fun temp1_7 () (_ BitVec 64))
(declare-fun ARGNAME_kernel_size_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var262978 () (_ BitVec 64))
(declare-fun temp1_8 () (_ BitVec 64))
(declare-fun temp1_9 () (_ BitVec 64))
(declare-fun var328514 () (_ BitVec 64))
(declare-fun temp1_10 () (_ BitVec 64))
(declare-fun temp1_11 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var394050 () (_ BitVec 64))
(declare-fun temp1_12 () (_ BitVec 64))
(declare-fun temp1_13 () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var459586 () (_ BitVec 64))
(declare-fun temp1_14 () (_ BitVec 64))
(declare-fun temp1_15 () (_ BitVec 64))
(declare-fun var721761 () (_ BitVec 64))
(declare-fun temp1_17 () (_ BitVec 64))
(declare-fun temp1_16 () (_ BitVec 64))
(declare-fun temp1_18 () (_ BitVec 64))
(declare-fun var65700 () (_ BitVec 64))
(declare-fun temp1_19 () (_ BitVec 64))
(declare-fun temp1_20 () (_ BitVec 64))
(declare-fun ARGNAME_kernel_size_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1_21 () (_ BitVec 64))
(declare-fun temp1_22 () (_ BitVec 64))
(declare-fun temp1_23 () (_ BitVec 64))
(declare-fun temp1_24 () (_ BitVec 64))
(declare-fun temp1_25 () (_ BitVec 64))
(declare-fun temp1_26 () (_ BitVec 64))
(declare-fun temp1_27 () (_ BitVec 64))
(declare-fun temp1_28 () (_ BitVec 64))
(declare-fun temp1_29 () (_ BitVec 64))
(declare-fun temp1_30 () (_ BitVec 64))
(declare-fun temp1_31 () (_ BitVec 64))
(declare-fun temp1_32 () (_ BitVec 64))
(declare-fun temp1_33 () (_ BitVec 64))
(declare-fun temp1_34 () (_ BitVec 64))
(declare-fun temp1_35 () (_ BitVec 64))
(declare-fun temp1_36 () (_ BitVec 64))
(declare-fun temp1_38 () (_ BitVec 64))
(declare-fun temp1_39 () (_ BitVec 64))
(declare-fun temp1_37 () (_ BitVec 64))
(declare-fun temp1_41 () (_ BitVec 64))
(declare-fun temp1_40 () (_ BitVec 64))
(declare-fun temp1_43 () (_ BitVec 64))
(declare-fun temp1_42 () (_ BitVec 64))
(declare-fun temp1_44 () (_ BitVec 64))
(declare-fun temp1_45 () (_ BitVec 64))
(declare-fun temp1_46 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1_47 () (_ BitVec 64))
(declare-fun temp1_48 () (_ BitVec 64))
(declare-fun temp1_49 () (_ BitVec 64))
(declare-fun temp1_50 () (_ BitVec 64))
(declare-fun temp1_51 () (_ BitVec 64))
(declare-fun temp1_52 () (_ BitVec 64))
(declare-fun temp1_53 () (_ BitVec 64))
(declare-fun temp1_54 () (_ BitVec 64))
(declare-fun temp1_55 () (_ BitVec 64))
(declare-fun temp1_56 () (_ BitVec 64))
(declare-fun temp1_57 () (_ BitVec 64))
(declare-fun temp1_58 () (_ BitVec 64))
(declare-fun temp1_59 () (_ BitVec 64))
(declare-fun temp1_60 () (_ BitVec 64))
(declare-fun temp1_61 () (_ BitVec 64))
(declare-fun temp1_62 () (_ BitVec 64))
(declare-fun temp1_64 () (_ BitVec 64))
(declare-fun temp1_65 () (_ BitVec 64))
(declare-fun temp1_63 () (_ BitVec 64))
(declare-fun temp1_67 () (_ BitVec 64))
(declare-fun temp1_66 () (_ BitVec 64))
(declare-fun temp1_68 () (_ BitVec 64))
(declare-fun temp1_69 () (_ BitVec 64))
(declare-fun temp1_70 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1_71 () (_ BitVec 64))
(declare-fun temp1_72 () (_ BitVec 64))
(declare-fun temp1_73 () (_ BitVec 64))
(declare-fun temp1_74 () (_ BitVec 64))
(declare-fun temp1_75 () (_ BitVec 64))
(declare-fun temp1_76 () (_ BitVec 64))
(declare-fun temp1_77 () (_ BitVec 64))
(declare-fun temp1_78 () (_ BitVec 64))
(declare-fun temp1_79 () (_ BitVec 64))
(declare-fun temp1_80 () (_ BitVec 64))
(declare-fun temp1_81 () (_ BitVec 64))
(declare-fun temp1_82 () (_ BitVec 64))
(declare-fun temp1_83 () (_ BitVec 64))
(declare-fun temp1_84 () (_ BitVec 64))
(declare-fun temp1_85 () (_ BitVec 64))
(declare-fun temp1_86 () (_ BitVec 64))
(declare-fun temp1_88 () (_ BitVec 64))
(declare-fun temp1_89 () (_ BitVec 64))
(declare-fun temp1_87 () (_ BitVec 64))
(declare-fun temp1_91 () (_ BitVec 64))
(declare-fun temp1_90 () (_ BitVec 64))
(declare-fun temp1_93 () (_ BitVec 64))
(declare-fun temp1_92 () (_ BitVec 64))
(declare-fun temp1_94 () (_ BitVec 64))
(declare-fun temp1_95 () (_ BitVec 64))
(declare-fun temp1_96 () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1_97 () (_ BitVec 64))
(declare-fun temp1_98 () (_ BitVec 64))
(declare-fun temp1_99 () (_ BitVec 64))
(declare-fun temp1_100 () (_ BitVec 64))
(declare-fun temp1_101 () (_ BitVec 64))
(declare-fun temp1_102 () (_ BitVec 64))
(declare-fun temp1_103 () (_ BitVec 64))
(declare-fun temp1_104 () (_ BitVec 64))
(declare-fun temp1_105 () (_ BitVec 64))
(declare-fun temp1_106 () (_ BitVec 64))
(declare-fun temp1_107 () (_ BitVec 64))
(declare-fun temp1_108 () (_ BitVec 64))
(declare-fun temp1_109 () (_ BitVec 64))
(declare-fun temp1_110 () (_ BitVec 64))
(declare-fun temp1_111 () (_ BitVec 64))
(declare-fun temp1_112 () (_ BitVec 64))
(declare-fun temp1_114 () (_ BitVec 64))
(declare-fun temp1_115 () (_ BitVec 64))
(declare-fun temp1_113 () (_ BitVec 64))
(declare-fun temp1_117 () (_ BitVec 64))
(declare-fun temp1_116 () (_ BitVec 64))
(declare-fun temp1_118 () (_ BitVec 64))
(declare-fun var1377176 () (_ BitVec 64))
(declare-fun temp1_119 () (_ BitVec 64))
(declare-fun var1573784 () (_ BitVec 64))
(assert (= temp1_1 #x0000000000000000))
(assert (= var68410
   (ite (= ARGNAME_stride_NAMEEND_LEN temp1_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_2 #x0000000000000000))
(assert (= var68410 temp1_2))
(assert (= temp1_3 #x0000000000000002))
(assert (= var134804 temp1_3))
(assert (= temp1_4 #x0000000000000004))
(assert (= var134805 temp1_4))
(assert (= var134820 var134804))
(assert (= var134821
   (ite (bvslt ARGNAME_input_NAMEEND_DIM var134820)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_5 #x0000000000000000))
(assert (= var134821 temp1_5))
(assert (= var134825
   (ite (bvslt ARGNAME_input_NAMEEND_DIM var134805)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_6 #x0000000000000001))
(assert (= var134825 temp1_6))
(assert (= temp1_7 #x0000000000000001))
(assert (= var262978
   (ite (= ARGNAME_kernel_size_NAMEEND_LEN temp1_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_8 #x0000000000000001))
(assert (= var262978 temp1_8))
(assert (= temp1_9 #x0000000000000001))
(assert (= var328514
   (ite (= ARGNAME_stride_NAMEEND_LEN temp1_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_10 #x0000000000000001))
(assert (= var328514 temp1_10))
(assert (= temp1_11 #x0000000000000001))
(assert (= var394050
   (ite (= ARGNAME_padding_NAMEEND_LEN temp1_11)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_12 #x0000000000000001))
(assert (= var394050 temp1_12))
(assert (= temp1_13 #x0000000000000001))
(assert (= var459586
   (ite (= ARGNAME_dilation_NAMEEND_LEN temp1_13)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_14 #x0000000000000001))
(assert (= var459586 temp1_14))
(assert (= temp1_15 #xfffffffffffffffe))
(assert (= var721761 temp1_15))
(assert (= temp1_17 #x0000000000000001))
(assert (= temp1_16 temp1_17))
(assert (= temp1_18 #x0000000000000000))
(assert (= var65700 temp1_18))
(assert (= temp1_19 #x0000000000000000))
(assert (= temp1_20 temp1_19))
(assert (= temp1_21 (select ARGNAME_kernel_size_NAMEEND_VAL temp1_20)))
(assert (= temp1_22 #x0000000000000001))
(assert (= temp1_23 temp1_22))
(assert (= temp1_24 (select ARGNAME_kernel_size_NAMEEND_VAL temp1_23)))
(assert (= temp1_25 #x0000000000000002))
(assert (= temp1_26 temp1_25))
(assert (= temp1_27 (select ARGNAME_kernel_size_NAMEEND_VAL temp1_26)))
(assert (= temp1_28 #x0000000000000003))
(assert (= temp1_29 temp1_28))
(assert (= temp1_30 (select ARGNAME_kernel_size_NAMEEND_VAL temp1_29)))
(assert (= temp1_31 #x0000000000000004))
(assert (= temp1_32 temp1_31))
(assert (= temp1_33 (select ARGNAME_kernel_size_NAMEEND_VAL temp1_32)))
(assert (= temp1_34 #x0000000000000005))
(assert (= temp1_35 temp1_34))
(assert (= temp1_36 (select ARGNAME_kernel_size_NAMEEND_VAL temp1_35)))
(assert (= temp1_38 var65700))
(assert (= temp1_39 (select ARGNAME_kernel_size_NAMEEND_VAL temp1_38)))
(assert (= temp1_37 temp1_39))
(assert (= temp1_41 #x0000000000000002))
(assert (= temp1_40 temp1_41))
(assert (= temp1_43 #x0000000000000001))
(assert (= temp1_42 temp1_43))
(assert (= temp1_44 #x0000000000000000))
(assert (= var65700 temp1_44))
(assert (= temp1_45 #x0000000000000000))
(assert (= temp1_46 temp1_45))
(assert (= temp1_47 (select ARGNAME_stride_NAMEEND_VAL temp1_46)))
(assert (= temp1_48 #x0000000000000001))
(assert (= temp1_49 temp1_48))
(assert (= temp1_50 (select ARGNAME_stride_NAMEEND_VAL temp1_49)))
(assert (= temp1_51 #x0000000000000002))
(assert (= temp1_52 temp1_51))
(assert (= temp1_53 (select ARGNAME_stride_NAMEEND_VAL temp1_52)))
(assert (= temp1_54 #x0000000000000003))
(assert (= temp1_55 temp1_54))
(assert (= temp1_56 (select ARGNAME_stride_NAMEEND_VAL temp1_55)))
(assert (= temp1_57 #x0000000000000004))
(assert (= temp1_58 temp1_57))
(assert (= temp1_59 (select ARGNAME_stride_NAMEEND_VAL temp1_58)))
(assert (= temp1_60 #x0000000000000005))
(assert (= temp1_61 temp1_60))
(assert (= temp1_62 (select ARGNAME_stride_NAMEEND_VAL temp1_61)))
(assert (= temp1_64 var65700))
(assert (= temp1_65 (select ARGNAME_stride_NAMEEND_VAL temp1_64)))
(assert (= temp1_63 temp1_65))
(assert (= temp1_67 #x0000000000000002))
(assert (= temp1_66 temp1_67))
(assert (= temp1_68 #x0000000000000000))
(assert (= var65700 temp1_68))
(assert (= temp1_69 #x0000000000000000))
(assert (= temp1_70 temp1_69))
(assert (= temp1_71 (select ARGNAME_padding_NAMEEND_VAL temp1_70)))
(assert (= temp1_72 #x0000000000000001))
(assert (= temp1_73 temp1_72))
(assert (= temp1_74 (select ARGNAME_padding_NAMEEND_VAL temp1_73)))
(assert (= temp1_75 #x0000000000000002))
(assert (= temp1_76 temp1_75))
(assert (= temp1_77 (select ARGNAME_padding_NAMEEND_VAL temp1_76)))
(assert (= temp1_78 #x0000000000000003))
(assert (= temp1_79 temp1_78))
(assert (= temp1_80 (select ARGNAME_padding_NAMEEND_VAL temp1_79)))
(assert (= temp1_81 #x0000000000000004))
(assert (= temp1_82 temp1_81))
(assert (= temp1_83 (select ARGNAME_padding_NAMEEND_VAL temp1_82)))
(assert (= temp1_84 #x0000000000000005))
(assert (= temp1_85 temp1_84))
(assert (= temp1_86 (select ARGNAME_padding_NAMEEND_VAL temp1_85)))
(assert (= temp1_88 var65700))
(assert (= temp1_89 (select ARGNAME_padding_NAMEEND_VAL temp1_88)))
(assert (= temp1_87 temp1_89))
(assert (= temp1_91 #x0000000000000002))
(assert (= temp1_90 temp1_91))
(assert (= temp1_93 #x0000000000000001))
(assert (= temp1_92 temp1_93))
(assert (= temp1_94 #x0000000000000000))
(assert (= var65700 temp1_94))
(assert (= temp1_95 #x0000000000000000))
(assert (= temp1_96 temp1_95))
(assert (= temp1_97 (select ARGNAME_dilation_NAMEEND_VAL temp1_96)))
(assert (= temp1_98 #x0000000000000001))
(assert (= temp1_99 temp1_98))
(assert (= temp1_100 (select ARGNAME_dilation_NAMEEND_VAL temp1_99)))
(assert (= temp1_101 #x0000000000000002))
(assert (= temp1_102 temp1_101))
(assert (= temp1_103 (select ARGNAME_dilation_NAMEEND_VAL temp1_102)))
(assert (= temp1_104 #x0000000000000003))
(assert (= temp1_105 temp1_104))
(assert (= temp1_106 (select ARGNAME_dilation_NAMEEND_VAL temp1_105)))
(assert (= temp1_107 #x0000000000000004))
(assert (= temp1_108 temp1_107))
(assert (= temp1_109 (select ARGNAME_dilation_NAMEEND_VAL temp1_108)))
(assert (= temp1_110 #x0000000000000005))
(assert (= temp1_111 temp1_110))
(assert (= temp1_112 (select ARGNAME_dilation_NAMEEND_VAL temp1_111)))
(assert (= temp1_114 var65700))
(assert (= temp1_115 (select ARGNAME_dilation_NAMEEND_VAL temp1_114)))
(assert (= temp1_113 temp1_115))
(assert (= temp1_117 #x0000000000000002))
(assert (= temp1_116 temp1_117))
(assert (= temp1_118 #xfffffffffffffffe))
(assert (= var1377176 temp1_118))
(assert (= temp1_119 #xfffffffffffffffe))
(assert (= var1573784 temp1_119))
(model-add temp1_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp1_2 () (_ BitVec 64) #x0000000000000000)
(model-add var68410 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_stride_NAMEEND_LEN
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000000 (bvnot #x0000000000000000)))











