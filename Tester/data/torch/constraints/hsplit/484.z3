(declare-fun temp1012_1 () (_ BitVec 64))
(declare-fun temp1012_2 () (_ BitVec 64))
(declare-fun var82411 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1012_3 () (_ BitVec 64))
(declare-fun var82440 () (_ BitVec 64))
(declare-fun var82441 () (_ BitVec 64))
(declare-fun temp1012_4 () (_ BitVec 64))
(declare-fun ARGNAME_sections_NAMEEND () (_ BitVec 64))
(declare-fun var82444 () (_ BitVec 64))
(declare-fun temp1012_5 () (_ BitVec 64))
(declare-fun var82455 () (_ BitVec 64))
(declare-fun temp1012_6 () (_ BitVec 64))
(declare-fun temp1012_7 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1012_8 () (_ BitVec 64))
(declare-fun temp1012_9 () (_ BitVec 64))
(declare-fun temp1012_10 () (_ BitVec 64))
(declare-fun temp1012_11 () (_ BitVec 64))
(declare-fun temp1012_12 () (_ BitVec 64))
(declare-fun temp1012_13 () (_ BitVec 64))
(declare-fun temp1012_14 () (_ BitVec 64))
(declare-fun temp1012_15 () (_ BitVec 64))
(declare-fun temp1012_16 () (_ BitVec 64))
(declare-fun temp1012_17 () (_ BitVec 64))
(declare-fun temp1012_18 () (_ BitVec 64))
(declare-fun temp1012_19 () (_ BitVec 64))
(declare-fun temp1012_20 () (_ BitVec 64))
(declare-fun temp1012_21 () (_ BitVec 64))
(declare-fun temp1012_22 () (_ BitVec 64))
(declare-fun temp1012_23 () (_ BitVec 64))
(declare-fun temp1012_25 () (_ BitVec 64))
(declare-fun temp1012_26 () (_ BitVec 64))
(declare-fun temp1012_24 () (_ BitVec 64))
(declare-fun var82459 () (_ BitVec 64))
(declare-fun temp1012_27 () (_ BitVec 64))
(declare-fun var82460 () (_ BitVec 64))
(declare-fun temp1012_28 () (_ BitVec 64))
(declare-fun var82496 () (_ BitVec 64))
(declare-fun var140605 () (_ BitVec 64))
(declare-fun temp1012_29 () (_ BitVec 64))
(declare-fun var140635 () (_ BitVec 64))
(declare-fun temp1012_30 () (_ BitVec 64))
(declare-fun temp1012_31 () (_ BitVec 64))
(declare-fun var140664 () (_ BitVec 64))
(declare-fun temp1012_32 () (_ BitVec 64))
(declare-fun temp1012_34 () (_ BitVec 64))
(declare-fun temp1012_33 () (_ BitVec 64))
(declare-fun temp1012_36 () (_ BitVec 64))
(declare-fun temp1012_35 () (_ BitVec 64))
(declare-fun var462146 () (_ BitVec 64))
(declare-fun temp1012_37 () (_ BitVec 64))
(declare-fun temp1012_38 () (_ BitVec 64))
(declare-fun var527687 () (_ BitVec 64))
(declare-fun var593234 () (_ BitVec 64))
(declare-fun temp1012_39 () (_ BitVec 64))
(declare-fun var1130139 () (_ BitVec 64))
(declare-fun temp1012_40 () (_ BitVec 64))
(declare-fun var1130188 () (_ BitVec 64))
(declare-fun temp1012_41 () (_ BitVec 64))
(declare-fun temp1012_42 () (_ BitVec 64))
(declare-fun var1380938 () (_ BitVec 64))
(declare-fun temp1012_43 () (_ BitVec 64))
(declare-fun var2101834 () (_ BitVec 64))
(declare-fun temp1012_44 () (_ BitVec 64))
(declare-fun var1130304 () (_ BitVec 64))
(declare-fun temp1012_45 () (_ BitVec 64))
(declare-fun var1130305 () (_ BitVec 64))
(declare-fun temp1012_46 () (_ BitVec 64))
(declare-fun temp1012_47 () (_ BitVec 64))
(declare-fun var1130349 () (_ BitVec 64))
(declare-fun temp1012_48 () (_ BitVec 64))
(declare-fun temp1012_49 () (_ BitVec 64))
(declare-fun var3488412 () (_ BitVec 64))
(declare-fun var3488416 () (_ BitVec 64))
(declare-fun temp1012_51 () (_ BitVec 64))
(declare-fun temp1012_50 () (_ BitVec 64))
(assert (= temp1012_1 #x0000000000000001))
(assert (= var82411
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp1012_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1012_2 #x0000000000000000))
(assert (= var82411 temp1012_2))
(assert (= temp1012_3 #x0000000000000001))
(assert (= var82440
   (ite (distinct ARGNAME_input_NAMEEND_DIM temp1012_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82441 var82440))
(assert (= temp1012_4 #x0000000000000000))
(assert (= var82444
   (ite (= ARGNAME_sections_NAMEEND temp1012_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1012_5 #x0000000000000000))
(assert (= var82444 temp1012_5))
(assert (= var82455 var82441))
(assert (= temp1012_6 #x0000000000000000))
(assert (= temp1012_7 temp1012_6))
(assert (= temp1012_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp1012_7)))
(assert (= temp1012_9 #x0000000000000001))
(assert (= temp1012_10 temp1012_9))
(assert (= temp1012_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp1012_10)))
(assert (= temp1012_12 #x0000000000000002))
(assert (= temp1012_13 temp1012_12))
(assert (= temp1012_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp1012_13)))
(assert (= temp1012_15 #x0000000000000003))
(assert (= temp1012_16 temp1012_15))
(assert (= temp1012_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp1012_16)))
(assert (= temp1012_18 #x0000000000000004))
(assert (= temp1012_19 temp1012_18))
(assert (= temp1012_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp1012_19)))
(assert (= temp1012_21 #x0000000000000005))
(assert (= temp1012_22 temp1012_21))
(assert (= temp1012_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp1012_22)))
(assert (= temp1012_25 var82455))
(assert (= temp1012_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp1012_25)))
(assert (= temp1012_24 temp1012_26))
(assert (= var82459 (bvsmod temp1012_24 ARGNAME_sections_NAMEEND)))
(assert (= temp1012_27 #x0000000000000000))
(assert (= var82460
   (ite (= var82459 temp1012_27) #x0000000000000001 #x0000000000000000)))
(assert (= temp1012_28 #x0000000000000001))
(assert (= var82460 temp1012_28))
(assert (= var82496 var82441))
(assert (= var140605 var82496))
(assert (= temp1012_29 #x0000000000000001))
(assert (= var140635
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp1012_29)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1012_30 #x0000000000000000))
(assert (= var140635 temp1012_30))
(assert (= temp1012_31 #x0000000000000001))
(assert (= var140664
   (ite (bvslt ARGNAME_sections_NAMEEND temp1012_31)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1012_32 #x0000000000000000))
(assert (= var140664 temp1012_32))
(assert (= temp1012_34 #x0000000000000000))
(assert (= temp1012_33 temp1012_34))
(assert (= temp1012_36 #x0000000000000000))
(assert (= temp1012_35 temp1012_36))
(assert (= var462146
   (ite (bvslt temp1012_35 ARGNAME_sections_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1012_37
   (ite (= var462146 #x0000000000000001) ARGNAME_sections_NAMEEND temp1012_35)))
(assert (= temp1012_38 #x0000000000000000))
(assert (= var527687 temp1012_38))
(assert (= var593234 var527687))
(assert (= temp1012_39 #x0000000000000001))
(assert (= var1130139 temp1012_39))
(assert (= temp1012_40 #x0000000000000000))
(assert (= var1130188
   (ite (= ARGNAME_input_NAMEEND_DIM temp1012_40)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1012_41 #x0000000000000000))
(assert (= var1130188 temp1012_41))
(assert (= temp1012_42 #x0000000000000005))
(assert (= var1380938 temp1012_42))
(assert (= temp1012_43 #x0000000000000005))
(assert (= var2101834 temp1012_43))
(assert (= temp1012_44 #xffffffffffffffff))
(assert (= var1130304 temp1012_44))
(assert (= temp1012_45 #x0000000000000001))
(assert (= var1130305
   (ite (bvslt var1130139 temp1012_45) #x0000000000000001 #x0000000000000000)))
(assert (= temp1012_46 #x0000000000000000))
(assert (= var1130305 temp1012_46))
(assert (= temp1012_47 #x0000000000000000))
(assert (= var1130349
   (ite (bvslt var1130304 temp1012_47) #x0000000000000001 #x0000000000000000)))
(assert (= temp1012_48 #x0000000000000001))
(assert (= var1130349 temp1012_48))
(assert (= temp1012_49 #x0000000000000000))
(assert (= var3488412 temp1012_49))
(assert (= var3488416 var1130139))
(assert (= temp1012_51 #x0000000000000000))
(assert (= temp1012_50 temp1012_51))
(model-add temp1012_1 () (_ BitVec 64) #x0000000000000001)
(model-add temp1012_2 () (_ BitVec 64) #x0000000000000000)
(model-add var82411 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000001 #x8000000000000000))
                #x0000000000000001
                (bvsub #x0000000000000001 #x0000000000000001)))






