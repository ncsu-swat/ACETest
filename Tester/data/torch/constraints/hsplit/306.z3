(declare-fun temp642_1 () (_ BitVec 64))
(declare-fun temp642_2 () (_ BitVec 64))
(declare-fun var82411 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp642_3 () (_ BitVec 64))
(declare-fun var82440 () (_ BitVec 64))
(declare-fun var82441 () (_ BitVec 64))
(declare-fun temp642_4 () (_ BitVec 64))
(declare-fun ARGNAME_sections_NAMEEND () (_ BitVec 64))
(declare-fun var82444 () (_ BitVec 64))
(declare-fun temp642_5 () (_ BitVec 64))
(declare-fun var82455 () (_ BitVec 64))
(declare-fun temp642_6 () (_ BitVec 64))
(declare-fun temp642_7 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp642_8 () (_ BitVec 64))
(declare-fun temp642_9 () (_ BitVec 64))
(declare-fun temp642_10 () (_ BitVec 64))
(declare-fun temp642_11 () (_ BitVec 64))
(declare-fun temp642_12 () (_ BitVec 64))
(declare-fun temp642_13 () (_ BitVec 64))
(declare-fun temp642_14 () (_ BitVec 64))
(declare-fun temp642_15 () (_ BitVec 64))
(declare-fun temp642_16 () (_ BitVec 64))
(declare-fun temp642_17 () (_ BitVec 64))
(declare-fun temp642_18 () (_ BitVec 64))
(declare-fun temp642_19 () (_ BitVec 64))
(declare-fun temp642_20 () (_ BitVec 64))
(declare-fun temp642_21 () (_ BitVec 64))
(declare-fun temp642_22 () (_ BitVec 64))
(declare-fun temp642_23 () (_ BitVec 64))
(declare-fun temp642_25 () (_ BitVec 64))
(declare-fun temp642_26 () (_ BitVec 64))
(declare-fun temp642_24 () (_ BitVec 64))
(declare-fun var82459 () (_ BitVec 64))
(declare-fun temp642_27 () (_ BitVec 64))
(declare-fun var82460 () (_ BitVec 64))
(declare-fun temp642_28 () (_ BitVec 64))
(declare-fun var82496 () (_ BitVec 64))
(declare-fun var140605 () (_ BitVec 64))
(declare-fun temp642_29 () (_ BitVec 64))
(declare-fun var140635 () (_ BitVec 64))
(declare-fun temp642_30 () (_ BitVec 64))
(declare-fun temp642_31 () (_ BitVec 64))
(declare-fun var140664 () (_ BitVec 64))
(declare-fun temp642_32 () (_ BitVec 64))
(declare-fun temp642_34 () (_ BitVec 64))
(declare-fun temp642_33 () (_ BitVec 64))
(declare-fun temp642_36 () (_ BitVec 64))
(declare-fun temp642_35 () (_ BitVec 64))
(declare-fun var462146 () (_ BitVec 64))
(declare-fun temp642_37 () (_ BitVec 64))
(declare-fun temp642_38 () (_ BitVec 64))
(declare-fun var527687 () (_ BitVec 64))
(declare-fun var593234 () (_ BitVec 64))
(declare-fun temp642_39 () (_ BitVec 64))
(declare-fun var1130139 () (_ BitVec 64))
(declare-fun temp642_40 () (_ BitVec 64))
(declare-fun var1130188 () (_ BitVec 64))
(declare-fun temp642_41 () (_ BitVec 64))
(declare-fun temp642_42 () (_ BitVec 64))
(declare-fun var1380938 () (_ BitVec 64))
(declare-fun temp642_43 () (_ BitVec 64))
(declare-fun var2101834 () (_ BitVec 64))
(declare-fun temp642_44 () (_ BitVec 64))
(declare-fun var1130305 () (_ BitVec 64))
(declare-fun temp642_45 () (_ BitVec 64))
(declare-fun temp642_46 () (_ BitVec 64))
(declare-fun var1130369 () (_ BitVec 64))
(declare-fun var1130381 () (_ BitVec 64))
(declare-fun temp642_47 () (_ BitVec 64))
(declare-fun var1130393 () (_ BitVec 64))
(declare-fun var1130394 () (_ BitVec 64))
(declare-fun var1130395 () (_ BitVec 64))
(declare-fun var1130396 () (_ BitVec 64))
(declare-fun temp642_48 () (_ BitVec 64))
(declare-fun var3160732 () (_ BitVec 64))
(declare-fun var3160733 () (_ BitVec 64))
(declare-fun var3160734 () (_ BitVec 64))
(declare-fun var3160736 () (_ BitVec 64))
(declare-fun temp642_50 () (_ BitVec 64))
(declare-fun temp642_49 () (_ BitVec 64))
(assert (= temp642_1 #x0000000000000001))
(assert (= var82411
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp642_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_2 #x0000000000000000))
(assert (= var82411 temp642_2))
(assert (= temp642_3 #x0000000000000001))
(assert (= var82440
   (ite (distinct ARGNAME_input_NAMEEND_DIM temp642_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82441 var82440))
(assert (= temp642_4 #x0000000000000000))
(assert (= var82444
   (ite (= ARGNAME_sections_NAMEEND temp642_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_5 #x0000000000000000))
(assert (= var82444 temp642_5))
(assert (= var82455 var82441))
(assert (= temp642_6 #x0000000000000000))
(assert (= temp642_7 temp642_6))
(assert (= temp642_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp642_7)))
(assert (= temp642_9 #x0000000000000001))
(assert (= temp642_10 temp642_9))
(assert (= temp642_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp642_10)))
(assert (= temp642_12 #x0000000000000002))
(assert (= temp642_13 temp642_12))
(assert (= temp642_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp642_13)))
(assert (= temp642_15 #x0000000000000003))
(assert (= temp642_16 temp642_15))
(assert (= temp642_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp642_16)))
(assert (= temp642_18 #x0000000000000004))
(assert (= temp642_19 temp642_18))
(assert (= temp642_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp642_19)))
(assert (= temp642_21 #x0000000000000005))
(assert (= temp642_22 temp642_21))
(assert (= temp642_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp642_22)))
(assert (= temp642_25 var82455))
(assert (= temp642_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp642_25)))
(assert (= temp642_24 temp642_26))
(assert (= var82459 (bvsmod temp642_24 ARGNAME_sections_NAMEEND)))
(assert (= temp642_27 #x0000000000000000))
(assert (= var82460 (ite (= var82459 temp642_27) #x0000000000000001 #x0000000000000000)))
(assert (= temp642_28 #x0000000000000001))
(assert (= var82460 temp642_28))
(assert (= var82496 var82441))
(assert (= var140605 var82496))
(assert (= temp642_29 #x0000000000000001))
(assert (= var140635
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp642_29)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_30 #x0000000000000000))
(assert (= var140635 temp642_30))
(assert (= temp642_31 #x0000000000000001))
(assert (= var140664
   (ite (bvslt ARGNAME_sections_NAMEEND temp642_31)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_32 #x0000000000000000))
(assert (= var140664 temp642_32))
(assert (= temp642_34 #x0000000000000000))
(assert (= temp642_33 temp642_34))
(assert (= temp642_36 #x0000000000000000))
(assert (= temp642_35 temp642_36))
(assert (= var462146
   (ite (bvslt temp642_35 ARGNAME_sections_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_37
   (ite (= var462146 #x0000000000000001) ARGNAME_sections_NAMEEND temp642_35)))
(assert (= temp642_38 #x0000000000000000))
(assert (= var527687 temp642_38))
(assert (= var593234 var527687))
(assert (= temp642_39 #x0000000000000001))
(assert (= var1130139 temp642_39))
(assert (= temp642_40 #x0000000000000000))
(assert (= var1130188
   (ite (= ARGNAME_input_NAMEEND_DIM temp642_40)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_41 #x0000000000000000))
(assert (= var1130188 temp642_41))
(assert (= temp642_42 #x0000000000000005))
(assert (= var1380938 temp642_42))
(assert (= temp642_43 #x0000000000000005))
(assert (= var2101834 temp642_43))
(assert (= temp642_44 #x0000000000000001))
(assert (= var1130305
   (ite (bvslt var1130139 temp642_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp642_45 #x0000000000000000))
(assert (= var1130305 temp642_45))
(assert (= temp642_46 #x0000000000000000))
(assert (= var1130369 temp642_46))
(assert (= var1130381 var1130369))
(assert (= temp642_47 #xffffffffffffffff))
(assert (= var1130393 (bvxor var1130369 temp642_47)))
(assert (= var1130394 (bvadd var1130393 var1130139)))
(assert (= var1130395 (bvadd var1130394 var1130381)))
(assert (= var1130396 (bvsdiv var1130395 var1130139)))
(assert (= temp642_48 #x0000000000000000))
(assert (= var3160732 temp642_48))
(assert (= var3160733 var1130369))
(assert (= var3160734 var1130381))
(assert (= var3160736 var1130139))
(assert (= temp642_50 #x0000000000000000))
(assert (= temp642_49 temp642_50))
(model-add temp642_1 () (_ BitVec 64) #x0000000000000001)
(model-add temp642_2 () (_ BitVec 64) #x0000000000000000)
(model-add var82411 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000001 #x8000000000000000))
                #x0000000000000001
                (bvsub #x0000000000000001 #x0000000000000001)))




