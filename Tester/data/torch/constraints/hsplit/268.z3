(declare-fun temp568_1 () (_ BitVec 64))
(declare-fun temp568_2 () (_ BitVec 64))
(declare-fun var82411 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp568_3 () (_ BitVec 64))
(declare-fun var82440 () (_ BitVec 64))
(declare-fun var82441 () (_ BitVec 64))
(declare-fun temp568_4 () (_ BitVec 64))
(declare-fun ARGNAME_sections_NAMEEND () (_ BitVec 64))
(declare-fun var82444 () (_ BitVec 64))
(declare-fun temp568_5 () (_ BitVec 64))
(declare-fun var82455 () (_ BitVec 64))
(declare-fun temp568_6 () (_ BitVec 64))
(declare-fun temp568_7 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp568_8 () (_ BitVec 64))
(declare-fun temp568_9 () (_ BitVec 64))
(declare-fun temp568_10 () (_ BitVec 64))
(declare-fun temp568_11 () (_ BitVec 64))
(declare-fun temp568_12 () (_ BitVec 64))
(declare-fun temp568_13 () (_ BitVec 64))
(declare-fun temp568_14 () (_ BitVec 64))
(declare-fun temp568_15 () (_ BitVec 64))
(declare-fun temp568_16 () (_ BitVec 64))
(declare-fun temp568_17 () (_ BitVec 64))
(declare-fun temp568_18 () (_ BitVec 64))
(declare-fun temp568_19 () (_ BitVec 64))
(declare-fun temp568_20 () (_ BitVec 64))
(declare-fun temp568_21 () (_ BitVec 64))
(declare-fun temp568_22 () (_ BitVec 64))
(declare-fun temp568_23 () (_ BitVec 64))
(declare-fun temp568_25 () (_ BitVec 64))
(declare-fun temp568_26 () (_ BitVec 64))
(declare-fun temp568_24 () (_ BitVec 64))
(declare-fun var82459 () (_ BitVec 64))
(declare-fun temp568_27 () (_ BitVec 64))
(declare-fun var82460 () (_ BitVec 64))
(declare-fun temp568_28 () (_ BitVec 64))
(declare-fun var82496 () (_ BitVec 64))
(declare-fun var140605 () (_ BitVec 64))
(declare-fun temp568_29 () (_ BitVec 64))
(declare-fun var140635 () (_ BitVec 64))
(declare-fun temp568_30 () (_ BitVec 64))
(declare-fun temp568_31 () (_ BitVec 64))
(declare-fun var140664 () (_ BitVec 64))
(declare-fun temp568_32 () (_ BitVec 64))
(declare-fun temp568_34 () (_ BitVec 64))
(declare-fun temp568_33 () (_ BitVec 64))
(declare-fun temp568_36 () (_ BitVec 64))
(declare-fun temp568_35 () (_ BitVec 64))
(declare-fun var462146 () (_ BitVec 64))
(declare-fun temp568_37 () (_ BitVec 64))
(declare-fun temp568_38 () (_ BitVec 64))
(declare-fun var527687 () (_ BitVec 64))
(declare-fun var593234 () (_ BitVec 64))
(declare-fun temp568_39 () (_ BitVec 64))
(declare-fun var1130139 () (_ BitVec 64))
(declare-fun temp568_40 () (_ BitVec 64))
(declare-fun var1130188 () (_ BitVec 64))
(declare-fun temp568_41 () (_ BitVec 64))
(declare-fun temp568_42 () (_ BitVec 64))
(declare-fun var1380938 () (_ BitVec 64))
(declare-fun temp568_43 () (_ BitVec 64))
(declare-fun var2101834 () (_ BitVec 64))
(declare-fun temp568_44 () (_ BitVec 64))
(declare-fun var1130305 () (_ BitVec 64))
(declare-fun temp568_45 () (_ BitVec 64))
(declare-fun temp568_46 () (_ BitVec 64))
(declare-fun var3357340 () (_ BitVec 64))
(declare-fun var3357344 () (_ BitVec 64))
(declare-fun temp568_47 () (_ BitVec 64))
(declare-fun temp568_48 () (_ BitVec 64))
(declare-fun var4006777 () (_ BitVec 64))
(declare-fun var4006781 () (_ BitVec 64))
(declare-fun temp568_49 () (_ BitVec 64))
(declare-fun temp568_50 () (_ BitVec 64))
(declare-fun var4334457 () (_ BitVec 64))
(declare-fun var4334461 () (_ BitVec 64))
(declare-fun temp568_52 () (_ BitVec 64))
(declare-fun temp568_51 () (_ BitVec 64))
(assert (= temp568_1 #x0000000000000001))
(assert (= var82411
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp568_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp568_2 #x0000000000000000))
(assert (= var82411 temp568_2))
(assert (= temp568_3 #x0000000000000001))
(assert (= var82440
   (ite (distinct ARGNAME_input_NAMEEND_DIM temp568_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82441 var82440))
(assert (= temp568_4 #x0000000000000000))
(assert (= var82444
   (ite (= ARGNAME_sections_NAMEEND temp568_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp568_5 #x0000000000000000))
(assert (= var82444 temp568_5))
(assert (= var82455 var82441))
(assert (= temp568_6 #x0000000000000000))
(assert (= temp568_7 temp568_6))
(assert (= temp568_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp568_7)))
(assert (= temp568_9 #x0000000000000001))
(assert (= temp568_10 temp568_9))
(assert (= temp568_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp568_10)))
(assert (= temp568_12 #x0000000000000002))
(assert (= temp568_13 temp568_12))
(assert (= temp568_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp568_13)))
(assert (= temp568_15 #x0000000000000003))
(assert (= temp568_16 temp568_15))
(assert (= temp568_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp568_16)))
(assert (= temp568_18 #x0000000000000004))
(assert (= temp568_19 temp568_18))
(assert (= temp568_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp568_19)))
(assert (= temp568_21 #x0000000000000005))
(assert (= temp568_22 temp568_21))
(assert (= temp568_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp568_22)))
(assert (= temp568_25 var82455))
(assert (= temp568_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp568_25)))
(assert (= temp568_24 temp568_26))
(assert (= var82459 (bvsmod temp568_24 ARGNAME_sections_NAMEEND)))
(assert (= temp568_27 #x0000000000000000))
(assert (= var82460 (ite (= var82459 temp568_27) #x0000000000000001 #x0000000000000000)))
(assert (= temp568_28 #x0000000000000001))
(assert (= var82460 temp568_28))
(assert (= var82496 var82441))
(assert (= var140605 var82496))
(assert (= temp568_29 #x0000000000000001))
(assert (= var140635
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp568_29)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp568_30 #x0000000000000000))
(assert (= var140635 temp568_30))
(assert (= temp568_31 #x0000000000000001))
(assert (= var140664
   (ite (bvslt ARGNAME_sections_NAMEEND temp568_31)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp568_32 #x0000000000000000))
(assert (= var140664 temp568_32))
(assert (= temp568_34 #x0000000000000000))
(assert (= temp568_33 temp568_34))
(assert (= temp568_36 #x0000000000000000))
(assert (= temp568_35 temp568_36))
(assert (= var462146
   (ite (bvslt temp568_35 ARGNAME_sections_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp568_37
   (ite (= var462146 #x0000000000000001) ARGNAME_sections_NAMEEND temp568_35)))
(assert (= temp568_38 #x0000000000000000))
(assert (= var527687 temp568_38))
(assert (= var593234 var527687))
(assert (= temp568_39 #x0000000000000001))
(assert (= var1130139 temp568_39))
(assert (= temp568_40 #x0000000000000000))
(assert (= var1130188
   (ite (= ARGNAME_input_NAMEEND_DIM temp568_40)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp568_41 #x0000000000000000))
(assert (= var1130188 temp568_41))
(assert (= temp568_42 #x0000000000000005))
(assert (= var1380938 temp568_42))
(assert (= temp568_43 #x0000000000000005))
(assert (= var2101834 temp568_43))
(assert (= temp568_44 #x0000000000000001))
(assert (= var1130305
   (ite (bvslt var1130139 temp568_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp568_45 #x0000000000000000))
(assert (= var1130305 temp568_45))
(assert (= temp568_46 #x0000000000000000))
(assert (= var3357340 temp568_46))
(assert (= var3357344 var1130139))
(assert (= temp568_47 #x0000000000000000))
(assert (= var3357340 temp568_47))
(assert (= temp568_48 #x0000000000000000))
(assert (= var4006777 temp568_48))
(assert (= var4006781 var3357344))
(assert (= temp568_49 #x0000000000000000))
(assert (= var3357340 temp568_49))
(assert (= temp568_50 #x0000000000000000))
(assert (= var4334457 temp568_50))
(assert (= var4334461 var3357344))
(assert (= temp568_52 #x0000000000000000))
(assert (= temp568_51 temp568_52))
(model-add temp568_1 () (_ BitVec 64) #x0000000000000001)
(model-add temp568_2 () (_ BitVec 64) #x0000000000000000)
(model-add var82411 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000001 #x8000000000000000))
                #x0000000000000001
                (bvsub #x0000000000000001 #x0000000000000001)))






