(declare-fun temp612_1 () (_ BitVec 64))
(declare-fun temp612_2 () (_ BitVec 64))
(declare-fun var82411 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp612_3 () (_ BitVec 64))
(declare-fun var82440 () (_ BitVec 64))
(declare-fun var82441 () (_ BitVec 64))
(declare-fun temp612_4 () (_ BitVec 64))
(declare-fun ARGNAME_sections_NAMEEND () (_ BitVec 64))
(declare-fun var82444 () (_ BitVec 64))
(declare-fun temp612_5 () (_ BitVec 64))
(declare-fun var82455 () (_ BitVec 64))
(declare-fun temp612_6 () (_ BitVec 64))
(declare-fun temp612_7 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp612_8 () (_ BitVec 64))
(declare-fun temp612_9 () (_ BitVec 64))
(declare-fun temp612_10 () (_ BitVec 64))
(declare-fun temp612_11 () (_ BitVec 64))
(declare-fun temp612_12 () (_ BitVec 64))
(declare-fun temp612_13 () (_ BitVec 64))
(declare-fun temp612_14 () (_ BitVec 64))
(declare-fun temp612_15 () (_ BitVec 64))
(declare-fun temp612_16 () (_ BitVec 64))
(declare-fun temp612_17 () (_ BitVec 64))
(declare-fun temp612_18 () (_ BitVec 64))
(declare-fun temp612_19 () (_ BitVec 64))
(declare-fun temp612_20 () (_ BitVec 64))
(declare-fun temp612_21 () (_ BitVec 64))
(declare-fun temp612_22 () (_ BitVec 64))
(declare-fun temp612_23 () (_ BitVec 64))
(declare-fun temp612_25 () (_ BitVec 64))
(declare-fun temp612_26 () (_ BitVec 64))
(declare-fun temp612_24 () (_ BitVec 64))
(declare-fun var82459 () (_ BitVec 64))
(declare-fun temp612_27 () (_ BitVec 64))
(declare-fun var82460 () (_ BitVec 64))
(declare-fun temp612_28 () (_ BitVec 64))
(declare-fun var82496 () (_ BitVec 64))
(declare-fun var140605 () (_ BitVec 64))
(declare-fun temp612_29 () (_ BitVec 64))
(declare-fun var140635 () (_ BitVec 64))
(declare-fun temp612_30 () (_ BitVec 64))
(declare-fun temp612_31 () (_ BitVec 64))
(declare-fun var140664 () (_ BitVec 64))
(declare-fun temp612_32 () (_ BitVec 64))
(declare-fun temp612_34 () (_ BitVec 64))
(declare-fun temp612_33 () (_ BitVec 64))
(declare-fun temp612_36 () (_ BitVec 64))
(declare-fun temp612_35 () (_ BitVec 64))
(declare-fun var462146 () (_ BitVec 64))
(declare-fun temp612_37 () (_ BitVec 64))
(declare-fun temp612_38 () (_ BitVec 64))
(declare-fun var527687 () (_ BitVec 64))
(declare-fun var593234 () (_ BitVec 64))
(declare-fun temp612_39 () (_ BitVec 64))
(declare-fun var1130139 () (_ BitVec 64))
(declare-fun temp612_40 () (_ BitVec 64))
(declare-fun var1130188 () (_ BitVec 64))
(declare-fun temp612_41 () (_ BitVec 64))
(declare-fun temp612_42 () (_ BitVec 64))
(declare-fun var1380938 () (_ BitVec 64))
(declare-fun temp612_43 () (_ BitVec 64))
(declare-fun var2101834 () (_ BitVec 64))
(declare-fun temp612_44 () (_ BitVec 64))
(declare-fun var1130305 () (_ BitVec 64))
(declare-fun temp612_45 () (_ BitVec 64))
(declare-fun temp612_46 () (_ BitVec 64))
(declare-fun var3488412 () (_ BitVec 64))
(declare-fun var3488416 () (_ BitVec 64))
(declare-fun temp612_47 () (_ BitVec 64))
(declare-fun temp612_48 () (_ BitVec 64))
(declare-fun var4137849 () (_ BitVec 64))
(declare-fun var4137853 () (_ BitVec 64))
(declare-fun temp612_49 () (_ BitVec 64))
(declare-fun temp612_50 () (_ BitVec 64))
(declare-fun var4465529 () (_ BitVec 64))
(declare-fun var4465533 () (_ BitVec 64))
(declare-fun var3488577 () (_ BitVec 64))
(declare-fun temp612_52 () (_ BitVec 64))
(declare-fun temp612_51 () (_ BitVec 64))
(assert (= temp612_1 #x0000000000000001))
(assert (= var82411
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp612_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp612_2 #x0000000000000000))
(assert (= var82411 temp612_2))
(assert (= temp612_3 #x0000000000000001))
(assert (= var82440
   (ite (distinct ARGNAME_input_NAMEEND_DIM temp612_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82441 var82440))
(assert (= temp612_4 #x0000000000000000))
(assert (= var82444
   (ite (= ARGNAME_sections_NAMEEND temp612_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp612_5 #x0000000000000000))
(assert (= var82444 temp612_5))
(assert (= var82455 var82441))
(assert (= temp612_6 #x0000000000000000))
(assert (= temp612_7 temp612_6))
(assert (= temp612_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp612_7)))
(assert (= temp612_9 #x0000000000000001))
(assert (= temp612_10 temp612_9))
(assert (= temp612_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp612_10)))
(assert (= temp612_12 #x0000000000000002))
(assert (= temp612_13 temp612_12))
(assert (= temp612_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp612_13)))
(assert (= temp612_15 #x0000000000000003))
(assert (= temp612_16 temp612_15))
(assert (= temp612_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp612_16)))
(assert (= temp612_18 #x0000000000000004))
(assert (= temp612_19 temp612_18))
(assert (= temp612_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp612_19)))
(assert (= temp612_21 #x0000000000000005))
(assert (= temp612_22 temp612_21))
(assert (= temp612_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp612_22)))
(assert (= temp612_25 var82455))
(assert (= temp612_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp612_25)))
(assert (= temp612_24 temp612_26))
(assert (= var82459 (bvsmod temp612_24 ARGNAME_sections_NAMEEND)))
(assert (= temp612_27 #x0000000000000000))
(assert (= var82460 (ite (= var82459 temp612_27) #x0000000000000001 #x0000000000000000)))
(assert (= temp612_28 #x0000000000000001))
(assert (= var82460 temp612_28))
(assert (= var82496 var82441))
(assert (= var140605 var82496))
(assert (= temp612_29 #x0000000000000001))
(assert (= var140635
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp612_29)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp612_30 #x0000000000000000))
(assert (= var140635 temp612_30))
(assert (= temp612_31 #x0000000000000001))
(assert (= var140664
   (ite (bvslt ARGNAME_sections_NAMEEND temp612_31)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp612_32 #x0000000000000000))
(assert (= var140664 temp612_32))
(assert (= temp612_34 #x0000000000000000))
(assert (= temp612_33 temp612_34))
(assert (= temp612_36 #x0000000000000000))
(assert (= temp612_35 temp612_36))
(assert (= var462146
   (ite (bvslt temp612_35 ARGNAME_sections_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp612_37
   (ite (= var462146 #x0000000000000001) ARGNAME_sections_NAMEEND temp612_35)))
(assert (= temp612_38 #x0000000000000000))
(assert (= var527687 temp612_38))
(assert (= var593234 var527687))
(assert (= temp612_39 #x0000000000000001))
(assert (= var1130139 temp612_39))
(assert (= temp612_40 #x0000000000000000))
(assert (= var1130188
   (ite (= ARGNAME_input_NAMEEND_DIM temp612_40)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp612_41 #x0000000000000000))
(assert (= var1130188 temp612_41))
(assert (= temp612_42 #x0000000000000005))
(assert (= var1380938 temp612_42))
(assert (= temp612_43 #x0000000000000005))
(assert (= var2101834 temp612_43))
(assert (= temp612_44 #x0000000000000001))
(assert (= var1130305
   (ite (bvslt var1130139 temp612_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp612_45 #x0000000000000000))
(assert (= var1130305 temp612_45))
(assert (= temp612_46 #x0000000000000000))
(assert (= var3488412 temp612_46))
(assert (= var3488416 var1130139))
(assert (= temp612_47 #x0000000000000000))
(assert (= var3488412 temp612_47))
(assert (= temp612_48 #x0000000000000000))
(assert (= var4137849 temp612_48))
(assert (= var4137853 var3488416))
(assert (= temp612_49 #x0000000000000000))
(assert (= var3488412 temp612_49))
(assert (= temp612_50 #x0000000000000000))
(assert (= var4465529 temp612_50))
(assert (= var4465533 var3488416))
(assert (= var3488577 var3488412))
(assert (= temp612_52 #x0000000000000000))
(assert (= temp612_51 temp612_52))
(model-add temp612_1 () (_ BitVec 64) #x0000000000000001)
(model-add temp612_2 () (_ BitVec 64) #x0000000000000000)
(model-add var82411 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000001 #x8000000000000000))
                #x0000000000000001
                (bvsub #x0000000000000001 #x0000000000000001)))



