(declare-fun temp3750_1 () (_ BitVec 64))
(declare-fun temp3750_2 () (_ BitVec 64))
(declare-fun var82411 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp3750_3 () (_ BitVec 64))
(declare-fun var82440 () (_ BitVec 64))
(declare-fun var82441 () (_ BitVec 64))
(declare-fun temp3750_4 () (_ BitVec 64))
(declare-fun ARGNAME_sections_NAMEEND () (_ BitVec 64))
(declare-fun var82444 () (_ BitVec 64))
(declare-fun temp3750_5 () (_ BitVec 64))
(declare-fun var82455 () (_ BitVec 64))
(declare-fun temp3750_6 () (_ BitVec 64))
(declare-fun temp3750_7 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp3750_8 () (_ BitVec 64))
(declare-fun temp3750_9 () (_ BitVec 64))
(declare-fun temp3750_10 () (_ BitVec 64))
(declare-fun temp3750_11 () (_ BitVec 64))
(declare-fun temp3750_12 () (_ BitVec 64))
(declare-fun temp3750_13 () (_ BitVec 64))
(declare-fun temp3750_14 () (_ BitVec 64))
(declare-fun temp3750_15 () (_ BitVec 64))
(declare-fun temp3750_16 () (_ BitVec 64))
(declare-fun temp3750_17 () (_ BitVec 64))
(declare-fun temp3750_18 () (_ BitVec 64))
(declare-fun temp3750_19 () (_ BitVec 64))
(declare-fun temp3750_20 () (_ BitVec 64))
(declare-fun temp3750_21 () (_ BitVec 64))
(declare-fun temp3750_22 () (_ BitVec 64))
(declare-fun temp3750_23 () (_ BitVec 64))
(declare-fun temp3750_25 () (_ BitVec 64))
(declare-fun temp3750_26 () (_ BitVec 64))
(declare-fun temp3750_24 () (_ BitVec 64))
(declare-fun var82459 () (_ BitVec 64))
(declare-fun temp3750_27 () (_ BitVec 64))
(declare-fun var82460 () (_ BitVec 64))
(declare-fun temp3750_28 () (_ BitVec 64))
(declare-fun var82496 () (_ BitVec 64))
(declare-fun var140605 () (_ BitVec 64))
(declare-fun temp3750_29 () (_ BitVec 64))
(declare-fun var140635 () (_ BitVec 64))
(declare-fun temp3750_30 () (_ BitVec 64))
(declare-fun temp3750_31 () (_ BitVec 64))
(declare-fun var140664 () (_ BitVec 64))
(declare-fun temp3750_32 () (_ BitVec 64))
(declare-fun temp3750_34 () (_ BitVec 64))
(declare-fun temp3750_33 () (_ BitVec 64))
(declare-fun temp3750_36 () (_ BitVec 64))
(declare-fun temp3750_35 () (_ BitVec 64))
(declare-fun var462146 () (_ BitVec 64))
(declare-fun temp3750_37 () (_ BitVec 64))
(declare-fun temp3750_38 () (_ BitVec 64))
(declare-fun var527687 () (_ BitVec 64))
(declare-fun var593234 () (_ BitVec 64))
(declare-fun temp3750_39 () (_ BitVec 64))
(declare-fun var1130139 () (_ BitVec 64))
(declare-fun temp3750_40 () (_ BitVec 64))
(declare-fun var1130188 () (_ BitVec 64))
(declare-fun temp3750_41 () (_ BitVec 64))
(declare-fun temp3750_42 () (_ BitVec 64))
(declare-fun var1380938 () (_ BitVec 64))
(declare-fun temp3750_43 () (_ BitVec 64))
(declare-fun var2101834 () (_ BitVec 64))
(declare-fun temp3750_44 () (_ BitVec 64))
(declare-fun var1130305 () (_ BitVec 64))
(declare-fun temp3750_45 () (_ BitVec 64))
(declare-fun temp3750_46 () (_ BitVec 64))
(declare-fun var1130369 () (_ BitVec 64))
(declare-fun temp3750_47 () (_ BitVec 64))
(declare-fun var1130393 () (_ BitVec 64))
(declare-fun var1130394 () (_ BitVec 64))
(declare-fun temp3750_48 () (_ BitVec 64))
(declare-fun var3291804 () (_ BitVec 64))
(declare-fun var3291805 () (_ BitVec 64))
(declare-fun var3291808 () (_ BitVec 64))
(declare-fun temp3750_50 () (_ BitVec 64))
(declare-fun temp3750_49 () (_ BitVec 64))
(assert (= temp3750_1 #x0000000000000001))
(assert (= var82411
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp3750_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3750_2 #x0000000000000000))
(assert (= var82411 temp3750_2))
(assert (= temp3750_3 #x0000000000000001))
(assert (= var82440
   (ite (distinct ARGNAME_input_NAMEEND_DIM temp3750_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var82441 var82440))
(assert (= temp3750_4 #x0000000000000000))
(assert (= var82444
   (ite (= ARGNAME_sections_NAMEEND temp3750_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3750_5 #x0000000000000000))
(assert (= var82444 temp3750_5))
(assert (= var82455 var82441))
(assert (= temp3750_6 #x0000000000000000))
(assert (= temp3750_7 temp3750_6))
(assert (= temp3750_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp3750_7)))
(assert (= temp3750_9 #x0000000000000001))
(assert (= temp3750_10 temp3750_9))
(assert (= temp3750_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp3750_10)))
(assert (= temp3750_12 #x0000000000000002))
(assert (= temp3750_13 temp3750_12))
(assert (= temp3750_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp3750_13)))
(assert (= temp3750_15 #x0000000000000003))
(assert (= temp3750_16 temp3750_15))
(assert (= temp3750_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp3750_16)))
(assert (= temp3750_18 #x0000000000000004))
(assert (= temp3750_19 temp3750_18))
(assert (= temp3750_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp3750_19)))
(assert (= temp3750_21 #x0000000000000005))
(assert (= temp3750_22 temp3750_21))
(assert (= temp3750_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp3750_22)))
(assert (= temp3750_25 var82455))
(assert (= temp3750_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp3750_25)))
(assert (= temp3750_24 temp3750_26))
(assert (= var82459 (bvsmod temp3750_24 ARGNAME_sections_NAMEEND)))
(assert (= temp3750_27 #x0000000000000000))
(assert (= var82460
   (ite (= var82459 temp3750_27) #x0000000000000001 #x0000000000000000)))
(assert (= temp3750_28 #x0000000000000001))
(assert (= var82460 temp3750_28))
(assert (= var82496 var82441))
(assert (= var140605 var82496))
(assert (= temp3750_29 #x0000000000000001))
(assert (= var140635
   (ite (bvslt ARGNAME_input_NAMEEND_DIM temp3750_29)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3750_30 #x0000000000000000))
(assert (= var140635 temp3750_30))
(assert (= temp3750_31 #x0000000000000001))
(assert (= var140664
   (ite (bvslt ARGNAME_sections_NAMEEND temp3750_31)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3750_32 #x0000000000000000))
(assert (= var140664 temp3750_32))
(assert (= temp3750_34 #x0000000000000000))
(assert (= temp3750_33 temp3750_34))
(assert (= temp3750_36 #x0000000000000000))
(assert (= temp3750_35 temp3750_36))
(assert (= var462146
   (ite (bvslt temp3750_35 ARGNAME_sections_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3750_37
   (ite (= var462146 #x0000000000000001) ARGNAME_sections_NAMEEND temp3750_35)))
(assert (= temp3750_38 #x0000000000000000))
(assert (= var527687 temp3750_38))
(assert (= var593234 var527687))
(assert (= temp3750_39 #x0000000000000001))
(assert (= var1130139 temp3750_39))
(assert (= temp3750_40 #x0000000000000000))
(assert (= var1130188
   (ite (= ARGNAME_input_NAMEEND_DIM temp3750_40)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3750_41 #x0000000000000000))
(assert (= var1130188 temp3750_41))
(assert (= temp3750_42 #x0000000000000005))
(assert (= var1380938 temp3750_42))
(assert (= temp3750_43 #x0000000000000005))
(assert (= var2101834 temp3750_43))
(assert (= temp3750_44 #x0000000000000001))
(assert (= var1130305
   (ite (bvslt var1130139 temp3750_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp3750_45 #x0000000000000000))
(assert (= var1130305 temp3750_45))
(assert (= temp3750_46 #x0000000000000000))
(assert (= var1130369 temp3750_46))
(assert (= temp3750_47 #xffffffffffffffff))
(assert (= var1130393 (bvxor var1130369 temp3750_47)))
(assert (= var1130394 (bvadd var1130393 var1130139)))
(assert (= temp3750_48 #x0000000000000000))
(assert (= var3291804 temp3750_48))
(assert (= var3291805 var1130369))
(assert (= var3291808 var1130139))
(assert (= temp3750_50 #x0000000000000000))
(assert (= temp3750_49 temp3750_50))
(model-add temp3750_1 () (_ BitVec 64) #x0000000000000001)
(model-add temp3750_2 () (_ BitVec 64) #x0000000000000000)
(model-add var82411 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000001 #x8000000000000000))
                #x0000000000000001
                (bvsub #x0000000000000001 #x0000000000000001)))





