(declare-fun temp5958_2 () (_ BitVec 64))
(declare-fun temp5958_1 () (_ BitVec 64))
(declare-fun temp5958_3 () (_ BitVec 64))
(declare-fun var463945 () (_ BitVec 64))
(declare-fun temp5958_4 () (_ BitVec 64))
(declare-fun var788278 () (_ BitVec 64))
(declare-fun var987356 () (_ BitVec 64))
(declare-fun temp5958_5 () (_ BitVec 64))
(declare-fun var1184087 () (_ BitVec 64))
(declare-fun temp5958_6 () (_ BitVec 64))
(declare-fun var1184088 () (_ BitVec 64))
(declare-fun temp5958_7 () (_ BitVec 64))
(declare-fun temp5958_8 () (_ BitVec 64))
(declare-fun var464053 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_n_NAMEEND () (_ BitVec 64))
(declare-fun temp5958_9 () (_ BitVec 64))
(declare-fun var464087 () (_ BitVec 64))
(declare-fun temp5958_10 () (_ BitVec 64))
(declare-fun var464088 () (_ BitVec 64))
(declare-fun temp5958_11 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1574891 () (_ BitVec 64))
(declare-fun temp5958_13 () (_ BitVec 64))
(declare-fun temp5958_12 () (_ BitVec 64))
(declare-fun var1641335 () (_ BitVec 64))
(declare-fun temp5958_14 () (_ BitVec 64))
(declare-fun var1707784 () (_ BitVec 64))
(declare-fun var1773329 () (_ BitVec 64))
(declare-fun temp5958_16 () (_ BitVec 64))
(declare-fun temp5958_15 () (_ BitVec 64))
(declare-fun temp5958_17 () (_ BitVec 64))
(declare-fun var1969911 () (_ BitVec 64))
(declare-fun temp5958_18 () (_ BitVec 64))
(declare-fun var1574952 () (_ BitVec 64))
(declare-fun temp5958_19 () (_ BitVec 64))
(declare-fun var1574994 () (_ BitVec 64))
(declare-fun temp5958_21 () (_ BitVec 64))
(declare-fun temp5958_20 () (_ BitVec 64))
(declare-fun temp5958_22 () (_ BitVec 64))
(declare-fun var2558968 () (_ BitVec 64))
(declare-fun var1574939 () (_ BitVec 64))
(declare-fun var1574938 () (_ BitVec 64))
(declare-fun temp5958_23 () (_ BitVec 64))
(declare-fun var1574943 () (_ BitVec 64))
(declare-fun temp5958_24 () (_ BitVec 64))
(declare-fun var1574945 () (_ BitVec 64))
(declare-fun temp5958_25 () (_ BitVec 64))
(declare-fun temp5958_26 () (_ BitVec 64))
(declare-fun var3804314 () (_ BitVec 64))
(declare-fun var4327630 () (_ BitVec 64))
(declare-fun temp5958_27 () (_ BitVec 64))
(declare-fun temp5958_28 () (_ BitVec 64))
(declare-fun var4327676 () (_ BitVec 64))
(declare-fun var4327707 () (_ BitVec 64))
(declare-fun var4327628 () (_ BitVec 64))
(declare-fun var464128 () (_ BitVec 64))
(declare-fun temp5958_29 () (_ BitVec 64))
(declare-fun var464149 () (_ BitVec 64))
(declare-fun var5313867 () (_ BitVec 64))
(assert (= temp5958_2 #x0000000000000000))
(assert (= temp5958_1 temp5958_2))
(assert (= temp5958_3 #x0000000000000000))
(assert (= var463945 temp5958_3))
(assert (= temp5958_4 #x0000000000000001))
(assert (= var788278 temp5958_4))
(assert (= var987356 var788278))
(assert (= temp5958_5 #x0000000000000000))
(assert (= var1184087 temp5958_5))
(assert (= temp5958_6 #x0000000000000000))
(assert (= var1184088 temp5958_6))
(assert (= temp5958_7 #x0000000000000001))
(assert (= var464053
   (ite (bvslt ARGNAME_n_NAMEEND temp5958_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp5958_8 #x0000000000000000))
(assert (= var464053 temp5958_8))
(assert (= temp5958_9 #x0000000000000002))
(assert (= var464087 (bvsdiv ARGNAME_n_NAMEEND temp5958_9)))
(assert (= temp5958_10 #x0000000000000001))
(assert (= var464088 (bvadd var464087 temp5958_10)))
(assert (= temp5958_11 #x0000000000000001))
(assert (= var1574891 (bvshl ARGNAME_input_NAMEEND_DIM temp5958_11)))
(assert (= temp5958_13 #x0000000000000000))
(assert (= temp5958_12 temp5958_13))
(assert (= var1641335 var1574891))
(assert (= temp5958_14 #x0000000000000005))
(assert (= var1707784 temp5958_14))
(assert (= var1773329 var1641335))
(assert (= temp5958_16 #x0000000000000000))
(assert (= temp5958_15 temp5958_16))
(assert (= temp5958_17 #x0000000000000000))
(assert (= var1969911 temp5958_17))
(assert (= temp5958_18 #x0000000000000000))
(assert (= var1574952 temp5958_18))
(assert (= temp5958_19 #x0000000000000001))
(assert (= var1574994 temp5958_19))
(assert (= temp5958_21 #x0000000000000000))
(assert (= temp5958_20 temp5958_21))
(assert (= temp5958_22 #x0000000000000001))
(assert (= var2558968 temp5958_22))
(assert (= var1574939 var1574994))
(assert (= var1574938 var1574939))
(assert (= temp5958_23 #x0000000000000001))
(assert (= var1574943 (bvand var1574938 temp5958_23)))
(assert (= temp5958_24 #x0000000000000000))
(assert (= var1574945
   (ite (= var1574943 temp5958_24) #x0000000000000001 #x0000000000000000)))
(assert (= temp5958_25 #x0000000000000000))
(assert (= var1574945 temp5958_25))
(assert (= temp5958_26 #x0000000000000000))
(assert (= var3804314 temp5958_26))
(assert (= var4327630 var463945))
(assert (= temp5958_27 #x0000000000000002))
(assert (= temp5958_28 #x0000000000000000))
(assert (= var4327676 (ite (= var4327630 #x0000000000000001) temp5958_27 temp5958_28)))
(assert (= var4327707 var4327676))
(assert (= var4327628 var4327707))
(assert (= var464128 var4327628))
(assert (= temp5958_29 #x0000000000000000))
(assert (= var463945 temp5958_29))
(assert (= var464149 var464128))
(assert (= var5313867 var464149))
(model-add temp5958_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp5958_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp5958_3 () (_ BitVec 64) #x0000000000000000)
(model-add var463945 () (_ BitVec 64) #x0000000000000000)
(model-add temp5958_4 () (_ BitVec 64) #x0000000000000001)
(model-add var788278 () (_ BitVec 64) #x0000000000000001)
(model-add var987356 () (_ BitVec 64) #x0000000000000001)
(model-add temp5958_5 () (_ BitVec 64) #x0000000000000000)
(model-add var1184087 () (_ BitVec 64) #x0000000000000000)
(model-add temp5958_6 () (_ BitVec 64) #x0000000000000000)
(model-add var1184088 () (_ BitVec 64) #x0000000000000000)
(model-add temp5958_7 () (_ BitVec 64) #x0000000000000001)
(model-add temp5958_8 () (_ BitVec 64) #x0000000000000000)
(model-add var464053 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_n_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000001 #x8000000000000000))
                #x0000000000000001
                (bvsub #x0000000000000001 #x0000000000000001)))





