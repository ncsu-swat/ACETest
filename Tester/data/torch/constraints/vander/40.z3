(declare-fun temp68_1 () (_ BitVec 64))
(declare-fun temp68_2 () (_ BitVec 64))
(declare-fun var73602 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_x_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp68_3 () (_ BitVec 64))
(declare-fun var66250 () (_ BitVec 64))
(declare-fun temp68_4 () (_ BitVec 64))
(declare-fun temp68_5 () (_ BitVec 64))
(declare-fun ARGNAME_x_NAMEEND_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp68_6 () (_ BitVec 64))
(declare-fun temp68_7 () (_ BitVec 64))
(declare-fun temp68_8 () (_ BitVec 64))
(declare-fun temp68_9 () (_ BitVec 64))
(declare-fun temp68_10 () (_ BitVec 64))
(declare-fun temp68_11 () (_ BitVec 64))
(declare-fun temp68_12 () (_ BitVec 64))
(declare-fun temp68_13 () (_ BitVec 64))
(declare-fun temp68_14 () (_ BitVec 64))
(declare-fun temp68_15 () (_ BitVec 64))
(declare-fun temp68_16 () (_ BitVec 64))
(declare-fun temp68_17 () (_ BitVec 64))
(declare-fun temp68_18 () (_ BitVec 64))
(declare-fun temp68_19 () (_ BitVec 64))
(declare-fun temp68_20 () (_ BitVec 64))
(declare-fun temp68_21 () (_ BitVec 64))
(declare-fun temp68_22 () (_ BitVec 64))
(declare-fun temp68_23 () (_ BitVec 64))
(declare-fun temp68_24 () (_ BitVec 64))
(declare-fun var73613 () (_ BitVec 64))
(declare-fun temp68_25 () (_ BitVec 64))
(declare-fun temp68_26 () (_ BitVec 64))
(declare-fun temp68_27 () (_ BitVec 64))
(declare-fun temp68_28 () (_ BitVec 64))
(declare-fun var73640 () (_ BitVec 64))
(declare-fun temp68_30 () (_ BitVec 64))
(declare-fun temp68_29 () (_ BitVec 64))
(declare-fun temp68_31 () (_ BitVec 64))
(declare-fun var467142 () (_ BitVec 64))
(declare-fun temp68_32 () (_ BitVec 64))
(declare-fun var1253582 () (_ BitVec 64))
(declare-fun var1253583 () (_ BitVec 64))
(declare-fun temp68_33 () (_ BitVec 64))
(declare-fun var1311851 () (_ BitVec 64))
(declare-fun temp68_35 () (_ BitVec 64))
(declare-fun temp68_34 () (_ BitVec 64))
(declare-fun temp68_36 () (_ BitVec 64))
(declare-fun var1712369 () (_ BitVec 64))
(declare-fun temp68_37 () (_ BitVec 64))
(declare-fun var1712373 () (_ BitVec 64))
(declare-fun temp68_39 () (_ BitVec 64))
(declare-fun temp68_38 () (_ BitVec 64))
(declare-fun temp68_40 () (_ BitVec 64))
(declare-fun var2498801 () (_ BitVec 64))
(declare-fun temp68_41 () (_ BitVec 64))
(declare-fun var2498805 () (_ BitVec 64))
(declare-fun temp68_43 () (_ BitVec 64))
(declare-fun temp68_42 () (_ BitVec 64))
(declare-fun temp68_44 () (_ BitVec 64))
(declare-fun var3088625 () (_ BitVec 64))
(declare-fun temp68_45 () (_ BitVec 64))
(declare-fun var3088629 () (_ BitVec 64))
(declare-fun temp68_46 () (_ BitVec 64))
(declare-fun ARGNAME_increasing_NAMEEND () (_ BitVec 64))
(assert (= temp68_1 #x0000000000000001))
(assert (= var73602
   (ite (= ARGNAME_x_NAMEEND_DIM temp68_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_2 #x0000000000000001))
(assert (= var73602 temp68_2))
(assert (= temp68_3 #x0000000000000000))
(assert (= var66250 temp68_3))
(assert (= temp68_4 #x0000000000000000))
(assert (= temp68_5 temp68_4))
(assert (= temp68_6 (select ARGNAME_x_NAMEEND_DIMSIZE temp68_5)))
(assert (= temp68_7 #x0000000000000001))
(assert (= temp68_8 temp68_7))
(assert (= temp68_9 (select ARGNAME_x_NAMEEND_DIMSIZE temp68_8)))
(assert (= temp68_10 #x0000000000000002))
(assert (= temp68_11 temp68_10))
(assert (= temp68_12 (select ARGNAME_x_NAMEEND_DIMSIZE temp68_11)))
(assert (= temp68_13 #x0000000000000003))
(assert (= temp68_14 temp68_13))
(assert (= temp68_15 (select ARGNAME_x_NAMEEND_DIMSIZE temp68_14)))
(assert (= temp68_16 #x0000000000000004))
(assert (= temp68_17 temp68_16))
(assert (= temp68_18 (select ARGNAME_x_NAMEEND_DIMSIZE temp68_17)))
(assert (= temp68_19 #x0000000000000005))
(assert (= temp68_20 temp68_19))
(assert (= temp68_21 (select ARGNAME_x_NAMEEND_DIMSIZE temp68_20)))
(assert (= temp68_22 #x0000000000000000))
(assert (= temp68_23
   (ite (bvslt var66250 temp68_22)
        (bvadd ARGNAME_x_NAMEEND_DIM var66250)
        var66250)))
(assert (= temp68_24 (select ARGNAME_x_NAMEEND_DIMSIZE temp68_23)))
(assert (= var73613 temp68_24))
(assert (bvslt (ite (bvslt var66250 temp68_22)
            (bvadd ARGNAME_x_NAMEEND_DIM var66250)
            var66250)
       ARGNAME_x_NAMEEND_DIM))
(assert (= temp68_25 #x0000000000000000))
(assert (= var66250 temp68_25))
(assert (= temp68_26 #x0000000000000000))
(assert (= temp68_27
   (ite (bvslt var66250 temp68_26)
        (bvadd ARGNAME_x_NAMEEND_DIM var66250)
        var66250)))
(assert (= temp68_28 (select ARGNAME_x_NAMEEND_DIMSIZE temp68_27)))
(assert (= var73640 temp68_28))
(assert (bvslt (ite (bvslt var66250 temp68_26)
            (bvadd ARGNAME_x_NAMEEND_DIM var66250)
            var66250)
       ARGNAME_x_NAMEEND_DIM))
(assert (= temp68_30 #x0000000000000002))
(assert (= temp68_29 temp68_30))
(assert (= temp68_31 #x0000000000000004))
(assert (= var467142 temp68_31))
(assert (= temp68_32 #x0000000000000001))
(assert (= var1253582 temp68_32))
(assert (= var1253583 var66250))
(assert (= temp68_33 #x0000000000000001))
(assert (= var1311851 temp68_33))
(assert (= temp68_35 #x0000000000000001))
(assert (= temp68_34 temp68_35))
(assert (= temp68_36 #x0000000000000001))
(assert (= var1712369 temp68_36))
(assert (= temp68_37 #x0000000000000001))
(assert (= var1712373 temp68_37))
(assert (= temp68_39 #x0000000000000001))
(assert (= temp68_38 temp68_39))
(assert (= temp68_40 #x0000000000000001))
(assert (= var2498801 temp68_40))
(assert (= temp68_41 #x0000000000000001))
(assert (= var2498805 temp68_41))
(assert (= temp68_43 #x0000000000000001))
(assert (= temp68_42 temp68_43))
(assert (= temp68_44 #x0000000000000001))
(assert (= var3088625 temp68_44))
(assert (= temp68_45 #x0000000000000001))
(assert (= var3088629 temp68_45))
(assert (= temp68_46 #x0000000000000001))
(assert (= ARGNAME_increasing_NAMEEND temp68_46))
(model-add temp68_1 () (_ BitVec 64) #x0000000000000001)
(model-add temp68_2 () (_ BitVec 64) #x0000000000000001)
(model-add var73602 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_x_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))


