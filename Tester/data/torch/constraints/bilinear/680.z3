(declare-fun temp680_1 () (_ BitVec 64))
(declare-fun var79569 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input1_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_input2_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp680_2 () (_ BitVec 64))
(declare-fun var79623 () (_ BitVec 64))
(declare-fun var204300 () (_ BitVec 64))
(declare-fun temp680_4 () (_ BitVec 64))
(declare-fun temp680_3 () (_ BitVec 64))
(declare-fun var267251 () (_ BitVec 64))
(declare-fun var267252 () (_ BitVec 64))
(declare-fun temp680_5 () (_ BitVec 64))
(declare-fun temp680_6 () (_ BitVec 64))
(declare-fun var336917 () (_ BitVec 64))
(declare-fun var402464 () (_ BitVec 64))
(declare-fun var204318 () (_ BitVec 64))
(declare-fun temp680_7 () (_ BitVec 64))
(declare-fun var79724 () (_ BitVec 64))
(declare-fun temp680_8 () (_ BitVec 64))
(declare-fun temp680_9 () (_ BitVec 64))
(declare-fun ARGNAME_input1_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp680_10 () (_ BitVec 64))
(declare-fun temp680_11 () (_ BitVec 64))
(declare-fun temp680_12 () (_ BitVec 64))
(declare-fun temp680_13 () (_ BitVec 64))
(declare-fun temp680_14 () (_ BitVec 64))
(declare-fun temp680_15 () (_ BitVec 64))
(declare-fun temp680_16 () (_ BitVec 64))
(declare-fun temp680_17 () (_ BitVec 64))
(declare-fun temp680_18 () (_ BitVec 64))
(declare-fun temp680_19 () (_ BitVec 64))
(declare-fun temp680_20 () (_ BitVec 64))
(declare-fun temp680_21 () (_ BitVec 64))
(declare-fun temp680_22 () (_ BitVec 64))
(declare-fun temp680_23 () (_ BitVec 64))
(declare-fun temp680_24 () (_ BitVec 64))
(declare-fun temp680_25 () (_ BitVec 64))
(declare-fun temp680_26 () (_ BitVec 64))
(declare-fun temp680_27 () (_ BitVec 64))
(declare-fun temp680_28 () (_ BitVec 64))
(declare-fun var79725 () (_ BitVec 64))
(declare-fun temp680_29 () (_ BitVec 64))
(declare-fun var66592 () (_ BitVec 64))
(declare-fun temp680_30 () (_ BitVec 64))
(declare-fun temp680_31 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp680_32 () (_ BitVec 64))
(declare-fun temp680_33 () (_ BitVec 64))
(declare-fun temp680_34 () (_ BitVec 64))
(declare-fun temp680_35 () (_ BitVec 64))
(declare-fun temp680_36 () (_ BitVec 64))
(declare-fun temp680_37 () (_ BitVec 64))
(declare-fun temp680_38 () (_ BitVec 64))
(declare-fun temp680_39 () (_ BitVec 64))
(declare-fun temp680_40 () (_ BitVec 64))
(declare-fun temp680_41 () (_ BitVec 64))
(declare-fun temp680_42 () (_ BitVec 64))
(declare-fun temp680_43 () (_ BitVec 64))
(declare-fun temp680_44 () (_ BitVec 64))
(declare-fun temp680_45 () (_ BitVec 64))
(declare-fun temp680_46 () (_ BitVec 64))
(declare-fun temp680_47 () (_ BitVec 64))
(declare-fun temp680_48 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp680_49 () (_ BitVec 64))
(declare-fun temp680_50 () (_ BitVec 64))
(declare-fun var79727 () (_ BitVec 64))
(declare-fun var79728 () (_ BitVec 64))
(declare-fun temp680_51 () (_ BitVec 64))
(declare-fun temp680_52 () (_ BitVec 64))
(declare-fun var79776 () (_ BitVec 64))
(declare-fun temp680_53 () (_ BitVec 64))
(declare-fun temp680_54 () (_ BitVec 64))
(declare-fun ARGNAME_input2_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp680_55 () (_ BitVec 64))
(declare-fun temp680_56 () (_ BitVec 64))
(declare-fun temp680_57 () (_ BitVec 64))
(declare-fun temp680_58 () (_ BitVec 64))
(declare-fun temp680_59 () (_ BitVec 64))
(declare-fun temp680_60 () (_ BitVec 64))
(declare-fun temp680_61 () (_ BitVec 64))
(declare-fun temp680_62 () (_ BitVec 64))
(declare-fun temp680_63 () (_ BitVec 64))
(declare-fun temp680_64 () (_ BitVec 64))
(declare-fun temp680_65 () (_ BitVec 64))
(declare-fun temp680_66 () (_ BitVec 64))
(declare-fun temp680_67 () (_ BitVec 64))
(declare-fun temp680_68 () (_ BitVec 64))
(declare-fun temp680_69 () (_ BitVec 64))
(declare-fun temp680_70 () (_ BitVec 64))
(declare-fun temp680_71 () (_ BitVec 64))
(declare-fun temp680_72 () (_ BitVec 64))
(declare-fun temp680_73 () (_ BitVec 64))
(declare-fun var79777 () (_ BitVec 64))
(declare-fun temp680_74 () (_ BitVec 64))
(declare-fun var66492 () (_ BitVec 64))
(declare-fun temp680_75 () (_ BitVec 64))
(declare-fun temp680_76 () (_ BitVec 64))
(declare-fun temp680_77 () (_ BitVec 64))
(declare-fun var79778 () (_ BitVec 64))
(declare-fun var79779 () (_ BitVec 64))
(declare-fun temp680_78 () (_ BitVec 64))
(declare-fun temp680_79 () (_ BitVec 64))
(declare-fun var65961 () (_ BitVec 64))
(declare-fun temp680_80 () (_ BitVec 64))
(declare-fun temp680_81 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp680_82 () (_ BitVec 64))
(declare-fun temp680_83 () (_ BitVec 64))
(declare-fun temp680_84 () (_ BitVec 64))
(declare-fun temp680_85 () (_ BitVec 64))
(declare-fun temp680_86 () (_ BitVec 64))
(declare-fun temp680_87 () (_ BitVec 64))
(declare-fun temp680_88 () (_ BitVec 64))
(declare-fun temp680_89 () (_ BitVec 64))
(declare-fun temp680_90 () (_ BitVec 64))
(declare-fun temp680_91 () (_ BitVec 64))
(declare-fun temp680_92 () (_ BitVec 64))
(declare-fun temp680_93 () (_ BitVec 64))
(declare-fun temp680_94 () (_ BitVec 64))
(declare-fun temp680_95 () (_ BitVec 64))
(declare-fun temp680_96 () (_ BitVec 64))
(declare-fun temp680_97 () (_ BitVec 64))
(declare-fun temp680_98 () (_ BitVec 64))
(declare-fun ARGNAME_bias_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp680_99 () (_ BitVec 64))
(declare-fun temp680_100 () (_ BitVec 64))
(declare-fun var79827 () (_ BitVec 64))
(declare-fun temp680_101 () (_ BitVec 64))
(declare-fun temp680_102 () (_ BitVec 64))
(declare-fun temp680_103 () (_ BitVec 64))
(declare-fun temp680_104 () (_ BitVec 64))
(declare-fun var79828 () (_ BitVec 64))
(declare-fun var79829 () (_ BitVec 64))
(declare-fun temp680_105 () (_ BitVec 64))
(declare-fun temp680_106 () (_ BitVec 64))
(declare-fun temp680_107 () (_ BitVec 64))
(declare-fun temp680_108 () (_ BitVec 64))
(declare-fun temp680_109 () (_ BitVec 64))
(declare-fun var79903 () (_ BitVec 64))
(declare-fun temp680_110 () (_ BitVec 64))
(declare-fun var3023325 () (_ BitVec 64))
(declare-fun temp680_112 () (_ BitVec 64))
(declare-fun temp680_111 () (_ BitVec 64))
(declare-fun temp680_113 () (_ BitVec 64))
(declare-fun var67207 () (_ BitVec 64))
(declare-fun temp680_114 () (_ BitVec 64))
(declare-fun temp680_115 () (_ BitVec 64))
(declare-fun temp680_116 () (_ BitVec 64))
(declare-fun var79915 () (_ BitVec 64))
(declare-fun temp680_117 () (_ BitVec 64))
(declare-fun temp680_118 () (_ BitVec 64))
(declare-fun temp680_119 () (_ BitVec 64))
(declare-fun temp680_120 () (_ BitVec 64))
(declare-fun var79938 () (_ BitVec 64))
(declare-fun temp680_122 () (_ BitVec 64))
(declare-fun temp680_121 () (_ BitVec 64))
(declare-fun temp680_124 () (_ BitVec 64))
(declare-fun temp680_123 () (_ BitVec 64))
(declare-fun var4533243 () (_ BitVec 64))
(declare-fun temp680_125 () (_ BitVec 64))
(declare-fun var4533374 () (_ BitVec 64))
(declare-fun temp680_127 () (_ BitVec 64))
(declare-fun temp680_126 () (_ BitVec 64))
(declare-fun temp680_128 () (_ BitVec 64))
(declare-fun var5318818 () (_ BitVec 64))
(declare-fun temp680_129 () (_ BitVec 64))
(declare-fun var5973063 () (_ BitVec 64))
(declare-fun temp680_131 () (_ BitVec 64))
(declare-fun temp680_130 () (_ BitVec 64))
(declare-fun temp680_132 () (_ BitVec 64))
(declare-fun var6957218 () (_ BitVec 64))
(declare-fun temp680_133 () (_ BitVec 64))
(declare-fun var7611463 () (_ BitVec 64))
(declare-fun temp680_135 () (_ BitVec 64))
(declare-fun temp680_134 () (_ BitVec 64))
(declare-fun temp680_136 () (_ BitVec 64))
(declare-fun var8595618 () (_ BitVec 64))
(declare-fun temp680_137 () (_ BitVec 64))
(declare-fun var9249863 () (_ BitVec 64))
(declare-fun temp680_139 () (_ BitVec 64))
(declare-fun temp680_138 () (_ BitVec 64))
(declare-fun temp680_140 () (_ BitVec 64))
(declare-fun var10234018 () (_ BitVec 64))
(declare-fun temp680_141 () (_ BitVec 64))
(declare-fun var10888263 () (_ BitVec 64))
(declare-fun temp680_143 () (_ BitVec 64))
(declare-fun temp680_142 () (_ BitVec 64))
(declare-fun temp680_144 () (_ BitVec 64))
(declare-fun var11871253 () (_ BitVec 64))
(declare-fun var11936800 () (_ BitVec 64))
(declare-fun temp680_145 () (_ BitVec 64))
(declare-fun var4533542 () (_ BitVec 64))
(declare-fun temp680_146 () (_ BitVec 64))
(declare-fun var4533583 () (_ BitVec 64))
(declare-fun var4533617 () (_ BitVec 64))
(declare-fun var4533671 () (_ BitVec 64))
(declare-fun var15081033 () (_ BitVec 64))
(declare-fun var15408713 () (_ BitVec 64))
(declare-fun var15736393 () (_ BitVec 64))
(declare-fun temp680_147 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var4533720 () (_ BitVec 64))
(declare-fun temp680_148 () (_ BitVec 64))
(declare-fun var16850505 () (_ BitVec 64))
(declare-fun temp680_150 () (_ BitVec 64))
(declare-fun temp680_149 () (_ BitVec 64))
(declare-fun temp680_151 () (_ BitVec 64))
(declare-fun var17310741 () (_ BitVec 64))
(declare-fun var17376288 () (_ BitVec 64))
(declare-fun var17772587 () (_ BitVec 64))
(declare-fun temp680_152 () (_ BitVec 64))
(declare-fun var17772589 () (_ BitVec 64))
(declare-fun var17838123 () (_ BitVec 64))
(declare-fun temp680_153 () (_ BitVec 64))
(declare-fun var17838125 () (_ BitVec 64))
(declare-fun var18362411 () (_ BitVec 64))
(declare-fun temp680_154 () (_ BitVec 64))
(declare-fun var18362413 () (_ BitVec 64))
(declare-fun temp680_155 () (_ BitVec 64))
(declare-fun var19735623 () (_ BitVec 64))
(declare-fun temp680_157 () (_ BitVec 64))
(declare-fun temp680_156 () (_ BitVec 64))
(declare-fun temp680_158 () (_ BitVec 64))
(declare-fun var20522005 () (_ BitVec 64))
(declare-fun temp680_159 () (_ BitVec 64))
(declare-fun var18683626 () (_ BitVec 64))
(declare-fun var18683596 () (_ BitVec 64))
(declare-fun var18683595 () (_ BitVec 64))
(declare-fun temp680_161 () (_ BitVec 64))
(declare-fun temp680_160 () (_ BitVec 64))
(declare-fun temp680_163 () (_ BitVec 64))
(declare-fun temp680_162 () (_ BitVec 64))
(declare-fun temp680_164 () (_ BitVec 64))
(declare-fun var18684037 () (_ BitVec 64))
(declare-fun var18684116 () (_ BitVec 64))
(declare-fun var18684135 () (_ BitVec 64))
(declare-fun temp680_166 () (_ BitVec 64))
(declare-fun temp680_165 () (_ BitVec 64))
(declare-fun temp680_168 () (_ BitVec 64))
(declare-fun temp680_167 () (_ BitVec 64))
(assert (= var79569
   (ite (= ARGNAME_input1_NAMEEND_DIM ARGNAME_input2_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp680_1 #x0000000000000001))
(assert (= var79569 temp680_1))
(assert (= temp680_2 #xffffffffffffffff))
(assert (= var79623 (bvadd ARGNAME_input1_NAMEEND_DIM temp680_2)))
(assert (= var204300 var79623))
(assert (= temp680_4 #x0000000000000000))
(assert (= temp680_3 temp680_4))
(assert (= var267251 var204300))
(assert (= var267252
   (ite (bvslt temp680_3 var267251) #x0000000000000001 #x0000000000000000)))
(assert (= temp680_5 (ite (= var267252 #x0000000000000001) var204300 temp680_3)))
(assert (= temp680_6 #x0000000000000000))
(assert (= var336917 temp680_6))
(assert (= var402464 var336917))
(assert (= var204318 var402464))
(assert (= temp680_7 #xffffffffffffffff))
(assert (= var79724 (bvadd ARGNAME_input1_NAMEEND_DIM temp680_7)))
(assert (= temp680_8 #x0000000000000000))
(assert (= temp680_9 temp680_8))
(assert (= temp680_10 (select ARGNAME_input1_NAMEEND_DIMSIZE temp680_9)))
(assert (= temp680_11 #x0000000000000001))
(assert (= temp680_12 temp680_11))
(assert (= temp680_13 (select ARGNAME_input1_NAMEEND_DIMSIZE temp680_12)))
(assert (= temp680_14 #x0000000000000002))
(assert (= temp680_15 temp680_14))
(assert (= temp680_16 (select ARGNAME_input1_NAMEEND_DIMSIZE temp680_15)))
(assert (= temp680_17 #x0000000000000003))
(assert (= temp680_18 temp680_17))
(assert (= temp680_19 (select ARGNAME_input1_NAMEEND_DIMSIZE temp680_18)))
(assert (= temp680_20 #x0000000000000004))
(assert (= temp680_21 temp680_20))
(assert (= temp680_22 (select ARGNAME_input1_NAMEEND_DIMSIZE temp680_21)))
(assert (= temp680_23 #x0000000000000005))
(assert (= temp680_24 temp680_23))
(assert (= temp680_25 (select ARGNAME_input1_NAMEEND_DIMSIZE temp680_24)))
(assert (= temp680_26 #x0000000000000000))
(assert (= temp680_27
   (ite (bvslt var79724 temp680_26)
        (bvadd ARGNAME_input1_NAMEEND_DIM var79724)
        var79724)))
(assert (= temp680_28 (select ARGNAME_input1_NAMEEND_DIMSIZE temp680_27)))
(assert (= var79725 temp680_28))
(assert (bvslt (ite (bvslt var79724 temp680_26)
            (bvadd ARGNAME_input1_NAMEEND_DIM var79724)
            var79724)
       ARGNAME_input1_NAMEEND_DIM))
(assert (= temp680_29 #x0000000000000001))
(assert (= var66592 temp680_29))
(assert (= temp680_30 #x0000000000000000))
(assert (= temp680_31 temp680_30))
(assert (= temp680_32 (select ARGNAME_weight_NAMEEND_DIMSIZE temp680_31)))
(assert (= temp680_33 #x0000000000000001))
(assert (= temp680_34 temp680_33))
(assert (= temp680_35 (select ARGNAME_weight_NAMEEND_DIMSIZE temp680_34)))
(assert (= temp680_36 #x0000000000000002))
(assert (= temp680_37 temp680_36))
(assert (= temp680_38 (select ARGNAME_weight_NAMEEND_DIMSIZE temp680_37)))
(assert (= temp680_39 #x0000000000000003))
(assert (= temp680_40 temp680_39))
(assert (= temp680_41 (select ARGNAME_weight_NAMEEND_DIMSIZE temp680_40)))
(assert (= temp680_42 #x0000000000000004))
(assert (= temp680_43 temp680_42))
(assert (= temp680_44 (select ARGNAME_weight_NAMEEND_DIMSIZE temp680_43)))
(assert (= temp680_45 #x0000000000000005))
(assert (= temp680_46 temp680_45))
(assert (= temp680_47 (select ARGNAME_weight_NAMEEND_DIMSIZE temp680_46)))
(assert (= temp680_48 #x0000000000000000))
(assert (= temp680_49
   (ite (bvslt var66592 temp680_48)
        (bvadd ARGNAME_weight_NAMEEND_DIM var66592)
        var66592)))
(assert (= temp680_50 (select ARGNAME_weight_NAMEEND_DIMSIZE temp680_49)))
(assert (= var79727 temp680_50))
(assert (bvslt (ite (bvslt var66592 temp680_48)
            (bvadd ARGNAME_weight_NAMEEND_DIM var66592)
            var66592)
       ARGNAME_weight_NAMEEND_DIM))
(assert (= var79728 (ite (= var79725 var79727) #x0000000000000001 #x0000000000000000)))
(assert (= temp680_51 #x0000000000000001))
(assert (= var79728 temp680_51))
(assert (= temp680_52 #xffffffffffffffff))
(assert (= var79776 (bvadd ARGNAME_input2_NAMEEND_DIM temp680_52)))
(assert (= temp680_53 #x0000000000000000))
(assert (= temp680_54 temp680_53))
(assert (= temp680_55 (select ARGNAME_input2_NAMEEND_DIMSIZE temp680_54)))
(assert (= temp680_56 #x0000000000000001))
(assert (= temp680_57 temp680_56))
(assert (= temp680_58 (select ARGNAME_input2_NAMEEND_DIMSIZE temp680_57)))
(assert (= temp680_59 #x0000000000000002))
(assert (= temp680_60 temp680_59))
(assert (= temp680_61 (select ARGNAME_input2_NAMEEND_DIMSIZE temp680_60)))
(assert (= temp680_62 #x0000000000000003))
(assert (= temp680_63 temp680_62))
(assert (= temp680_64 (select ARGNAME_input2_NAMEEND_DIMSIZE temp680_63)))
(assert (= temp680_65 #x0000000000000004))
(assert (= temp680_66 temp680_65))
(assert (= temp680_67 (select ARGNAME_input2_NAMEEND_DIMSIZE temp680_66)))
(assert (= temp680_68 #x0000000000000005))
(assert (= temp680_69 temp680_68))
(assert (= temp680_70 (select ARGNAME_input2_NAMEEND_DIMSIZE temp680_69)))
(assert (= temp680_71 #x0000000000000000))
(assert (= temp680_72
   (ite (bvslt var79776 temp680_71)
        (bvadd ARGNAME_input2_NAMEEND_DIM var79776)
        var79776)))
(assert (= temp680_73 (select ARGNAME_input2_NAMEEND_DIMSIZE temp680_72)))
(assert (= var79777 temp680_73))
(assert (bvslt (ite (bvslt var79776 temp680_71)
            (bvadd ARGNAME_input2_NAMEEND_DIM var79776)
            var79776)
       ARGNAME_input2_NAMEEND_DIM))
(assert (= temp680_74 #x0000000000000002))
(assert (= var66492 temp680_74))
(assert (= temp680_75 #x0000000000000000))
(assert (= temp680_76
   (ite (bvslt var66492 temp680_75)
        (bvadd ARGNAME_weight_NAMEEND_DIM var66492)
        var66492)))
(assert (= temp680_77 (select ARGNAME_weight_NAMEEND_DIMSIZE temp680_76)))
(assert (= var79778 temp680_77))
(assert (bvslt (ite (bvslt var66492 temp680_75)
            (bvadd ARGNAME_weight_NAMEEND_DIM var66492)
            var66492)
       ARGNAME_weight_NAMEEND_DIM))
(assert (= var79779 (ite (= var79777 var79778) #x0000000000000001 #x0000000000000000)))
(assert (= temp680_78 #x0000000000000001))
(assert (= var79779 temp680_78))
(assert (= temp680_79 #x0000000000000000))
(assert (= var65961 temp680_79))
(assert (= temp680_80 #x0000000000000000))
(assert (= temp680_81 temp680_80))
(assert (= temp680_82 (select ARGNAME_bias_NAMEEND_DIMSIZE temp680_81)))
(assert (= temp680_83 #x0000000000000001))
(assert (= temp680_84 temp680_83))
(assert (= temp680_85 (select ARGNAME_bias_NAMEEND_DIMSIZE temp680_84)))
(assert (= temp680_86 #x0000000000000002))
(assert (= temp680_87 temp680_86))
(assert (= temp680_88 (select ARGNAME_bias_NAMEEND_DIMSIZE temp680_87)))
(assert (= temp680_89 #x0000000000000003))
(assert (= temp680_90 temp680_89))
(assert (= temp680_91 (select ARGNAME_bias_NAMEEND_DIMSIZE temp680_90)))
(assert (= temp680_92 #x0000000000000004))
(assert (= temp680_93 temp680_92))
(assert (= temp680_94 (select ARGNAME_bias_NAMEEND_DIMSIZE temp680_93)))
(assert (= temp680_95 #x0000000000000005))
(assert (= temp680_96 temp680_95))
(assert (= temp680_97 (select ARGNAME_bias_NAMEEND_DIMSIZE temp680_96)))
(assert (= temp680_98 #x0000000000000000))
(assert (= temp680_99
   (ite (bvslt var65961 temp680_98)
        (bvadd ARGNAME_bias_NAMEEND_DIM var65961)
        var65961)))
(assert (= temp680_100 (select ARGNAME_bias_NAMEEND_DIMSIZE temp680_99)))
(assert (= var79827 temp680_100))
(assert (bvslt (ite (bvslt var65961 temp680_98)
            (bvadd ARGNAME_bias_NAMEEND_DIM var65961)
            var65961)
       ARGNAME_bias_NAMEEND_DIM))
(assert (= temp680_101 #x0000000000000000))
(assert (= var65961 temp680_101))
(assert (= temp680_102 #x0000000000000000))
(assert (= temp680_103
   (ite (bvslt var65961 temp680_102)
        (bvadd ARGNAME_weight_NAMEEND_DIM var65961)
        var65961)))
(assert (= temp680_104 (select ARGNAME_weight_NAMEEND_DIMSIZE temp680_103)))
(assert (= var79828 temp680_104))
(assert (bvslt (ite (bvslt var65961 temp680_102)
            (bvadd ARGNAME_weight_NAMEEND_DIM var65961)
            var65961)
       ARGNAME_weight_NAMEEND_DIM))
(assert (= var79829 (ite (= var79827 var79828) #x0000000000000001 #x0000000000000000)))
(assert (= temp680_105 #x0000000000000001))
(assert (= var79829 temp680_105))
(assert (= temp680_106 #x0000000000000000))
(assert (= var65961 temp680_106))
(assert (= temp680_107 #x0000000000000000))
(assert (= temp680_108
   (ite (bvslt var65961 temp680_107)
        (bvadd ARGNAME_weight_NAMEEND_DIM var65961)
        var65961)))
(assert (= temp680_109 (select ARGNAME_weight_NAMEEND_DIMSIZE temp680_108)))
(assert (= var79903 temp680_109))
(assert (bvslt (ite (bvslt var65961 temp680_107)
            (bvadd ARGNAME_weight_NAMEEND_DIM var65961)
            var65961)
       ARGNAME_weight_NAMEEND_DIM))
(assert (= temp680_110 #x0000000000000001))
(assert (= var3023325 temp680_110))
(assert (= temp680_112 #xffffffffffffffff))
(assert (= temp680_111 temp680_112))
(assert (= temp680_113 #xffffffffffffffff))
(assert (= var67207 temp680_113))
(assert (= temp680_114 #x0000000000000000))
(assert (= temp680_115
   (ite (bvslt var67207 temp680_114)
        (bvadd ARGNAME_input1_NAMEEND_DIM var67207)
        var67207)))
(assert (= temp680_116 (select ARGNAME_input1_NAMEEND_DIMSIZE temp680_115)))
(assert (= var79915 temp680_116))
(assert (bvslt (ite (bvslt var67207 temp680_114)
            (bvadd ARGNAME_input1_NAMEEND_DIM var67207)
            var67207)
       ARGNAME_input1_NAMEEND_DIM))
(assert (= temp680_117 #xffffffffffffffff))
(assert (= var67207 temp680_117))
(assert (= temp680_118 #x0000000000000000))
(assert (= temp680_119
   (ite (bvslt var67207 temp680_118)
        (bvadd ARGNAME_input2_NAMEEND_DIM var67207)
        var67207)))
(assert (= temp680_120 (select ARGNAME_input2_NAMEEND_DIMSIZE temp680_119)))
(assert (= var79938 temp680_120))
(assert (bvslt (ite (bvslt var67207 temp680_118)
            (bvadd ARGNAME_input2_NAMEEND_DIM var67207)
            var67207)
       ARGNAME_input2_NAMEEND_DIM))
(assert (= temp680_122 #x0000000000000003))
(assert (= temp680_121 temp680_122))
(assert (= temp680_124 #x0000000000000003))
(assert (= temp680_123 temp680_124))
(assert (= var4533243 var66592))
(assert (= temp680_125 #x000000000000003f))
(assert (= var4533374 (bvlshr var4533243 temp680_125)))
(assert (= temp680_127 #x0000000000000000))
(assert (= temp680_126 temp680_127))
(assert (= temp680_128 #x0000000000000000))
(assert (= var5318818 temp680_128))
(assert (= temp680_129 #x0000000000000001))
(assert (= var5973063 temp680_129))
(assert (= temp680_131 #x0000000000000000))
(assert (= temp680_130 temp680_131))
(assert (= temp680_132 #x0000000000000000))
(assert (= var6957218 temp680_132))
(assert (= temp680_133 #x0000000000000001))
(assert (= var7611463 temp680_133))
(assert (= temp680_135 #x0000000000000000))
(assert (= temp680_134 temp680_135))
(assert (= temp680_136 #x0000000000000000))
(assert (= var8595618 temp680_136))
(assert (= temp680_137 #x0000000000000001))
(assert (= var9249863 temp680_137))
(assert (= temp680_139 #x0000000000000000))
(assert (= temp680_138 temp680_139))
(assert (= temp680_140 #x0000000000000000))
(assert (= var10234018 temp680_140))
(assert (= temp680_141 #x0000000000000001))
(assert (= var10888263 temp680_141))
(assert (= temp680_143 #x0000000000000000))
(assert (= temp680_142 temp680_143))
(assert (= temp680_144 #x0000000000000000))
(assert (= var11871253 temp680_144))
(assert (= var11936800 var11871253))
(assert (= temp680_145 #xffffffffffffffff))
(assert (= var4533542 temp680_145))
(assert (= temp680_146 #x0000000000000000))
(assert (= var4533583 temp680_146))
(assert (= var4533617 var4533583))
(assert (= var4533671 var4533617))
(assert (= var15081033 var4533243))
(assert (= var15408713 var4533243))
(assert (= var15736393 var4533243))
(assert (= temp680_147 #x0000000000000000))
(assert (= var4533720
   (ite (= ARGNAME_weight_NAMEEND_NUMELEMENT temp680_147)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp680_148 #x0000000000000000))
(assert (= var4533720 temp680_148))
(assert (= var16850505 var4533243))
(assert (= temp680_150 #x0000000000000000))
(assert (= temp680_149 temp680_150))
(assert (= temp680_151 #x0000000000000000))
(assert (= var17310741 temp680_151))
(assert (= var17376288 var17310741))
(assert (= var17772587 var4533243))
(assert (= temp680_152 #x0000000000000001))
(assert (= var17772589 temp680_152))
(assert (= var17838123 var4533243))
(assert (= temp680_153 #x0000000000000001))
(assert (= var17838125 temp680_153))
(assert (= var18362411 var4533243))
(assert (= temp680_154 #x0000000000000001))
(assert (= var18362413 temp680_154))
(assert (= temp680_155 #x0000000000000001))
(assert (= var19735623 temp680_155))
(assert (= temp680_157 #x0000000000000000))
(assert (= temp680_156 temp680_157))
(assert (= temp680_158 #x0000000000000000))
(assert (= var20522005 temp680_158))
(assert (= temp680_159 #x0000000000000001))
(assert (= var18683626 temp680_159))
(assert (= var18683596 var18683626))
(assert (= var18683595 var18683596))
(assert (= temp680_161 #x0000000000000001))
(assert (= temp680_160 temp680_161))
(assert (= temp680_163 #xffffffffffffffff))
(assert (= temp680_162 temp680_163))
(assert (= temp680_164 #x0000000000000000))
(assert (= var18684037 temp680_164))
(assert (= var18684116 var18684037))
(assert (= var18684135 var18684116))
(assert (= temp680_166 #x0000000000000003))
(assert (= temp680_165 temp680_166))
(assert (= temp680_168 #x0000000000000003))
(assert (= temp680_167 temp680_168))
(model-add temp680_1 () (_ BitVec 64) #x0000000000000001)
(model-add var79569 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input1_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0
                ARGNAME_input2_NAMEEND_DIM
                (bvnot ARGNAME_input2_NAMEEND_DIM)))



