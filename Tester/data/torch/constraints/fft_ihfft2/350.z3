(declare-fun temp690_2 () (_ BitVec 64))
(declare-fun temp690_1 () (_ BitVec 64))
(declare-fun temp690_3 () (_ BitVec 64))
(declare-fun var3409718 () (_ BitVec 64))
(declare-fun var3608796 () (_ BitVec 64))
(declare-fun temp690_4 () (_ BitVec 64))
(declare-fun var4196331 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp690_6 () (_ BitVec 64))
(declare-fun temp690_5 () (_ BitVec 64))
(declare-fun var4262775 () (_ BitVec 64))
(declare-fun temp690_7 () (_ BitVec 64))
(declare-fun var4196378 () (_ BitVec 64))
(declare-fun temp690_8 () (_ BitVec 64))
(declare-fun var4196383 () (_ BitVec 64))
(declare-fun temp690_9 () (_ BitVec 64))
(declare-fun var4196385 () (_ BitVec 64))
(declare-fun temp690_10 () (_ BitVec 64))
(declare-fun temp690_11 () (_ BitVec 64))
(declare-fun var4786382 () (_ BitVec 64))
(declare-fun temp690_12 () (_ BitVec 64))
(declare-fun temp690_13 () (_ BitVec 64))
(declare-fun var4786428 () (_ BitVec 64))
(declare-fun var4786459 () (_ BitVec 64))
(declare-fun var4786380 () (_ BitVec 64))
(declare-fun var533040 () (_ BitVec 64))
(declare-fun var533041 () (_ BitVec 64))
(declare-fun temp690_14 () (_ BitVec 64))
(declare-fun var6103396 () (_ BitVec 64))
(declare-fun var6103437 () (_ BitVec 64))
(declare-fun temp690_15 () (_ BitVec 64))
(declare-fun var6296197 () (_ BitVec 64))
(declare-fun var6296201 () (_ BitVec 64))
(declare-fun temp690_16 () (_ BitVec 64))
(declare-fun var6296202 () (_ BitVec 64))
(assert (= temp690_2 #x0000000000000000))
(assert (= temp690_1 temp690_2))
(assert (= temp690_3 #x0000000000000000))
(assert (= var3409718 temp690_3))
(assert (= var3608796 var3409718))
(assert (= temp690_4 #x0000000000000001))
(assert (= var4196331 (bvshl ARGNAME_input_NAMEEND_DIM temp690_4)))
(assert (= temp690_6 #x0000000000000000))
(assert (= temp690_5 temp690_6))
(assert (= var4262775 var4196331))
(assert (= temp690_7 #x0000000000000000))
(assert (= var4196378 temp690_7))
(assert (= temp690_8 #x0000000000000001))
(assert (= var4196383 (bvand var4196378 temp690_8)))
(assert (= temp690_9 #x0000000000000000))
(assert (= var4196385
   (ite (= var4196383 temp690_9) #x0000000000000001 #x0000000000000000)))
(assert (= temp690_10 #x0000000000000001))
(assert (= var4196385 temp690_10))
(assert (= temp690_11 #x0000000000000000))
(assert (= var4786382 temp690_11))
(assert (= temp690_12 #x0000000000000002))
(assert (= temp690_13 #x0000000000000000))
(assert (= var4786428 (ite (= var4786382 #x0000000000000001) temp690_12 temp690_13)))
(assert (= var4786459 var4786428))
(assert (= var4786380 var4786459))
(assert (= var533040 var4786380))
(assert (= var533041 var533040))
(assert (= temp690_14 #x0000000000000000))
(assert (= var6103396 temp690_14))
(assert (= var6103437 var6103396))
(assert (= temp690_15 #x0000000000000006))
(assert (= var6296197 temp690_15))
(assert (= var6296201 var533041))
(assert (= temp690_16 #x0000000000000000))
(assert (= var6296202 temp690_16))
(model-add temp690_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp690_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp690_3 () (_ BitVec 64) #x0000000000000000)
(model-add var3409718 () (_ BitVec 64) #x0000000000000000)
(model-add var3608796 () (_ BitVec 64) #x0000000000000000)
(model-add temp690_4 () (_ BitVec 64) #x0000000000000001)
(model-add var4196331
           ()
           (_ BitVec 64)
           (concat ((_ extract 62 0) ARGNAME_input_NAMEEND_DIM) #b0))
(model-add temp690_6 () (_ BitVec 64) #x0000000000000000)
(model-add temp690_5 () (_ BitVec 64) #x0000000000000000)
(model-add var4262775
           ()
           (_ BitVec 64)
           (concat ((_ extract 62 0) ARGNAME_input_NAMEEND_DIM) #b0))
(model-add temp690_7 () (_ BitVec 64) #x0000000000000000)
(model-add var4196378 () (_ BitVec 64) #x0000000000000000)
(model-add temp690_8 () (_ BitVec 64) #x0000000000000001)
(model-add var4196383 () (_ BitVec 64) #x0000000000000000)
(model-add temp690_9 () (_ BitVec 64) #x0000000000000000)
(model-add var4196385 () (_ BitVec 64) #x0000000000000001)
(model-add temp690_10 () (_ BitVec 64) #x0000000000000001)





