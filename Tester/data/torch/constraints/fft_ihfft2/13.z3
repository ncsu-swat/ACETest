(declare-fun temp13_2 () (_ BitVec 64))
(declare-fun temp13_1 () (_ BitVec 64))
(declare-fun temp13_3 () (_ BitVec 64))
(declare-fun var3409718 () (_ BitVec 64))
(declare-fun var3608796 () (_ BitVec 64))
(declare-fun temp13_4 () (_ BitVec 64))
(declare-fun var4196331 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp13_6 () (_ BitVec 64))
(declare-fun temp13_5 () (_ BitVec 64))
(declare-fun var4262775 () (_ BitVec 64))
(declare-fun temp13_7 () (_ BitVec 64))
(declare-fun var4196392 () (_ BitVec 64))
(declare-fun var4196379 () (_ BitVec 64))
(declare-fun var4196378 () (_ BitVec 64))
(declare-fun temp13_8 () (_ BitVec 64))
(declare-fun var4196383 () (_ BitVec 64))
(declare-fun temp13_9 () (_ BitVec 64))
(declare-fun var4196385 () (_ BitVec 64))
(declare-fun temp13_10 () (_ BitVec 64))
(declare-fun temp13_11 () (_ BitVec 64))
(declare-fun var4982990 () (_ BitVec 64))
(declare-fun temp13_12 () (_ BitVec 64))
(declare-fun var4983067 () (_ BitVec 64))
(declare-fun var4982988 () (_ BitVec 64))
(declare-fun var533040 () (_ BitVec 64))
(declare-fun var533041 () (_ BitVec 64))
(declare-fun temp13_13 () (_ BitVec 64))
(declare-fun var6496612 () (_ BitVec 64))
(declare-fun var6496653 () (_ BitVec 64))
(declare-fun temp13_14 () (_ BitVec 64))
(declare-fun var6689413 () (_ BitVec 64))
(declare-fun var6689417 () (_ BitVec 64))
(declare-fun temp13_15 () (_ BitVec 64))
(declare-fun var6689418 () (_ BitVec 64))
(assert (= temp13_2 #x0000000000000000))
(assert (= temp13_1 temp13_2))
(assert (= temp13_3 #x0000000000000000))
(assert (= var3409718 temp13_3))
(assert (= var3608796 var3409718))
(assert (= temp13_4 #x0000000000000001))
(assert (= var4196331 (bvshl ARGNAME_input_NAMEEND_DIM temp13_4)))
(assert (= temp13_6 #x0000000000000000))
(assert (= temp13_5 temp13_6))
(assert (= var4262775 var4196331))
(assert (= temp13_7 #x0000000000000000))
(assert (= var4196392 temp13_7))
(assert (= var4196379 var4196392))
(assert (= var4196378 var4196379))
(assert (= temp13_8 #x0000000000000001))
(assert (= var4196383 (bvand var4196378 temp13_8)))
(assert (= temp13_9 #x0000000000000000))
(assert (= var4196385
   (ite (= var4196383 temp13_9) #x0000000000000001 #x0000000000000000)))
(assert (= temp13_10 #x0000000000000001))
(assert (= var4196385 temp13_10))
(assert (= temp13_11 #x0000000000000000))
(assert (= var4982990 temp13_11))
(assert (= temp13_12 #x0000000000000001))
(assert (= var4983067 temp13_12))
(assert (= var4982988 var4983067))
(assert (= var533040 var4982988))
(assert (= var533041 var533040))
(assert (= temp13_13 #x0000000000000000))
(assert (= var6496612 temp13_13))
(assert (= var6496653 var6496612))
(assert (= temp13_14 #x0000000000000006))
(assert (= var6689413 temp13_14))
(assert (= var6689417 var533041))
(assert (= temp13_15 #x0000000000000000))
(assert (= var6689418 temp13_15))
(model-add temp13_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp13_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp13_3 () (_ BitVec 64) #x0000000000000000)
(model-add var3409718 () (_ BitVec 64) #x0000000000000000)
(model-add var3608796 () (_ BitVec 64) #x0000000000000000)
(model-add temp13_4 () (_ BitVec 64) #x0000000000000001)
(model-add var4196331
           ()
           (_ BitVec 64)
           (concat ((_ extract 62 0) ARGNAME_input_NAMEEND_DIM) #b0))
(model-add temp13_6 () (_ BitVec 64) #x0000000000000000)
(model-add temp13_5 () (_ BitVec 64) #x0000000000000000)
(model-add var4262775
           ()
           (_ BitVec 64)
           (concat ((_ extract 62 0) ARGNAME_input_NAMEEND_DIM) #b0))
(model-add temp13_7 () (_ BitVec 64) #x0000000000000000)
(model-add var4196392 () (_ BitVec 64) #x0000000000000000)
(model-add var4196379 () (_ BitVec 64) #x0000000000000000)
(model-add var4196378 () (_ BitVec 64) #x0000000000000000)
(model-add temp13_8 () (_ BitVec 64) #x0000000000000001)
(model-add var4196383 () (_ BitVec 64) #x0000000000000000)
(model-add temp13_9 () (_ BitVec 64) #x0000000000000000)
(model-add var4196385 () (_ BitVec 64) #x0000000000000001)
(model-add temp13_10 () (_ BitVec 64) #x0000000000000001)





