(declare-fun temp685_2 () (_ BitVec 64))
(declare-fun temp685_1 () (_ BitVec 64))
(declare-fun temp685_3 () (_ BitVec 64))
(declare-fun var3409718 () (_ BitVec 64))
(declare-fun var3608796 () (_ BitVec 64))
(declare-fun temp685_4 () (_ BitVec 64))
(declare-fun var4196331 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp685_6 () (_ BitVec 64))
(declare-fun temp685_5 () (_ BitVec 64))
(declare-fun var4262775 () (_ BitVec 64))
(declare-fun temp685_7 () (_ BitVec 64))
(declare-fun var4196378 () (_ BitVec 64))
(declare-fun temp685_8 () (_ BitVec 64))
(declare-fun var4196383 () (_ BitVec 64))
(declare-fun temp685_9 () (_ BitVec 64))
(declare-fun var4196385 () (_ BitVec 64))
(declare-fun temp685_10 () (_ BitVec 64))
(declare-fun temp685_11 () (_ BitVec 64))
(declare-fun var4786382 () (_ BitVec 64))
(declare-fun temp685_12 () (_ BitVec 64))
(declare-fun temp685_13 () (_ BitVec 64))
(declare-fun var4786412 () (_ BitVec 64))
(declare-fun var4786459 () (_ BitVec 64))
(declare-fun var4786380 () (_ BitVec 64))
(declare-fun var533040 () (_ BitVec 64))
(declare-fun var533041 () (_ BitVec 64))
(declare-fun temp685_14 () (_ BitVec 64))
(declare-fun var5906788 () (_ BitVec 64))
(declare-fun var5906829 () (_ BitVec 64))
(declare-fun temp685_15 () (_ BitVec 64))
(declare-fun var6099589 () (_ BitVec 64))
(declare-fun var6099593 () (_ BitVec 64))
(declare-fun temp685_16 () (_ BitVec 64))
(declare-fun var6099594 () (_ BitVec 64))
(assert (= temp685_2 #x0000000000000000))
(assert (= temp685_1 temp685_2))
(assert (= temp685_3 #x0000000000000000))
(assert (= var3409718 temp685_3))
(assert (= var3608796 var3409718))
(assert (= temp685_4 #x0000000000000001))
(assert (= var4196331 (bvshl ARGNAME_input_NAMEEND_DIM temp685_4)))
(assert (= temp685_6 #x0000000000000000))
(assert (= temp685_5 temp685_6))
(assert (= var4262775 var4196331))
(assert (= temp685_7 #x0000000000000000))
(assert (= var4196378 temp685_7))
(assert (= temp685_8 #x0000000000000001))
(assert (= var4196383 (bvand var4196378 temp685_8)))
(assert (= temp685_9 #x0000000000000000))
(assert (= var4196385
   (ite (= var4196383 temp685_9) #x0000000000000001 #x0000000000000000)))
(assert (= temp685_10 #x0000000000000001))
(assert (= var4196385 temp685_10))
(assert (= temp685_11 #x0000000000000000))
(assert (= var4786382 temp685_11))
(assert (= temp685_12 #x0000000000000000))
(assert (= temp685_13 #x0000000000000002))
(assert (= var4786412 (ite (= var4786382 #x0000000000000001) temp685_12 temp685_13)))
(assert (= var4786459 var4786412))
(assert (= var4786380 var4786459))
(assert (= var533040 var4786380))
(assert (= var533041 var533040))
(assert (= temp685_14 #x0000000000000000))
(assert (= var5906788 temp685_14))
(assert (= var5906829 var5906788))
(assert (= temp685_15 #x0000000000000006))
(assert (= var6099589 temp685_15))
(assert (= var6099593 var533041))
(assert (= temp685_16 #x0000000000000000))
(assert (= var6099594 temp685_16))
(model-add temp685_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp685_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp685_3 () (_ BitVec 64) #x0000000000000000)
(model-add var3409718 () (_ BitVec 64) #x0000000000000000)
(model-add var3608796 () (_ BitVec 64) #x0000000000000000)
(model-add temp685_4 () (_ BitVec 64) #x0000000000000001)
(model-add var4196331
           ()
           (_ BitVec 64)
           (concat ((_ extract 62 0) ARGNAME_input_NAMEEND_DIM) #b0))
(model-add temp685_6 () (_ BitVec 64) #x0000000000000000)
(model-add temp685_5 () (_ BitVec 64) #x0000000000000000)
(model-add var4262775
           ()
           (_ BitVec 64)
           (concat ((_ extract 62 0) ARGNAME_input_NAMEEND_DIM) #b0))
(model-add temp685_7 () (_ BitVec 64) #x0000000000000000)
(model-add var4196378 () (_ BitVec 64) #x0000000000000000)
(model-add temp685_8 () (_ BitVec 64) #x0000000000000001)
(model-add var4196383 () (_ BitVec 64) #x0000000000000000)
(model-add temp685_9 () (_ BitVec 64) #x0000000000000000)
(model-add var4196385 () (_ BitVec 64) #x0000000000000001)
(model-add temp685_10 () (_ BitVec 64) #x0000000000000001)




