(declare-fun temp4065_2 () (_ BitVec 64))
(declare-fun temp4065_1 () (_ BitVec 64))
(declare-fun temp4065_3 () (_ BitVec 64))
(declare-fun var463945 () (_ BitVec 64))
(declare-fun temp4065_4 () (_ BitVec 64))
(declare-fun var788278 () (_ BitVec 64))
(declare-fun var987356 () (_ BitVec 64))
(declare-fun temp4065_5 () (_ BitVec 64))
(declare-fun temp4065_6 () (_ BitVec 64))
(declare-fun var464053 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_n_NAMEEND () (_ BitVec 64))
(declare-fun temp4065_7 () (_ BitVec 64))
(declare-fun var464087 () (_ BitVec 64))
(declare-fun temp4065_8 () (_ BitVec 64))
(declare-fun var464088 () (_ BitVec 64))
(declare-fun temp4065_9 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1443819 () (_ BitVec 64))
(declare-fun temp4065_11 () (_ BitVec 64))
(declare-fun temp4065_10 () (_ BitVec 64))
(declare-fun var1510263 () (_ BitVec 64))
(declare-fun temp4065_12 () (_ BitVec 64))
(declare-fun var1576712 () (_ BitVec 64))
(declare-fun var1642257 () (_ BitVec 64))
(declare-fun temp4065_14 () (_ BitVec 64))
(declare-fun temp4065_13 () (_ BitVec 64))
(declare-fun temp4065_15 () (_ BitVec 64))
(declare-fun var1838839 () (_ BitVec 64))
(declare-fun temp4065_16 () (_ BitVec 64))
(declare-fun var1443880 () (_ BitVec 64))
(declare-fun temp4065_17 () (_ BitVec 64))
(declare-fun var1443922 () (_ BitVec 64))
(declare-fun temp4065_19 () (_ BitVec 64))
(declare-fun temp4065_18 () (_ BitVec 64))
(declare-fun temp4065_20 () (_ BitVec 64))
(declare-fun var2427896 () (_ BitVec 64))
(declare-fun temp4065_21 () (_ BitVec 64))
(declare-fun var2427934 () (_ BitVec 64))
(declare-fun temp4065_22 () (_ BitVec 64))
(declare-fun var2427946 () (_ BitVec 64))
(declare-fun temp4065_23 () (_ BitVec 64))
(declare-fun temp4065_24 () (_ BitVec 64))
(declare-fun var1443867 () (_ BitVec 64))
(declare-fun var1443866 () (_ BitVec 64))
(declare-fun temp4065_25 () (_ BitVec 64))
(declare-fun var1443871 () (_ BitVec 64))
(declare-fun temp4065_26 () (_ BitVec 64))
(declare-fun var1443873 () (_ BitVec 64))
(declare-fun temp4065_27 () (_ BitVec 64))
(declare-fun temp4065_28 () (_ BitVec 64))
(declare-fun var3476634 () (_ BitVec 64))
(declare-fun var3999950 () (_ BitVec 64))
(declare-fun temp4065_29 () (_ BitVec 64))
(declare-fun temp4065_30 () (_ BitVec 64))
(declare-fun var3999980 () (_ BitVec 64))
(declare-fun var4000027 () (_ BitVec 64))
(declare-fun var3999948 () (_ BitVec 64))
(declare-fun var464128 () (_ BitVec 64))
(declare-fun temp4065_31 () (_ BitVec 64))
(declare-fun var464149 () (_ BitVec 64))
(declare-fun var4789579 () (_ BitVec 64))
(assert (= temp4065_2 #x0000000000000000))
(assert (= temp4065_1 temp4065_2))
(assert (= temp4065_3 #x0000000000000001))
(assert (= var463945 temp4065_3))
(assert (= temp4065_4 #x0000000000000001))
(assert (= var788278 temp4065_4))
(assert (= var987356 var788278))
(assert (= temp4065_5 #x0000000000000001))
(assert (= var464053
   (ite (bvslt ARGNAME_n_NAMEEND temp4065_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp4065_6 #x0000000000000000))
(assert (= var464053 temp4065_6))
(assert (= temp4065_7 #x0000000000000002))
(assert (= var464087 (bvsdiv ARGNAME_n_NAMEEND temp4065_7)))
(assert (= temp4065_8 #x0000000000000001))
(assert (= var464088 (bvadd var464087 temp4065_8)))
(assert (= temp4065_9 #x0000000000000001))
(assert (= var1443819 (bvshl ARGNAME_input_NAMEEND_DIM temp4065_9)))
(assert (= temp4065_11 #x0000000000000000))
(assert (= temp4065_10 temp4065_11))
(assert (= var1510263 var1443819))
(assert (= temp4065_12 #x0000000000000005))
(assert (= var1576712 temp4065_12))
(assert (= var1642257 var1510263))
(assert (= temp4065_14 #x0000000000000000))
(assert (= temp4065_13 temp4065_14))
(assert (= temp4065_15 #x0000000000000000))
(assert (= var1838839 temp4065_15))
(assert (= temp4065_16 #x0000000000000000))
(assert (= var1443880 temp4065_16))
(assert (= temp4065_17 #x0000000000000001))
(assert (= var1443922 temp4065_17))
(assert (= temp4065_19 #x0000000000000000))
(assert (= temp4065_18 temp4065_19))
(assert (= temp4065_20 #x0000000000000001))
(assert (= var2427896 temp4065_20))
(assert (= temp4065_21 #x0000000000000000))
(assert (= var2427934 temp4065_21))
(assert (= temp4065_22 #x0000000000000000))
(assert (= var2427946 temp4065_22))
(assert (= temp4065_23 #x0000000000000000))
(assert (= var2427946 temp4065_23))
(assert (= temp4065_24 #x0000000000000000))
(assert (= var2427934 temp4065_24))
(assert (= var1443867 var1443922))
(assert (= var1443866 var1443867))
(assert (= temp4065_25 #x0000000000000001))
(assert (= var1443871 (bvand var1443866 temp4065_25)))
(assert (= temp4065_26 #x0000000000000000))
(assert (= var1443873
   (ite (= var1443871 temp4065_26) #x0000000000000001 #x0000000000000000)))
(assert (= temp4065_27 #x0000000000000000))
(assert (= var1443873 temp4065_27))
(assert (= temp4065_28 #x0000000000000000))
(assert (= var3476634 temp4065_28))
(assert (= var3999950 var463945))
(assert (= temp4065_29 #x0000000000000000))
(assert (= temp4065_30 #x0000000000000002))
(assert (= var3999980 (ite (= var3999950 #x0000000000000001) temp4065_29 temp4065_30)))
(assert (= var4000027 var3999980))
(assert (= var3999948 var4000027))
(assert (= var464128 var3999948))
(assert (= temp4065_31 #x0000000000000001))
(assert (= var463945 temp4065_31))
(assert (= var464149 var464128))
(assert (= var4789579 var464149))
(model-add temp4065_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp4065_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp4065_3 () (_ BitVec 64) #x0000000000000001)
(model-add var463945 () (_ BitVec 64) #x0000000000000001)
(model-add temp4065_4 () (_ BitVec 64) #x0000000000000001)
(model-add var788278 () (_ BitVec 64) #x0000000000000001)
(model-add var987356 () (_ BitVec 64) #x0000000000000001)
(model-add temp4065_5 () (_ BitVec 64) #x0000000000000001)
(model-add temp4065_6 () (_ BitVec 64) #x0000000000000000)
(model-add var464053 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_n_NAMEEND
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000001 #x8000000000000000))
                #x0000000000000001
                (bvsub #x0000000000000001 #x0000000000000001)))






