(declare-fun temp0_1 () (_ BitVec 64))
(declare-fun var264610 () (_ BitVec 64))
(declare-fun temp0_2 () (_ BitVec 64))
(declare-fun var264611 () (_ BitVec 64))
(declare-fun temp0_3 () (_ BitVec 64))
(declare-fun var264612 () (_ BitVec 64))
(declare-fun temp0_4 () (_ BitVec 64))
(declare-fun temp0_5 () (_ BitVec 64))
(declare-fun ARGNAME_images_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var264638 () (_ BitVec 64))
(declare-fun temp0_6 () (_ BitVec 64))
(declare-fun temp0_7 () (_ BitVec 64))
(declare-fun ARGNAME_images_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp0_8 () (_ BitVec 64))
(declare-fun temp0_9 () (_ BitVec 64))
(declare-fun temp0_10 () (_ BitVec 64))
(declare-fun temp0_11 () (_ BitVec 64))
(declare-fun temp0_12 () (_ BitVec 64))
(declare-fun temp0_13 () (_ BitVec 64))
(declare-fun temp0_14 () (_ BitVec 64))
(declare-fun temp0_15 () (_ BitVec 64))
(declare-fun temp0_16 () (_ BitVec 64))
(declare-fun temp0_17 () (_ BitVec 64))
(declare-fun temp0_18 () (_ BitVec 64))
(declare-fun temp0_19 () (_ BitVec 64))
(declare-fun temp0_20 () (_ BitVec 64))
(declare-fun var264670 () (_ BitVec 64))
(declare-fun temp0_21 () (_ BitVec 64))
(declare-fun temp0_22 () (_ BitVec 64))
(declare-fun var264673 () (_ BitVec 64))
(declare-fun temp0_23 () (_ BitVec 64))
(declare-fun var264676 () (_ BitVec 64))
(declare-fun temp0_24 () (_ BitVec 64))
(declare-fun temp0_25 () (_ BitVec 64))
(declare-fun temp0_26 () (_ BitVec 64))
(declare-fun var264696 () (_ BitVec 64))
(declare-fun temp0_27 () (_ BitVec 64))
(declare-fun var264697 () (_ BitVec 64))
(declare-fun temp0_28 () (_ BitVec 64))
(declare-fun temp0_29 () (_ BitVec 64))
(declare-fun temp0_30 () (_ BitVec 64))
(declare-fun var264699 () (_ BitVec 64))
(declare-fun temp0_31 () (_ BitVec 64))
(declare-fun var264700 () (_ BitVec 64))
(declare-fun temp0_32 () (_ BitVec 64))
(declare-fun temp0_33 () (_ BitVec 64))
(declare-fun temp0_34 () (_ BitVec 64))
(declare-fun var264720 () (_ BitVec 64))
(declare-fun temp0_35 () (_ BitVec 64))
(declare-fun var330101 () (_ BitVec 64))
(declare-fun var264721 () (_ BitVec 64))
(declare-fun var264722 () (_ BitVec 64))
(declare-fun var264723 () (_ BitVec 64))
(declare-fun temp0_36 () (_ BitVec 64))
(declare-fun temp0_37 () (_ BitVec 64))
(declare-fun temp0_38 () (_ BitVec 64))
(declare-fun var264725 () (_ BitVec 64))
(declare-fun temp0_39 () (_ BitVec 64))
(declare-fun var395637 () (_ BitVec 64))
(declare-fun var264726 () (_ BitVec 64))
(declare-fun var264727 () (_ BitVec 64))
(declare-fun var264728 () (_ BitVec 64))
(declare-fun temp0_40 () (_ BitVec 64))
(declare-fun temp0_41 () (_ BitVec 64))
(declare-fun temp0_42 () (_ BitVec 64))
(declare-fun var264748 () (_ BitVec 64))
(declare-fun temp0_43 () (_ BitVec 64))
(declare-fun var264749 () (_ BitVec 64))
(declare-fun temp0_44 () (_ BitVec 64))
(declare-fun var264750 () (_ BitVec 64))
(declare-fun temp0_45 () (_ BitVec 64))
(declare-fun temp0_46 () (_ BitVec 64))
(declare-fun var264753 () (_ BitVec 64))
(declare-fun temp0_47 () (_ BitVec 64))
(declare-fun var264754 () (_ BitVec 64))
(declare-fun temp0_48 () (_ BitVec 64))
(declare-fun var264755 () (_ BitVec 64))
(declare-fun temp0_49 () (_ BitVec 64))
(declare-fun ARGNAME_size_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var264760 () (_ BitVec 64))
(declare-fun temp0_50 () (_ BitVec 64))
(declare-fun temp0_51 () (_ BitVec 64))
(declare-fun ARGNAME_size_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var264794 () (_ BitVec 64))
(declare-fun temp0_52 () (_ BitVec 64))
(declare-fun temp0_53 () (_ BitVec 64))
(declare-fun var460447 () (_ BitVec 64))
(declare-fun temp0_54 () (_ BitVec 64))
(declare-fun var525983 () (_ BitVec 64))
(declare-fun var264871 () (_ BitVec 64))
(declare-fun var591601 () (_ BitVec 64))
(declare-fun var264878 () (_ BitVec 64))
(declare-fun var657137 () (_ BitVec 64))
(declare-fun temp0_55 () (_ BitVec 64))
(declare-fun var722688 () (_ BitVec 64))
(declare-fun var264894 () (_ BitVec 64))
(declare-fun var264895 () (_ BitVec 64))
(declare-fun var198853 () (_ BitVec 64))
(declare-fun var198936 () (_ BitVec 64))
(declare-fun var67619 () (_ BitVec 64))
(declare-fun temp0_56 () (_ BitVec 64))
(declare-fun var67620 () (_ BitVec 64))
(declare-fun var67623 () (_ BitVec 64))
(declare-fun temp0_57 () (_ BitVec 64))
(declare-fun var67624 () (_ BitVec 64))
(declare-fun var67625 () (_ BitVec 64))
(declare-fun temp0_58 () (_ BitVec 64))
(assert (= temp0_1 #x0000000000000001))
(assert (= var264610 temp0_1))
(assert (= temp0_2 #x0000000000000001))
(assert (= var264611 (bvand var264610 temp0_2)))
(assert (= temp0_3 #x0000000000000000))
(assert (= var264612 (ite (= var264611 temp0_3) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_4 #x0000000000000000))
(assert (= var264612 temp0_4))
(assert (= temp0_5 #x0000000000000004))
(assert (= var264638
   (ite (= ARGNAME_images_NAMEEND_DIM temp0_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_6 #x0000000000000001))
(assert (= var264638 temp0_6))
(assert (= temp0_7 #x0000000000000000))
(assert (= temp0_8 (select ARGNAME_images_NAMEEND_DIMSIZE temp0_7)))
(assert (= temp0_9 #x0000000000000001))
(assert (= temp0_10 (select ARGNAME_images_NAMEEND_DIMSIZE temp0_9)))
(assert (= temp0_11 #x0000000000000002))
(assert (= temp0_12 (select ARGNAME_images_NAMEEND_DIMSIZE temp0_11)))
(assert (= temp0_13 #x0000000000000003))
(assert (= temp0_14 (select ARGNAME_images_NAMEEND_DIMSIZE temp0_13)))
(assert (= temp0_15 #x0000000000000004))
(assert (= temp0_16 (select ARGNAME_images_NAMEEND_DIMSIZE temp0_15)))
(assert (= temp0_17 #x0000000000000005))
(assert (= temp0_18 (select ARGNAME_images_NAMEEND_DIMSIZE temp0_17)))
(assert (= temp0_19 #x0000000000000000))
(assert (= temp0_20 (select ARGNAME_images_NAMEEND_DIMSIZE temp0_19)))
(assert (= var264670 temp0_20))
(assert (= temp0_21 #x0000000000000003))
(assert (= temp0_22 (select ARGNAME_images_NAMEEND_DIMSIZE temp0_21)))
(assert (= var264673 temp0_22))
(assert (= temp0_23 #x0000000000000000))
(assert (= var264676
   (ite (bvsgt var264673 temp0_23) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_24 #x0000000000000001))
(assert (= var264676 temp0_24))
(assert (= temp0_25 #x0000000000000001))
(assert (= temp0_26 (select ARGNAME_images_NAMEEND_DIMSIZE temp0_25)))
(assert (= var264696 temp0_26))
(assert (= temp0_27 #x0000000000000000))
(assert (= var264697
   (ite (bvsgt var264696 temp0_27) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_28 #x0000000000000001))
(assert (= var264697 temp0_28))
(assert (= temp0_29 #x0000000000000002))
(assert (= temp0_30 (select ARGNAME_images_NAMEEND_DIMSIZE temp0_29)))
(assert (= var264699 temp0_30))
(assert (= temp0_31 #x0000000000000000))
(assert (= var264700
   (ite (bvsgt var264699 temp0_31) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_32 #x0000000000000001))
(assert (= var264700 temp0_32))
(assert (= temp0_33 #x0000000000000001))
(assert (= temp0_34 (select ARGNAME_images_NAMEEND_DIMSIZE temp0_33)))
(assert (= var264720 temp0_34))
(assert (= temp0_35 #x000000007fffffff))
(assert (= var330101 temp0_35))
(assert (= var264721 var330101))
(assert (= var264722 var264721))
(assert (= var264723
   (ite (bvslt var264720 var264722) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_36 #x0000000000000001))
(assert (= var264723 temp0_36))
(assert (= temp0_37 #x0000000000000002))
(assert (= temp0_38 (select ARGNAME_images_NAMEEND_DIMSIZE temp0_37)))
(assert (= var264725 temp0_38))
(assert (= temp0_39 #x000000007fffffff))
(assert (= var395637 temp0_39))
(assert (= var264726 var395637))
(assert (= var264727 var264726))
(assert (= var264728
   (ite (bvslt var264725 var264727) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_40 #x0000000000000001))
(assert (= var264728 temp0_40))
(assert (= temp0_41 #x0000000000000001))
(assert (= temp0_42 (select ARGNAME_images_NAMEEND_DIMSIZE temp0_41)))
(assert (= var264748 temp0_42))
(assert (= temp0_43 #x0000000000000020))
(assert (= var264749 (bvshl var264748 temp0_43)))
(assert (= temp0_44 #x0000000000000020))
(assert (= var264750 (bvashr var264749 temp0_44)))
(assert (= temp0_45 #x0000000000000002))
(assert (= temp0_46 (select ARGNAME_images_NAMEEND_DIMSIZE temp0_45)))
(assert (= var264753 temp0_46))
(assert (= temp0_47 #x0000000000000020))
(assert (= var264754 (bvshl var264753 temp0_47)))
(assert (= temp0_48 #x0000000000000020))
(assert (= var264755 (bvashr var264754 temp0_48)))
(assert (= temp0_49 #x0000000000000001))
(assert (= var264760
   (ite (= ARGNAME_size_NAMEEND_DIM temp0_49)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_50 #x0000000000000001))
(assert (= var264760 temp0_50))
(assert (= temp0_51 #x0000000000000002))
(assert (= var264794
   (ite (= ARGNAME_size_NAMEEND_NUMELEMENT temp0_51)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_52 #x0000000000000001))
(assert (= var264794 temp0_52))
(assert (= temp0_53 #x0000000000000000))
(assert (= var460447 temp0_53))
(assert (= temp0_54 #x0000000000000001))
(assert (= var525983 temp0_54))
(assert (= var264871 var264750))
(assert (= var591601 var264871))
(assert (= var264878 var264755))
(assert (= var657137 var264878))
(assert (= temp0_55 #xffffffffffffffff))
(assert (= var722688 temp0_55))
(assert (= var264894 var722688))
(assert (= var264895 var264894))
(assert (= var198853 var264670))
(assert (= var198936 var264673))
(assert (= var67619 var264750))
(assert (= temp0_56 #x0000000001000000))
(assert (= var67620
   (ite (bvslt var67619 temp0_56) #x0000000000000001 #x0000000000000000)))
(assert (= var67623 var264755))
(assert (= temp0_57 #x0000000001000000))
(assert (= var67624
   (ite (bvslt var67623 temp0_57) #x0000000000000001 #x0000000000000000)))
(assert (= var67625 (bvand var67620 var67624)))
(assert (= temp0_58 #x0000000000000001))
(assert (= var67625 temp0_58))
(model-add temp0_1 () (_ BitVec 64) #x0000000000000001)
(model-add var264610 () (_ BitVec 64) #x0000000000000001)
(model-add temp0_2 () (_ BitVec 64) #x0000000000000001)
(model-add var264611 () (_ BitVec 64) #x0000000000000001)
(model-add temp0_3 () (_ BitVec 64) #x0000000000000000)
(model-add var264612 () (_ BitVec 64) #x0000000000000000)
(model-add temp0_4 () (_ BitVec 64) #x0000000000000000)























