(declare-fun temp52_1 () (_ BitVec 64))
(declare-fun temp52_2 () (_ BitVec 64))
(declare-fun var68027 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp52_3 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp52_4 () (_ BitVec 64))
(declare-fun temp52_5 () (_ BitVec 64))
(declare-fun temp52_6 () (_ BitVec 64))
(declare-fun temp52_7 () (_ BitVec 64))
(declare-fun temp52_8 () (_ BitVec 64))
(declare-fun temp52_9 () (_ BitVec 64))
(declare-fun temp52_10 () (_ BitVec 64))
(declare-fun temp52_11 () (_ BitVec 64))
(declare-fun temp52_12 () (_ BitVec 64))
(declare-fun temp52_13 () (_ BitVec 64))
(declare-fun temp52_14 () (_ BitVec 64))
(declare-fun temp52_15 () (_ BitVec 64))
(declare-fun temp52_16 () (_ BitVec 64))
(declare-fun var68071 () (_ BitVec 64))
(declare-fun temp52_17 () (_ BitVec 64))
(declare-fun temp52_18 () (_ BitVec 64))
(declare-fun var68074 () (_ BitVec 64))
(declare-fun temp52_19 () (_ BitVec 64))
(declare-fun temp52_20 () (_ BitVec 64))
(declare-fun var68075 () (_ BitVec 64))
(declare-fun temp52_21 () (_ BitVec 64))
(declare-fun temp52_22 () (_ BitVec 64))
(declare-fun var68077 () (_ BitVec 64))
(declare-fun temp52_23 () (_ BitVec 64))
(declare-fun temp52_24 () (_ BitVec 64))
(declare-fun var68079 () (_ BitVec 64))
(declare-fun var68081 () (_ BitVec 64))
(declare-fun temp52_26 () (_ BitVec 64))
(declare-fun temp52_25 () (_ BitVec 64))
(declare-fun temp52_28 () (_ BitVec 64))
(declare-fun temp52_27 () (_ BitVec 64))
(declare-fun temp52_30 () (_ BitVec 64))
(declare-fun temp52_29 () (_ BitVec 64))
(declare-fun temp52_32 () (_ BitVec 64))
(declare-fun temp52_31 () (_ BitVec 64))
(declare-fun temp52_34 () (_ BitVec 64))
(declare-fun temp52_33 () (_ BitVec 64))
(declare-fun temp52_36 () (_ BitVec 64))
(declare-fun temp52_35 () (_ BitVec 64))
(declare-fun temp52_37 () (_ BitVec 64))
(declare-fun var68116 () (_ BitVec 64))
(declare-fun temp52_38 () (_ BitVec 64))
(declare-fun var68117 () (_ BitVec 64))
(declare-fun var134513 () (_ BitVec 64))
(declare-fun var200038 () (_ BitVec 64))
(declare-fun var265152 () (_ BitVec 64))
(declare-fun temp52_39 () (_ BitVec 64))
(declare-fun var265154 () (_ BitVec 64))
(declare-fun temp52_40 () (_ BitVec 64))
(declare-fun var265172 () (_ BitVec 64))
(declare-fun temp52_41 () (_ BitVec 64))
(declare-fun temp52_43 () (_ BitVec 64))
(declare-fun temp52_42 () (_ BitVec 64))
(declare-fun temp52_45 () (_ BitVec 64))
(declare-fun temp52_44 () (_ BitVec 64))
(declare-fun temp52_46 () (_ BitVec 64))
(declare-fun var265224 () (_ BitVec 64))
(declare-fun temp52_47 () (_ BitVec 64))
(declare-fun temp52_48 () (_ BitVec 64))
(declare-fun var68143 () (_ BitVec 64))
(declare-fun temp52_49 () (_ BitVec 64))
(declare-fun var68144 () (_ BitVec 64))
(declare-fun var331121 () (_ BitVec 64))
(declare-fun temp52_50 () (_ BitVec 64))
(declare-fun var68166 () (_ BitVec 64))
(declare-fun temp52_51 () (_ BitVec 64))
(declare-fun var68167 () (_ BitVec 64))
(declare-fun var396657 () (_ BitVec 64))
(declare-fun var462182 () (_ BitVec 64))
(declare-fun var527296 () (_ BitVec 64))
(declare-fun temp52_52 () (_ BitVec 64))
(declare-fun var527298 () (_ BitVec 64))
(declare-fun temp52_53 () (_ BitVec 64))
(declare-fun var527316 () (_ BitVec 64))
(declare-fun temp52_54 () (_ BitVec 64))
(declare-fun temp52_56 () (_ BitVec 64))
(declare-fun temp52_55 () (_ BitVec 64))
(declare-fun temp52_58 () (_ BitVec 64))
(declare-fun temp52_57 () (_ BitVec 64))
(declare-fun temp52_59 () (_ BitVec 64))
(declare-fun var527368 () (_ BitVec 64))
(declare-fun temp52_60 () (_ BitVec 64))
(assert (= temp52_1 #x0000000000000005))
(assert (= var68027
   (ite (= ARGNAME_input_NAMEEND_DIM temp52_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp52_2 #x0000000000000001))
(assert (= var68027 temp52_2))
(assert (= temp52_3 #x0000000000000000))
(assert (= temp52_4 (select ARGNAME_input_NAMEEND_DIMSIZE temp52_3)))
(assert (= temp52_5 #x0000000000000001))
(assert (= temp52_6 (select ARGNAME_input_NAMEEND_DIMSIZE temp52_5)))
(assert (= temp52_7 #x0000000000000002))
(assert (= temp52_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp52_7)))
(assert (= temp52_9 #x0000000000000003))
(assert (= temp52_10 (select ARGNAME_input_NAMEEND_DIMSIZE temp52_9)))
(assert (= temp52_11 #x0000000000000004))
(assert (= temp52_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp52_11)))
(assert (= temp52_13 #x0000000000000005))
(assert (= temp52_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp52_13)))
(assert (= temp52_15 #x0000000000000000))
(assert (= temp52_16 (select ARGNAME_input_NAMEEND_DIMSIZE temp52_15)))
(assert (= var68071 temp52_16))
(assert (= temp52_17 #x0000000000000001))
(assert (= temp52_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp52_17)))
(assert (= var68074 temp52_18))
(assert (= temp52_19 #x0000000000000002))
(assert (= temp52_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp52_19)))
(assert (= var68075 temp52_20))
(assert (= temp52_21 #x0000000000000003))
(assert (= temp52_22 (select ARGNAME_input_NAMEEND_DIMSIZE temp52_21)))
(assert (= var68077 temp52_22))
(assert (= temp52_23 #x0000000000000004))
(assert (= temp52_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp52_23)))
(assert (= var68079 temp52_24))
(assert (= var68081 var68079))
(assert (= temp52_26 #x0000000000000000))
(assert (= temp52_25 temp52_26))
(assert (= temp52_28 #x0000000000000000))
(assert (= temp52_27 temp52_28))
(assert (= temp52_30 #x0000000000000000))
(assert (= temp52_29 temp52_30))
(assert (= temp52_32 #x0000000000000000))
(assert (= temp52_31 temp52_32))
(assert (= temp52_34 #x0000000000000000))
(assert (= temp52_33 temp52_34))
(assert (= temp52_36 #x0000000000000000))
(assert (= temp52_35 temp52_36))
(assert (= temp52_37 #x0000000000000020))
(assert (= var68116 (bvshl var68074 temp52_37)))
(assert (= temp52_38 #x0000000000000020))
(assert (= var68117 (bvashr var68116 temp52_38)))
(assert (= var134513 var68117))
(assert (= var200038 var134513))
(assert (= var265152 var200038))
(assert (= temp52_39 #x0000000000000001))
(assert (= var265154 temp52_39))
(assert (= temp52_40 #x0000000000000001))
(assert (= var265172
   (ite (bvslt var265154 temp52_40) #x0000000000000001 #x0000000000000000)))
(assert (= temp52_41 #x0000000000000000))
(assert (= var265172 temp52_41))
(assert (= temp52_43 #x0000000000000000))
(assert (= temp52_42 temp52_43))
(assert (= temp52_45 #x0000000000000000))
(assert (= temp52_44 temp52_45))
(assert (= temp52_46 #x0000000000000000))
(assert (= var265224
   (ite (bvslt temp52_25 temp52_46) #x0000000000000001 #x0000000000000000)))
(assert (= temp52_47 #x0000000000000000))
(assert (= var265224 temp52_47))
(assert (= temp52_48 #x0000000000000020))
(assert (= var68143 (bvshl var68075 temp52_48)))
(assert (= temp52_49 #x0000000000000020))
(assert (= var68144 (bvashr var68143 temp52_49)))
(assert (= var331121 var68144))
(assert (= temp52_50 #x0000000000000020))
(assert (= var68166 (bvshl var68077 temp52_50)))
(assert (= temp52_51 #x0000000000000020))
(assert (= var68167 (bvashr var68166 temp52_51)))
(assert (= var396657 var68167))
(assert (= var462182 var396657))
(assert (= var527296 var462182))
(assert (= temp52_52 #x0000000000000001))
(assert (= var527298 temp52_52))
(assert (= temp52_53 #x0000000000000001))
(assert (= var527316
   (ite (bvslt var527298 temp52_53) #x0000000000000001 #x0000000000000000)))
(assert (= temp52_54 #x0000000000000000))
(assert (= var527316 temp52_54))
(assert (= temp52_56 #x0000000000000000))
(assert (= temp52_55 temp52_56))
(assert (= temp52_58 #x0000000000000000))
(assert (= temp52_57 temp52_58))
(assert (= temp52_59 #x0000000000000000))
(assert (= var527368
   (ite (bvslt temp52_29 temp52_59) #x0000000000000001 #x0000000000000000)))
(assert (= temp52_60 #x0000000000000000))
(assert (= var527368 temp52_60))
(model-add temp52_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp52_2 () (_ BitVec 64) #x0000000000000001)
(model-add var68027 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))












