(declare-fun temp60_1 () (_ BitVec 64))
(declare-fun temp60_2 () (_ BitVec 64))
(declare-fun var68027 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp60_3 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp60_4 () (_ BitVec 64))
(declare-fun temp60_5 () (_ BitVec 64))
(declare-fun temp60_6 () (_ BitVec 64))
(declare-fun temp60_7 () (_ BitVec 64))
(declare-fun temp60_8 () (_ BitVec 64))
(declare-fun temp60_9 () (_ BitVec 64))
(declare-fun temp60_10 () (_ BitVec 64))
(declare-fun temp60_11 () (_ BitVec 64))
(declare-fun temp60_12 () (_ BitVec 64))
(declare-fun temp60_13 () (_ BitVec 64))
(declare-fun temp60_14 () (_ BitVec 64))
(declare-fun temp60_15 () (_ BitVec 64))
(declare-fun temp60_16 () (_ BitVec 64))
(declare-fun var68071 () (_ BitVec 64))
(declare-fun temp60_17 () (_ BitVec 64))
(declare-fun temp60_18 () (_ BitVec 64))
(declare-fun var68074 () (_ BitVec 64))
(declare-fun temp60_19 () (_ BitVec 64))
(declare-fun temp60_20 () (_ BitVec 64))
(declare-fun var68075 () (_ BitVec 64))
(declare-fun temp60_21 () (_ BitVec 64))
(declare-fun temp60_22 () (_ BitVec 64))
(declare-fun var68077 () (_ BitVec 64))
(declare-fun temp60_23 () (_ BitVec 64))
(declare-fun temp60_24 () (_ BitVec 64))
(declare-fun var68079 () (_ BitVec 64))
(declare-fun var68081 () (_ BitVec 64))
(declare-fun temp60_26 () (_ BitVec 64))
(declare-fun temp60_25 () (_ BitVec 64))
(declare-fun temp60_28 () (_ BitVec 64))
(declare-fun temp60_27 () (_ BitVec 64))
(declare-fun temp60_30 () (_ BitVec 64))
(declare-fun temp60_29 () (_ BitVec 64))
(declare-fun temp60_32 () (_ BitVec 64))
(declare-fun temp60_31 () (_ BitVec 64))
(declare-fun temp60_34 () (_ BitVec 64))
(declare-fun temp60_33 () (_ BitVec 64))
(declare-fun temp60_36 () (_ BitVec 64))
(declare-fun temp60_35 () (_ BitVec 64))
(declare-fun temp60_37 () (_ BitVec 64))
(declare-fun var68116 () (_ BitVec 64))
(declare-fun temp60_38 () (_ BitVec 64))
(declare-fun var68117 () (_ BitVec 64))
(declare-fun var134513 () (_ BitVec 64))
(declare-fun var200038 () (_ BitVec 64))
(declare-fun var265152 () (_ BitVec 64))
(declare-fun temp60_39 () (_ BitVec 64))
(declare-fun var265154 () (_ BitVec 64))
(declare-fun temp60_40 () (_ BitVec 64))
(declare-fun var265172 () (_ BitVec 64))
(declare-fun temp60_41 () (_ BitVec 64))
(declare-fun temp60_43 () (_ BitVec 64))
(declare-fun temp60_42 () (_ BitVec 64))
(declare-fun temp60_45 () (_ BitVec 64))
(declare-fun temp60_44 () (_ BitVec 64))
(declare-fun temp60_46 () (_ BitVec 64))
(declare-fun var265224 () (_ BitVec 64))
(declare-fun temp60_47 () (_ BitVec 64))
(declare-fun temp60_48 () (_ BitVec 64))
(declare-fun var68143 () (_ BitVec 64))
(declare-fun temp60_49 () (_ BitVec 64))
(declare-fun var68144 () (_ BitVec 64))
(declare-fun var331121 () (_ BitVec 64))
(declare-fun var396646 () (_ BitVec 64))
(declare-fun var461760 () (_ BitVec 64))
(declare-fun temp60_50 () (_ BitVec 64))
(declare-fun var461762 () (_ BitVec 64))
(declare-fun temp60_51 () (_ BitVec 64))
(declare-fun var461780 () (_ BitVec 64))
(declare-fun temp60_52 () (_ BitVec 64))
(declare-fun temp60_54 () (_ BitVec 64))
(declare-fun temp60_53 () (_ BitVec 64))
(declare-fun temp60_56 () (_ BitVec 64))
(declare-fun temp60_55 () (_ BitVec 64))
(declare-fun temp60_57 () (_ BitVec 64))
(declare-fun var461832 () (_ BitVec 64))
(declare-fun temp60_58 () (_ BitVec 64))
(declare-fun temp60_59 () (_ BitVec 64))
(declare-fun var68166 () (_ BitVec 64))
(declare-fun temp60_60 () (_ BitVec 64))
(declare-fun var68167 () (_ BitVec 64))
(declare-fun var527729 () (_ BitVec 64))
(assert (= temp60_1 #x0000000000000005))
(assert (= var68027
   (ite (= ARGNAME_input_NAMEEND_DIM temp60_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_2 #x0000000000000001))
(assert (= var68027 temp60_2))
(assert (= temp60_3 #x0000000000000000))
(assert (= temp60_4 (select ARGNAME_input_NAMEEND_DIMSIZE temp60_3)))
(assert (= temp60_5 #x0000000000000001))
(assert (= temp60_6 (select ARGNAME_input_NAMEEND_DIMSIZE temp60_5)))
(assert (= temp60_7 #x0000000000000002))
(assert (= temp60_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp60_7)))
(assert (= temp60_9 #x0000000000000003))
(assert (= temp60_10 (select ARGNAME_input_NAMEEND_DIMSIZE temp60_9)))
(assert (= temp60_11 #x0000000000000004))
(assert (= temp60_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp60_11)))
(assert (= temp60_13 #x0000000000000005))
(assert (= temp60_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp60_13)))
(assert (= temp60_15 #x0000000000000000))
(assert (= temp60_16 (select ARGNAME_input_NAMEEND_DIMSIZE temp60_15)))
(assert (= var68071 temp60_16))
(assert (= temp60_17 #x0000000000000001))
(assert (= temp60_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp60_17)))
(assert (= var68074 temp60_18))
(assert (= temp60_19 #x0000000000000002))
(assert (= temp60_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp60_19)))
(assert (= var68075 temp60_20))
(assert (= temp60_21 #x0000000000000003))
(assert (= temp60_22 (select ARGNAME_input_NAMEEND_DIMSIZE temp60_21)))
(assert (= var68077 temp60_22))
(assert (= temp60_23 #x0000000000000004))
(assert (= temp60_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp60_23)))
(assert (= var68079 temp60_24))
(assert (= var68081 var68079))
(assert (= temp60_26 #x0000000000000000))
(assert (= temp60_25 temp60_26))
(assert (= temp60_28 #x0000000000000000))
(assert (= temp60_27 temp60_28))
(assert (= temp60_30 #x0000000000000000))
(assert (= temp60_29 temp60_30))
(assert (= temp60_32 #x0000000000000000))
(assert (= temp60_31 temp60_32))
(assert (= temp60_34 #x0000000000000000))
(assert (= temp60_33 temp60_34))
(assert (= temp60_36 #x0000000000000000))
(assert (= temp60_35 temp60_36))
(assert (= temp60_37 #x0000000000000020))
(assert (= var68116 (bvshl var68074 temp60_37)))
(assert (= temp60_38 #x0000000000000020))
(assert (= var68117 (bvashr var68116 temp60_38)))
(assert (= var134513 var68117))
(assert (= var200038 var134513))
(assert (= var265152 var200038))
(assert (= temp60_39 #x0000000000000001))
(assert (= var265154 temp60_39))
(assert (= temp60_40 #x0000000000000001))
(assert (= var265172
   (ite (bvslt var265154 temp60_40) #x0000000000000001 #x0000000000000000)))
(assert (= temp60_41 #x0000000000000000))
(assert (= var265172 temp60_41))
(assert (= temp60_43 #x0000000000000000))
(assert (= temp60_42 temp60_43))
(assert (= temp60_45 #x0000000000000000))
(assert (= temp60_44 temp60_45))
(assert (= temp60_46 #x0000000000000000))
(assert (= var265224
   (ite (bvslt temp60_25 temp60_46) #x0000000000000001 #x0000000000000000)))
(assert (= temp60_47 #x0000000000000000))
(assert (= var265224 temp60_47))
(assert (= temp60_48 #x0000000000000020))
(assert (= var68143 (bvshl var68075 temp60_48)))
(assert (= temp60_49 #x0000000000000020))
(assert (= var68144 (bvashr var68143 temp60_49)))
(assert (= var331121 var68144))
(assert (= var396646 var331121))
(assert (= var461760 var396646))
(assert (= temp60_50 #x0000000000000001))
(assert (= var461762 temp60_50))
(assert (= temp60_51 #x0000000000000001))
(assert (= var461780
   (ite (bvslt var461762 temp60_51) #x0000000000000001 #x0000000000000000)))
(assert (= temp60_52 #x0000000000000000))
(assert (= var461780 temp60_52))
(assert (= temp60_54 #x0000000000000000))
(assert (= temp60_53 temp60_54))
(assert (= temp60_56 #x0000000000000000))
(assert (= temp60_55 temp60_56))
(assert (= temp60_57 #x0000000000000000))
(assert (= var461832
   (ite (bvslt temp60_27 temp60_57) #x0000000000000001 #x0000000000000000)))
(assert (= temp60_58 #x0000000000000000))
(assert (= var461832 temp60_58))
(assert (= temp60_59 #x0000000000000020))
(assert (= var68166 (bvshl var68077 temp60_59)))
(assert (= temp60_60 #x0000000000000020))
(assert (= var68167 (bvashr var68166 temp60_60)))
(assert (= var527729 var68167))
(model-add temp60_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp60_2 () (_ BitVec 64) #x0000000000000001)
(model-add var68027 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))













