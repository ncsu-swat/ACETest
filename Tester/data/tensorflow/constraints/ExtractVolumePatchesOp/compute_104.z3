(declare-fun temp103_1 () (_ BitVec 64))
(declare-fun temp103_2 () (_ BitVec 64))
(declare-fun var68027 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp103_3 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp103_4 () (_ BitVec 64))
(declare-fun temp103_5 () (_ BitVec 64))
(declare-fun temp103_6 () (_ BitVec 64))
(declare-fun temp103_7 () (_ BitVec 64))
(declare-fun temp103_8 () (_ BitVec 64))
(declare-fun temp103_9 () (_ BitVec 64))
(declare-fun temp103_10 () (_ BitVec 64))
(declare-fun temp103_11 () (_ BitVec 64))
(declare-fun temp103_12 () (_ BitVec 64))
(declare-fun temp103_13 () (_ BitVec 64))
(declare-fun temp103_14 () (_ BitVec 64))
(declare-fun temp103_15 () (_ BitVec 64))
(declare-fun temp103_16 () (_ BitVec 64))
(declare-fun var68071 () (_ BitVec 64))
(declare-fun temp103_17 () (_ BitVec 64))
(declare-fun temp103_18 () (_ BitVec 64))
(declare-fun var68074 () (_ BitVec 64))
(declare-fun temp103_19 () (_ BitVec 64))
(declare-fun temp103_20 () (_ BitVec 64))
(declare-fun var68075 () (_ BitVec 64))
(declare-fun temp103_21 () (_ BitVec 64))
(declare-fun temp103_22 () (_ BitVec 64))
(declare-fun var68077 () (_ BitVec 64))
(declare-fun temp103_23 () (_ BitVec 64))
(declare-fun temp103_24 () (_ BitVec 64))
(declare-fun var68079 () (_ BitVec 64))
(declare-fun var68081 () (_ BitVec 64))
(declare-fun temp103_26 () (_ BitVec 64))
(declare-fun temp103_25 () (_ BitVec 64))
(declare-fun temp103_28 () (_ BitVec 64))
(declare-fun temp103_27 () (_ BitVec 64))
(declare-fun temp103_30 () (_ BitVec 64))
(declare-fun temp103_29 () (_ BitVec 64))
(declare-fun temp103_32 () (_ BitVec 64))
(declare-fun temp103_31 () (_ BitVec 64))
(declare-fun temp103_34 () (_ BitVec 64))
(declare-fun temp103_33 () (_ BitVec 64))
(declare-fun temp103_36 () (_ BitVec 64))
(declare-fun temp103_35 () (_ BitVec 64))
(declare-fun temp103_37 () (_ BitVec 64))
(declare-fun var68116 () (_ BitVec 64))
(declare-fun temp103_38 () (_ BitVec 64))
(declare-fun var68117 () (_ BitVec 64))
(declare-fun var134513 () (_ BitVec 64))
(declare-fun var200038 () (_ BitVec 64))
(declare-fun var265152 () (_ BitVec 64))
(declare-fun temp103_39 () (_ BitVec 64))
(declare-fun var265154 () (_ BitVec 64))
(declare-fun temp103_40 () (_ BitVec 64))
(declare-fun var265172 () (_ BitVec 64))
(declare-fun temp103_41 () (_ BitVec 64))
(declare-fun temp103_42 () (_ BitVec 64))
(declare-fun var265200 () (_ BitVec 64))
(declare-fun temp103_44 () (_ BitVec 64))
(declare-fun temp103_43 () (_ BitVec 64))
(declare-fun temp103_45 () (_ BitVec 64))
(declare-fun var265224 () (_ BitVec 64))
(declare-fun temp103_46 () (_ BitVec 64))
(declare-fun temp103_47 () (_ BitVec 64))
(declare-fun var68143 () (_ BitVec 64))
(declare-fun temp103_48 () (_ BitVec 64))
(declare-fun var68144 () (_ BitVec 64))
(declare-fun var331121 () (_ BitVec 64))
(declare-fun temp103_49 () (_ BitVec 64))
(declare-fun var68166 () (_ BitVec 64))
(declare-fun temp103_50 () (_ BitVec 64))
(declare-fun var68167 () (_ BitVec 64))
(declare-fun var396657 () (_ BitVec 64))
(declare-fun var462182 () (_ BitVec 64))
(declare-fun var527296 () (_ BitVec 64))
(declare-fun temp103_51 () (_ BitVec 64))
(declare-fun var527298 () (_ BitVec 64))
(declare-fun temp103_52 () (_ BitVec 64))
(declare-fun var527316 () (_ BitVec 64))
(declare-fun temp103_53 () (_ BitVec 64))
(declare-fun temp103_54 () (_ BitVec 64))
(declare-fun var527368 () (_ BitVec 64))
(declare-fun temp103_55 () (_ BitVec 64))
(assert (= temp103_1 #x0000000000000005))
(assert (= var68027
   (ite (= ARGNAME_input_NAMEEND_DIM temp103_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp103_2 #x0000000000000001))
(assert (= var68027 temp103_2))
(assert (= temp103_3 #x0000000000000000))
(assert (= temp103_4 (select ARGNAME_input_NAMEEND_DIMSIZE temp103_3)))
(assert (= temp103_5 #x0000000000000001))
(assert (= temp103_6 (select ARGNAME_input_NAMEEND_DIMSIZE temp103_5)))
(assert (= temp103_7 #x0000000000000002))
(assert (= temp103_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp103_7)))
(assert (= temp103_9 #x0000000000000003))
(assert (= temp103_10 (select ARGNAME_input_NAMEEND_DIMSIZE temp103_9)))
(assert (= temp103_11 #x0000000000000004))
(assert (= temp103_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp103_11)))
(assert (= temp103_13 #x0000000000000005))
(assert (= temp103_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp103_13)))
(assert (= temp103_15 #x0000000000000000))
(assert (= temp103_16 (select ARGNAME_input_NAMEEND_DIMSIZE temp103_15)))
(assert (= var68071 temp103_16))
(assert (= temp103_17 #x0000000000000001))
(assert (= temp103_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp103_17)))
(assert (= var68074 temp103_18))
(assert (= temp103_19 #x0000000000000002))
(assert (= temp103_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp103_19)))
(assert (= var68075 temp103_20))
(assert (= temp103_21 #x0000000000000003))
(assert (= temp103_22 (select ARGNAME_input_NAMEEND_DIMSIZE temp103_21)))
(assert (= var68077 temp103_22))
(assert (= temp103_23 #x0000000000000004))
(assert (= temp103_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp103_23)))
(assert (= var68079 temp103_24))
(assert (= var68081 var68079))
(assert (= temp103_26 #x0000000000000000))
(assert (= temp103_25 temp103_26))
(assert (= temp103_28 #x0000000000000000))
(assert (= temp103_27 temp103_28))
(assert (= temp103_30 #x0000000000000000))
(assert (= temp103_29 temp103_30))
(assert (= temp103_32 #x0000000000000000))
(assert (= temp103_31 temp103_32))
(assert (= temp103_34 #x0000000000000000))
(assert (= temp103_33 temp103_34))
(assert (= temp103_36 #x0000000000000000))
(assert (= temp103_35 temp103_36))
(assert (= temp103_37 #x0000000000000020))
(assert (= var68116 (bvshl var68074 temp103_37)))
(assert (= temp103_38 #x0000000000000020))
(assert (= var68117 (bvashr var68116 temp103_38)))
(assert (= var134513 var68117))
(assert (= var200038 var134513))
(assert (= var265152 var200038))
(assert (= temp103_39 #x0000000000000001))
(assert (= var265154 temp103_39))
(assert (= temp103_40 #x0000000000000001))
(assert (= var265172
   (ite (bvslt var265154 temp103_40) #x0000000000000001 #x0000000000000000)))
(assert (= temp103_41 #x0000000000000000))
(assert (= var265172 temp103_41))
(assert (= temp103_42 #xffffffffffffffff))
(assert (= var265200 (bvadd var265152 temp103_42)))
(assert (= temp103_44 #x0000000000000000))
(assert (= temp103_43 temp103_44))
(assert (= temp103_45 #x0000000000000000))
(assert (= var265224
   (ite (bvslt temp103_25 temp103_45) #x0000000000000001 #x0000000000000000)))
(assert (= temp103_46 #x0000000000000000))
(assert (= var265224 temp103_46))
(assert (= temp103_47 #x0000000000000020))
(assert (= var68143 (bvshl var68075 temp103_47)))
(assert (= temp103_48 #x0000000000000020))
(assert (= var68144 (bvashr var68143 temp103_48)))
(assert (= var331121 var68144))
(assert (= temp103_49 #x0000000000000020))
(assert (= var68166 (bvshl var68077 temp103_49)))
(assert (= temp103_50 #x0000000000000020))
(assert (= var68167 (bvashr var68166 temp103_50)))
(assert (= var396657 var68167))
(assert (= var462182 var396657))
(assert (= var527296 var462182))
(assert (= temp103_51 #x0000000000000001))
(assert (= var527298 temp103_51))
(assert (= temp103_52 #x0000000000000001))
(assert (= var527316
   (ite (bvslt var527298 temp103_52) #x0000000000000001 #x0000000000000000)))
(assert (= temp103_53 #x0000000000000000))
(assert (= var527316 temp103_53))
(assert (= temp103_54 #x0000000000000000))
(assert (= var527368
   (ite (bvslt temp103_29 temp103_54) #x0000000000000001 #x0000000000000000)))
(assert (= temp103_55 #x0000000000000000))
(assert (= var527368 temp103_55))
(model-add temp103_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp103_2 () (_ BitVec 64) #x0000000000000001)
(model-add var68027 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))












