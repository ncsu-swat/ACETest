(declare-fun temp105_1 () (_ BitVec 64))
(declare-fun temp105_2 () (_ BitVec 64))
(declare-fun var68027 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp105_3 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp105_4 () (_ BitVec 64))
(declare-fun temp105_5 () (_ BitVec 64))
(declare-fun temp105_6 () (_ BitVec 64))
(declare-fun temp105_7 () (_ BitVec 64))
(declare-fun temp105_8 () (_ BitVec 64))
(declare-fun temp105_9 () (_ BitVec 64))
(declare-fun temp105_10 () (_ BitVec 64))
(declare-fun temp105_11 () (_ BitVec 64))
(declare-fun temp105_12 () (_ BitVec 64))
(declare-fun temp105_13 () (_ BitVec 64))
(declare-fun temp105_14 () (_ BitVec 64))
(declare-fun temp105_15 () (_ BitVec 64))
(declare-fun temp105_16 () (_ BitVec 64))
(declare-fun var68071 () (_ BitVec 64))
(declare-fun temp105_17 () (_ BitVec 64))
(declare-fun temp105_18 () (_ BitVec 64))
(declare-fun var68074 () (_ BitVec 64))
(declare-fun temp105_19 () (_ BitVec 64))
(declare-fun temp105_20 () (_ BitVec 64))
(declare-fun var68075 () (_ BitVec 64))
(declare-fun temp105_21 () (_ BitVec 64))
(declare-fun temp105_22 () (_ BitVec 64))
(declare-fun var68077 () (_ BitVec 64))
(declare-fun temp105_23 () (_ BitVec 64))
(declare-fun temp105_24 () (_ BitVec 64))
(declare-fun var68079 () (_ BitVec 64))
(declare-fun var68081 () (_ BitVec 64))
(declare-fun temp105_26 () (_ BitVec 64))
(declare-fun temp105_25 () (_ BitVec 64))
(declare-fun temp105_28 () (_ BitVec 64))
(declare-fun temp105_27 () (_ BitVec 64))
(declare-fun temp105_30 () (_ BitVec 64))
(declare-fun temp105_29 () (_ BitVec 64))
(declare-fun temp105_32 () (_ BitVec 64))
(declare-fun temp105_31 () (_ BitVec 64))
(declare-fun temp105_34 () (_ BitVec 64))
(declare-fun temp105_33 () (_ BitVec 64))
(declare-fun temp105_36 () (_ BitVec 64))
(declare-fun temp105_35 () (_ BitVec 64))
(declare-fun temp105_37 () (_ BitVec 64))
(declare-fun var68116 () (_ BitVec 64))
(declare-fun temp105_38 () (_ BitVec 64))
(declare-fun var68117 () (_ BitVec 64))
(declare-fun var134513 () (_ BitVec 64))
(declare-fun var200038 () (_ BitVec 64))
(declare-fun var265152 () (_ BitVec 64))
(declare-fun temp105_39 () (_ BitVec 64))
(declare-fun var265154 () (_ BitVec 64))
(declare-fun temp105_40 () (_ BitVec 64))
(declare-fun var265172 () (_ BitVec 64))
(declare-fun temp105_41 () (_ BitVec 64))
(declare-fun temp105_42 () (_ BitVec 64))
(declare-fun var265200 () (_ BitVec 64))
(declare-fun temp105_44 () (_ BitVec 64))
(declare-fun temp105_43 () (_ BitVec 64))
(declare-fun temp105_45 () (_ BitVec 64))
(declare-fun var265224 () (_ BitVec 64))
(declare-fun temp105_46 () (_ BitVec 64))
(declare-fun temp105_47 () (_ BitVec 64))
(declare-fun var68143 () (_ BitVec 64))
(declare-fun temp105_48 () (_ BitVec 64))
(declare-fun var68144 () (_ BitVec 64))
(declare-fun var331121 () (_ BitVec 64))
(declare-fun var396646 () (_ BitVec 64))
(declare-fun var461760 () (_ BitVec 64))
(declare-fun temp105_49 () (_ BitVec 64))
(declare-fun var461762 () (_ BitVec 64))
(declare-fun temp105_50 () (_ BitVec 64))
(declare-fun var461780 () (_ BitVec 64))
(declare-fun temp105_51 () (_ BitVec 64))
(declare-fun temp105_52 () (_ BitVec 64))
(declare-fun var461832 () (_ BitVec 64))
(declare-fun temp105_53 () (_ BitVec 64))
(declare-fun temp105_54 () (_ BitVec 64))
(declare-fun var68166 () (_ BitVec 64))
(declare-fun temp105_55 () (_ BitVec 64))
(declare-fun var68167 () (_ BitVec 64))
(declare-fun var527729 () (_ BitVec 64))
(assert (= temp105_1 #x0000000000000005))
(assert (= var68027
   (ite (= ARGNAME_input_NAMEEND_DIM temp105_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp105_2 #x0000000000000001))
(assert (= var68027 temp105_2))
(assert (= temp105_3 #x0000000000000000))
(assert (= temp105_4 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_3)))
(assert (= temp105_5 #x0000000000000001))
(assert (= temp105_6 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_5)))
(assert (= temp105_7 #x0000000000000002))
(assert (= temp105_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_7)))
(assert (= temp105_9 #x0000000000000003))
(assert (= temp105_10 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_9)))
(assert (= temp105_11 #x0000000000000004))
(assert (= temp105_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_11)))
(assert (= temp105_13 #x0000000000000005))
(assert (= temp105_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_13)))
(assert (= temp105_15 #x0000000000000000))
(assert (= temp105_16 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_15)))
(assert (= var68071 temp105_16))
(assert (= temp105_17 #x0000000000000001))
(assert (= temp105_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_17)))
(assert (= var68074 temp105_18))
(assert (= temp105_19 #x0000000000000002))
(assert (= temp105_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_19)))
(assert (= var68075 temp105_20))
(assert (= temp105_21 #x0000000000000003))
(assert (= temp105_22 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_21)))
(assert (= var68077 temp105_22))
(assert (= temp105_23 #x0000000000000004))
(assert (= temp105_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_23)))
(assert (= var68079 temp105_24))
(assert (= var68081 var68079))
(assert (= temp105_26 #x0000000000000000))
(assert (= temp105_25 temp105_26))
(assert (= temp105_28 #x0000000000000000))
(assert (= temp105_27 temp105_28))
(assert (= temp105_30 #x0000000000000000))
(assert (= temp105_29 temp105_30))
(assert (= temp105_32 #x0000000000000000))
(assert (= temp105_31 temp105_32))
(assert (= temp105_34 #x0000000000000000))
(assert (= temp105_33 temp105_34))
(assert (= temp105_36 #x0000000000000000))
(assert (= temp105_35 temp105_36))
(assert (= temp105_37 #x0000000000000020))
(assert (= var68116 (bvshl var68074 temp105_37)))
(assert (= temp105_38 #x0000000000000020))
(assert (= var68117 (bvashr var68116 temp105_38)))
(assert (= var134513 var68117))
(assert (= var200038 var134513))
(assert (= var265152 var200038))
(assert (= temp105_39 #x0000000000000001))
(assert (= var265154 temp105_39))
(assert (= temp105_40 #x0000000000000001))
(assert (= var265172
   (ite (bvslt var265154 temp105_40) #x0000000000000001 #x0000000000000000)))
(assert (= temp105_41 #x0000000000000000))
(assert (= var265172 temp105_41))
(assert (= temp105_42 #xffffffffffffffff))
(assert (= var265200 (bvadd var265152 temp105_42)))
(assert (= temp105_44 #x0000000000000000))
(assert (= temp105_43 temp105_44))
(assert (= temp105_45 #x0000000000000000))
(assert (= var265224
   (ite (bvslt temp105_25 temp105_45) #x0000000000000001 #x0000000000000000)))
(assert (= temp105_46 #x0000000000000000))
(assert (= var265224 temp105_46))
(assert (= temp105_47 #x0000000000000020))
(assert (= var68143 (bvshl var68075 temp105_47)))
(assert (= temp105_48 #x0000000000000020))
(assert (= var68144 (bvashr var68143 temp105_48)))
(assert (= var331121 var68144))
(assert (= var396646 var331121))
(assert (= var461760 var396646))
(assert (= temp105_49 #x0000000000000001))
(assert (= var461762 temp105_49))
(assert (= temp105_50 #x0000000000000001))
(assert (= var461780
   (ite (bvslt var461762 temp105_50) #x0000000000000001 #x0000000000000000)))
(assert (= temp105_51 #x0000000000000000))
(assert (= var461780 temp105_51))
(assert (= temp105_52 #x0000000000000000))
(assert (= var461832
   (ite (bvslt temp105_27 temp105_52) #x0000000000000001 #x0000000000000000)))
(assert (= temp105_53 #x0000000000000000))
(assert (= var461832 temp105_53))
(assert (= temp105_54 #x0000000000000020))
(assert (= var68166 (bvshl var68077 temp105_54)))
(assert (= temp105_55 #x0000000000000020))
(assert (= var68167 (bvashr var68166 temp105_55)))
(assert (= var527729 var68167))
(model-add temp105_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp105_2 () (_ BitVec 64) #x0000000000000001)
(model-add var68027 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))














