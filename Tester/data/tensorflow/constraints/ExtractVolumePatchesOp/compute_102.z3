(declare-fun temp101_1 () (_ BitVec 64))
(declare-fun temp101_2 () (_ BitVec 64))
(declare-fun var68027 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp101_3 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp101_4 () (_ BitVec 64))
(declare-fun temp101_5 () (_ BitVec 64))
(declare-fun temp101_6 () (_ BitVec 64))
(declare-fun temp101_7 () (_ BitVec 64))
(declare-fun temp101_8 () (_ BitVec 64))
(declare-fun temp101_9 () (_ BitVec 64))
(declare-fun temp101_10 () (_ BitVec 64))
(declare-fun temp101_11 () (_ BitVec 64))
(declare-fun temp101_12 () (_ BitVec 64))
(declare-fun temp101_13 () (_ BitVec 64))
(declare-fun temp101_14 () (_ BitVec 64))
(declare-fun temp101_15 () (_ BitVec 64))
(declare-fun temp101_16 () (_ BitVec 64))
(declare-fun var68071 () (_ BitVec 64))
(declare-fun temp101_17 () (_ BitVec 64))
(declare-fun temp101_18 () (_ BitVec 64))
(declare-fun var68074 () (_ BitVec 64))
(declare-fun temp101_19 () (_ BitVec 64))
(declare-fun temp101_20 () (_ BitVec 64))
(declare-fun var68075 () (_ BitVec 64))
(declare-fun temp101_21 () (_ BitVec 64))
(declare-fun temp101_22 () (_ BitVec 64))
(declare-fun var68077 () (_ BitVec 64))
(declare-fun temp101_23 () (_ BitVec 64))
(declare-fun temp101_24 () (_ BitVec 64))
(declare-fun var68079 () (_ BitVec 64))
(declare-fun var68081 () (_ BitVec 64))
(declare-fun temp101_26 () (_ BitVec 64))
(declare-fun temp101_25 () (_ BitVec 64))
(declare-fun temp101_28 () (_ BitVec 64))
(declare-fun temp101_27 () (_ BitVec 64))
(declare-fun temp101_30 () (_ BitVec 64))
(declare-fun temp101_29 () (_ BitVec 64))
(declare-fun temp101_32 () (_ BitVec 64))
(declare-fun temp101_31 () (_ BitVec 64))
(declare-fun temp101_34 () (_ BitVec 64))
(declare-fun temp101_33 () (_ BitVec 64))
(declare-fun temp101_36 () (_ BitVec 64))
(declare-fun temp101_35 () (_ BitVec 64))
(declare-fun temp101_37 () (_ BitVec 64))
(declare-fun var68116 () (_ BitVec 64))
(declare-fun temp101_38 () (_ BitVec 64))
(declare-fun var68117 () (_ BitVec 64))
(declare-fun var134513 () (_ BitVec 64))
(declare-fun var200038 () (_ BitVec 64))
(declare-fun var265152 () (_ BitVec 64))
(declare-fun temp101_39 () (_ BitVec 64))
(declare-fun var265154 () (_ BitVec 64))
(declare-fun temp101_40 () (_ BitVec 64))
(declare-fun var265172 () (_ BitVec 64))
(declare-fun temp101_41 () (_ BitVec 64))
(declare-fun temp101_42 () (_ BitVec 64))
(declare-fun var265200 () (_ BitVec 64))
(declare-fun temp101_44 () (_ BitVec 64))
(declare-fun temp101_43 () (_ BitVec 64))
(declare-fun temp101_45 () (_ BitVec 64))
(declare-fun var265224 () (_ BitVec 64))
(declare-fun temp101_46 () (_ BitVec 64))
(declare-fun temp101_47 () (_ BitVec 64))
(declare-fun var68143 () (_ BitVec 64))
(declare-fun temp101_48 () (_ BitVec 64))
(declare-fun var68144 () (_ BitVec 64))
(declare-fun var331121 () (_ BitVec 64))
(declare-fun temp101_49 () (_ BitVec 64))
(declare-fun var68166 () (_ BitVec 64))
(declare-fun temp101_50 () (_ BitVec 64))
(declare-fun var68167 () (_ BitVec 64))
(declare-fun var396657 () (_ BitVec 64))
(declare-fun var462182 () (_ BitVec 64))
(declare-fun var527296 () (_ BitVec 64))
(declare-fun temp101_51 () (_ BitVec 64))
(declare-fun var527298 () (_ BitVec 64))
(declare-fun temp101_52 () (_ BitVec 64))
(declare-fun var527316 () (_ BitVec 64))
(declare-fun temp101_53 () (_ BitVec 64))
(declare-fun temp101_54 () (_ BitVec 64))
(declare-fun var527368 () (_ BitVec 64))
(declare-fun temp101_55 () (_ BitVec 64))
(assert (= temp101_1 #x0000000000000005))
(assert (= var68027
   (ite (= ARGNAME_input_NAMEEND_DIM temp101_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp101_2 #x0000000000000001))
(assert (= var68027 temp101_2))
(assert (= temp101_3 #x0000000000000000))
(assert (= temp101_4 (select ARGNAME_input_NAMEEND_DIMSIZE temp101_3)))
(assert (= temp101_5 #x0000000000000001))
(assert (= temp101_6 (select ARGNAME_input_NAMEEND_DIMSIZE temp101_5)))
(assert (= temp101_7 #x0000000000000002))
(assert (= temp101_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp101_7)))
(assert (= temp101_9 #x0000000000000003))
(assert (= temp101_10 (select ARGNAME_input_NAMEEND_DIMSIZE temp101_9)))
(assert (= temp101_11 #x0000000000000004))
(assert (= temp101_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp101_11)))
(assert (= temp101_13 #x0000000000000005))
(assert (= temp101_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp101_13)))
(assert (= temp101_15 #x0000000000000000))
(assert (= temp101_16 (select ARGNAME_input_NAMEEND_DIMSIZE temp101_15)))
(assert (= var68071 temp101_16))
(assert (= temp101_17 #x0000000000000001))
(assert (= temp101_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp101_17)))
(assert (= var68074 temp101_18))
(assert (= temp101_19 #x0000000000000002))
(assert (= temp101_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp101_19)))
(assert (= var68075 temp101_20))
(assert (= temp101_21 #x0000000000000003))
(assert (= temp101_22 (select ARGNAME_input_NAMEEND_DIMSIZE temp101_21)))
(assert (= var68077 temp101_22))
(assert (= temp101_23 #x0000000000000004))
(assert (= temp101_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp101_23)))
(assert (= var68079 temp101_24))
(assert (= var68081 var68079))
(assert (= temp101_26 #x0000000000000000))
(assert (= temp101_25 temp101_26))
(assert (= temp101_28 #x0000000000000000))
(assert (= temp101_27 temp101_28))
(assert (= temp101_30 #x0000000000000000))
(assert (= temp101_29 temp101_30))
(assert (= temp101_32 #x0000000000000000))
(assert (= temp101_31 temp101_32))
(assert (= temp101_34 #x0000000000000000))
(assert (= temp101_33 temp101_34))
(assert (= temp101_36 #x0000000000000000))
(assert (= temp101_35 temp101_36))
(assert (= temp101_37 #x0000000000000020))
(assert (= var68116 (bvshl var68074 temp101_37)))
(assert (= temp101_38 #x0000000000000020))
(assert (= var68117 (bvashr var68116 temp101_38)))
(assert (= var134513 var68117))
(assert (= var200038 var134513))
(assert (= var265152 var200038))
(assert (= temp101_39 #x0000000000000001))
(assert (= var265154 temp101_39))
(assert (= temp101_40 #x0000000000000001))
(assert (= var265172
   (ite (bvslt var265154 temp101_40) #x0000000000000001 #x0000000000000000)))
(assert (= temp101_41 #x0000000000000000))
(assert (= var265172 temp101_41))
(assert (= temp101_42 #xffffffffffffffff))
(assert (= var265200 (bvadd var265152 temp101_42)))
(assert (= temp101_44 #x0000000000000000))
(assert (= temp101_43 temp101_44))
(assert (= temp101_45 #x0000000000000000))
(assert (= var265224
   (ite (bvslt temp101_25 temp101_45) #x0000000000000001 #x0000000000000000)))
(assert (= temp101_46 #x0000000000000000))
(assert (= var265224 temp101_46))
(assert (= temp101_47 #x0000000000000020))
(assert (= var68143 (bvshl var68075 temp101_47)))
(assert (= temp101_48 #x0000000000000020))
(assert (= var68144 (bvashr var68143 temp101_48)))
(assert (= var331121 var68144))
(assert (= temp101_49 #x0000000000000020))
(assert (= var68166 (bvshl var68077 temp101_49)))
(assert (= temp101_50 #x0000000000000020))
(assert (= var68167 (bvashr var68166 temp101_50)))
(assert (= var396657 var68167))
(assert (= var462182 var396657))
(assert (= var527296 var462182))
(assert (= temp101_51 #x0000000000000001))
(assert (= var527298 temp101_51))
(assert (= temp101_52 #x0000000000000001))
(assert (= var527316
   (ite (bvslt var527298 temp101_52) #x0000000000000001 #x0000000000000000)))
(assert (= temp101_53 #x0000000000000000))
(assert (= var527316 temp101_53))
(assert (= temp101_54 #x0000000000000000))
(assert (= var527368
   (ite (bvslt temp101_29 temp101_54) #x0000000000000001 #x0000000000000000)))
(assert (= temp101_55 #x0000000000000000))
(assert (= var527368 temp101_55))
(model-add temp101_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp101_2 () (_ BitVec 64) #x0000000000000001)
(model-add var68027 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))













