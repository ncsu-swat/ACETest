(declare-fun temp188_1 () (_ BitVec 64))
(declare-fun temp188_2 () (_ BitVec 64))
(declare-fun var72464 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_orig_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND () (_ BitVec 64))
(declare-fun temp188_3 () (_ BitVec 64))
(declare-fun ARGNAME_orig_output_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var72487 () (_ BitVec 64))
(declare-fun temp188_4 () (_ BitVec 64))
(declare-fun temp188_5 () (_ BitVec 64))
(declare-fun ARGNAME_grad_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var72508 () (_ BitVec 64))
(declare-fun temp188_6 () (_ BitVec 64))
(declare-fun temp188_7 () (_ BitVec 64))
(declare-fun var2104727 () (_ BitVec 64))
(declare-fun temp188_8 () (_ BitVec 64))
(declare-fun var2366871 () (_ BitVec 64))
(declare-fun temp188_9 () (_ BitVec 64))
(declare-fun var68038 () (_ BitVec 64))
(declare-fun temp188_10 () (_ BitVec 64))
(declare-fun temp188_11 () (_ BitVec 64))
(declare-fun var65549 () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp188_12 () (_ BitVec 64))
(declare-fun temp188_13 () (_ BitVec 64))
(declare-fun temp188_14 () (_ BitVec 64))
(declare-fun temp188_15 () (_ BitVec 64))
(declare-fun temp188_16 () (_ BitVec 64))
(declare-fun temp188_17 () (_ BitVec 64))
(declare-fun temp188_18 () (_ BitVec 64))
(declare-fun temp188_19 () (_ BitVec 64))
(declare-fun temp188_20 () (_ BitVec 64))
(declare-fun temp188_21 () (_ BitVec 64))
(declare-fun temp188_22 () (_ BitVec 64))
(declare-fun temp188_23 () (_ BitVec 64))
(declare-fun temp188_24 () (_ BitVec 64))
(declare-fun temp188_25 () (_ BitVec 64))
(declare-fun temp188_26 () (_ BitVec 64))
(declare-fun temp188_27 () (_ BitVec 64))
(declare-fun temp188_28 () (_ BitVec 64))
(declare-fun temp188_29 () (_ BitVec 64))
(declare-fun temp188_30 () (_ BitVec 64))
(declare-fun temp188_31 () (_ BitVec 64))
(declare-fun temp188_32 () (_ BitVec 64))
(declare-fun temp188_33 () (_ BitVec 64))
(declare-fun temp188_34 () (_ BitVec 64))
(declare-fun temp188_35 () (_ BitVec 64))
(declare-fun temp188_36 () (_ BitVec 64))
(declare-fun temp188_37 () (_ BitVec 64))
(declare-fun temp188_38 () (_ BitVec 64))
(declare-fun temp188_39 () (_ BitVec 64))
(declare-fun temp188_40 () (_ BitVec 64))
(declare-fun temp188_41 () (_ BitVec 64))
(declare-fun temp188_42 () (_ BitVec 64))
(declare-fun temp188_43 () (_ BitVec 64))
(declare-fun temp188_44 () (_ BitVec 64))
(declare-fun temp188_45 () (_ BitVec 64))
(declare-fun temp188_46 () (_ BitVec 64))
(declare-fun temp188_47 () (_ BitVec 64))
(declare-fun temp188_48 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (or (= ARGNAME_padding_NAMEEND #x0000000000000001)
    (= ARGNAME_padding_NAMEEND #x0000000000000002)
    (= ARGNAME_padding_NAMEEND #x0000000000000003)))
(assert (= temp188_1 #x0000000000000004))
(assert (= var72464
   (ite (= ARGNAME_orig_input_NAMEEND_DIM temp188_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp188_2 #x0000000000000001))
(assert (= var72464 temp188_2))
(assert (= temp188_3 #x0000000000000004))
(assert (= var72487
   (ite (= ARGNAME_orig_output_NAMEEND_DIM temp188_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp188_4 #x0000000000000001))
(assert (= var72487 temp188_4))
(assert (= temp188_5 #x0000000000000004))
(assert (= var72508
   (ite (= ARGNAME_grad_NAMEEND_DIM temp188_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp188_6 #x0000000000000001))
(assert (= var72508 temp188_6))
(assert (= temp188_7 #x0000000000000000))
(assert (= var2104727 temp188_7))
(assert (= temp188_8 #x0000000000000000))
(assert (= var2366871 temp188_8))
(assert (= temp188_9 #x0000000000000000))
(assert (= var68038 temp188_9))
(assert (= temp188_10 #x0000000000000000))
(assert (= temp188_11 temp188_10))
(assert (= temp188_12 (select var65549 temp188_11)))
(assert (= temp188_13 #x0000000000000001))
(assert (= temp188_14 temp188_13))
(assert (= temp188_15 (select var65549 temp188_14)))
(assert (= temp188_16 #x0000000000000002))
(assert (= temp188_17 temp188_16))
(assert (= temp188_18 (select var65549 temp188_17)))
(assert (= temp188_19 #x0000000000000003))
(assert (= temp188_20 temp188_19))
(assert (= temp188_21 (select var65549 temp188_20)))
(assert (= temp188_22 #x0000000000000004))
(assert (= temp188_23 temp188_22))
(assert (= temp188_24 (select var65549 temp188_23)))
(assert (= temp188_25 #x0000000000000005))
(assert (= temp188_26 temp188_25))
(assert (= temp188_27 (select var65549 temp188_26)))
(assert (= temp188_28 #x000000000000004f))
(assert (= (select var65549 #x0000000000000000) temp188_28))
(assert (= temp188_29 #x0000000000000050))
(assert (= (select var65549 #x0000000000000001) temp188_29))
(assert (= temp188_30 #x000000000000005f))
(assert (= (select var65549 #x0000000000000002) temp188_30))
(assert (= temp188_31 #x0000000000000052))
(assert (= (select var65549 #x0000000000000003) temp188_31))
(assert (= temp188_32 #x0000000000000045))
(assert (= (select var65549 #x0000000000000004) temp188_32))
(assert (= temp188_33 #x0000000000000051))
(assert (= (select var65549 #x0000000000000005) temp188_33))
(assert (= temp188_34 #x0000000000000055))
(assert (= (select var65549 #x0000000000000006) temp188_34))
(assert (= temp188_35 #x0000000000000049))
(assert (= (select var65549 #x0000000000000007) temp188_35))
(assert (= temp188_36 #x0000000000000052))
(assert (= (select var65549 #x0000000000000008) temp188_36))
(assert (= temp188_37 #x0000000000000045))
(assert (= (select var65549 #x0000000000000009) temp188_37))
(assert (= temp188_38 #x0000000000000053))
(assert (= (select var65549 #x000000000000000a) temp188_38))
(assert (= temp188_39 #x000000000000005f))
(assert (= (select var65549 #x000000000000000b) temp188_39))
(assert (= temp188_40 #x0000000000000041))
(assert (= (select var65549 #x000000000000000c) temp188_40))
(assert (= temp188_41 #x0000000000000053))
(assert (= (select var65549 #x000000000000000d) temp188_41))
(assert (= temp188_42 #x0000000000000059))
(assert (= (select var65549 #x000000000000000e) temp188_42))
(assert (= temp188_43 #x000000000000004e))
(assert (= (select var65549 #x000000000000000f) temp188_43))
(assert (= temp188_44 #x0000000000000043))
(assert (= (select var65549 #x0000000000000010) temp188_44))
(assert (= temp188_45 #x0000000000000000))
(assert (= (select var65549 #x0000000000000011) temp188_45))
(assert (= temp188_46 (select var65549 var68038)))
(assert (= temp188_47 #x0000000000000000))
(assert (bvsge var68038 temp188_47))
(assert (= temp188_48 #x0000000000000012))
(assert (bvslt var68038 temp188_48))
(model-add temp188_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp188_2 () (_ BitVec 64) #x0000000000000001)
(model-add var72464 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_orig_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))























