(declare-fun temp0_1 () (_ BitVec 64))
(declare-fun var132213 () (_ BitVec 64))
(declare-fun var132209 () (_ BitVec 64))
(declare-fun temp0_2 () (_ BitVec 64))
(declare-fun var66071 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun extend_510 () (_ BitVec 64))
(declare-fun temp0_3 () (_ BitVec 64))
(declare-fun ARGNAME_indices_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var197854 () (_ BitVec 64))
(declare-fun var197850 () (_ BitVec 64))
(declare-fun var66108 () (_ BitVec 64))
(declare-fun temp0_4 () (_ BitVec 64))
(declare-fun temp0_5 () (_ BitVec 64))
(declare-fun ARGNAME_dense_shape_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var66133 () (_ BitVec 64))
(declare-fun temp0_6 () (_ BitVec 64))
(declare-fun var66134 () (_ BitVec 64))
(declare-fun temp0_7 () (_ BitVec 64))
(declare-fun var66135 () (_ BitVec 64))
(declare-fun temp0_8 () (_ BitVec 64))
(declare-fun temp0_9 () (_ BitVec 64))
(declare-fun temp0_10 () (_ BitVec 64))
(declare-fun var66179 () (_ BitVec 64))
(declare-fun temp0_11 () (_ BitVec 64))
(declare-fun var66181 () (_ BitVec 64))
(declare-fun var66183 () (_ BitVec 64))
(declare-fun var263510 () (_ BitVec 64))
(declare-fun temp0_12 () (_ BitVec 64))
(declare-fun var66199 () (_ BitVec 64))
(declare-fun temp0_13 () (_ BitVec 64))
(declare-fun var329061 () (_ BitVec 64))
(declare-fun temp0_14 () (_ BitVec 64))
(declare-fun var394597 () (_ BitVec 64))
(declare-fun temp0_15 () (_ BitVec 64))
(declare-fun var460133 () (_ BitVec 64))
(declare-fun temp0_16 () (_ BitVec 64))
(declare-fun var525813 () (_ BitVec 64))
(declare-fun var593283 () (_ BitVec 64))
(declare-fun temp0_18 () (_ BitVec 64))
(declare-fun temp0_17 () (_ BitVec 64))
(declare-fun temp0_19 () (_ BitVec 64))
(declare-fun var722794 () (_ BitVec 64))
(assert (= temp0_1 #x0000000000000001))
(assert (= var132213
   (ite (= extend_510 temp0_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var132209 var132213))
(assert (= var66071 var132209))
(assert (= temp0_2 #x0000000000000001))
(assert (= var66071 temp0_2))
(assert (= temp0_3 #x0000000000000002))
(assert (= var197854
   (ite (= ARGNAME_indices_NAMEEND_DIM temp0_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var197850 var197854))
(assert (= var66108 var197850))
(assert (= temp0_4 #x0000000000000001))
(assert (= var66108 temp0_4))
(assert (= temp0_5 #x0000000000000002))
(assert (= var66133
   (ite (= ARGNAME_dense_shape_NAMEEND_LEN temp0_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_6 #x0000000000000001))
(assert (= var66134 (bvor ARGNAME_dense_shape_NAMEEND_LEN temp0_6)))
(assert (= temp0_7 #x0000000000000003))
(assert (= var66135 (ite (= var66134 temp0_7) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_8 #x0000000000000001))
(assert (= var66135 temp0_8))
(assert (= temp0_9 #x0000000000000001))
(assert (= var66133 temp0_9))
(assert (= temp0_10 #x0000000000000001))
(assert (= var66179 temp0_10))
(assert (= temp0_11 #x0000000000000001))
(assert (= var66181 (bvxor var66133 temp0_11)))
(assert (= var66183 var66181))
(assert (= var263510 var66183))
(assert (= temp0_12 #x0000000000000001))
(assert (= var66199 (bvadd var66179 temp0_12)))
(assert (= temp0_13 #x0000000000000001))
(assert (= var329061 temp0_13))
(assert (= temp0_14 #x0000000000000001))
(assert (= var394597 temp0_14))
(assert (= temp0_15 #x0000000000000001))
(assert (= var460133 temp0_15))
(assert (= temp0_16 #x0000000000000012))
(assert (= var525813 temp0_16))
(assert (= var593283 var525813))
(assert (= temp0_18 #x0000000000000000))
(assert (= temp0_17 temp0_18))
(assert (= temp0_19 #x0000000000000001))
(assert (= var722794 temp0_19))
(model-add temp0_1 () (_ BitVec 64) #x0000000000000001)
(model-add var132213 () (_ BitVec 64) #x0000000000000001)
(model-add var132209 () (_ BitVec 64) #x0000000000000001)
(model-add temp0_2 () (_ BitVec 64) #x0000000000000001)
(model-add var66071 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add extend_510
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))












