(declare-fun temp2_1 () (_ BitVec 64))
(declare-fun temp2_2 () (_ BitVec 64))
(declare-fun var70053 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_value_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp2_3 () (_ BitVec 64))
(declare-fun var70104 () (_ BitVec 64))
(declare-fun var70129 () (_ BitVec 64))
(declare-fun temp2_4 () (_ BitVec 64))
(declare-fun ARGNAME_value_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp2_5 () (_ BitVec 64))
(declare-fun temp2_6 () (_ BitVec 64))
(declare-fun temp2_7 () (_ BitVec 64))
(declare-fun temp2_8 () (_ BitVec 64))
(declare-fun temp2_9 () (_ BitVec 64))
(declare-fun temp2_10 () (_ BitVec 64))
(declare-fun temp2_11 () (_ BitVec 64))
(declare-fun temp2_12 () (_ BitVec 64))
(declare-fun temp2_13 () (_ BitVec 64))
(declare-fun temp2_14 () (_ BitVec 64))
(declare-fun temp2_15 () (_ BitVec 64))
(declare-fun temp2_16 () (_ BitVec 64))
(declare-fun var70130 () (_ BitVec 64))
(declare-fun var70131 () (_ BitVec 64))
(declare-fun temp2_17 () (_ BitVec 64))
(declare-fun ARGNAME_pooling_ratio_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp2_18 () (_ BitVec 64))
(declare-fun temp2_19 () (_ BitVec 64))
(declare-fun temp2_20 () (_ BitVec 64))
(declare-fun temp2_21 () (_ BitVec 64))
(declare-fun temp2_22 () (_ BitVec 64))
(declare-fun temp2_23 () (_ BitVec 64))
(declare-fun temp2_24 () (_ BitVec 64))
(declare-fun temp2_25 () (_ BitVec 64))
(declare-fun temp2_26 () (_ BitVec 64))
(declare-fun temp2_27 () (_ BitVec 64))
(declare-fun temp2_28 () (_ BitVec 64))
(declare-fun temp2_30 () (_ BitVec 64))
(declare-fun temp2_29 () (_ BitVec 64))
(declare-fun temp2_31 () (_ BitVec 64))
(declare-fun var70103 () (_ BitVec 64))
(assert (= temp2_1 #x0000000000000004))
(assert (= var70053
   (ite (= ARGNAME_value_NAMEEND_DIM temp2_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2_2 #x0000000000000001))
(assert (= var70053 temp2_2))
(assert (= temp2_3 #x0000000000000000))
(assert (= var70104 temp2_3))
(assert (= var70129 var70104))
(assert (= temp2_4 #x0000000000000000))
(assert (= temp2_5 (select ARGNAME_value_NAMEEND_DIMSIZE temp2_4)))
(assert (= temp2_6 #x0000000000000001))
(assert (= temp2_7 (select ARGNAME_value_NAMEEND_DIMSIZE temp2_6)))
(assert (= temp2_8 #x0000000000000002))
(assert (= temp2_9 (select ARGNAME_value_NAMEEND_DIMSIZE temp2_8)))
(assert (= temp2_10 #x0000000000000003))
(assert (= temp2_11 (select ARGNAME_value_NAMEEND_DIMSIZE temp2_10)))
(assert (= temp2_12 #x0000000000000004))
(assert (= temp2_13 (select ARGNAME_value_NAMEEND_DIMSIZE temp2_12)))
(assert (= temp2_14 #x0000000000000005))
(assert (= temp2_15 (select ARGNAME_value_NAMEEND_DIMSIZE temp2_14)))
(assert (= temp2_16 (select ARGNAME_value_NAMEEND_DIMSIZE var70129)))
(assert (= var70130 temp2_16))
(assert (= var70131 var70130))
(assert (= temp2_17 #x0000000000000000))
(assert (= temp2_18 (select ARGNAME_pooling_ratio_NAMEEND_VAL temp2_17)))
(assert (= temp2_19 #x0000000000000001))
(assert (= temp2_20 (select ARGNAME_pooling_ratio_NAMEEND_VAL temp2_19)))
(assert (= temp2_21 #x0000000000000002))
(assert (= temp2_22 (select ARGNAME_pooling_ratio_NAMEEND_VAL temp2_21)))
(assert (= temp2_23 #x0000000000000003))
(assert (= temp2_24 (select ARGNAME_pooling_ratio_NAMEEND_VAL temp2_23)))
(assert (= temp2_25 #x0000000000000004))
(assert (= temp2_26 (select ARGNAME_pooling_ratio_NAMEEND_VAL temp2_25)))
(assert (= temp2_27 #x0000000000000005))
(assert (= temp2_28 (select ARGNAME_pooling_ratio_NAMEEND_VAL temp2_27)))
(assert (= temp2_30 (select ARGNAME_pooling_ratio_NAMEEND_VAL var70104)))
(assert (= temp2_29 temp2_30))
(assert (= temp2_31 #x0000000000000001))
(assert (= var70103 (bvadd var70104 temp2_31)))
(model-add temp2_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp2_2 () (_ BitVec 64) #x0000000000000001)
(model-add var70053 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_value_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))
















