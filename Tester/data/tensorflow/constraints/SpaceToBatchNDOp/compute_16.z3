(declare-fun temp341_1 () (_ BitVec 64))
(declare-fun var199574 () (_ BitVec 64))
(declare-fun var199570 () (_ BitVec 64))
(declare-fun temp341_2 () (_ BitVec 64))
(declare-fun var133284 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun extend_3954 () (_ BitVec 64))
(declare-fun temp341_3 () (_ BitVec 64))
(declare-fun extend_3954SIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp341_4 () (_ BitVec 64))
(declare-fun temp341_5 () (_ BitVec 64))
(declare-fun temp341_6 () (_ BitVec 64))
(declare-fun temp341_7 () (_ BitVec 64))
(declare-fun temp341_8 () (_ BitVec 64))
(declare-fun temp341_9 () (_ BitVec 64))
(declare-fun temp341_10 () (_ BitVec 64))
(declare-fun temp341_11 () (_ BitVec 64))
(declare-fun temp341_12 () (_ BitVec 64))
(declare-fun temp341_13 () (_ BitVec 64))
(declare-fun temp341_14 () (_ BitVec 64))
(declare-fun temp341_15 () (_ BitVec 64))
(declare-fun temp341_16 () (_ BitVec 64))
(declare-fun var133293 () (_ BitVec 64))
(declare-fun var133296 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var133298 () (_ BitVec 64))
(declare-fun temp341_17 () (_ BitVec 64))
(declare-fun temp341_18 () (_ BitVec 64))
(declare-fun ARGNAME_paddings_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var265123 () (_ BitVec 64))
(declare-fun var265119 () (_ BitVec 64))
(declare-fun var133307 () (_ BitVec 64))
(declare-fun temp341_19 () (_ BitVec 64))
(declare-fun temp341_20 () (_ BitVec 64))
(declare-fun var133311 () (_ BitVec 64))
(declare-fun temp341_21 () (_ BitVec 64))
(declare-fun var133312 () (_ BitVec 64))
(declare-fun temp341_22 () (_ BitVec 64))
(declare-fun ARGNAME_paddings_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp341_23 () (_ BitVec 64))
(declare-fun temp341_24 () (_ BitVec 64))
(declare-fun temp341_25 () (_ BitVec 64))
(declare-fun temp341_26 () (_ BitVec 64))
(declare-fun temp341_27 () (_ BitVec 64))
(declare-fun temp341_28 () (_ BitVec 64))
(declare-fun temp341_29 () (_ BitVec 64))
(declare-fun temp341_30 () (_ BitVec 64))
(declare-fun temp341_31 () (_ BitVec 64))
(declare-fun temp341_32 () (_ BitVec 64))
(declare-fun temp341_33 () (_ BitVec 64))
(declare-fun temp341_34 () (_ BitVec 64))
(declare-fun temp341_35 () (_ BitVec 64))
(declare-fun var133313 () (_ BitVec 64))
(declare-fun var133314 () (_ BitVec 64))
(declare-fun temp341_36 () (_ BitVec 64))
(declare-fun temp341_37 () (_ BitVec 64))
(declare-fun temp341_38 () (_ BitVec 64))
(declare-fun var133316 () (_ BitVec 64))
(declare-fun temp341_39 () (_ BitVec 64))
(declare-fun var133317 () (_ BitVec 64))
(declare-fun temp341_40 () (_ BitVec 64))
(declare-fun temp341_41 () (_ BitVec 64))
(declare-fun var133354 () (_ BitVec 64))
(declare-fun temp341_42 () (_ BitVec 64))
(declare-fun temp341_43 () (_ BitVec 64))
(declare-fun var133356 () (_ BitVec 64))
(declare-fun temp341_44 () (_ BitVec 64))
(declare-fun var133360 () (_ BitVec 64))
(declare-fun temp341_45 () (_ BitVec 64))
(declare-fun var133362 () (_ BitVec 64))
(declare-fun var133368 () (_ BitVec 64))
(declare-fun var133392 () (_ BitVec 64))
(declare-fun var133393 () (_ BitVec 64))
(declare-fun temp341_46 () (_ BitVec 64))
(declare-fun var133394 () (_ BitVec 64))
(declare-fun temp341_47 () (_ BitVec 64))
(declare-fun var133396 () (_ BitVec 64))
(declare-fun var133397 () (_ BitVec 64))
(declare-fun temp341_48 () (_ BitVec 64))
(declare-fun var133400 () (_ BitVec 64))
(declare-fun var133402 () (_ BitVec 64))
(declare-fun temp341_49 () (_ BitVec 64))
(declare-fun var133403 () (_ BitVec 64))
(declare-fun var133405 () (_ BitVec 64))
(declare-fun temp341_50 () (_ BitVec 64))
(declare-fun var133406 () (_ BitVec 64))
(declare-fun var133407 () (_ BitVec 64))
(declare-fun var133411 () (_ BitVec 64))
(declare-fun temp341_51 () (_ BitVec 64))
(declare-fun var133413 () (_ BitVec 64))
(declare-fun var133414 () (_ BitVec 64))
(declare-fun var133419 () (_ BitVec 64))
(declare-fun var133430 () (_ BitVec 64))
(declare-fun temp341_52 () (_ BitVec 64))
(declare-fun var133431 () (_ BitVec 64))
(declare-fun temp341_53 () (_ BitVec 64))
(declare-fun temp341_54 () (_ BitVec 64))
(declare-fun var133433 () (_ BitVec 64))
(declare-fun temp341_55 () (_ BitVec 64))
(declare-fun var133436 () (_ BitVec 64))
(declare-fun temp341_56 () (_ BitVec 64))
(declare-fun var133437 () (_ BitVec 64))
(declare-fun var133467 () (_ BitVec 64))
(declare-fun var133480 () (_ BitVec 64))
(declare-fun temp341_58 () (_ BitVec 64))
(declare-fun var133481 () (_ BitVec 64))
(declare-fun temp341_59 () (_ BitVec 64))
(declare-fun temp341_60 () (_ BitVec 64))
(declare-fun var133490 () (_ BitVec 64))
(declare-fun temp341_61 () (_ BitVec 64))
(declare-fun temp341_62 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp341_63 () (_ BitVec 64))
(declare-fun temp341_64 () (_ BitVec 64))
(declare-fun temp341_65 () (_ BitVec 64))
(declare-fun temp341_66 () (_ BitVec 64))
(declare-fun temp341_67 () (_ BitVec 64))
(declare-fun temp341_68 () (_ BitVec 64))
(declare-fun temp341_69 () (_ BitVec 64))
(declare-fun temp341_70 () (_ BitVec 64))
(declare-fun temp341_71 () (_ BitVec 64))
(declare-fun temp341_72 () (_ BitVec 64))
(declare-fun temp341_73 () (_ BitVec 64))
(declare-fun temp341_74 () (_ BitVec 64))
(declare-fun temp341_75 () (_ BitVec 64))
(declare-fun var133505 () (_ BitVec 64))
(declare-fun var396605 () (_ BitVec 64))
(declare-fun temp341_76 () (_ BitVec 64))
(declare-fun var396610 () (_ BitVec 64))
(declare-fun temp341_77 () (_ BitVec 64))
(declare-fun temp341_78 () (_ BitVec 64))
(declare-fun var396623 () (_ BitVec 64))
(declare-fun var396604 () (_ BitVec 64))
(declare-fun var133506 () (_ BitVec 64))
(declare-fun temp341_79 () (_ BitVec 64))
(declare-fun var133507 () (_ BitVec 64))
(declare-fun temp341_80 () (_ BitVec 64))
(declare-fun temp341_81 () (_ BitVec 64))
(declare-fun temp341_82 () (_ BitVec 64))
(declare-fun var133539 () (_ BitVec 64))
(declare-fun temp341_83 () (_ BitVec 64))
(declare-fun var133540 () (_ BitVec 64))
(declare-fun temp341_84 () (_ BitVec 64))
(declare-fun var133542 () (_ BitVec 64))
(declare-fun var133564 () (_ BitVec 64))
(declare-fun var133565 () (_ BitVec 64))
(declare-fun temp341_85 () (_ BitVec 64))
(declare-fun var133567 () (_ BitVec 64))
(declare-fun var133568 () (_ BitVec 64))
(declare-fun var133569 () (_ BitVec 64))
(declare-fun var133575 () (_ BitVec 64))
(declare-fun temp341_86 () (_ BitVec 64))
(declare-fun var133576 () (_ BitVec 64))
(declare-fun temp341_87 () (_ BitVec 64))
(declare-fun var133579 () (_ BitVec 64))
(declare-fun var133597 () (_ BitVec 64))
(declare-fun temp341_88 () (_ BitVec 64))
(declare-fun var133598 () (_ BitVec 64))
(declare-fun temp341_89 () (_ BitVec 64))
(declare-fun var133599 () (_ BitVec 64))
(assert (= temp341_1 #x0000000000000001))
(assert (= var199574
   (ite (= extend_3954 temp341_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var199570 var199574))
(assert (= var133284 var199570))
(assert (= temp341_2 #x0000000000000001))
(assert (= var133284 temp341_2))
(assert (= temp341_3 #x0000000000000000))
(assert (= temp341_4 (select extend_3954SIZE temp341_3)))
(assert (= temp341_5 #x0000000000000001))
(assert (= temp341_6 (select extend_3954SIZE temp341_5)))
(assert (= temp341_7 #x0000000000000002))
(assert (= temp341_8 (select extend_3954SIZE temp341_7)))
(assert (= temp341_9 #x0000000000000003))
(assert (= temp341_10 (select extend_3954SIZE temp341_9)))
(assert (= temp341_11 #x0000000000000004))
(assert (= temp341_12 (select extend_3954SIZE temp341_11)))
(assert (= temp341_13 #x0000000000000005))
(assert (= temp341_14 (select extend_3954SIZE temp341_13)))
(assert (= temp341_15 #x0000000000000000))
(assert (= temp341_16 (select extend_3954SIZE temp341_15)))
(assert (= var133293 temp341_16))
(assert (= var133296 var133293))
(assert (= var133298
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM var133296)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp341_17 #x0000000000000001))
(assert (= var133298 temp341_17))
(assert (= temp341_18 #x0000000000000002))
(assert (= var265123
   (ite (= ARGNAME_paddings_NAMEEND_DIM temp341_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var265119 var265123))
(assert (= var133307 var265119))
(assert (= temp341_19 #x0000000000000001))
(assert (= var133307 temp341_19))
(assert (= temp341_20 #x0000000000000020))
(assert (= var133311 (bvshl var133293 temp341_20)))
(assert (= temp341_21 #x0000000000000020))
(assert (= var133312 (bvashr var133311 temp341_21)))
(assert (= temp341_22 #x0000000000000000))
(assert (= temp341_23 (select ARGNAME_paddings_NAMEEND_DIMSIZE temp341_22)))
(assert (= temp341_24 #x0000000000000001))
(assert (= temp341_25 (select ARGNAME_paddings_NAMEEND_DIMSIZE temp341_24)))
(assert (= temp341_26 #x0000000000000002))
(assert (= temp341_27 (select ARGNAME_paddings_NAMEEND_DIMSIZE temp341_26)))
(assert (= temp341_28 #x0000000000000003))
(assert (= temp341_29 (select ARGNAME_paddings_NAMEEND_DIMSIZE temp341_28)))
(assert (= temp341_30 #x0000000000000004))
(assert (= temp341_31 (select ARGNAME_paddings_NAMEEND_DIMSIZE temp341_30)))
(assert (= temp341_32 #x0000000000000005))
(assert (= temp341_33 (select ARGNAME_paddings_NAMEEND_DIMSIZE temp341_32)))
(assert (= temp341_34 #x0000000000000000))
(assert (= temp341_35 (select ARGNAME_paddings_NAMEEND_DIMSIZE temp341_34)))
(assert (= var133313 temp341_35))
(assert (= var133314
   (ite (= var133312 var133313) #x0000000000000001 #x0000000000000000)))
(assert (= temp341_36 #x0000000000000001))
(assert (= var133314 temp341_36))
(assert (= temp341_37 #x0000000000000001))
(assert (= temp341_38 (select ARGNAME_paddings_NAMEEND_DIMSIZE temp341_37)))
(assert (= var133316 temp341_38))
(assert (= temp341_39 #x0000000000000002))
(assert (= var133317
   (ite (= var133316 temp341_39) #x0000000000000001 #x0000000000000000)))
(assert (= temp341_40 #x0000000000000001))
(assert (= var133317 temp341_40))
(assert (= temp341_41 #x0000000000000000))
(assert (= var133354
   (ite (bvsgt var133296 temp341_41) #x0000000000000001 #x0000000000000000)))
(assert (= temp341_42 #x0000000000000001))
(assert (= var133354 temp341_42))
(assert (= temp341_43 #xffffffffffffffff))
(assert (= var133356 (bvand var133293 temp341_43)))
(assert (= temp341_44 #x0000000000000000))
(assert (= var133360 temp341_44))
(assert (= temp341_45 #x0000000000000001))
(assert (= var133362 (bvshl var133360 temp341_45)))
(assert (= var133368 var133360))
(assert (= var133392 var133368))
(assert (= var133393 (bvsub var133296 var133392)))
(assert (= temp341_46 #x0000000000000000))
(assert (= var133394
   (ite (bvsgt var133393 temp341_46) #x0000000000000001 #x0000000000000000)))
(assert (= temp341_47 #x0000000000000001))
(assert (= var133394 temp341_47))
(assert (= var133396 (bvsub var133296 var133392)))
(assert (= var133397 var133396))
(assert (= temp341_48 #x0000000000000000))
(assert (= var133400 temp341_48))
(assert (= var133402 var133400))
(assert (= temp341_49 #xffffffffffffffff))
(assert (= var133403 (bvxor var133402 temp341_49)))
(assert (= var133405 (bvadd var133403 var133296)))
(assert (= temp341_50 #x0000000000000001))
(assert (= var133406 (bvshl var133405 temp341_50)))
(assert (= var133407 var133406))
(assert (= var133411 var133400))
(assert (= temp341_51 #x0000000000000001))
(assert (= var133413 (bvor var133406 temp341_51)))
(assert (= var133414 var133413))
(assert (= var133419 var133405))
(assert (= var133430 var133411))
(assert (= temp341_52 #x0000000000000000))
(assert (= var133431
   (ite (bvsgt var133296 temp341_52) #x0000000000000001 #x0000000000000000)))
(assert (= temp341_53 #x0000000000000001))
(assert (= var133431 temp341_53))
(assert (= temp341_54 #xffffffffffffffff))
(assert (= var133433 (bvand var133293 temp341_54)))
(assert (= temp341_55 #x0000000000000000))
(assert (= var133436 temp341_55))
(assert (= temp341_56 #x0000000000000001))
(assert (= var133437 (bvadd var133436 temp341_56)))
(assert (= var133467
   (ite (= var133437 var133433) #x0000000000000001 #x0000000000000000)))
(assert (= var133480 (bvsub var133393 var133430)))
(assert (= temp341_58 #x0000000000000004))
(assert (= var133481
   (ite (bvsgt var133480 temp341_58) #x0000000000000001 #x0000000000000000)))
(assert (= temp341_59 #x0000000000000000))
(assert (= var133481 temp341_59))
(assert (= temp341_60 #x0000000000000000))
(assert (= var133490
   (ite (= var133480 temp341_60) #x0000000000000001 #x0000000000000000)))
(assert (= temp341_61 #x0000000000000000))
(assert (= var133490 temp341_61))
(assert (= temp341_62 #x0000000000000000))
(assert (= temp341_63 (select ARGNAME_input_NAMEEND_DIMSIZE temp341_62)))
(assert (= temp341_64 #x0000000000000001))
(assert (= temp341_65 (select ARGNAME_input_NAMEEND_DIMSIZE temp341_64)))
(assert (= temp341_66 #x0000000000000002))
(assert (= temp341_67 (select ARGNAME_input_NAMEEND_DIMSIZE temp341_66)))
(assert (= temp341_68 #x0000000000000003))
(assert (= temp341_69 (select ARGNAME_input_NAMEEND_DIMSIZE temp341_68)))
(assert (= temp341_70 #x0000000000000004))
(assert (= temp341_71 (select ARGNAME_input_NAMEEND_DIMSIZE temp341_70)))
(assert (= temp341_72 #x0000000000000005))
(assert (= temp341_73 (select ARGNAME_input_NAMEEND_DIMSIZE temp341_72)))
(assert (= temp341_74 #x0000000000000000))
(assert (= temp341_75 (select ARGNAME_input_NAMEEND_DIMSIZE temp341_74)))
(assert (= var133505 temp341_75))
(assert (= var396605 var133505))
(assert (= temp341_76 #x0000000000000000))
(assert (= var396610
   (ite (= var396605 temp341_76) #x0000000000000001 #x0000000000000000)))
(assert (= temp341_77 #x0000000000000001))
(assert (= var396610 temp341_77))
(assert (= temp341_78 #x0000000000000000))
(assert (= var396623 temp341_78))
(assert (= var396604 var396623))
(assert (= var133506 var396604))
(assert (= temp341_79 #x0000000000000000))
(assert (= var133507
   (ite (bvslt var133506 temp341_79) #x0000000000000001 #x0000000000000000)))
(assert (= temp341_80 #x0000000000000000))
(assert (= var133507 temp341_80))
(assert (= temp341_81 #x0000000000000000))
(assert (= temp341_82 (select ARGNAME_input_NAMEEND_DIMSIZE temp341_81)))
(assert (= var133539 temp341_82))
(assert (= temp341_83 #x0000000000000000))
(assert (= var133540
   (ite (= var133392 temp341_83) #x0000000000000001 #x0000000000000000)))
(assert (= temp341_84 #x0000000000000001))
(assert (= var133540 temp341_84))
(assert (= var133542 var133539))
(assert (= var133564 (bvsub var133296 var133430)))
(assert (= var133565
   (ite (bvslt var133392 var133564) #x0000000000000001 #x0000000000000000)))
(assert (= temp341_85 #x0000000000000001))
(assert (= var133565 temp341_85))
(assert (= var133567 var133392))
(assert (= var133568 (bvsub var133296 var133430)))
(assert (= var133569 var133568))
(assert (= var133575 var133567))
(assert (= temp341_86 #x0000000000000001))
(assert (= var133576 (bvshl var133575 temp341_86)))
(assert (= temp341_87 #x0000000000000001))
(assert (= var133579 (bvor var133576 temp341_87)))
(assert (= var133597 var133575))
(assert (= temp341_88 #x0000000000000001))
(assert (= var133598 (bvadd var133597 temp341_88)))
(assert (= temp341_89 (select ARGNAME_input_NAMEEND_DIMSIZE var133598)))
(assert (= var133599 temp341_89))
(model-add temp341_1 () (_ BitVec 64) #x0000000000000001)
(model-add var199574 () (_ BitVec 64) #x0000000000000001)
(model-add var199570 () (_ BitVec 64) #x0000000000000001)
(model-add temp341_2 () (_ BitVec 64) #x0000000000000001)
(model-add var133284 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add extend_3954
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))












