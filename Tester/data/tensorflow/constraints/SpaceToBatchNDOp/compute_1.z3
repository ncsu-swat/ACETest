(declare-fun temp68_1 () (_ BitVec 64))
(declare-fun var199574 () (_ BitVec 64))
(declare-fun var199570 () (_ BitVec 64))
(declare-fun temp68_2 () (_ BitVec 64))
(declare-fun var133284 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun extend_3999 () (_ BitVec 64))
(declare-fun temp68_3 () (_ BitVec 64))
(declare-fun extend_3999SIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp68_4 () (_ BitVec 64))
(declare-fun temp68_5 () (_ BitVec 64))
(declare-fun temp68_6 () (_ BitVec 64))
(declare-fun temp68_7 () (_ BitVec 64))
(declare-fun temp68_8 () (_ BitVec 64))
(declare-fun temp68_9 () (_ BitVec 64))
(declare-fun temp68_10 () (_ BitVec 64))
(declare-fun temp68_11 () (_ BitVec 64))
(declare-fun temp68_12 () (_ BitVec 64))
(declare-fun temp68_13 () (_ BitVec 64))
(declare-fun temp68_14 () (_ BitVec 64))
(declare-fun temp68_15 () (_ BitVec 64))
(declare-fun temp68_16 () (_ BitVec 64))
(declare-fun var133293 () (_ BitVec 64))
(declare-fun var133296 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var133298 () (_ BitVec 64))
(declare-fun temp68_17 () (_ BitVec 64))
(declare-fun temp68_18 () (_ BitVec 64))
(declare-fun ARGNAME_paddings_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var265123 () (_ BitVec 64))
(declare-fun var265119 () (_ BitVec 64))
(declare-fun var133307 () (_ BitVec 64))
(declare-fun temp68_19 () (_ BitVec 64))
(declare-fun temp68_20 () (_ BitVec 64))
(declare-fun var133311 () (_ BitVec 64))
(declare-fun temp68_21 () (_ BitVec 64))
(declare-fun var133312 () (_ BitVec 64))
(declare-fun temp68_22 () (_ BitVec 64))
(declare-fun ARGNAME_paddings_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp68_23 () (_ BitVec 64))
(declare-fun temp68_24 () (_ BitVec 64))
(declare-fun temp68_25 () (_ BitVec 64))
(declare-fun temp68_26 () (_ BitVec 64))
(declare-fun temp68_27 () (_ BitVec 64))
(declare-fun temp68_28 () (_ BitVec 64))
(declare-fun temp68_29 () (_ BitVec 64))
(declare-fun temp68_30 () (_ BitVec 64))
(declare-fun temp68_31 () (_ BitVec 64))
(declare-fun temp68_32 () (_ BitVec 64))
(declare-fun temp68_33 () (_ BitVec 64))
(declare-fun temp68_34 () (_ BitVec 64))
(declare-fun temp68_35 () (_ BitVec 64))
(declare-fun var133313 () (_ BitVec 64))
(declare-fun var133314 () (_ BitVec 64))
(declare-fun temp68_36 () (_ BitVec 64))
(declare-fun temp68_37 () (_ BitVec 64))
(declare-fun temp68_38 () (_ BitVec 64))
(declare-fun var133316 () (_ BitVec 64))
(declare-fun temp68_39 () (_ BitVec 64))
(declare-fun var133317 () (_ BitVec 64))
(declare-fun temp68_40 () (_ BitVec 64))
(declare-fun temp68_41 () (_ BitVec 64))
(declare-fun var133354 () (_ BitVec 64))
(declare-fun temp68_42 () (_ BitVec 64))
(declare-fun temp68_43 () (_ BitVec 64))
(declare-fun var133356 () (_ BitVec 64))
(declare-fun temp68_44 () (_ BitVec 64))
(declare-fun var133360 () (_ BitVec 64))
(declare-fun temp68_45 () (_ BitVec 64))
(declare-fun var133362 () (_ BitVec 64))
(declare-fun var133368 () (_ BitVec 64))
(declare-fun var133392 () (_ BitVec 64))
(declare-fun var133393 () (_ BitVec 64))
(declare-fun temp68_46 () (_ BitVec 64))
(declare-fun var133394 () (_ BitVec 64))
(declare-fun temp68_47 () (_ BitVec 64))
(declare-fun var133396 () (_ BitVec 64))
(declare-fun var133397 () (_ BitVec 64))
(declare-fun temp68_48 () (_ BitVec 64))
(declare-fun var133400 () (_ BitVec 64))
(declare-fun var133402 () (_ BitVec 64))
(declare-fun temp68_49 () (_ BitVec 64))
(declare-fun var133403 () (_ BitVec 64))
(declare-fun var133405 () (_ BitVec 64))
(declare-fun temp68_50 () (_ BitVec 64))
(declare-fun var133406 () (_ BitVec 64))
(declare-fun var133407 () (_ BitVec 64))
(declare-fun var133411 () (_ BitVec 64))
(declare-fun var133430 () (_ BitVec 64))
(declare-fun temp68_51 () (_ BitVec 64))
(declare-fun var133431 () (_ BitVec 64))
(declare-fun temp68_52 () (_ BitVec 64))
(declare-fun temp68_53 () (_ BitVec 64))
(declare-fun var133433 () (_ BitVec 64))
(declare-fun temp68_54 () (_ BitVec 64))
(declare-fun var133436 () (_ BitVec 64))
(declare-fun temp68_55 () (_ BitVec 64))
(declare-fun var133437 () (_ BitVec 64))
(declare-fun var133467 () (_ BitVec 64))
(declare-fun var133480 () (_ BitVec 64))
(declare-fun temp68_57 () (_ BitVec 64))
(declare-fun var133481 () (_ BitVec 64))
(declare-fun temp68_58 () (_ BitVec 64))
(declare-fun temp68_59 () (_ BitVec 64))
(declare-fun var133490 () (_ BitVec 64))
(declare-fun temp68_60 () (_ BitVec 64))
(declare-fun temp68_61 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp68_62 () (_ BitVec 64))
(declare-fun temp68_63 () (_ BitVec 64))
(declare-fun temp68_64 () (_ BitVec 64))
(declare-fun temp68_65 () (_ BitVec 64))
(declare-fun temp68_66 () (_ BitVec 64))
(declare-fun temp68_67 () (_ BitVec 64))
(declare-fun temp68_68 () (_ BitVec 64))
(declare-fun temp68_69 () (_ BitVec 64))
(declare-fun temp68_70 () (_ BitVec 64))
(declare-fun temp68_71 () (_ BitVec 64))
(declare-fun temp68_72 () (_ BitVec 64))
(declare-fun temp68_73 () (_ BitVec 64))
(declare-fun temp68_74 () (_ BitVec 64))
(declare-fun var133505 () (_ BitVec 64))
(declare-fun var396605 () (_ BitVec 64))
(declare-fun temp68_75 () (_ BitVec 64))
(declare-fun var396610 () (_ BitVec 64))
(declare-fun temp68_76 () (_ BitVec 64))
(declare-fun temp68_77 () (_ BitVec 64))
(declare-fun var396623 () (_ BitVec 64))
(declare-fun var396604 () (_ BitVec 64))
(declare-fun var133506 () (_ BitVec 64))
(declare-fun temp68_78 () (_ BitVec 64))
(declare-fun var133507 () (_ BitVec 64))
(declare-fun temp68_79 () (_ BitVec 64))
(declare-fun temp68_80 () (_ BitVec 64))
(declare-fun temp68_81 () (_ BitVec 64))
(declare-fun var133539 () (_ BitVec 64))
(declare-fun temp68_82 () (_ BitVec 64))
(declare-fun var133540 () (_ BitVec 64))
(declare-fun temp68_83 () (_ BitVec 64))
(declare-fun var133542 () (_ BitVec 64))
(declare-fun var133564 () (_ BitVec 64))
(declare-fun var133565 () (_ BitVec 64))
(declare-fun temp68_84 () (_ BitVec 64))
(declare-fun var133567 () (_ BitVec 64))
(declare-fun var133568 () (_ BitVec 64))
(declare-fun var133569 () (_ BitVec 64))
(declare-fun var133575 () (_ BitVec 64))
(declare-fun temp68_85 () (_ BitVec 64))
(declare-fun var133576 () (_ BitVec 64))
(declare-fun temp68_86 () (_ BitVec 64))
(declare-fun var133579 () (_ BitVec 64))
(declare-fun var133597 () (_ BitVec 64))
(declare-fun temp68_87 () (_ BitVec 64))
(declare-fun var133598 () (_ BitVec 64))
(declare-fun temp68_88 () (_ BitVec 64))
(declare-fun var133599 () (_ BitVec 64))
(assert (= temp68_1 #x0000000000000001))
(assert (= var199574
   (ite (= extend_3999 temp68_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var199570 var199574))
(assert (= var133284 var199570))
(assert (= temp68_2 #x0000000000000001))
(assert (= var133284 temp68_2))
(assert (= temp68_3 #x0000000000000000))
(assert (= temp68_4 (select extend_3999SIZE temp68_3)))
(assert (= temp68_5 #x0000000000000001))
(assert (= temp68_6 (select extend_3999SIZE temp68_5)))
(assert (= temp68_7 #x0000000000000002))
(assert (= temp68_8 (select extend_3999SIZE temp68_7)))
(assert (= temp68_9 #x0000000000000003))
(assert (= temp68_10 (select extend_3999SIZE temp68_9)))
(assert (= temp68_11 #x0000000000000004))
(assert (= temp68_12 (select extend_3999SIZE temp68_11)))
(assert (= temp68_13 #x0000000000000005))
(assert (= temp68_14 (select extend_3999SIZE temp68_13)))
(assert (= temp68_15 #x0000000000000000))
(assert (= temp68_16 (select extend_3999SIZE temp68_15)))
(assert (= var133293 temp68_16))
(assert (= var133296 var133293))
(assert (= var133298
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM var133296)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_17 #x0000000000000001))
(assert (= var133298 temp68_17))
(assert (= temp68_18 #x0000000000000002))
(assert (= var265123
   (ite (= ARGNAME_paddings_NAMEEND_DIM temp68_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var265119 var265123))
(assert (= var133307 var265119))
(assert (= temp68_19 #x0000000000000001))
(assert (= var133307 temp68_19))
(assert (= temp68_20 #x0000000000000020))
(assert (= var133311 (bvshl var133293 temp68_20)))
(assert (= temp68_21 #x0000000000000020))
(assert (= var133312 (bvashr var133311 temp68_21)))
(assert (= temp68_22 #x0000000000000000))
(assert (= temp68_23 (select ARGNAME_paddings_NAMEEND_DIMSIZE temp68_22)))
(assert (= temp68_24 #x0000000000000001))
(assert (= temp68_25 (select ARGNAME_paddings_NAMEEND_DIMSIZE temp68_24)))
(assert (= temp68_26 #x0000000000000002))
(assert (= temp68_27 (select ARGNAME_paddings_NAMEEND_DIMSIZE temp68_26)))
(assert (= temp68_28 #x0000000000000003))
(assert (= temp68_29 (select ARGNAME_paddings_NAMEEND_DIMSIZE temp68_28)))
(assert (= temp68_30 #x0000000000000004))
(assert (= temp68_31 (select ARGNAME_paddings_NAMEEND_DIMSIZE temp68_30)))
(assert (= temp68_32 #x0000000000000005))
(assert (= temp68_33 (select ARGNAME_paddings_NAMEEND_DIMSIZE temp68_32)))
(assert (= temp68_34 #x0000000000000000))
(assert (= temp68_35 (select ARGNAME_paddings_NAMEEND_DIMSIZE temp68_34)))
(assert (= var133313 temp68_35))
(assert (= var133314
   (ite (= var133312 var133313) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_36 #x0000000000000001))
(assert (= var133314 temp68_36))
(assert (= temp68_37 #x0000000000000001))
(assert (= temp68_38 (select ARGNAME_paddings_NAMEEND_DIMSIZE temp68_37)))
(assert (= var133316 temp68_38))
(assert (= temp68_39 #x0000000000000002))
(assert (= var133317
   (ite (= var133316 temp68_39) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_40 #x0000000000000001))
(assert (= var133317 temp68_40))
(assert (= temp68_41 #x0000000000000000))
(assert (= var133354
   (ite (bvsgt var133296 temp68_41) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_42 #x0000000000000001))
(assert (= var133354 temp68_42))
(assert (= temp68_43 #xffffffffffffffff))
(assert (= var133356 (bvand var133293 temp68_43)))
(assert (= temp68_44 #x0000000000000000))
(assert (= var133360 temp68_44))
(assert (= temp68_45 #x0000000000000001))
(assert (= var133362 (bvshl var133360 temp68_45)))
(assert (= var133368 var133360))
(assert (= var133392 var133368))
(assert (= var133393 (bvsub var133296 var133392)))
(assert (= temp68_46 #x0000000000000000))
(assert (= var133394
   (ite (bvsgt var133393 temp68_46) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_47 #x0000000000000001))
(assert (= var133394 temp68_47))
(assert (= var133396 (bvsub var133296 var133392)))
(assert (= var133397 var133396))
(assert (= temp68_48 #x0000000000000000))
(assert (= var133400 temp68_48))
(assert (= var133402 var133400))
(assert (= temp68_49 #xffffffffffffffff))
(assert (= var133403 (bvxor var133402 temp68_49)))
(assert (= var133405 (bvadd var133403 var133296)))
(assert (= temp68_50 #x0000000000000001))
(assert (= var133406 (bvshl var133405 temp68_50)))
(assert (= var133407 var133406))
(assert (= var133411 var133400))
(assert (= var133430 var133411))
(assert (= temp68_51 #x0000000000000000))
(assert (= var133431
   (ite (bvsgt var133296 temp68_51) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_52 #x0000000000000001))
(assert (= var133431 temp68_52))
(assert (= temp68_53 #xffffffffffffffff))
(assert (= var133433 (bvand var133293 temp68_53)))
(assert (= temp68_54 #x0000000000000000))
(assert (= var133436 temp68_54))
(assert (= temp68_55 #x0000000000000001))
(assert (= var133437 (bvadd var133436 temp68_55)))
(assert (= var133467
   (ite (= var133437 var133433) #x0000000000000001 #x0000000000000000)))
(assert (= var133480 (bvsub var133393 var133430)))
(assert (= temp68_57 #x0000000000000004))
(assert (= var133481
   (ite (bvsgt var133480 temp68_57) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_58 #x0000000000000000))
(assert (= var133481 temp68_58))
(assert (= temp68_59 #x0000000000000000))
(assert (= var133490
   (ite (= var133480 temp68_59) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_60 #x0000000000000000))
(assert (= var133490 temp68_60))
(assert (= temp68_61 #x0000000000000000))
(assert (= temp68_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_61)))
(assert (= temp68_63 #x0000000000000001))
(assert (= temp68_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_63)))
(assert (= temp68_65 #x0000000000000002))
(assert (= temp68_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_65)))
(assert (= temp68_67 #x0000000000000003))
(assert (= temp68_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_67)))
(assert (= temp68_69 #x0000000000000004))
(assert (= temp68_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_69)))
(assert (= temp68_71 #x0000000000000005))
(assert (= temp68_72 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_71)))
(assert (= temp68_73 #x0000000000000000))
(assert (= temp68_74 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_73)))
(assert (= var133505 temp68_74))
(assert (= var396605 var133505))
(assert (= temp68_75 #x0000000000000000))
(assert (= var396610
   (ite (= var396605 temp68_75) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_76 #x0000000000000001))
(assert (= var396610 temp68_76))
(assert (= temp68_77 #x0000000000000000))
(assert (= var396623 temp68_77))
(assert (= var396604 var396623))
(assert (= var133506 var396604))
(assert (= temp68_78 #x0000000000000000))
(assert (= var133507
   (ite (bvslt var133506 temp68_78) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_79 #x0000000000000000))
(assert (= var133507 temp68_79))
(assert (= temp68_80 #x0000000000000000))
(assert (= temp68_81 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_80)))
(assert (= var133539 temp68_81))
(assert (= temp68_82 #x0000000000000000))
(assert (= var133540
   (ite (= var133392 temp68_82) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_83 #x0000000000000001))
(assert (= var133540 temp68_83))
(assert (= var133542 var133539))
(assert (= var133564 (bvsub var133296 var133430)))
(assert (= var133565
   (ite (bvslt var133392 var133564) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_84 #x0000000000000001))
(assert (= var133565 temp68_84))
(assert (= var133567 var133392))
(assert (= var133568 (bvsub var133296 var133430)))
(assert (= var133569 var133568))
(assert (= var133575 var133567))
(assert (= temp68_85 #x0000000000000001))
(assert (= var133576 (bvshl var133575 temp68_85)))
(assert (= temp68_86 #x0000000000000001))
(assert (= var133579 (bvor var133576 temp68_86)))
(assert (= var133597 var133575))
(assert (= temp68_87 #x0000000000000001))
(assert (= var133598 (bvadd var133597 temp68_87)))
(assert (= temp68_88 (select ARGNAME_input_NAMEEND_DIMSIZE var133598)))
(assert (= var133599 temp68_88))
(model-add temp68_1 () (_ BitVec 64) #x0000000000000001)
(model-add var199574 () (_ BitVec 64) #x0000000000000001)
(model-add var199570 () (_ BitVec 64) #x0000000000000001)
(model-add temp68_2 () (_ BitVec 64) #x0000000000000001)
(model-add var133284 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add extend_3999
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))












