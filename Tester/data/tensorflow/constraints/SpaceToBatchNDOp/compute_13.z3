(declare-fun temp320_1 () (_ BitVec 64))
(declare-fun var199574 () (_ BitVec 64))
(declare-fun var199570 () (_ BitVec 64))
(declare-fun temp320_2 () (_ BitVec 64))
(declare-fun var133284 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun extend_3998 () (_ BitVec 64))
(declare-fun temp320_3 () (_ BitVec 64))
(declare-fun extend_3998SIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp320_4 () (_ BitVec 64))
(declare-fun temp320_5 () (_ BitVec 64))
(declare-fun temp320_6 () (_ BitVec 64))
(declare-fun temp320_7 () (_ BitVec 64))
(declare-fun temp320_8 () (_ BitVec 64))
(declare-fun temp320_9 () (_ BitVec 64))
(declare-fun temp320_10 () (_ BitVec 64))
(declare-fun temp320_11 () (_ BitVec 64))
(declare-fun temp320_12 () (_ BitVec 64))
(declare-fun temp320_13 () (_ BitVec 64))
(declare-fun temp320_14 () (_ BitVec 64))
(declare-fun temp320_15 () (_ BitVec 64))
(declare-fun temp320_16 () (_ BitVec 64))
(declare-fun var133293 () (_ BitVec 64))
(declare-fun var133296 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var133298 () (_ BitVec 64))
(declare-fun temp320_17 () (_ BitVec 64))
(declare-fun temp320_18 () (_ BitVec 64))
(declare-fun ARGNAME_paddings_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var265123 () (_ BitVec 64))
(declare-fun var265119 () (_ BitVec 64))
(declare-fun var133307 () (_ BitVec 64))
(declare-fun temp320_19 () (_ BitVec 64))
(declare-fun temp320_20 () (_ BitVec 64))
(declare-fun var133311 () (_ BitVec 64))
(declare-fun temp320_21 () (_ BitVec 64))
(declare-fun var133312 () (_ BitVec 64))
(declare-fun temp320_22 () (_ BitVec 64))
(declare-fun ARGNAME_paddings_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp320_23 () (_ BitVec 64))
(declare-fun temp320_24 () (_ BitVec 64))
(declare-fun temp320_25 () (_ BitVec 64))
(declare-fun temp320_26 () (_ BitVec 64))
(declare-fun temp320_27 () (_ BitVec 64))
(declare-fun temp320_28 () (_ BitVec 64))
(declare-fun temp320_29 () (_ BitVec 64))
(declare-fun temp320_30 () (_ BitVec 64))
(declare-fun temp320_31 () (_ BitVec 64))
(declare-fun temp320_32 () (_ BitVec 64))
(declare-fun temp320_33 () (_ BitVec 64))
(declare-fun temp320_34 () (_ BitVec 64))
(declare-fun temp320_35 () (_ BitVec 64))
(declare-fun var133313 () (_ BitVec 64))
(declare-fun var133314 () (_ BitVec 64))
(declare-fun temp320_36 () (_ BitVec 64))
(declare-fun temp320_37 () (_ BitVec 64))
(declare-fun temp320_38 () (_ BitVec 64))
(declare-fun var133316 () (_ BitVec 64))
(declare-fun temp320_39 () (_ BitVec 64))
(declare-fun var133317 () (_ BitVec 64))
(declare-fun temp320_40 () (_ BitVec 64))
(declare-fun temp320_41 () (_ BitVec 64))
(declare-fun var133354 () (_ BitVec 64))
(declare-fun temp320_42 () (_ BitVec 64))
(declare-fun temp320_43 () (_ BitVec 64))
(declare-fun var133356 () (_ BitVec 64))
(declare-fun temp320_44 () (_ BitVec 64))
(declare-fun var133360 () (_ BitVec 64))
(declare-fun temp320_45 () (_ BitVec 64))
(declare-fun var133362 () (_ BitVec 64))
(declare-fun var133368 () (_ BitVec 64))
(declare-fun var133392 () (_ BitVec 64))
(declare-fun var133393 () (_ BitVec 64))
(declare-fun temp320_46 () (_ BitVec 64))
(declare-fun var133394 () (_ BitVec 64))
(declare-fun temp320_47 () (_ BitVec 64))
(declare-fun var133396 () (_ BitVec 64))
(declare-fun var133397 () (_ BitVec 64))
(declare-fun temp320_48 () (_ BitVec 64))
(declare-fun var133400 () (_ BitVec 64))
(declare-fun var133402 () (_ BitVec 64))
(declare-fun temp320_49 () (_ BitVec 64))
(declare-fun var133403 () (_ BitVec 64))
(declare-fun var133405 () (_ BitVec 64))
(declare-fun temp320_50 () (_ BitVec 64))
(declare-fun var133406 () (_ BitVec 64))
(declare-fun var133407 () (_ BitVec 64))
(declare-fun var133411 () (_ BitVec 64))
(declare-fun temp320_51 () (_ BitVec 64))
(declare-fun var133413 () (_ BitVec 64))
(declare-fun var133414 () (_ BitVec 64))
(declare-fun var133419 () (_ BitVec 64))
(declare-fun var133430 () (_ BitVec 64))
(declare-fun temp320_52 () (_ BitVec 64))
(declare-fun var133431 () (_ BitVec 64))
(declare-fun temp320_53 () (_ BitVec 64))
(declare-fun temp320_54 () (_ BitVec 64))
(declare-fun var133433 () (_ BitVec 64))
(declare-fun temp320_55 () (_ BitVec 64))
(declare-fun var133436 () (_ BitVec 64))
(declare-fun temp320_56 () (_ BitVec 64))
(declare-fun var133437 () (_ BitVec 64))
(declare-fun var133467 () (_ BitVec 64))
(declare-fun var133480 () (_ BitVec 64))
(declare-fun temp320_58 () (_ BitVec 64))
(declare-fun var133481 () (_ BitVec 64))
(declare-fun temp320_59 () (_ BitVec 64))
(declare-fun temp320_60 () (_ BitVec 64))
(declare-fun var133490 () (_ BitVec 64))
(declare-fun temp320_61 () (_ BitVec 64))
(declare-fun temp320_62 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp320_63 () (_ BitVec 64))
(declare-fun temp320_64 () (_ BitVec 64))
(declare-fun temp320_65 () (_ BitVec 64))
(declare-fun temp320_66 () (_ BitVec 64))
(declare-fun temp320_67 () (_ BitVec 64))
(declare-fun temp320_68 () (_ BitVec 64))
(declare-fun temp320_69 () (_ BitVec 64))
(declare-fun temp320_70 () (_ BitVec 64))
(declare-fun temp320_71 () (_ BitVec 64))
(declare-fun temp320_72 () (_ BitVec 64))
(declare-fun temp320_73 () (_ BitVec 64))
(declare-fun temp320_74 () (_ BitVec 64))
(declare-fun temp320_75 () (_ BitVec 64))
(declare-fun var133505 () (_ BitVec 64))
(declare-fun var396605 () (_ BitVec 64))
(declare-fun temp320_76 () (_ BitVec 64))
(declare-fun var396610 () (_ BitVec 64))
(declare-fun temp320_77 () (_ BitVec 64))
(declare-fun temp320_78 () (_ BitVec 64))
(declare-fun var396623 () (_ BitVec 64))
(declare-fun var396604 () (_ BitVec 64))
(declare-fun var133506 () (_ BitVec 64))
(declare-fun temp320_79 () (_ BitVec 64))
(declare-fun var133507 () (_ BitVec 64))
(declare-fun temp320_80 () (_ BitVec 64))
(declare-fun temp320_81 () (_ BitVec 64))
(declare-fun temp320_82 () (_ BitVec 64))
(declare-fun var133539 () (_ BitVec 64))
(declare-fun temp320_83 () (_ BitVec 64))
(declare-fun var133540 () (_ BitVec 64))
(declare-fun temp320_84 () (_ BitVec 64))
(declare-fun var133542 () (_ BitVec 64))
(declare-fun var133564 () (_ BitVec 64))
(declare-fun var133565 () (_ BitVec 64))
(declare-fun temp320_85 () (_ BitVec 64))
(declare-fun var133567 () (_ BitVec 64))
(declare-fun var133568 () (_ BitVec 64))
(declare-fun var133569 () (_ BitVec 64))
(declare-fun var133575 () (_ BitVec 64))
(declare-fun temp320_86 () (_ BitVec 64))
(declare-fun var133576 () (_ BitVec 64))
(declare-fun temp320_87 () (_ BitVec 64))
(declare-fun var133579 () (_ BitVec 64))
(declare-fun var133597 () (_ BitVec 64))
(declare-fun temp320_88 () (_ BitVec 64))
(declare-fun var133598 () (_ BitVec 64))
(declare-fun temp320_89 () (_ BitVec 64))
(declare-fun var133599 () (_ BitVec 64))
(assert (= temp320_1 #x0000000000000001))
(assert (= var199574
   (ite (= extend_3998 temp320_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var199570 var199574))
(assert (= var133284 var199570))
(assert (= temp320_2 #x0000000000000001))
(assert (= var133284 temp320_2))
(assert (= temp320_3 #x0000000000000000))
(assert (= temp320_4 (select extend_3998SIZE temp320_3)))
(assert (= temp320_5 #x0000000000000001))
(assert (= temp320_6 (select extend_3998SIZE temp320_5)))
(assert (= temp320_7 #x0000000000000002))
(assert (= temp320_8 (select extend_3998SIZE temp320_7)))
(assert (= temp320_9 #x0000000000000003))
(assert (= temp320_10 (select extend_3998SIZE temp320_9)))
(assert (= temp320_11 #x0000000000000004))
(assert (= temp320_12 (select extend_3998SIZE temp320_11)))
(assert (= temp320_13 #x0000000000000005))
(assert (= temp320_14 (select extend_3998SIZE temp320_13)))
(assert (= temp320_15 #x0000000000000000))
(assert (= temp320_16 (select extend_3998SIZE temp320_15)))
(assert (= var133293 temp320_16))
(assert (= var133296 var133293))
(assert (= var133298
   (ite (bvsgt ARGNAME_input_NAMEEND_DIM var133296)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp320_17 #x0000000000000001))
(assert (= var133298 temp320_17))
(assert (= temp320_18 #x0000000000000002))
(assert (= var265123
   (ite (= ARGNAME_paddings_NAMEEND_DIM temp320_18)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var265119 var265123))
(assert (= var133307 var265119))
(assert (= temp320_19 #x0000000000000001))
(assert (= var133307 temp320_19))
(assert (= temp320_20 #x0000000000000020))
(assert (= var133311 (bvshl var133293 temp320_20)))
(assert (= temp320_21 #x0000000000000020))
(assert (= var133312 (bvashr var133311 temp320_21)))
(assert (= temp320_22 #x0000000000000000))
(assert (= temp320_23 (select ARGNAME_paddings_NAMEEND_DIMSIZE temp320_22)))
(assert (= temp320_24 #x0000000000000001))
(assert (= temp320_25 (select ARGNAME_paddings_NAMEEND_DIMSIZE temp320_24)))
(assert (= temp320_26 #x0000000000000002))
(assert (= temp320_27 (select ARGNAME_paddings_NAMEEND_DIMSIZE temp320_26)))
(assert (= temp320_28 #x0000000000000003))
(assert (= temp320_29 (select ARGNAME_paddings_NAMEEND_DIMSIZE temp320_28)))
(assert (= temp320_30 #x0000000000000004))
(assert (= temp320_31 (select ARGNAME_paddings_NAMEEND_DIMSIZE temp320_30)))
(assert (= temp320_32 #x0000000000000005))
(assert (= temp320_33 (select ARGNAME_paddings_NAMEEND_DIMSIZE temp320_32)))
(assert (= temp320_34 #x0000000000000000))
(assert (= temp320_35 (select ARGNAME_paddings_NAMEEND_DIMSIZE temp320_34)))
(assert (= var133313 temp320_35))
(assert (= var133314
   (ite (= var133312 var133313) #x0000000000000001 #x0000000000000000)))
(assert (= temp320_36 #x0000000000000001))
(assert (= var133314 temp320_36))
(assert (= temp320_37 #x0000000000000001))
(assert (= temp320_38 (select ARGNAME_paddings_NAMEEND_DIMSIZE temp320_37)))
(assert (= var133316 temp320_38))
(assert (= temp320_39 #x0000000000000002))
(assert (= var133317
   (ite (= var133316 temp320_39) #x0000000000000001 #x0000000000000000)))
(assert (= temp320_40 #x0000000000000001))
(assert (= var133317 temp320_40))
(assert (= temp320_41 #x0000000000000000))
(assert (= var133354
   (ite (bvsgt var133296 temp320_41) #x0000000000000001 #x0000000000000000)))
(assert (= temp320_42 #x0000000000000001))
(assert (= var133354 temp320_42))
(assert (= temp320_43 #xffffffffffffffff))
(assert (= var133356 (bvand var133293 temp320_43)))
(assert (= temp320_44 #x0000000000000000))
(assert (= var133360 temp320_44))
(assert (= temp320_45 #x0000000000000001))
(assert (= var133362 (bvshl var133360 temp320_45)))
(assert (= var133368 var133360))
(assert (= var133392 var133368))
(assert (= var133393 (bvsub var133296 var133392)))
(assert (= temp320_46 #x0000000000000000))
(assert (= var133394
   (ite (bvsgt var133393 temp320_46) #x0000000000000001 #x0000000000000000)))
(assert (= temp320_47 #x0000000000000001))
(assert (= var133394 temp320_47))
(assert (= var133396 (bvsub var133296 var133392)))
(assert (= var133397 var133396))
(assert (= temp320_48 #x0000000000000000))
(assert (= var133400 temp320_48))
(assert (= var133402 var133400))
(assert (= temp320_49 #xffffffffffffffff))
(assert (= var133403 (bvxor var133402 temp320_49)))
(assert (= var133405 (bvadd var133403 var133296)))
(assert (= temp320_50 #x0000000000000001))
(assert (= var133406 (bvshl var133405 temp320_50)))
(assert (= var133407 var133406))
(assert (= var133411 var133400))
(assert (= temp320_51 #x0000000000000001))
(assert (= var133413 (bvor var133406 temp320_51)))
(assert (= var133414 var133413))
(assert (= var133419 var133405))
(assert (= var133430 var133411))
(assert (= temp320_52 #x0000000000000000))
(assert (= var133431
   (ite (bvsgt var133296 temp320_52) #x0000000000000001 #x0000000000000000)))
(assert (= temp320_53 #x0000000000000001))
(assert (= var133431 temp320_53))
(assert (= temp320_54 #xffffffffffffffff))
(assert (= var133433 (bvand var133293 temp320_54)))
(assert (= temp320_55 #x0000000000000000))
(assert (= var133436 temp320_55))
(assert (= temp320_56 #x0000000000000001))
(assert (= var133437 (bvadd var133436 temp320_56)))
(assert (= var133467
   (ite (= var133437 var133433) #x0000000000000001 #x0000000000000000)))
(assert (= var133480 (bvsub var133393 var133430)))
(assert (= temp320_58 #x0000000000000004))
(assert (= var133481
   (ite (bvsgt var133480 temp320_58) #x0000000000000001 #x0000000000000000)))
(assert (= temp320_59 #x0000000000000000))
(assert (= var133481 temp320_59))
(assert (= temp320_60 #x0000000000000000))
(assert (= var133490
   (ite (= var133480 temp320_60) #x0000000000000001 #x0000000000000000)))
(assert (= temp320_61 #x0000000000000000))
(assert (= var133490 temp320_61))
(assert (= temp320_62 #x0000000000000000))
(assert (= temp320_63 (select ARGNAME_input_NAMEEND_DIMSIZE temp320_62)))
(assert (= temp320_64 #x0000000000000001))
(assert (= temp320_65 (select ARGNAME_input_NAMEEND_DIMSIZE temp320_64)))
(assert (= temp320_66 #x0000000000000002))
(assert (= temp320_67 (select ARGNAME_input_NAMEEND_DIMSIZE temp320_66)))
(assert (= temp320_68 #x0000000000000003))
(assert (= temp320_69 (select ARGNAME_input_NAMEEND_DIMSIZE temp320_68)))
(assert (= temp320_70 #x0000000000000004))
(assert (= temp320_71 (select ARGNAME_input_NAMEEND_DIMSIZE temp320_70)))
(assert (= temp320_72 #x0000000000000005))
(assert (= temp320_73 (select ARGNAME_input_NAMEEND_DIMSIZE temp320_72)))
(assert (= temp320_74 #x0000000000000000))
(assert (= temp320_75 (select ARGNAME_input_NAMEEND_DIMSIZE temp320_74)))
(assert (= var133505 temp320_75))
(assert (= var396605 var133505))
(assert (= temp320_76 #x0000000000000000))
(assert (= var396610
   (ite (= var396605 temp320_76) #x0000000000000001 #x0000000000000000)))
(assert (= temp320_77 #x0000000000000001))
(assert (= var396610 temp320_77))
(assert (= temp320_78 #x0000000000000000))
(assert (= var396623 temp320_78))
(assert (= var396604 var396623))
(assert (= var133506 var396604))
(assert (= temp320_79 #x0000000000000000))
(assert (= var133507
   (ite (bvslt var133506 temp320_79) #x0000000000000001 #x0000000000000000)))
(assert (= temp320_80 #x0000000000000000))
(assert (= var133507 temp320_80))
(assert (= temp320_81 #x0000000000000000))
(assert (= temp320_82 (select ARGNAME_input_NAMEEND_DIMSIZE temp320_81)))
(assert (= var133539 temp320_82))
(assert (= temp320_83 #x0000000000000000))
(assert (= var133540
   (ite (= var133392 temp320_83) #x0000000000000001 #x0000000000000000)))
(assert (= temp320_84 #x0000000000000001))
(assert (= var133540 temp320_84))
(assert (= var133542 var133539))
(assert (= var133564 (bvsub var133296 var133430)))
(assert (= var133565
   (ite (bvslt var133392 var133564) #x0000000000000001 #x0000000000000000)))
(assert (= temp320_85 #x0000000000000001))
(assert (= var133565 temp320_85))
(assert (= var133567 var133392))
(assert (= var133568 (bvsub var133296 var133430)))
(assert (= var133569 var133568))
(assert (= var133575 var133567))
(assert (= temp320_86 #x0000000000000001))
(assert (= var133576 (bvshl var133575 temp320_86)))
(assert (= temp320_87 #x0000000000000001))
(assert (= var133579 (bvor var133576 temp320_87)))
(assert (= var133597 var133575))
(assert (= temp320_88 #x0000000000000001))
(assert (= var133598 (bvadd var133597 temp320_88)))
(assert (= temp320_89 (select ARGNAME_input_NAMEEND_DIMSIZE var133598)))
(assert (= var133599 temp320_89))
(model-add temp320_1 () (_ BitVec 64) #x0000000000000001)
(model-add var199574 () (_ BitVec 64) #x0000000000000001)
(model-add var199570 () (_ BitVec 64) #x0000000000000001)
(model-add temp320_2 () (_ BitVec 64) #x0000000000000001)
(model-add var133284 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add extend_3998
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))












