(declare-fun temp3708_1 () (_ BitVec 64))
(declare-fun temp3708_2 () (_ BitVec 64))
(declare-fun var76042 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp3708_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76103 () (_ BitVec 64))
(declare-fun temp3708_4 () (_ BitVec 64))
(declare-fun temp3708_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp3708_6 () (_ BitVec 64))
(declare-fun temp3708_7 () (_ BitVec 64))
(declare-fun temp3708_8 () (_ BitVec 64))
(declare-fun temp3708_9 () (_ BitVec 64))
(declare-fun temp3708_10 () (_ BitVec 64))
(declare-fun temp3708_11 () (_ BitVec 64))
(declare-fun temp3708_12 () (_ BitVec 64))
(declare-fun temp3708_13 () (_ BitVec 64))
(declare-fun temp3708_14 () (_ BitVec 64))
(declare-fun temp3708_15 () (_ BitVec 64))
(declare-fun temp3708_16 () (_ BitVec 64))
(declare-fun temp3708_17 () (_ BitVec 64))
(declare-fun temp3708_18 () (_ BitVec 64))
(declare-fun var76131 () (_ BitVec 64))
(declare-fun temp3708_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp3708_20 () (_ BitVec 64))
(declare-fun temp3708_21 () (_ BitVec 64))
(declare-fun temp3708_22 () (_ BitVec 64))
(declare-fun temp3708_23 () (_ BitVec 64))
(declare-fun temp3708_24 () (_ BitVec 64))
(declare-fun temp3708_25 () (_ BitVec 64))
(declare-fun temp3708_26 () (_ BitVec 64))
(declare-fun temp3708_27 () (_ BitVec 64))
(declare-fun temp3708_28 () (_ BitVec 64))
(declare-fun temp3708_29 () (_ BitVec 64))
(declare-fun temp3708_30 () (_ BitVec 64))
(declare-fun temp3708_31 () (_ BitVec 64))
(declare-fun temp3708_32 () (_ BitVec 64))
(declare-fun var76165 () (_ BitVec 64))
(declare-fun temp3708_33 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var76268 () (_ BitVec 64))
(declare-fun temp3708_34 () (_ BitVec 64))
(declare-fun temp3708_35 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp3708_36 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp3708_37 () (_ BitVec 64))
(declare-fun temp3708_39 () (_ BitVec 64))
(declare-fun temp3708_38 () (_ BitVec 64))
(declare-fun temp3708_40 () (_ BitVec 64))
(declare-fun var472118 () (_ BitVec 64))
(declare-fun temp3708_41 () (_ BitVec 64))
(declare-fun var472136 () (_ BitVec 64))
(declare-fun temp3708_42 () (_ BitVec 64))
(declare-fun temp3708_43 () (_ BitVec 64))
(declare-fun var603190 () (_ BitVec 64))
(declare-fun temp3708_44 () (_ BitVec 64))
(declare-fun var603208 () (_ BitVec 64))
(declare-fun temp3708_45 () (_ BitVec 64))
(declare-fun temp3708_47 () (_ BitVec 64))
(declare-fun temp3708_46 () (_ BitVec 64))
(declare-fun temp3708_49 () (_ BitVec 64))
(declare-fun temp3708_48 () (_ BitVec 64))
(declare-fun temp3708_51 () (_ BitVec 64))
(declare-fun temp3708_50 () (_ BitVec 64))
(declare-fun temp3708_52 () (_ BitVec 64))
(declare-fun var795723 () (_ BitVec 64))
(declare-fun var795702 () (_ BitVec 64))
(declare-fun var730134 () (_ BitVec 64))
(declare-fun temp3708_53 () (_ BitVec 64))
(declare-fun temp3708_54 () (_ BitVec 64))
(declare-fun var861259 () (_ BitVec 64))
(declare-fun var861238 () (_ BitVec 64))
(declare-fun var730144 () (_ BitVec 64))
(declare-fun temp3708_55 () (_ BitVec 64))
(declare-fun temp3708_56 () (_ BitVec 64))
(declare-fun var926795 () (_ BitVec 64))
(declare-fun var926774 () (_ BitVec 64))
(declare-fun var730147 () (_ BitVec 64))
(declare-fun temp3708_57 () (_ BitVec 64))
(declare-fun temp3708_59 () (_ BitVec 64))
(declare-fun temp3708_58 () (_ BitVec 64))
(declare-fun temp3708_61 () (_ BitVec 64))
(declare-fun temp3708_60 () (_ BitVec 64))
(declare-fun temp3708_63 () (_ BitVec 64))
(declare-fun temp3708_62 () (_ BitVec 64))
(declare-fun temp3708_64 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp3708_65 () (_ BitVec 64))
(declare-fun var1057843 () (_ BitVec 64))
(declare-fun var1057844 () (_ BitVec 64))
(declare-fun var1057840 () (_ BitVec 64))
(declare-fun var664540 () (_ BitVec 64))
(declare-fun temp3708_66 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp3708_67 () (_ BitVec 64))
(declare-fun var1123379 () (_ BitVec 64))
(declare-fun var1123380 () (_ BitVec 64))
(declare-fun var1123376 () (_ BitVec 64))
(declare-fun var664547 () (_ BitVec 64))
(declare-fun temp3708_68 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp3708_69 () (_ BitVec 64))
(declare-fun var1188915 () (_ BitVec 64))
(declare-fun var1188916 () (_ BitVec 64))
(declare-fun var1188912 () (_ BitVec 64))
(declare-fun var664552 () (_ BitVec 64))
(declare-fun var76450 () (_ BitVec 64))
(declare-fun temp3708_70 () (_ BitVec 64))
(declare-fun temp3708_71 () (_ BitVec 64))
(declare-fun var76511 () (_ BitVec 64))
(declare-fun var76512 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp3708_1 #x0000000000000005))
(assert (= var76042
   (ite (= ARGNAME_input_NAMEEND_DIM temp3708_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3708_2 #x0000000000000001))
(assert (= var76042 temp3708_2))
(assert (= temp3708_3 #x0000000000000005))
(assert (= var76103
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp3708_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3708_4 #x0000000000000001))
(assert (= var76103 temp3708_4))
(assert (= temp3708_5 #x0000000000000000))
(assert (= temp3708_6 (select ARGNAME_input_NAMEEND_DIMSIZE temp3708_5)))
(assert (= temp3708_7 #x0000000000000001))
(assert (= temp3708_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp3708_7)))
(assert (= temp3708_9 #x0000000000000002))
(assert (= temp3708_10 (select ARGNAME_input_NAMEEND_DIMSIZE temp3708_9)))
(assert (= temp3708_11 #x0000000000000003))
(assert (= temp3708_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp3708_11)))
(assert (= temp3708_13 #x0000000000000004))
(assert (= temp3708_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp3708_13)))
(assert (= temp3708_15 #x0000000000000005))
(assert (= temp3708_16 (select ARGNAME_input_NAMEEND_DIMSIZE temp3708_15)))
(assert (= temp3708_17 #x0000000000000004))
(assert (= temp3708_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp3708_17)))
(assert (= var76131 temp3708_18))
(assert (= temp3708_19 #x0000000000000000))
(assert (= temp3708_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp3708_19)))
(assert (= temp3708_21 #x0000000000000001))
(assert (= temp3708_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp3708_21)))
(assert (= temp3708_23 #x0000000000000002))
(assert (= temp3708_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp3708_23)))
(assert (= temp3708_25 #x0000000000000003))
(assert (= temp3708_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp3708_25)))
(assert (= temp3708_27 #x0000000000000004))
(assert (= temp3708_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp3708_27)))
(assert (= temp3708_29 #x0000000000000005))
(assert (= temp3708_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp3708_29)))
(assert (= temp3708_31 #x0000000000000004))
(assert (= temp3708_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp3708_31)))
(assert (= var76165 temp3708_32))
(assert (= temp3708_33 #x0000000000000000))
(assert (= var76268
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp3708_33)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3708_34 #x0000000000000000))
(assert (= var76268 temp3708_34))
(assert (= temp3708_35 #x0000000000000001))
(assert (= var275510 temp3708_35))
(assert (= temp3708_36 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp3708_36) #x0000000000000001 #x0000000000000000)))
(assert (= temp3708_37 #x0000000000000000))
(assert (= var275528 temp3708_37))
(assert (= temp3708_39 #x0000000000000000))
(assert (= temp3708_38 temp3708_39))
(assert (= temp3708_40 #x0000000000000001))
(assert (= var472118 temp3708_40))
(assert (= temp3708_41 #x0000000000000001))
(assert (= var472136
   (ite (bvslt var472118 temp3708_41) #x0000000000000001 #x0000000000000000)))
(assert (= temp3708_42 #x0000000000000000))
(assert (= var472136 temp3708_42))
(assert (= temp3708_43 #x0000000000000001))
(assert (= var603190 temp3708_43))
(assert (= temp3708_44 #x0000000000000001))
(assert (= var603208
   (ite (bvslt var603190 temp3708_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp3708_45 #x0000000000000000))
(assert (= var603208 temp3708_45))
(assert (= temp3708_47 #x00000000000000ff))
(assert (= temp3708_46 temp3708_47))
(assert (= temp3708_49 #x00000000000000ff))
(assert (= temp3708_48 temp3708_49))
(assert (= temp3708_51 #x00000000000000ff))
(assert (= temp3708_50 temp3708_51))
(assert (= temp3708_52 #x0000000000000000))
(assert (= var795723 temp3708_52))
(assert (= var795702 var795723))
(assert (= var730134 var795702))
(assert (= temp3708_53 #x0000000000000000))
(assert (= var730134 temp3708_53))
(assert (= temp3708_54 #x0000000000000000))
(assert (= var861259 temp3708_54))
(assert (= var861238 var861259))
(assert (= var730144 var861238))
(assert (= temp3708_55 #x0000000000000000))
(assert (= var730144 temp3708_55))
(assert (= temp3708_56 #x0000000000000000))
(assert (= var926795 temp3708_56))
(assert (= var926774 var926795))
(assert (= var730147 var926774))
(assert (= temp3708_57 #x0000000000000000))
(assert (= var730147 temp3708_57))
(assert (= temp3708_59 #x0000000000000000))
(assert (= temp3708_58 temp3708_59))
(assert (= temp3708_61 #x0000000000000000))
(assert (= temp3708_60 temp3708_61))
(assert (= temp3708_63 #x0000000000000000))
(assert (= temp3708_62 temp3708_63))
(assert (= temp3708_64 #x0000000000008000))
(assert (= var1057842 temp3708_64))
(assert (= temp3708_65 #x0000000000000001))
(assert (= var1057843
   (ite (bvslt temp3708_62 temp3708_65) #x0000000000000001 #x0000000000000000)))
(assert (= var1057844 (ite (= var1057843 #x0000000000000001) var1057842 temp3708_62)))
(assert (= var1057840 var1057844))
(assert (= var664540 var1057840))
(assert (= temp3708_66 #x0000000000040000))
(assert (= var1123378 temp3708_66))
(assert (= temp3708_67 #x0000000000000001))
(assert (= var1123379
   (ite (bvslt temp3708_60 temp3708_67) #x0000000000000001 #x0000000000000000)))
(assert (= var1123380 (ite (= var1123379 #x0000000000000001) var1123378 temp3708_60)))
(assert (= var1123376 var1123380))
(assert (= var664547 var1123376))
(assert (= temp3708_68 #x0000000000200000))
(assert (= var1188914 temp3708_68))
(assert (= temp3708_69 #x0000000000000001))
(assert (= var1188915
   (ite (bvslt temp3708_58 temp3708_69) #x0000000000000001 #x0000000000000000)))
(assert (= var1188916 (ite (= var1188915 #x0000000000000001) var1188914 temp3708_58)))
(assert (= var1188912 var1188916))
(assert (= var664552 var1188912))
(assert (= var76450 var664552))
(assert (= temp3708_70 #x0000000000000003))
(assert (= temp3708_71 #xffffffffffffffff))
(assert (= var76512 (bvadd var76511 temp3708_71)))
(model-add temp3708_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp3708_2 () (_ BitVec 64) #x0000000000000001)
(model-add var76042 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))



