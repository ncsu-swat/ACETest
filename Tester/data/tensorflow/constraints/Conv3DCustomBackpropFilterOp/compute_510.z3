(declare-fun temp800_1 () (_ BitVec 64))
(declare-fun temp800_2 () (_ BitVec 64))
(declare-fun var76042 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp800_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76103 () (_ BitVec 64))
(declare-fun temp800_4 () (_ BitVec 64))
(declare-fun temp800_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp800_6 () (_ BitVec 64))
(declare-fun temp800_7 () (_ BitVec 64))
(declare-fun temp800_8 () (_ BitVec 64))
(declare-fun temp800_9 () (_ BitVec 64))
(declare-fun temp800_10 () (_ BitVec 64))
(declare-fun temp800_11 () (_ BitVec 64))
(declare-fun temp800_12 () (_ BitVec 64))
(declare-fun temp800_13 () (_ BitVec 64))
(declare-fun temp800_14 () (_ BitVec 64))
(declare-fun temp800_15 () (_ BitVec 64))
(declare-fun temp800_16 () (_ BitVec 64))
(declare-fun temp800_17 () (_ BitVec 64))
(declare-fun temp800_18 () (_ BitVec 64))
(declare-fun var76131 () (_ BitVec 64))
(declare-fun temp800_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp800_20 () (_ BitVec 64))
(declare-fun temp800_21 () (_ BitVec 64))
(declare-fun temp800_22 () (_ BitVec 64))
(declare-fun temp800_23 () (_ BitVec 64))
(declare-fun temp800_24 () (_ BitVec 64))
(declare-fun temp800_25 () (_ BitVec 64))
(declare-fun temp800_26 () (_ BitVec 64))
(declare-fun temp800_27 () (_ BitVec 64))
(declare-fun temp800_28 () (_ BitVec 64))
(declare-fun temp800_29 () (_ BitVec 64))
(declare-fun temp800_30 () (_ BitVec 64))
(declare-fun temp800_31 () (_ BitVec 64))
(declare-fun temp800_32 () (_ BitVec 64))
(declare-fun var76165 () (_ BitVec 64))
(declare-fun temp800_33 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var76268 () (_ BitVec 64))
(declare-fun temp800_34 () (_ BitVec 64))
(declare-fun temp800_35 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp800_36 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp800_37 () (_ BitVec 64))
(declare-fun temp800_38 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp800_39 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp800_40 () (_ BitVec 64))
(declare-fun temp800_41 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp800_42 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp800_43 () (_ BitVec 64))
(declare-fun temp800_45 () (_ BitVec 64))
(declare-fun temp800_44 () (_ BitVec 64))
(declare-fun temp800_47 () (_ BitVec 64))
(declare-fun temp800_46 () (_ BitVec 64))
(declare-fun temp800_49 () (_ BitVec 64))
(declare-fun temp800_48 () (_ BitVec 64))
(declare-fun temp800_51 () (_ BitVec 64))
(declare-fun temp800_50 () (_ BitVec 64))
(declare-fun temp800_53 () (_ BitVec 64))
(declare-fun temp800_52 () (_ BitVec 64))
(declare-fun temp800_55 () (_ BitVec 64))
(declare-fun temp800_54 () (_ BitVec 64))
(declare-fun temp800_56 () (_ BitVec 64))
(declare-fun var861234 () (_ BitVec 64))
(declare-fun temp800_57 () (_ BitVec 64))
(declare-fun var861235 () (_ BitVec 64))
(declare-fun var861236 () (_ BitVec 64))
(declare-fun var861232 () (_ BitVec 64))
(declare-fun var599004 () (_ BitVec 64))
(declare-fun temp800_58 () (_ BitVec 64))
(declare-fun var926770 () (_ BitVec 64))
(declare-fun temp800_59 () (_ BitVec 64))
(declare-fun var926771 () (_ BitVec 64))
(declare-fun var926772 () (_ BitVec 64))
(declare-fun var926768 () (_ BitVec 64))
(declare-fun var599011 () (_ BitVec 64))
(declare-fun temp800_60 () (_ BitVec 64))
(declare-fun var992306 () (_ BitVec 64))
(declare-fun temp800_61 () (_ BitVec 64))
(declare-fun var992307 () (_ BitVec 64))
(declare-fun var992308 () (_ BitVec 64))
(declare-fun var992304 () (_ BitVec 64))
(declare-fun var599016 () (_ BitVec 64))
(declare-fun var76450 () (_ BitVec 64))
(declare-fun temp800_62 () (_ BitVec 64))
(declare-fun temp800_63 () (_ BitVec 64))
(declare-fun var76511 () (_ BitVec 64))
(declare-fun var76512 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp800_1 #x0000000000000005))
(assert (= var76042
   (ite (= ARGNAME_input_NAMEEND_DIM temp800_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp800_2 #x0000000000000001))
(assert (= var76042 temp800_2))
(assert (= temp800_3 #x0000000000000005))
(assert (= var76103
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp800_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp800_4 #x0000000000000001))
(assert (= var76103 temp800_4))
(assert (= temp800_5 #x0000000000000000))
(assert (= temp800_6 (select ARGNAME_input_NAMEEND_DIMSIZE temp800_5)))
(assert (= temp800_7 #x0000000000000001))
(assert (= temp800_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp800_7)))
(assert (= temp800_9 #x0000000000000002))
(assert (= temp800_10 (select ARGNAME_input_NAMEEND_DIMSIZE temp800_9)))
(assert (= temp800_11 #x0000000000000003))
(assert (= temp800_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp800_11)))
(assert (= temp800_13 #x0000000000000004))
(assert (= temp800_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp800_13)))
(assert (= temp800_15 #x0000000000000005))
(assert (= temp800_16 (select ARGNAME_input_NAMEEND_DIMSIZE temp800_15)))
(assert (= temp800_17 #x0000000000000004))
(assert (= temp800_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp800_17)))
(assert (= var76131 temp800_18))
(assert (= temp800_19 #x0000000000000000))
(assert (= temp800_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp800_19)))
(assert (= temp800_21 #x0000000000000001))
(assert (= temp800_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp800_21)))
(assert (= temp800_23 #x0000000000000002))
(assert (= temp800_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp800_23)))
(assert (= temp800_25 #x0000000000000003))
(assert (= temp800_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp800_25)))
(assert (= temp800_27 #x0000000000000004))
(assert (= temp800_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp800_27)))
(assert (= temp800_29 #x0000000000000005))
(assert (= temp800_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp800_29)))
(assert (= temp800_31 #x0000000000000004))
(assert (= temp800_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp800_31)))
(assert (= var76165 temp800_32))
(assert (= temp800_33 #x0000000000000000))
(assert (= var76268
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp800_33)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp800_34 #x0000000000000000))
(assert (= var76268 temp800_34))
(assert (= temp800_35 #x0000000000000001))
(assert (= var275510 temp800_35))
(assert (= temp800_36 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp800_36) #x0000000000000001 #x0000000000000000)))
(assert (= temp800_37 #x0000000000000000))
(assert (= var275528 temp800_37))
(assert (= temp800_38 #x0000000000000001))
(assert (= var406582 temp800_38))
(assert (= temp800_39 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp800_39) #x0000000000000001 #x0000000000000000)))
(assert (= temp800_40 #x0000000000000000))
(assert (= var406600 temp800_40))
(assert (= temp800_41 #x0000000000000001))
(assert (= var537654 temp800_41))
(assert (= temp800_42 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp800_42) #x0000000000000001 #x0000000000000000)))
(assert (= temp800_43 #x0000000000000000))
(assert (= var537672 temp800_43))
(assert (= temp800_45 #x00000000000000ff))
(assert (= temp800_44 temp800_45))
(assert (= temp800_47 #x00000000000000ff))
(assert (= temp800_46 temp800_47))
(assert (= temp800_49 #x00000000000000ff))
(assert (= temp800_48 temp800_49))
(assert (= temp800_51 #x0000000000000000))
(assert (= temp800_50 temp800_51))
(assert (= temp800_53 #x0000000000000000))
(assert (= temp800_52 temp800_53))
(assert (= temp800_55 #x0000000000000000))
(assert (= temp800_54 temp800_55))
(assert (= temp800_56 #x0000000000008000))
(assert (= var861234 temp800_56))
(assert (= temp800_57 #x0000000000000001))
(assert (= var861235
   (ite (bvslt temp800_54 temp800_57) #x0000000000000001 #x0000000000000000)))
(assert (= var861236 (ite (= var861235 #x0000000000000001) var861234 temp800_54)))
(assert (= var861232 var861236))
(assert (= var599004 var861232))
(assert (= temp800_58 #x0000000000040000))
(assert (= var926770 temp800_58))
(assert (= temp800_59 #x0000000000000001))
(assert (= var926771
   (ite (bvslt temp800_52 temp800_59) #x0000000000000001 #x0000000000000000)))
(assert (= var926772 (ite (= var926771 #x0000000000000001) var926770 temp800_52)))
(assert (= var926768 var926772))
(assert (= var599011 var926768))
(assert (= temp800_60 #x0000000000200000))
(assert (= var992306 temp800_60))
(assert (= temp800_61 #x0000000000000001))
(assert (= var992307
   (ite (bvslt temp800_50 temp800_61) #x0000000000000001 #x0000000000000000)))
(assert (= var992308 (ite (= var992307 #x0000000000000001) var992306 temp800_50)))
(assert (= var992304 var992308))
(assert (= var599016 var992304))
(assert (= var76450 var599016))
(assert (= temp800_62 #x0000000000000003))
(assert (= temp800_63 #xffffffffffffffff))
(assert (= var76512 (bvadd var76511 temp800_63)))
(model-add temp800_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp800_2 () (_ BitVec 64) #x0000000000000001)
(model-add var76042 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


