(declare-fun temp7651_1 () (_ BitVec 64))
(declare-fun var139826 () (_ BitVec 64))
(declare-fun var139820 () (_ BitVec 64))
(declare-fun temp7651_2 () (_ BitVec 64))
(declare-fun var75949 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_sizes_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp7651_3 () (_ BitVec 64))
(declare-fun var76022 () (_ BitVec 64))
(declare-fun var76026 () (_ BitVec 64))
(declare-fun temp7651_4 () (_ BitVec 64))
(declare-fun var76027 () (_ BitVec 64))
(declare-fun temp7651_5 () (_ BitVec 64))
(declare-fun temp7651_6 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76042 () (_ BitVec 64))
(declare-fun temp7651_7 () (_ BitVec 64))
(declare-fun temp7651_8 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76103 () (_ BitVec 64))
(declare-fun temp7651_9 () (_ BitVec 64))
(declare-fun temp7651_10 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp7651_11 () (_ BitVec 64))
(declare-fun temp7651_12 () (_ BitVec 64))
(declare-fun temp7651_13 () (_ BitVec 64))
(declare-fun temp7651_14 () (_ BitVec 64))
(declare-fun temp7651_15 () (_ BitVec 64))
(declare-fun temp7651_16 () (_ BitVec 64))
(declare-fun temp7651_17 () (_ BitVec 64))
(declare-fun temp7651_18 () (_ BitVec 64))
(declare-fun temp7651_19 () (_ BitVec 64))
(declare-fun temp7651_20 () (_ BitVec 64))
(declare-fun temp7651_21 () (_ BitVec 64))
(declare-fun temp7651_22 () (_ BitVec 64))
(declare-fun temp7651_23 () (_ BitVec 64))
(declare-fun var76131 () (_ BitVec 64))
(declare-fun temp7651_24 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp7651_25 () (_ BitVec 64))
(declare-fun temp7651_26 () (_ BitVec 64))
(declare-fun temp7651_27 () (_ BitVec 64))
(declare-fun temp7651_28 () (_ BitVec 64))
(declare-fun temp7651_29 () (_ BitVec 64))
(declare-fun temp7651_30 () (_ BitVec 64))
(declare-fun temp7651_31 () (_ BitVec 64))
(declare-fun temp7651_32 () (_ BitVec 64))
(declare-fun temp7651_33 () (_ BitVec 64))
(declare-fun temp7651_34 () (_ BitVec 64))
(declare-fun temp7651_35 () (_ BitVec 64))
(declare-fun temp7651_36 () (_ BitVec 64))
(declare-fun temp7651_37 () (_ BitVec 64))
(declare-fun var76165 () (_ BitVec 64))
(declare-fun temp7651_38 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var76268 () (_ BitVec 64))
(declare-fun temp7651_39 () (_ BitVec 64))
(declare-fun temp7651_40 () (_ BitVec 64))
(declare-fun var341046 () (_ BitVec 64))
(declare-fun temp7651_41 () (_ BitVec 64))
(declare-fun var341064 () (_ BitVec 64))
(declare-fun temp7651_42 () (_ BitVec 64))
(declare-fun temp7651_43 () (_ BitVec 64))
(declare-fun var472118 () (_ BitVec 64))
(declare-fun temp7651_44 () (_ BitVec 64))
(declare-fun var472136 () (_ BitVec 64))
(declare-fun temp7651_45 () (_ BitVec 64))
(declare-fun temp7651_46 () (_ BitVec 64))
(declare-fun var603190 () (_ BitVec 64))
(declare-fun temp7651_47 () (_ BitVec 64))
(declare-fun var603208 () (_ BitVec 64))
(declare-fun temp7651_48 () (_ BitVec 64))
(declare-fun temp7651_50 () (_ BitVec 64))
(declare-fun temp7651_49 () (_ BitVec 64))
(declare-fun temp7651_52 () (_ BitVec 64))
(declare-fun temp7651_51 () (_ BitVec 64))
(declare-fun temp7651_54 () (_ BitVec 64))
(declare-fun temp7651_53 () (_ BitVec 64))
(declare-fun temp7651_55 () (_ BitVec 64))
(declare-fun var795723 () (_ BitVec 64))
(declare-fun var795702 () (_ BitVec 64))
(declare-fun var730134 () (_ BitVec 64))
(declare-fun temp7651_56 () (_ BitVec 64))
(declare-fun temp7651_57 () (_ BitVec 64))
(declare-fun var926795 () (_ BitVec 64))
(declare-fun var926774 () (_ BitVec 64))
(declare-fun var730147 () (_ BitVec 64))
(declare-fun temp7651_58 () (_ BitVec 64))
(declare-fun temp7651_59 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp7651_60 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp7651_61 () (_ BitVec 64))
(declare-fun var1254450 () (_ BitVec 64))
(declare-fun temp7651_63 () (_ BitVec 64))
(declare-fun temp7651_62 () (_ BitVec 64))
(declare-fun temp7651_65 () (_ BitVec 64))
(declare-fun temp7651_64 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp7651_1 #x0000000000000001))
(assert (= var139826
   (ite (= ARGNAME_filter_sizes_NAMEEND_DIM temp7651_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var139820 var139826))
(assert (= var75949 var139820))
(assert (= temp7651_2 #x0000000000000001))
(assert (= var75949 temp7651_2))
(assert (= temp7651_3 #x0000000000000000))
(assert (= var76022 temp7651_3))
(assert (= var76026 var76022))
(assert (= temp7651_4 #x0000000000000000))
(assert (= var76027 (ite (= var76026 temp7651_4) #x0000000000000001 #x0000000000000000)))
(assert (= temp7651_5 #x0000000000000001))
(assert (= var76027 temp7651_5))
(assert (= temp7651_6 #x0000000000000005))
(assert (= var76042
   (ite (= ARGNAME_input_NAMEEND_DIM temp7651_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp7651_7 #x0000000000000001))
(assert (= var76042 temp7651_7))
(assert (= temp7651_8 #x0000000000000005))
(assert (= var76103
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp7651_8)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp7651_9 #x0000000000000001))
(assert (= var76103 temp7651_9))
(assert (= temp7651_10 #x0000000000000000))
(assert (= temp7651_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp7651_10)))
(assert (= temp7651_12 #x0000000000000001))
(assert (= temp7651_13 (select ARGNAME_input_NAMEEND_DIMSIZE temp7651_12)))
(assert (= temp7651_14 #x0000000000000002))
(assert (= temp7651_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp7651_14)))
(assert (= temp7651_16 #x0000000000000003))
(assert (= temp7651_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp7651_16)))
(assert (= temp7651_18 #x0000000000000004))
(assert (= temp7651_19 (select ARGNAME_input_NAMEEND_DIMSIZE temp7651_18)))
(assert (= temp7651_20 #x0000000000000005))
(assert (= temp7651_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp7651_20)))
(assert (= temp7651_22 #x0000000000000004))
(assert (= temp7651_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp7651_22)))
(assert (= var76131 temp7651_23))
(assert (= temp7651_24 #x0000000000000000))
(assert (= temp7651_25 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp7651_24)))
(assert (= temp7651_26 #x0000000000000001))
(assert (= temp7651_27 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp7651_26)))
(assert (= temp7651_28 #x0000000000000002))
(assert (= temp7651_29 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp7651_28)))
(assert (= temp7651_30 #x0000000000000003))
(assert (= temp7651_31 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp7651_30)))
(assert (= temp7651_32 #x0000000000000004))
(assert (= temp7651_33 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp7651_32)))
(assert (= temp7651_34 #x0000000000000005))
(assert (= temp7651_35 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp7651_34)))
(assert (= temp7651_36 #x0000000000000004))
(assert (= temp7651_37 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp7651_36)))
(assert (= var76165 temp7651_37))
(assert (= temp7651_38 #x0000000000000000))
(assert (= var76268
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp7651_38)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp7651_39 #x0000000000000000))
(assert (= var76268 temp7651_39))
(assert (= temp7651_40 #x0000000000000001))
(assert (= var341046 temp7651_40))
(assert (= temp7651_41 #x0000000000000001))
(assert (= var341064
   (ite (bvslt var341046 temp7651_41) #x0000000000000001 #x0000000000000000)))
(assert (= temp7651_42 #x0000000000000000))
(assert (= var341064 temp7651_42))
(assert (= temp7651_43 #x0000000000000001))
(assert (= var472118 temp7651_43))
(assert (= temp7651_44 #x0000000000000001))
(assert (= var472136
   (ite (bvslt var472118 temp7651_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp7651_45 #x0000000000000000))
(assert (= var472136 temp7651_45))
(assert (= temp7651_46 #x0000000000000001))
(assert (= var603190 temp7651_46))
(assert (= temp7651_47 #x0000000000000001))
(assert (= var603208
   (ite (bvslt var603190 temp7651_47) #x0000000000000001 #x0000000000000000)))
(assert (= temp7651_48 #x0000000000000000))
(assert (= var603208 temp7651_48))
(assert (= temp7651_50 #x00000000000000ff))
(assert (= temp7651_49 temp7651_50))
(assert (= temp7651_52 #x00000000000000ff))
(assert (= temp7651_51 temp7651_52))
(assert (= temp7651_54 #x00000000000000ff))
(assert (= temp7651_53 temp7651_54))
(assert (= temp7651_55 #x0000000000000000))
(assert (= var795723 temp7651_55))
(assert (= var795702 var795723))
(assert (= var730134 var795702))
(assert (= temp7651_56 #x0000000000000000))
(assert (= var730134 temp7651_56))
(assert (= temp7651_57 #x0000000000000000))
(assert (= var926795 temp7651_57))
(assert (= var926774 var926795))
(assert (= var730147 var926774))
(assert (= temp7651_58 #x0000000000000000))
(assert (= var730147 temp7651_58))
(assert (= temp7651_59 #x0000000000008000))
(assert (= var1123378 temp7651_59))
(assert (= temp7651_60 #x0000000000040000))
(assert (= var1188914 temp7651_60))
(assert (= temp7651_61 #x0000000000200000))
(assert (= var1254450 temp7651_61))
(assert (= temp7651_63 #x0000000000000000))
(assert (= temp7651_62 temp7651_63))
(assert (= temp7651_65 #x0000000000000000))
(assert (= temp7651_64 temp7651_65))
(model-add temp7651_1 () (_ BitVec 64) #x0000000000000001)
(model-add var139826 () (_ BitVec 64) #x0000000000000001)
(model-add var139820 () (_ BitVec 64) #x0000000000000001)
(model-add temp7651_2 () (_ BitVec 64) #x0000000000000001)
(model-add var75949 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_sizes_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))



