(declare-fun temp788_1 () (_ BitVec 64))
(declare-fun temp788_2 () (_ BitVec 64))
(declare-fun var76042 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp788_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76103 () (_ BitVec 64))
(declare-fun temp788_4 () (_ BitVec 64))
(declare-fun temp788_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp788_6 () (_ BitVec 64))
(declare-fun temp788_7 () (_ BitVec 64))
(declare-fun temp788_8 () (_ BitVec 64))
(declare-fun temp788_9 () (_ BitVec 64))
(declare-fun temp788_10 () (_ BitVec 64))
(declare-fun temp788_11 () (_ BitVec 64))
(declare-fun temp788_12 () (_ BitVec 64))
(declare-fun temp788_13 () (_ BitVec 64))
(declare-fun temp788_14 () (_ BitVec 64))
(declare-fun temp788_15 () (_ BitVec 64))
(declare-fun temp788_16 () (_ BitVec 64))
(declare-fun temp788_17 () (_ BitVec 64))
(declare-fun temp788_18 () (_ BitVec 64))
(declare-fun var76131 () (_ BitVec 64))
(declare-fun temp788_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp788_20 () (_ BitVec 64))
(declare-fun temp788_21 () (_ BitVec 64))
(declare-fun temp788_22 () (_ BitVec 64))
(declare-fun temp788_23 () (_ BitVec 64))
(declare-fun temp788_24 () (_ BitVec 64))
(declare-fun temp788_25 () (_ BitVec 64))
(declare-fun temp788_26 () (_ BitVec 64))
(declare-fun temp788_27 () (_ BitVec 64))
(declare-fun temp788_28 () (_ BitVec 64))
(declare-fun temp788_29 () (_ BitVec 64))
(declare-fun temp788_30 () (_ BitVec 64))
(declare-fun temp788_31 () (_ BitVec 64))
(declare-fun temp788_32 () (_ BitVec 64))
(declare-fun var76165 () (_ BitVec 64))
(declare-fun temp788_33 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var76268 () (_ BitVec 64))
(declare-fun temp788_34 () (_ BitVec 64))
(declare-fun temp788_35 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp788_36 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp788_37 () (_ BitVec 64))
(declare-fun temp788_38 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp788_39 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp788_40 () (_ BitVec 64))
(declare-fun temp788_41 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp788_42 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp788_43 () (_ BitVec 64))
(declare-fun temp788_45 () (_ BitVec 64))
(declare-fun temp788_44 () (_ BitVec 64))
(declare-fun temp788_47 () (_ BitVec 64))
(declare-fun temp788_46 () (_ BitVec 64))
(declare-fun temp788_49 () (_ BitVec 64))
(declare-fun temp788_48 () (_ BitVec 64))
(declare-fun temp788_50 () (_ BitVec 64))
(declare-fun var730187 () (_ BitVec 64))
(declare-fun var730166 () (_ BitVec 64))
(declare-fun var664598 () (_ BitVec 64))
(declare-fun temp788_51 () (_ BitVec 64))
(declare-fun temp788_52 () (_ BitVec 64))
(declare-fun var992306 () (_ BitVec 64))
(declare-fun temp788_53 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp788_54 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp788_1 #x0000000000000005))
(assert (= var76042
   (ite (= ARGNAME_input_NAMEEND_DIM temp788_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp788_2 #x0000000000000001))
(assert (= var76042 temp788_2))
(assert (= temp788_3 #x0000000000000005))
(assert (= var76103
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp788_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp788_4 #x0000000000000001))
(assert (= var76103 temp788_4))
(assert (= temp788_5 #x0000000000000000))
(assert (= temp788_6 (select ARGNAME_input_NAMEEND_DIMSIZE temp788_5)))
(assert (= temp788_7 #x0000000000000001))
(assert (= temp788_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp788_7)))
(assert (= temp788_9 #x0000000000000002))
(assert (= temp788_10 (select ARGNAME_input_NAMEEND_DIMSIZE temp788_9)))
(assert (= temp788_11 #x0000000000000003))
(assert (= temp788_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp788_11)))
(assert (= temp788_13 #x0000000000000004))
(assert (= temp788_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp788_13)))
(assert (= temp788_15 #x0000000000000005))
(assert (= temp788_16 (select ARGNAME_input_NAMEEND_DIMSIZE temp788_15)))
(assert (= temp788_17 #x0000000000000004))
(assert (= temp788_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp788_17)))
(assert (= var76131 temp788_18))
(assert (= temp788_19 #x0000000000000000))
(assert (= temp788_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp788_19)))
(assert (= temp788_21 #x0000000000000001))
(assert (= temp788_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp788_21)))
(assert (= temp788_23 #x0000000000000002))
(assert (= temp788_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp788_23)))
(assert (= temp788_25 #x0000000000000003))
(assert (= temp788_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp788_25)))
(assert (= temp788_27 #x0000000000000004))
(assert (= temp788_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp788_27)))
(assert (= temp788_29 #x0000000000000005))
(assert (= temp788_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp788_29)))
(assert (= temp788_31 #x0000000000000004))
(assert (= temp788_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp788_31)))
(assert (= var76165 temp788_32))
(assert (= temp788_33 #x0000000000000000))
(assert (= var76268
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp788_33)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp788_34 #x0000000000000000))
(assert (= var76268 temp788_34))
(assert (= temp788_35 #x0000000000000001))
(assert (= var275510 temp788_35))
(assert (= temp788_36 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp788_36) #x0000000000000001 #x0000000000000000)))
(assert (= temp788_37 #x0000000000000000))
(assert (= var275528 temp788_37))
(assert (= temp788_38 #x0000000000000001))
(assert (= var406582 temp788_38))
(assert (= temp788_39 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp788_39) #x0000000000000001 #x0000000000000000)))
(assert (= temp788_40 #x0000000000000000))
(assert (= var406600 temp788_40))
(assert (= temp788_41 #x0000000000000001))
(assert (= var537654 temp788_41))
(assert (= temp788_42 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp788_42) #x0000000000000001 #x0000000000000000)))
(assert (= temp788_43 #x0000000000000000))
(assert (= var537672 temp788_43))
(assert (= temp788_45 #x00000000000000ff))
(assert (= temp788_44 temp788_45))
(assert (= temp788_47 #x00000000000000ff))
(assert (= temp788_46 temp788_47))
(assert (= temp788_49 #x00000000000000ff))
(assert (= temp788_48 temp788_49))
(assert (= temp788_50 #x0000000000000000))
(assert (= var730187 temp788_50))
(assert (= var730166 var730187))
(assert (= var664598 var730166))
(assert (= temp788_51 #x0000000000000000))
(assert (= var664598 temp788_51))
(assert (= temp788_52 #x0000000000008000))
(assert (= var992306 temp788_52))
(assert (= temp788_53 #x0000000000040000))
(assert (= var1057842 temp788_53))
(assert (= temp788_54 #x0000000000200000))
(assert (= var1123378 temp788_54))
(model-add temp788_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp788_2 () (_ BitVec 64) #x0000000000000001)
(model-add var76042 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


