(declare-fun temp1381_1 () (_ BitVec 64))
(declare-fun temp1381_2 () (_ BitVec 64))
(declare-fun var76042 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp1381_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76103 () (_ BitVec 64))
(declare-fun temp1381_4 () (_ BitVec 64))
(declare-fun temp1381_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1381_6 () (_ BitVec 64))
(declare-fun temp1381_7 () (_ BitVec 64))
(declare-fun temp1381_8 () (_ BitVec 64))
(declare-fun temp1381_9 () (_ BitVec 64))
(declare-fun temp1381_10 () (_ BitVec 64))
(declare-fun temp1381_11 () (_ BitVec 64))
(declare-fun temp1381_12 () (_ BitVec 64))
(declare-fun temp1381_13 () (_ BitVec 64))
(declare-fun temp1381_14 () (_ BitVec 64))
(declare-fun temp1381_15 () (_ BitVec 64))
(declare-fun temp1381_16 () (_ BitVec 64))
(declare-fun temp1381_17 () (_ BitVec 64))
(declare-fun temp1381_18 () (_ BitVec 64))
(declare-fun var76131 () (_ BitVec 64))
(declare-fun temp1381_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1381_20 () (_ BitVec 64))
(declare-fun temp1381_21 () (_ BitVec 64))
(declare-fun temp1381_22 () (_ BitVec 64))
(declare-fun temp1381_23 () (_ BitVec 64))
(declare-fun temp1381_24 () (_ BitVec 64))
(declare-fun temp1381_25 () (_ BitVec 64))
(declare-fun temp1381_26 () (_ BitVec 64))
(declare-fun temp1381_27 () (_ BitVec 64))
(declare-fun temp1381_28 () (_ BitVec 64))
(declare-fun temp1381_29 () (_ BitVec 64))
(declare-fun temp1381_30 () (_ BitVec 64))
(declare-fun temp1381_31 () (_ BitVec 64))
(declare-fun temp1381_32 () (_ BitVec 64))
(declare-fun var76165 () (_ BitVec 64))
(declare-fun temp1381_33 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var76268 () (_ BitVec 64))
(declare-fun temp1381_34 () (_ BitVec 64))
(declare-fun temp1381_35 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp1381_36 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp1381_37 () (_ BitVec 64))
(declare-fun temp1381_39 () (_ BitVec 64))
(declare-fun temp1381_38 () (_ BitVec 64))
(declare-fun temp1381_41 () (_ BitVec 64))
(declare-fun temp1381_40 () (_ BitVec 64))
(declare-fun temp1381_42 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp1381_43 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp1381_44 () (_ BitVec 64))
(declare-fun temp1381_45 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp1381_46 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp1381_47 () (_ BitVec 64))
(declare-fun temp1381_49 () (_ BitVec 64))
(declare-fun temp1381_48 () (_ BitVec 64))
(declare-fun temp1381_51 () (_ BitVec 64))
(declare-fun temp1381_50 () (_ BitVec 64))
(declare-fun temp1381_53 () (_ BitVec 64))
(declare-fun temp1381_52 () (_ BitVec 64))
(declare-fun temp1381_55 () (_ BitVec 64))
(declare-fun temp1381_54 () (_ BitVec 64))
(declare-fun temp1381_57 () (_ BitVec 64))
(declare-fun temp1381_56 () (_ BitVec 64))
(declare-fun temp1381_58 () (_ BitVec 64))
(declare-fun var795723 () (_ BitVec 64))
(declare-fun var795702 () (_ BitVec 64))
(declare-fun var664608 () (_ BitVec 64))
(declare-fun temp1381_59 () (_ BitVec 64))
(declare-fun temp1381_60 () (_ BitVec 64))
(declare-fun var861259 () (_ BitVec 64))
(declare-fun var861238 () (_ BitVec 64))
(declare-fun var664611 () (_ BitVec 64))
(declare-fun temp1381_61 () (_ BitVec 64))
(declare-fun temp1381_63 () (_ BitVec 64))
(declare-fun temp1381_62 () (_ BitVec 64))
(declare-fun temp1381_65 () (_ BitVec 64))
(declare-fun temp1381_64 () (_ BitVec 64))
(declare-fun temp1381_67 () (_ BitVec 64))
(declare-fun temp1381_66 () (_ BitVec 64))
(declare-fun temp1381_68 () (_ BitVec 64))
(declare-fun var992306 () (_ BitVec 64))
(declare-fun temp1381_69 () (_ BitVec 64))
(declare-fun var992307 () (_ BitVec 64))
(declare-fun var992308 () (_ BitVec 64))
(declare-fun var992304 () (_ BitVec 64))
(declare-fun var599004 () (_ BitVec 64))
(declare-fun temp1381_70 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp1381_71 () (_ BitVec 64))
(declare-fun var1057843 () (_ BitVec 64))
(declare-fun var1057844 () (_ BitVec 64))
(declare-fun var1057840 () (_ BitVec 64))
(declare-fun var599011 () (_ BitVec 64))
(declare-fun temp1381_72 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp1381_73 () (_ BitVec 64))
(declare-fun var1123379 () (_ BitVec 64))
(declare-fun var1123380 () (_ BitVec 64))
(declare-fun var1123376 () (_ BitVec 64))
(declare-fun var599016 () (_ BitVec 64))
(declare-fun var76450 () (_ BitVec 64))
(declare-fun temp1381_74 () (_ BitVec 64))
(declare-fun temp1381_75 () (_ BitVec 64))
(declare-fun var76511 () (_ BitVec 64))
(declare-fun var76512 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp1381_1 #x0000000000000005))
(assert (= var76042
   (ite (= ARGNAME_input_NAMEEND_DIM temp1381_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1381_2 #x0000000000000001))
(assert (= var76042 temp1381_2))
(assert (= temp1381_3 #x0000000000000005))
(assert (= var76103
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp1381_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1381_4 #x0000000000000001))
(assert (= var76103 temp1381_4))
(assert (= temp1381_5 #x0000000000000000))
(assert (= temp1381_6 (select ARGNAME_input_NAMEEND_DIMSIZE temp1381_5)))
(assert (= temp1381_7 #x0000000000000001))
(assert (= temp1381_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp1381_7)))
(assert (= temp1381_9 #x0000000000000002))
(assert (= temp1381_10 (select ARGNAME_input_NAMEEND_DIMSIZE temp1381_9)))
(assert (= temp1381_11 #x0000000000000003))
(assert (= temp1381_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp1381_11)))
(assert (= temp1381_13 #x0000000000000004))
(assert (= temp1381_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp1381_13)))
(assert (= temp1381_15 #x0000000000000005))
(assert (= temp1381_16 (select ARGNAME_input_NAMEEND_DIMSIZE temp1381_15)))
(assert (= temp1381_17 #x0000000000000004))
(assert (= temp1381_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp1381_17)))
(assert (= var76131 temp1381_18))
(assert (= temp1381_19 #x0000000000000000))
(assert (= temp1381_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp1381_19)))
(assert (= temp1381_21 #x0000000000000001))
(assert (= temp1381_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp1381_21)))
(assert (= temp1381_23 #x0000000000000002))
(assert (= temp1381_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp1381_23)))
(assert (= temp1381_25 #x0000000000000003))
(assert (= temp1381_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp1381_25)))
(assert (= temp1381_27 #x0000000000000004))
(assert (= temp1381_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp1381_27)))
(assert (= temp1381_29 #x0000000000000005))
(assert (= temp1381_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp1381_29)))
(assert (= temp1381_31 #x0000000000000004))
(assert (= temp1381_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp1381_31)))
(assert (= var76165 temp1381_32))
(assert (= temp1381_33 #x0000000000000000))
(assert (= var76268
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp1381_33)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1381_34 #x0000000000000000))
(assert (= var76268 temp1381_34))
(assert (= temp1381_35 #x0000000000000001))
(assert (= var275510 temp1381_35))
(assert (= temp1381_36 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp1381_36) #x0000000000000001 #x0000000000000000)))
(assert (= temp1381_37 #x0000000000000000))
(assert (= var275528 temp1381_37))
(assert (= temp1381_39 #x0000000000000000))
(assert (= temp1381_38 temp1381_39))
(assert (= temp1381_41 #x0000000000000000))
(assert (= temp1381_40 temp1381_41))
(assert (= temp1381_42 #x0000000000000001))
(assert (= var406582 temp1381_42))
(assert (= temp1381_43 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp1381_43) #x0000000000000001 #x0000000000000000)))
(assert (= temp1381_44 #x0000000000000000))
(assert (= var406600 temp1381_44))
(assert (= temp1381_45 #x0000000000000001))
(assert (= var537654 temp1381_45))
(assert (= temp1381_46 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp1381_46) #x0000000000000001 #x0000000000000000)))
(assert (= temp1381_47 #x0000000000000000))
(assert (= var537672 temp1381_47))
(assert (= temp1381_49 #x0000000000000000))
(assert (= temp1381_48 temp1381_49))
(assert (= temp1381_51 #x0000000000000000))
(assert (= temp1381_50 temp1381_51))
(assert (= temp1381_53 #x00000000000000ff))
(assert (= temp1381_52 temp1381_53))
(assert (= temp1381_55 #x00000000000000ff))
(assert (= temp1381_54 temp1381_55))
(assert (= temp1381_57 #x00000000000000ff))
(assert (= temp1381_56 temp1381_57))
(assert (= temp1381_58 #x0000000000000000))
(assert (= var795723 temp1381_58))
(assert (= var795702 var795723))
(assert (= var664608 var795702))
(assert (= temp1381_59 #x0000000000000000))
(assert (= var664608 temp1381_59))
(assert (= temp1381_60 #x0000000000000000))
(assert (= var861259 temp1381_60))
(assert (= var861238 var861259))
(assert (= var664611 var861238))
(assert (= temp1381_61 #x0000000000000000))
(assert (= var664611 temp1381_61))
(assert (= temp1381_63 #x0000000000000000))
(assert (= temp1381_62 temp1381_63))
(assert (= temp1381_65 #x0000000000000000))
(assert (= temp1381_64 temp1381_65))
(assert (= temp1381_67 #x0000000000000000))
(assert (= temp1381_66 temp1381_67))
(assert (= temp1381_68 #x0000000000008000))
(assert (= var992306 temp1381_68))
(assert (= temp1381_69 #x0000000000000001))
(assert (= var992307
   (ite (bvslt temp1381_66 temp1381_69) #x0000000000000001 #x0000000000000000)))
(assert (= var992308 (ite (= var992307 #x0000000000000001) var992306 temp1381_66)))
(assert (= var992304 var992308))
(assert (= var599004 var992304))
(assert (= temp1381_70 #x0000000000040000))
(assert (= var1057842 temp1381_70))
(assert (= temp1381_71 #x0000000000000001))
(assert (= var1057843
   (ite (bvslt temp1381_64 temp1381_71) #x0000000000000001 #x0000000000000000)))
(assert (= var1057844 (ite (= var1057843 #x0000000000000001) var1057842 temp1381_64)))
(assert (= var1057840 var1057844))
(assert (= var599011 var1057840))
(assert (= temp1381_72 #x0000000000200000))
(assert (= var1123378 temp1381_72))
(assert (= temp1381_73 #x0000000000000001))
(assert (= var1123379
   (ite (bvslt temp1381_62 temp1381_73) #x0000000000000001 #x0000000000000000)))
(assert (= var1123380 (ite (= var1123379 #x0000000000000001) var1123378 temp1381_62)))
(assert (= var1123376 var1123380))
(assert (= var599016 var1123376))
(assert (= var76450 var599016))
(assert (= temp1381_74 #x0000000000000003))
(assert (= temp1381_75 #xffffffffffffffff))
(assert (= var76512 (bvadd var76511 temp1381_75)))
(model-add temp1381_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp1381_2 () (_ BitVec 64) #x0000000000000001)
(model-add var76042 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


