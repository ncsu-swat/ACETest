(declare-fun temp5089_1 () (_ BitVec 64))
(declare-fun var139826 () (_ BitVec 64))
(declare-fun var139820 () (_ BitVec 64))
(declare-fun temp5089_2 () (_ BitVec 64))
(declare-fun var75949 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_sizes_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp5089_3 () (_ BitVec 64))
(declare-fun var76022 () (_ BitVec 64))
(declare-fun var76026 () (_ BitVec 64))
(declare-fun temp5089_4 () (_ BitVec 64))
(declare-fun var76027 () (_ BitVec 64))
(declare-fun temp5089_5 () (_ BitVec 64))
(declare-fun temp5089_6 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76042 () (_ BitVec 64))
(declare-fun temp5089_7 () (_ BitVec 64))
(declare-fun temp5089_8 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76103 () (_ BitVec 64))
(declare-fun temp5089_9 () (_ BitVec 64))
(declare-fun temp5089_10 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp5089_11 () (_ BitVec 64))
(declare-fun temp5089_12 () (_ BitVec 64))
(declare-fun temp5089_13 () (_ BitVec 64))
(declare-fun temp5089_14 () (_ BitVec 64))
(declare-fun temp5089_15 () (_ BitVec 64))
(declare-fun temp5089_16 () (_ BitVec 64))
(declare-fun temp5089_17 () (_ BitVec 64))
(declare-fun temp5089_18 () (_ BitVec 64))
(declare-fun temp5089_19 () (_ BitVec 64))
(declare-fun temp5089_20 () (_ BitVec 64))
(declare-fun temp5089_21 () (_ BitVec 64))
(declare-fun temp5089_22 () (_ BitVec 64))
(declare-fun temp5089_23 () (_ BitVec 64))
(declare-fun var76131 () (_ BitVec 64))
(declare-fun temp5089_24 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp5089_25 () (_ BitVec 64))
(declare-fun temp5089_26 () (_ BitVec 64))
(declare-fun temp5089_27 () (_ BitVec 64))
(declare-fun temp5089_28 () (_ BitVec 64))
(declare-fun temp5089_29 () (_ BitVec 64))
(declare-fun temp5089_30 () (_ BitVec 64))
(declare-fun temp5089_31 () (_ BitVec 64))
(declare-fun temp5089_32 () (_ BitVec 64))
(declare-fun temp5089_33 () (_ BitVec 64))
(declare-fun temp5089_34 () (_ BitVec 64))
(declare-fun temp5089_35 () (_ BitVec 64))
(declare-fun temp5089_36 () (_ BitVec 64))
(declare-fun temp5089_37 () (_ BitVec 64))
(declare-fun var76165 () (_ BitVec 64))
(declare-fun temp5089_38 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var76268 () (_ BitVec 64))
(declare-fun temp5089_39 () (_ BitVec 64))
(declare-fun temp5089_40 () (_ BitVec 64))
(declare-fun var341046 () (_ BitVec 64))
(declare-fun temp5089_41 () (_ BitVec 64))
(declare-fun var341064 () (_ BitVec 64))
(declare-fun temp5089_42 () (_ BitVec 64))
(declare-fun temp5089_43 () (_ BitVec 64))
(declare-fun var472118 () (_ BitVec 64))
(declare-fun temp5089_44 () (_ BitVec 64))
(declare-fun var472136 () (_ BitVec 64))
(declare-fun temp5089_45 () (_ BitVec 64))
(declare-fun temp5089_46 () (_ BitVec 64))
(declare-fun var603190 () (_ BitVec 64))
(declare-fun temp5089_47 () (_ BitVec 64))
(declare-fun var603208 () (_ BitVec 64))
(declare-fun temp5089_48 () (_ BitVec 64))
(declare-fun temp5089_50 () (_ BitVec 64))
(declare-fun temp5089_49 () (_ BitVec 64))
(declare-fun temp5089_52 () (_ BitVec 64))
(declare-fun temp5089_51 () (_ BitVec 64))
(declare-fun temp5089_54 () (_ BitVec 64))
(declare-fun temp5089_53 () (_ BitVec 64))
(declare-fun temp5089_56 () (_ BitVec 64))
(declare-fun temp5089_55 () (_ BitVec 64))
(declare-fun temp5089_58 () (_ BitVec 64))
(declare-fun temp5089_57 () (_ BitVec 64))
(declare-fun temp5089_60 () (_ BitVec 64))
(declare-fun temp5089_59 () (_ BitVec 64))
(declare-fun temp5089_62 () (_ BitVec 64))
(declare-fun temp5089_61 () (_ BitVec 64))
(declare-fun temp5089_64 () (_ BitVec 64))
(declare-fun temp5089_63 () (_ BitVec 64))
(declare-fun temp5089_65 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp5089_66 () (_ BitVec 64))
(declare-fun var1057843 () (_ BitVec 64))
(declare-fun var1057844 () (_ BitVec 64))
(declare-fun var1057840 () (_ BitVec 64))
(declare-fun var664540 () (_ BitVec 64))
(declare-fun temp5089_67 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp5089_68 () (_ BitVec 64))
(declare-fun var1123379 () (_ BitVec 64))
(declare-fun var1123380 () (_ BitVec 64))
(declare-fun var1123376 () (_ BitVec 64))
(declare-fun var664547 () (_ BitVec 64))
(declare-fun temp5089_69 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp5089_70 () (_ BitVec 64))
(declare-fun var1188915 () (_ BitVec 64))
(declare-fun var1188916 () (_ BitVec 64))
(declare-fun var1188912 () (_ BitVec 64))
(declare-fun var664552 () (_ BitVec 64))
(declare-fun var76450 () (_ BitVec 64))
(declare-fun temp5089_71 () (_ BitVec 64))
(declare-fun temp5089_72 () (_ BitVec 64))
(declare-fun var76511 () (_ BitVec 64))
(declare-fun var76512 () (_ BitVec 64))
(declare-fun temp5089_74 () (_ BitVec 64))
(declare-fun temp5089_73 () (_ BitVec 64))
(declare-fun temp5089_76 () (_ BitVec 64))
(declare-fun temp5089_75 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp5089_1 #x0000000000000001))
(assert (= var139826
   (ite (= ARGNAME_filter_sizes_NAMEEND_DIM temp5089_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var139820 var139826))
(assert (= var75949 var139820))
(assert (= temp5089_2 #x0000000000000001))
(assert (= var75949 temp5089_2))
(assert (= temp5089_3 #x0000000000000000))
(assert (= var76022 temp5089_3))
(assert (= var76026 var76022))
(assert (= temp5089_4 #x0000000000000000))
(assert (= var76027 (ite (= var76026 temp5089_4) #x0000000000000001 #x0000000000000000)))
(assert (= temp5089_5 #x0000000000000001))
(assert (= var76027 temp5089_5))
(assert (= temp5089_6 #x0000000000000005))
(assert (= var76042
   (ite (= ARGNAME_input_NAMEEND_DIM temp5089_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp5089_7 #x0000000000000001))
(assert (= var76042 temp5089_7))
(assert (= temp5089_8 #x0000000000000005))
(assert (= var76103
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp5089_8)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp5089_9 #x0000000000000001))
(assert (= var76103 temp5089_9))
(assert (= temp5089_10 #x0000000000000000))
(assert (= temp5089_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp5089_10)))
(assert (= temp5089_12 #x0000000000000001))
(assert (= temp5089_13 (select ARGNAME_input_NAMEEND_DIMSIZE temp5089_12)))
(assert (= temp5089_14 #x0000000000000002))
(assert (= temp5089_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp5089_14)))
(assert (= temp5089_16 #x0000000000000003))
(assert (= temp5089_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp5089_16)))
(assert (= temp5089_18 #x0000000000000004))
(assert (= temp5089_19 (select ARGNAME_input_NAMEEND_DIMSIZE temp5089_18)))
(assert (= temp5089_20 #x0000000000000005))
(assert (= temp5089_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp5089_20)))
(assert (= temp5089_22 #x0000000000000004))
(assert (= temp5089_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp5089_22)))
(assert (= var76131 temp5089_23))
(assert (= temp5089_24 #x0000000000000000))
(assert (= temp5089_25 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp5089_24)))
(assert (= temp5089_26 #x0000000000000001))
(assert (= temp5089_27 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp5089_26)))
(assert (= temp5089_28 #x0000000000000002))
(assert (= temp5089_29 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp5089_28)))
(assert (= temp5089_30 #x0000000000000003))
(assert (= temp5089_31 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp5089_30)))
(assert (= temp5089_32 #x0000000000000004))
(assert (= temp5089_33 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp5089_32)))
(assert (= temp5089_34 #x0000000000000005))
(assert (= temp5089_35 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp5089_34)))
(assert (= temp5089_36 #x0000000000000004))
(assert (= temp5089_37 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp5089_36)))
(assert (= var76165 temp5089_37))
(assert (= temp5089_38 #x0000000000000000))
(assert (= var76268
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp5089_38)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp5089_39 #x0000000000000000))
(assert (= var76268 temp5089_39))
(assert (= temp5089_40 #x0000000000000001))
(assert (= var341046 temp5089_40))
(assert (= temp5089_41 #x0000000000000001))
(assert (= var341064
   (ite (bvslt var341046 temp5089_41) #x0000000000000001 #x0000000000000000)))
(assert (= temp5089_42 #x0000000000000000))
(assert (= var341064 temp5089_42))
(assert (= temp5089_43 #x0000000000000001))
(assert (= var472118 temp5089_43))
(assert (= temp5089_44 #x0000000000000001))
(assert (= var472136
   (ite (bvslt var472118 temp5089_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp5089_45 #x0000000000000000))
(assert (= var472136 temp5089_45))
(assert (= temp5089_46 #x0000000000000001))
(assert (= var603190 temp5089_46))
(assert (= temp5089_47 #x0000000000000001))
(assert (= var603208
   (ite (bvslt var603190 temp5089_47) #x0000000000000001 #x0000000000000000)))
(assert (= temp5089_48 #x0000000000000000))
(assert (= var603208 temp5089_48))
(assert (= temp5089_50 #x0000000000000000))
(assert (= temp5089_49 temp5089_50))
(assert (= temp5089_52 #x0000000000000000))
(assert (= temp5089_51 temp5089_52))
(assert (= temp5089_54 #x00000000000000ff))
(assert (= temp5089_53 temp5089_54))
(assert (= temp5089_56 #x00000000000000ff))
(assert (= temp5089_55 temp5089_56))
(assert (= temp5089_58 #x00000000000000ff))
(assert (= temp5089_57 temp5089_58))
(assert (= temp5089_60 #x0000000000000000))
(assert (= temp5089_59 temp5089_60))
(assert (= temp5089_62 #x0000000000000000))
(assert (= temp5089_61 temp5089_62))
(assert (= temp5089_64 #x0000000000000000))
(assert (= temp5089_63 temp5089_64))
(assert (= temp5089_65 #x0000000000008000))
(assert (= var1057842 temp5089_65))
(assert (= temp5089_66 #x0000000000000001))
(assert (= var1057843
   (ite (bvslt temp5089_63 temp5089_66) #x0000000000000001 #x0000000000000000)))
(assert (= var1057844 (ite (= var1057843 #x0000000000000001) var1057842 temp5089_63)))
(assert (= var1057840 var1057844))
(assert (= var664540 var1057840))
(assert (= temp5089_67 #x0000000000040000))
(assert (= var1123378 temp5089_67))
(assert (= temp5089_68 #x0000000000000001))
(assert (= var1123379
   (ite (bvslt temp5089_61 temp5089_68) #x0000000000000001 #x0000000000000000)))
(assert (= var1123380 (ite (= var1123379 #x0000000000000001) var1123378 temp5089_61)))
(assert (= var1123376 var1123380))
(assert (= var664547 var1123376))
(assert (= temp5089_69 #x0000000000200000))
(assert (= var1188914 temp5089_69))
(assert (= temp5089_70 #x0000000000000001))
(assert (= var1188915
   (ite (bvslt temp5089_59 temp5089_70) #x0000000000000001 #x0000000000000000)))
(assert (= var1188916 (ite (= var1188915 #x0000000000000001) var1188914 temp5089_59)))
(assert (= var1188912 var1188916))
(assert (= var664552 var1188912))
(assert (= var76450 var664552))
(assert (= temp5089_71 #x0000000000000003))
(assert (= temp5089_72 #xffffffffffffffff))
(assert (= var76512 (bvadd var76511 temp5089_72)))
(assert (= temp5089_74 #x0000000000000000))
(assert (= temp5089_73 temp5089_74))
(assert (= temp5089_76 #x0000000000000000))
(assert (= temp5089_75 temp5089_76))
(model-add temp5089_1 () (_ BitVec 64) #x0000000000000001)
(model-add var139826 () (_ BitVec 64) #x0000000000000001)
(model-add var139820 () (_ BitVec 64) #x0000000000000001)
(model-add temp5089_2 () (_ BitVec 64) #x0000000000000001)
(model-add var75949 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_sizes_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))



