(declare-fun temp8628_1 () (_ BitVec 64))
(declare-fun var139826 () (_ BitVec 64))
(declare-fun var139820 () (_ BitVec 64))
(declare-fun temp8628_2 () (_ BitVec 64))
(declare-fun var75949 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_sizes_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp8628_3 () (_ BitVec 64))
(declare-fun var76022 () (_ BitVec 64))
(declare-fun var76026 () (_ BitVec 64))
(declare-fun temp8628_4 () (_ BitVec 64))
(declare-fun var76027 () (_ BitVec 64))
(declare-fun temp8628_5 () (_ BitVec 64))
(declare-fun temp8628_6 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76042 () (_ BitVec 64))
(declare-fun temp8628_7 () (_ BitVec 64))
(declare-fun temp8628_8 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76103 () (_ BitVec 64))
(declare-fun temp8628_9 () (_ BitVec 64))
(declare-fun temp8628_10 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp8628_11 () (_ BitVec 64))
(declare-fun temp8628_12 () (_ BitVec 64))
(declare-fun temp8628_13 () (_ BitVec 64))
(declare-fun temp8628_14 () (_ BitVec 64))
(declare-fun temp8628_15 () (_ BitVec 64))
(declare-fun temp8628_16 () (_ BitVec 64))
(declare-fun temp8628_17 () (_ BitVec 64))
(declare-fun temp8628_18 () (_ BitVec 64))
(declare-fun temp8628_19 () (_ BitVec 64))
(declare-fun temp8628_20 () (_ BitVec 64))
(declare-fun temp8628_21 () (_ BitVec 64))
(declare-fun temp8628_22 () (_ BitVec 64))
(declare-fun temp8628_23 () (_ BitVec 64))
(declare-fun var76131 () (_ BitVec 64))
(declare-fun temp8628_24 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp8628_25 () (_ BitVec 64))
(declare-fun temp8628_26 () (_ BitVec 64))
(declare-fun temp8628_27 () (_ BitVec 64))
(declare-fun temp8628_28 () (_ BitVec 64))
(declare-fun temp8628_29 () (_ BitVec 64))
(declare-fun temp8628_30 () (_ BitVec 64))
(declare-fun temp8628_31 () (_ BitVec 64))
(declare-fun temp8628_32 () (_ BitVec 64))
(declare-fun temp8628_33 () (_ BitVec 64))
(declare-fun temp8628_34 () (_ BitVec 64))
(declare-fun temp8628_35 () (_ BitVec 64))
(declare-fun temp8628_36 () (_ BitVec 64))
(declare-fun temp8628_37 () (_ BitVec 64))
(declare-fun var76165 () (_ BitVec 64))
(declare-fun temp8628_38 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var76268 () (_ BitVec 64))
(declare-fun temp8628_39 () (_ BitVec 64))
(declare-fun temp8628_40 () (_ BitVec 64))
(declare-fun var341046 () (_ BitVec 64))
(declare-fun temp8628_41 () (_ BitVec 64))
(declare-fun var341064 () (_ BitVec 64))
(declare-fun temp8628_42 () (_ BitVec 64))
(declare-fun temp8628_43 () (_ BitVec 64))
(declare-fun var472118 () (_ BitVec 64))
(declare-fun temp8628_44 () (_ BitVec 64))
(declare-fun var472136 () (_ BitVec 64))
(declare-fun temp8628_45 () (_ BitVec 64))
(declare-fun temp8628_47 () (_ BitVec 64))
(declare-fun temp8628_46 () (_ BitVec 64))
(declare-fun temp8628_48 () (_ BitVec 64))
(declare-fun var668726 () (_ BitVec 64))
(declare-fun temp8628_49 () (_ BitVec 64))
(declare-fun var668744 () (_ BitVec 64))
(declare-fun temp8628_50 () (_ BitVec 64))
(declare-fun temp8628_52 () (_ BitVec 64))
(declare-fun temp8628_51 () (_ BitVec 64))
(declare-fun temp8628_54 () (_ BitVec 64))
(declare-fun temp8628_53 () (_ BitVec 64))
(declare-fun temp8628_56 () (_ BitVec 64))
(declare-fun temp8628_55 () (_ BitVec 64))
(declare-fun temp8628_57 () (_ BitVec 64))
(declare-fun var861259 () (_ BitVec 64))
(declare-fun var861238 () (_ BitVec 64))
(declare-fun var795670 () (_ BitVec 64))
(declare-fun temp8628_58 () (_ BitVec 64))
(declare-fun temp8628_59 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp8628_60 () (_ BitVec 64))
(declare-fun var1254450 () (_ BitVec 64))
(declare-fun temp8628_61 () (_ BitVec 64))
(declare-fun var1319986 () (_ BitVec 64))
(declare-fun temp8628_63 () (_ BitVec 64))
(declare-fun temp8628_62 () (_ BitVec 64))
(declare-fun temp8628_65 () (_ BitVec 64))
(declare-fun temp8628_64 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp8628_1 #x0000000000000001))
(assert (= var139826
   (ite (= ARGNAME_filter_sizes_NAMEEND_DIM temp8628_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var139820 var139826))
(assert (= var75949 var139820))
(assert (= temp8628_2 #x0000000000000001))
(assert (= var75949 temp8628_2))
(assert (= temp8628_3 #x0000000000000000))
(assert (= var76022 temp8628_3))
(assert (= var76026 var76022))
(assert (= temp8628_4 #x0000000000000000))
(assert (= var76027 (ite (= var76026 temp8628_4) #x0000000000000001 #x0000000000000000)))
(assert (= temp8628_5 #x0000000000000001))
(assert (= var76027 temp8628_5))
(assert (= temp8628_6 #x0000000000000005))
(assert (= var76042
   (ite (= ARGNAME_input_NAMEEND_DIM temp8628_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8628_7 #x0000000000000001))
(assert (= var76042 temp8628_7))
(assert (= temp8628_8 #x0000000000000005))
(assert (= var76103
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp8628_8)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8628_9 #x0000000000000001))
(assert (= var76103 temp8628_9))
(assert (= temp8628_10 #x0000000000000000))
(assert (= temp8628_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp8628_10)))
(assert (= temp8628_12 #x0000000000000001))
(assert (= temp8628_13 (select ARGNAME_input_NAMEEND_DIMSIZE temp8628_12)))
(assert (= temp8628_14 #x0000000000000002))
(assert (= temp8628_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp8628_14)))
(assert (= temp8628_16 #x0000000000000003))
(assert (= temp8628_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp8628_16)))
(assert (= temp8628_18 #x0000000000000004))
(assert (= temp8628_19 (select ARGNAME_input_NAMEEND_DIMSIZE temp8628_18)))
(assert (= temp8628_20 #x0000000000000005))
(assert (= temp8628_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp8628_20)))
(assert (= temp8628_22 #x0000000000000004))
(assert (= temp8628_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp8628_22)))
(assert (= var76131 temp8628_23))
(assert (= temp8628_24 #x0000000000000000))
(assert (= temp8628_25 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8628_24)))
(assert (= temp8628_26 #x0000000000000001))
(assert (= temp8628_27 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8628_26)))
(assert (= temp8628_28 #x0000000000000002))
(assert (= temp8628_29 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8628_28)))
(assert (= temp8628_30 #x0000000000000003))
(assert (= temp8628_31 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8628_30)))
(assert (= temp8628_32 #x0000000000000004))
(assert (= temp8628_33 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8628_32)))
(assert (= temp8628_34 #x0000000000000005))
(assert (= temp8628_35 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8628_34)))
(assert (= temp8628_36 #x0000000000000004))
(assert (= temp8628_37 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8628_36)))
(assert (= var76165 temp8628_37))
(assert (= temp8628_38 #x0000000000000000))
(assert (= var76268
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp8628_38)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8628_39 #x0000000000000000))
(assert (= var76268 temp8628_39))
(assert (= temp8628_40 #x0000000000000001))
(assert (= var341046 temp8628_40))
(assert (= temp8628_41 #x0000000000000001))
(assert (= var341064
   (ite (bvslt var341046 temp8628_41) #x0000000000000001 #x0000000000000000)))
(assert (= temp8628_42 #x0000000000000000))
(assert (= var341064 temp8628_42))
(assert (= temp8628_43 #x0000000000000001))
(assert (= var472118 temp8628_43))
(assert (= temp8628_44 #x0000000000000001))
(assert (= var472136
   (ite (bvslt var472118 temp8628_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp8628_45 #x0000000000000000))
(assert (= var472136 temp8628_45))
(assert (= temp8628_47 #x0000000000000000))
(assert (= temp8628_46 temp8628_47))
(assert (= temp8628_48 #x0000000000000001))
(assert (= var668726 temp8628_48))
(assert (= temp8628_49 #x0000000000000001))
(assert (= var668744
   (ite (bvslt var668726 temp8628_49) #x0000000000000001 #x0000000000000000)))
(assert (= temp8628_50 #x0000000000000000))
(assert (= var668744 temp8628_50))
(assert (= temp8628_52 #x00000000000000ff))
(assert (= temp8628_51 temp8628_52))
(assert (= temp8628_54 #x00000000000000ff))
(assert (= temp8628_53 temp8628_54))
(assert (= temp8628_56 #x00000000000000ff))
(assert (= temp8628_55 temp8628_56))
(assert (= temp8628_57 #x0000000000000000))
(assert (= var861259 temp8628_57))
(assert (= var861238 var861259))
(assert (= var795670 var861238))
(assert (= temp8628_58 #x0000000000000000))
(assert (= var795670 temp8628_58))
(assert (= temp8628_59 #x0000000000008000))
(assert (= var1188914 temp8628_59))
(assert (= temp8628_60 #x0000000000040000))
(assert (= var1254450 temp8628_60))
(assert (= temp8628_61 #x0000000000200000))
(assert (= var1319986 temp8628_61))
(assert (= temp8628_63 #x0000000000000000))
(assert (= temp8628_62 temp8628_63))
(assert (= temp8628_65 #x0000000000000000))
(assert (= temp8628_64 temp8628_65))
(model-add temp8628_1 () (_ BitVec 64) #x0000000000000001)
(model-add var139826 () (_ BitVec 64) #x0000000000000001)
(model-add var139820 () (_ BitVec 64) #x0000000000000001)
(model-add temp8628_2 () (_ BitVec 64) #x0000000000000001)
(model-add var75949 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_sizes_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))


