(declare-fun temp640_1 () (_ BitVec 64))
(declare-fun temp640_2 () (_ BitVec 64))
(declare-fun var76042 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp640_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76103 () (_ BitVec 64))
(declare-fun temp640_4 () (_ BitVec 64))
(declare-fun temp640_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp640_6 () (_ BitVec 64))
(declare-fun temp640_7 () (_ BitVec 64))
(declare-fun temp640_8 () (_ BitVec 64))
(declare-fun temp640_9 () (_ BitVec 64))
(declare-fun temp640_10 () (_ BitVec 64))
(declare-fun temp640_11 () (_ BitVec 64))
(declare-fun temp640_12 () (_ BitVec 64))
(declare-fun temp640_13 () (_ BitVec 64))
(declare-fun temp640_14 () (_ BitVec 64))
(declare-fun temp640_15 () (_ BitVec 64))
(declare-fun temp640_16 () (_ BitVec 64))
(declare-fun temp640_17 () (_ BitVec 64))
(declare-fun temp640_18 () (_ BitVec 64))
(declare-fun var76131 () (_ BitVec 64))
(declare-fun temp640_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp640_20 () (_ BitVec 64))
(declare-fun temp640_21 () (_ BitVec 64))
(declare-fun temp640_22 () (_ BitVec 64))
(declare-fun temp640_23 () (_ BitVec 64))
(declare-fun temp640_24 () (_ BitVec 64))
(declare-fun temp640_25 () (_ BitVec 64))
(declare-fun temp640_26 () (_ BitVec 64))
(declare-fun temp640_27 () (_ BitVec 64))
(declare-fun temp640_28 () (_ BitVec 64))
(declare-fun temp640_29 () (_ BitVec 64))
(declare-fun temp640_30 () (_ BitVec 64))
(declare-fun temp640_31 () (_ BitVec 64))
(declare-fun temp640_32 () (_ BitVec 64))
(declare-fun var76165 () (_ BitVec 64))
(declare-fun temp640_33 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var76268 () (_ BitVec 64))
(declare-fun temp640_34 () (_ BitVec 64))
(declare-fun temp640_35 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp640_36 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp640_37 () (_ BitVec 64))
(declare-fun temp640_38 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp640_39 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp640_40 () (_ BitVec 64))
(declare-fun temp640_41 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp640_42 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp640_43 () (_ BitVec 64))
(declare-fun temp640_45 () (_ BitVec 64))
(declare-fun temp640_44 () (_ BitVec 64))
(declare-fun temp640_47 () (_ BitVec 64))
(declare-fun temp640_46 () (_ BitVec 64))
(declare-fun temp640_49 () (_ BitVec 64))
(declare-fun temp640_48 () (_ BitVec 64))
(declare-fun temp640_50 () (_ BitVec 64))
(declare-fun var730187 () (_ BitVec 64))
(declare-fun var730166 () (_ BitVec 64))
(declare-fun var664598 () (_ BitVec 64))
(declare-fun temp640_51 () (_ BitVec 64))
(declare-fun temp640_52 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp640_53 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp640_54 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp640_1 #x0000000000000005))
(assert (= var76042
   (ite (= ARGNAME_input_NAMEEND_DIM temp640_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp640_2 #x0000000000000001))
(assert (= var76042 temp640_2))
(assert (= temp640_3 #x0000000000000005))
(assert (= var76103
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp640_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp640_4 #x0000000000000001))
(assert (= var76103 temp640_4))
(assert (= temp640_5 #x0000000000000000))
(assert (= temp640_6 (select ARGNAME_input_NAMEEND_DIMSIZE temp640_5)))
(assert (= temp640_7 #x0000000000000001))
(assert (= temp640_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp640_7)))
(assert (= temp640_9 #x0000000000000002))
(assert (= temp640_10 (select ARGNAME_input_NAMEEND_DIMSIZE temp640_9)))
(assert (= temp640_11 #x0000000000000003))
(assert (= temp640_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp640_11)))
(assert (= temp640_13 #x0000000000000004))
(assert (= temp640_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp640_13)))
(assert (= temp640_15 #x0000000000000005))
(assert (= temp640_16 (select ARGNAME_input_NAMEEND_DIMSIZE temp640_15)))
(assert (= temp640_17 #x0000000000000004))
(assert (= temp640_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp640_17)))
(assert (= var76131 temp640_18))
(assert (= temp640_19 #x0000000000000000))
(assert (= temp640_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp640_19)))
(assert (= temp640_21 #x0000000000000001))
(assert (= temp640_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp640_21)))
(assert (= temp640_23 #x0000000000000002))
(assert (= temp640_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp640_23)))
(assert (= temp640_25 #x0000000000000003))
(assert (= temp640_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp640_25)))
(assert (= temp640_27 #x0000000000000004))
(assert (= temp640_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp640_27)))
(assert (= temp640_29 #x0000000000000005))
(assert (= temp640_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp640_29)))
(assert (= temp640_31 #x0000000000000004))
(assert (= temp640_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp640_31)))
(assert (= var76165 temp640_32))
(assert (= temp640_33 #x0000000000000000))
(assert (= var76268
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp640_33)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp640_34 #x0000000000000000))
(assert (= var76268 temp640_34))
(assert (= temp640_35 #x0000000000000001))
(assert (= var275510 temp640_35))
(assert (= temp640_36 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp640_36) #x0000000000000001 #x0000000000000000)))
(assert (= temp640_37 #x0000000000000000))
(assert (= var275528 temp640_37))
(assert (= temp640_38 #x0000000000000001))
(assert (= var406582 temp640_38))
(assert (= temp640_39 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp640_39) #x0000000000000001 #x0000000000000000)))
(assert (= temp640_40 #x0000000000000000))
(assert (= var406600 temp640_40))
(assert (= temp640_41 #x0000000000000001))
(assert (= var537654 temp640_41))
(assert (= temp640_42 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp640_42) #x0000000000000001 #x0000000000000000)))
(assert (= temp640_43 #x0000000000000000))
(assert (= var537672 temp640_43))
(assert (= temp640_45 #x00000000000000ff))
(assert (= temp640_44 temp640_45))
(assert (= temp640_47 #x00000000000000ff))
(assert (= temp640_46 temp640_47))
(assert (= temp640_49 #x00000000000000ff))
(assert (= temp640_48 temp640_49))
(assert (= temp640_50 #x0000000000000000))
(assert (= var730187 temp640_50))
(assert (= var730166 var730187))
(assert (= var664598 var730166))
(assert (= temp640_51 #x0000000000000000))
(assert (= var664598 temp640_51))
(assert (= temp640_52 #x0000000000008000))
(assert (= var1057842 temp640_52))
(assert (= temp640_53 #x0000000000040000))
(assert (= var1123378 temp640_53))
(assert (= temp640_54 #x0000000000200000))
(assert (= var1188914 temp640_54))
(model-add temp640_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp640_2 () (_ BitVec 64) #x0000000000000001)
(model-add var76042 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))



