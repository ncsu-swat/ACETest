(declare-fun temp406_1 () (_ BitVec 64))
(declare-fun temp406_2 () (_ BitVec 64))
(declare-fun var76042 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp406_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76103 () (_ BitVec 64))
(declare-fun temp406_4 () (_ BitVec 64))
(declare-fun temp406_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp406_6 () (_ BitVec 64))
(declare-fun temp406_7 () (_ BitVec 64))
(declare-fun temp406_8 () (_ BitVec 64))
(declare-fun temp406_9 () (_ BitVec 64))
(declare-fun temp406_10 () (_ BitVec 64))
(declare-fun temp406_11 () (_ BitVec 64))
(declare-fun temp406_12 () (_ BitVec 64))
(declare-fun temp406_13 () (_ BitVec 64))
(declare-fun temp406_14 () (_ BitVec 64))
(declare-fun temp406_15 () (_ BitVec 64))
(declare-fun temp406_16 () (_ BitVec 64))
(declare-fun temp406_17 () (_ BitVec 64))
(declare-fun temp406_18 () (_ BitVec 64))
(declare-fun var76131 () (_ BitVec 64))
(declare-fun temp406_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp406_20 () (_ BitVec 64))
(declare-fun temp406_21 () (_ BitVec 64))
(declare-fun temp406_22 () (_ BitVec 64))
(declare-fun temp406_23 () (_ BitVec 64))
(declare-fun temp406_24 () (_ BitVec 64))
(declare-fun temp406_25 () (_ BitVec 64))
(declare-fun temp406_26 () (_ BitVec 64))
(declare-fun temp406_27 () (_ BitVec 64))
(declare-fun temp406_28 () (_ BitVec 64))
(declare-fun temp406_29 () (_ BitVec 64))
(declare-fun temp406_30 () (_ BitVec 64))
(declare-fun temp406_31 () (_ BitVec 64))
(declare-fun temp406_32 () (_ BitVec 64))
(declare-fun var76165 () (_ BitVec 64))
(declare-fun temp406_33 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var76268 () (_ BitVec 64))
(declare-fun temp406_34 () (_ BitVec 64))
(declare-fun temp406_35 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp406_36 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp406_37 () (_ BitVec 64))
(declare-fun temp406_38 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp406_39 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp406_40 () (_ BitVec 64))
(declare-fun temp406_42 () (_ BitVec 64))
(declare-fun temp406_41 () (_ BitVec 64))
(declare-fun temp406_44 () (_ BitVec 64))
(declare-fun temp406_43 () (_ BitVec 64))
(declare-fun temp406_45 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp406_46 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp406_47 () (_ BitVec 64))
(declare-fun temp406_49 () (_ BitVec 64))
(declare-fun temp406_48 () (_ BitVec 64))
(declare-fun temp406_51 () (_ BitVec 64))
(declare-fun temp406_50 () (_ BitVec 64))
(declare-fun temp406_53 () (_ BitVec 64))
(declare-fun temp406_52 () (_ BitVec 64))
(declare-fun temp406_55 () (_ BitVec 64))
(declare-fun temp406_54 () (_ BitVec 64))
(declare-fun temp406_57 () (_ BitVec 64))
(declare-fun temp406_56 () (_ BitVec 64))
(declare-fun temp406_58 () (_ BitVec 64))
(declare-fun var730187 () (_ BitVec 64))
(declare-fun var730166 () (_ BitVec 64))
(declare-fun var664598 () (_ BitVec 64))
(declare-fun temp406_59 () (_ BitVec 64))
(declare-fun temp406_61 () (_ BitVec 64))
(declare-fun temp406_60 () (_ BitVec 64))
(declare-fun temp406_63 () (_ BitVec 64))
(declare-fun temp406_62 () (_ BitVec 64))
(declare-fun temp406_65 () (_ BitVec 64))
(declare-fun temp406_64 () (_ BitVec 64))
(declare-fun temp406_66 () (_ BitVec 64))
(declare-fun var992306 () (_ BitVec 64))
(declare-fun temp406_67 () (_ BitVec 64))
(declare-fun var992307 () (_ BitVec 64))
(declare-fun var992308 () (_ BitVec 64))
(declare-fun var992304 () (_ BitVec 64))
(declare-fun var599004 () (_ BitVec 64))
(declare-fun temp406_68 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp406_69 () (_ BitVec 64))
(declare-fun var1057843 () (_ BitVec 64))
(declare-fun var1057844 () (_ BitVec 64))
(declare-fun var1057840 () (_ BitVec 64))
(declare-fun var599011 () (_ BitVec 64))
(declare-fun temp406_70 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp406_71 () (_ BitVec 64))
(declare-fun var1123379 () (_ BitVec 64))
(declare-fun var1123380 () (_ BitVec 64))
(declare-fun var1123376 () (_ BitVec 64))
(declare-fun var599016 () (_ BitVec 64))
(declare-fun var76450 () (_ BitVec 64))
(declare-fun temp406_72 () (_ BitVec 64))
(declare-fun temp406_73 () (_ BitVec 64))
(declare-fun var76511 () (_ BitVec 64))
(declare-fun var76512 () (_ BitVec 64))
(declare-fun temp406_75 () (_ BitVec 64))
(declare-fun temp406_74 () (_ BitVec 64))
(declare-fun temp406_77 () (_ BitVec 64))
(declare-fun temp406_76 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp406_1 #x0000000000000005))
(assert (= var76042
   (ite (= ARGNAME_input_NAMEEND_DIM temp406_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp406_2 #x0000000000000001))
(assert (= var76042 temp406_2))
(assert (= temp406_3 #x0000000000000005))
(assert (= var76103
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp406_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp406_4 #x0000000000000001))
(assert (= var76103 temp406_4))
(assert (= temp406_5 #x0000000000000000))
(assert (= temp406_6 (select ARGNAME_input_NAMEEND_DIMSIZE temp406_5)))
(assert (= temp406_7 #x0000000000000001))
(assert (= temp406_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp406_7)))
(assert (= temp406_9 #x0000000000000002))
(assert (= temp406_10 (select ARGNAME_input_NAMEEND_DIMSIZE temp406_9)))
(assert (= temp406_11 #x0000000000000003))
(assert (= temp406_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp406_11)))
(assert (= temp406_13 #x0000000000000004))
(assert (= temp406_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp406_13)))
(assert (= temp406_15 #x0000000000000005))
(assert (= temp406_16 (select ARGNAME_input_NAMEEND_DIMSIZE temp406_15)))
(assert (= temp406_17 #x0000000000000004))
(assert (= temp406_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp406_17)))
(assert (= var76131 temp406_18))
(assert (= temp406_19 #x0000000000000000))
(assert (= temp406_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp406_19)))
(assert (= temp406_21 #x0000000000000001))
(assert (= temp406_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp406_21)))
(assert (= temp406_23 #x0000000000000002))
(assert (= temp406_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp406_23)))
(assert (= temp406_25 #x0000000000000003))
(assert (= temp406_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp406_25)))
(assert (= temp406_27 #x0000000000000004))
(assert (= temp406_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp406_27)))
(assert (= temp406_29 #x0000000000000005))
(assert (= temp406_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp406_29)))
(assert (= temp406_31 #x0000000000000004))
(assert (= temp406_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp406_31)))
(assert (= var76165 temp406_32))
(assert (= temp406_33 #x0000000000000000))
(assert (= var76268
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp406_33)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp406_34 #x0000000000000000))
(assert (= var76268 temp406_34))
(assert (= temp406_35 #x0000000000000001))
(assert (= var275510 temp406_35))
(assert (= temp406_36 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp406_36) #x0000000000000001 #x0000000000000000)))
(assert (= temp406_37 #x0000000000000000))
(assert (= var275528 temp406_37))
(assert (= temp406_38 #x0000000000000001))
(assert (= var406582 temp406_38))
(assert (= temp406_39 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp406_39) #x0000000000000001 #x0000000000000000)))
(assert (= temp406_40 #x0000000000000000))
(assert (= var406600 temp406_40))
(assert (= temp406_42 #x0000000000000000))
(assert (= temp406_41 temp406_42))
(assert (= temp406_44 #x0000000000000000))
(assert (= temp406_43 temp406_44))
(assert (= temp406_45 #x0000000000000001))
(assert (= var537654 temp406_45))
(assert (= temp406_46 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp406_46) #x0000000000000001 #x0000000000000000)))
(assert (= temp406_47 #x0000000000000000))
(assert (= var537672 temp406_47))
(assert (= temp406_49 #x0000000000000000))
(assert (= temp406_48 temp406_49))
(assert (= temp406_51 #x0000000000000000))
(assert (= temp406_50 temp406_51))
(assert (= temp406_53 #x00000000000000ff))
(assert (= temp406_52 temp406_53))
(assert (= temp406_55 #x00000000000000ff))
(assert (= temp406_54 temp406_55))
(assert (= temp406_57 #x00000000000000ff))
(assert (= temp406_56 temp406_57))
(assert (= temp406_58 #x0000000000000000))
(assert (= var730187 temp406_58))
(assert (= var730166 var730187))
(assert (= var664598 var730166))
(assert (= temp406_59 #x0000000000000000))
(assert (= var664598 temp406_59))
(assert (= temp406_61 #x0000000000000000))
(assert (= temp406_60 temp406_61))
(assert (= temp406_63 #x0000000000000000))
(assert (= temp406_62 temp406_63))
(assert (= temp406_65 #x0000000000000000))
(assert (= temp406_64 temp406_65))
(assert (= temp406_66 #x0000000000008000))
(assert (= var992306 temp406_66))
(assert (= temp406_67 #x0000000000000001))
(assert (= var992307
   (ite (bvslt temp406_64 temp406_67) #x0000000000000001 #x0000000000000000)))
(assert (= var992308 (ite (= var992307 #x0000000000000001) var992306 temp406_64)))
(assert (= var992304 var992308))
(assert (= var599004 var992304))
(assert (= temp406_68 #x0000000000040000))
(assert (= var1057842 temp406_68))
(assert (= temp406_69 #x0000000000000001))
(assert (= var1057843
   (ite (bvslt temp406_62 temp406_69) #x0000000000000001 #x0000000000000000)))
(assert (= var1057844 (ite (= var1057843 #x0000000000000001) var1057842 temp406_62)))
(assert (= var1057840 var1057844))
(assert (= var599011 var1057840))
(assert (= temp406_70 #x0000000000200000))
(assert (= var1123378 temp406_70))
(assert (= temp406_71 #x0000000000000001))
(assert (= var1123379
   (ite (bvslt temp406_60 temp406_71) #x0000000000000001 #x0000000000000000)))
(assert (= var1123380 (ite (= var1123379 #x0000000000000001) var1123378 temp406_60)))
(assert (= var1123376 var1123380))
(assert (= var599016 var1123376))
(assert (= var76450 var599016))
(assert (= temp406_72 #x0000000000000003))
(assert (= temp406_73 #xffffffffffffffff))
(assert (= var76512 (bvadd var76511 temp406_73)))
(assert (= temp406_75 #x0000000000000000))
(assert (= temp406_74 temp406_75))
(assert (= temp406_77 #x0000000000000000))
(assert (= temp406_76 temp406_77))
(model-add temp406_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp406_2 () (_ BitVec 64) #x0000000000000001)
(model-add var76042 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


