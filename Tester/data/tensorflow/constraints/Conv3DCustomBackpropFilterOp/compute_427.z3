(declare-fun temp666_1 () (_ BitVec 64))
(declare-fun temp666_2 () (_ BitVec 64))
(declare-fun var76042 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp666_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76103 () (_ BitVec 64))
(declare-fun temp666_4 () (_ BitVec 64))
(declare-fun temp666_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp666_6 () (_ BitVec 64))
(declare-fun temp666_7 () (_ BitVec 64))
(declare-fun temp666_8 () (_ BitVec 64))
(declare-fun temp666_9 () (_ BitVec 64))
(declare-fun temp666_10 () (_ BitVec 64))
(declare-fun temp666_11 () (_ BitVec 64))
(declare-fun temp666_12 () (_ BitVec 64))
(declare-fun temp666_13 () (_ BitVec 64))
(declare-fun temp666_14 () (_ BitVec 64))
(declare-fun temp666_15 () (_ BitVec 64))
(declare-fun temp666_16 () (_ BitVec 64))
(declare-fun temp666_17 () (_ BitVec 64))
(declare-fun temp666_18 () (_ BitVec 64))
(declare-fun var76131 () (_ BitVec 64))
(declare-fun temp666_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp666_20 () (_ BitVec 64))
(declare-fun temp666_21 () (_ BitVec 64))
(declare-fun temp666_22 () (_ BitVec 64))
(declare-fun temp666_23 () (_ BitVec 64))
(declare-fun temp666_24 () (_ BitVec 64))
(declare-fun temp666_25 () (_ BitVec 64))
(declare-fun temp666_26 () (_ BitVec 64))
(declare-fun temp666_27 () (_ BitVec 64))
(declare-fun temp666_28 () (_ BitVec 64))
(declare-fun temp666_29 () (_ BitVec 64))
(declare-fun temp666_30 () (_ BitVec 64))
(declare-fun temp666_31 () (_ BitVec 64))
(declare-fun temp666_32 () (_ BitVec 64))
(declare-fun var76165 () (_ BitVec 64))
(declare-fun temp666_33 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var76268 () (_ BitVec 64))
(declare-fun temp666_34 () (_ BitVec 64))
(declare-fun temp666_35 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp666_36 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp666_37 () (_ BitVec 64))
(declare-fun temp666_38 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp666_39 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp666_40 () (_ BitVec 64))
(declare-fun temp666_41 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp666_42 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp666_43 () (_ BitVec 64))
(declare-fun temp666_45 () (_ BitVec 64))
(declare-fun temp666_44 () (_ BitVec 64))
(declare-fun temp666_47 () (_ BitVec 64))
(declare-fun temp666_46 () (_ BitVec 64))
(declare-fun temp666_49 () (_ BitVec 64))
(declare-fun temp666_48 () (_ BitVec 64))
(declare-fun temp666_50 () (_ BitVec 64))
(declare-fun var861259 () (_ BitVec 64))
(declare-fun var861238 () (_ BitVec 64))
(declare-fun var664611 () (_ BitVec 64))
(declare-fun temp666_51 () (_ BitVec 64))
(declare-fun temp666_52 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp666_53 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp666_54 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp666_1 #x0000000000000005))
(assert (= var76042
   (ite (= ARGNAME_input_NAMEEND_DIM temp666_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp666_2 #x0000000000000001))
(assert (= var76042 temp666_2))
(assert (= temp666_3 #x0000000000000005))
(assert (= var76103
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp666_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp666_4 #x0000000000000001))
(assert (= var76103 temp666_4))
(assert (= temp666_5 #x0000000000000000))
(assert (= temp666_6 (select ARGNAME_input_NAMEEND_DIMSIZE temp666_5)))
(assert (= temp666_7 #x0000000000000001))
(assert (= temp666_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp666_7)))
(assert (= temp666_9 #x0000000000000002))
(assert (= temp666_10 (select ARGNAME_input_NAMEEND_DIMSIZE temp666_9)))
(assert (= temp666_11 #x0000000000000003))
(assert (= temp666_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp666_11)))
(assert (= temp666_13 #x0000000000000004))
(assert (= temp666_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp666_13)))
(assert (= temp666_15 #x0000000000000005))
(assert (= temp666_16 (select ARGNAME_input_NAMEEND_DIMSIZE temp666_15)))
(assert (= temp666_17 #x0000000000000004))
(assert (= temp666_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp666_17)))
(assert (= var76131 temp666_18))
(assert (= temp666_19 #x0000000000000000))
(assert (= temp666_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp666_19)))
(assert (= temp666_21 #x0000000000000001))
(assert (= temp666_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp666_21)))
(assert (= temp666_23 #x0000000000000002))
(assert (= temp666_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp666_23)))
(assert (= temp666_25 #x0000000000000003))
(assert (= temp666_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp666_25)))
(assert (= temp666_27 #x0000000000000004))
(assert (= temp666_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp666_27)))
(assert (= temp666_29 #x0000000000000005))
(assert (= temp666_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp666_29)))
(assert (= temp666_31 #x0000000000000004))
(assert (= temp666_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp666_31)))
(assert (= var76165 temp666_32))
(assert (= temp666_33 #x0000000000000000))
(assert (= var76268
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp666_33)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp666_34 #x0000000000000000))
(assert (= var76268 temp666_34))
(assert (= temp666_35 #x0000000000000001))
(assert (= var275510 temp666_35))
(assert (= temp666_36 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp666_36) #x0000000000000001 #x0000000000000000)))
(assert (= temp666_37 #x0000000000000000))
(assert (= var275528 temp666_37))
(assert (= temp666_38 #x0000000000000001))
(assert (= var406582 temp666_38))
(assert (= temp666_39 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp666_39) #x0000000000000001 #x0000000000000000)))
(assert (= temp666_40 #x0000000000000000))
(assert (= var406600 temp666_40))
(assert (= temp666_41 #x0000000000000001))
(assert (= var537654 temp666_41))
(assert (= temp666_42 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp666_42) #x0000000000000001 #x0000000000000000)))
(assert (= temp666_43 #x0000000000000000))
(assert (= var537672 temp666_43))
(assert (= temp666_45 #x00000000000000ff))
(assert (= temp666_44 temp666_45))
(assert (= temp666_47 #x00000000000000ff))
(assert (= temp666_46 temp666_47))
(assert (= temp666_49 #x00000000000000ff))
(assert (= temp666_48 temp666_49))
(assert (= temp666_50 #x0000000000000000))
(assert (= var861259 temp666_50))
(assert (= var861238 var861259))
(assert (= var664611 var861238))
(assert (= temp666_51 #x0000000000000000))
(assert (= var664611 temp666_51))
(assert (= temp666_52 #x0000000000008000))
(assert (= var1057842 temp666_52))
(assert (= temp666_53 #x0000000000040000))
(assert (= var1123378 temp666_53))
(assert (= temp666_54 #x0000000000200000))
(assert (= var1188914 temp666_54))
(model-add temp666_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp666_2 () (_ BitVec 64) #x0000000000000001)
(model-add var76042 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


