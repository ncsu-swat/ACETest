(declare-fun temp7706_1 () (_ BitVec 64))
(declare-fun var139826 () (_ BitVec 64))
(declare-fun var139820 () (_ BitVec 64))
(declare-fun temp7706_2 () (_ BitVec 64))
(declare-fun var75949 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_sizes_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp7706_3 () (_ BitVec 64))
(declare-fun var76022 () (_ BitVec 64))
(declare-fun var76026 () (_ BitVec 64))
(declare-fun temp7706_4 () (_ BitVec 64))
(declare-fun var76027 () (_ BitVec 64))
(declare-fun temp7706_5 () (_ BitVec 64))
(declare-fun temp7706_6 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76042 () (_ BitVec 64))
(declare-fun temp7706_7 () (_ BitVec 64))
(declare-fun temp7706_8 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76103 () (_ BitVec 64))
(declare-fun temp7706_9 () (_ BitVec 64))
(declare-fun temp7706_10 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp7706_11 () (_ BitVec 64))
(declare-fun temp7706_12 () (_ BitVec 64))
(declare-fun temp7706_13 () (_ BitVec 64))
(declare-fun temp7706_14 () (_ BitVec 64))
(declare-fun temp7706_15 () (_ BitVec 64))
(declare-fun temp7706_16 () (_ BitVec 64))
(declare-fun temp7706_17 () (_ BitVec 64))
(declare-fun temp7706_18 () (_ BitVec 64))
(declare-fun temp7706_19 () (_ BitVec 64))
(declare-fun temp7706_20 () (_ BitVec 64))
(declare-fun temp7706_21 () (_ BitVec 64))
(declare-fun temp7706_22 () (_ BitVec 64))
(declare-fun temp7706_23 () (_ BitVec 64))
(declare-fun var76131 () (_ BitVec 64))
(declare-fun temp7706_24 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp7706_25 () (_ BitVec 64))
(declare-fun temp7706_26 () (_ BitVec 64))
(declare-fun temp7706_27 () (_ BitVec 64))
(declare-fun temp7706_28 () (_ BitVec 64))
(declare-fun temp7706_29 () (_ BitVec 64))
(declare-fun temp7706_30 () (_ BitVec 64))
(declare-fun temp7706_31 () (_ BitVec 64))
(declare-fun temp7706_32 () (_ BitVec 64))
(declare-fun temp7706_33 () (_ BitVec 64))
(declare-fun temp7706_34 () (_ BitVec 64))
(declare-fun temp7706_35 () (_ BitVec 64))
(declare-fun temp7706_36 () (_ BitVec 64))
(declare-fun temp7706_37 () (_ BitVec 64))
(declare-fun var76165 () (_ BitVec 64))
(declare-fun temp7706_38 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var76268 () (_ BitVec 64))
(declare-fun temp7706_39 () (_ BitVec 64))
(declare-fun temp7706_40 () (_ BitVec 64))
(declare-fun var341046 () (_ BitVec 64))
(declare-fun temp7706_41 () (_ BitVec 64))
(declare-fun var341064 () (_ BitVec 64))
(declare-fun temp7706_42 () (_ BitVec 64))
(declare-fun temp7706_43 () (_ BitVec 64))
(declare-fun var472118 () (_ BitVec 64))
(declare-fun temp7706_44 () (_ BitVec 64))
(declare-fun var472136 () (_ BitVec 64))
(declare-fun temp7706_45 () (_ BitVec 64))
(declare-fun temp7706_46 () (_ BitVec 64))
(declare-fun var603190 () (_ BitVec 64))
(declare-fun temp7706_47 () (_ BitVec 64))
(declare-fun var603208 () (_ BitVec 64))
(declare-fun temp7706_48 () (_ BitVec 64))
(declare-fun temp7706_50 () (_ BitVec 64))
(declare-fun temp7706_49 () (_ BitVec 64))
(declare-fun temp7706_52 () (_ BitVec 64))
(declare-fun temp7706_51 () (_ BitVec 64))
(declare-fun temp7706_54 () (_ BitVec 64))
(declare-fun temp7706_53 () (_ BitVec 64))
(declare-fun temp7706_56 () (_ BitVec 64))
(declare-fun temp7706_55 () (_ BitVec 64))
(declare-fun temp7706_57 () (_ BitVec 64))
(declare-fun var992331 () (_ BitVec 64))
(declare-fun var992310 () (_ BitVec 64))
(declare-fun var795683 () (_ BitVec 64))
(declare-fun temp7706_58 () (_ BitVec 64))
(declare-fun temp7706_59 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp7706_60 () (_ BitVec 64))
(declare-fun var1254450 () (_ BitVec 64))
(declare-fun temp7706_61 () (_ BitVec 64))
(declare-fun var1319986 () (_ BitVec 64))
(declare-fun temp7706_63 () (_ BitVec 64))
(declare-fun temp7706_62 () (_ BitVec 64))
(declare-fun temp7706_65 () (_ BitVec 64))
(declare-fun temp7706_64 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp7706_1 #x0000000000000001))
(assert (= var139826
   (ite (= ARGNAME_filter_sizes_NAMEEND_DIM temp7706_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var139820 var139826))
(assert (= var75949 var139820))
(assert (= temp7706_2 #x0000000000000001))
(assert (= var75949 temp7706_2))
(assert (= temp7706_3 #x0000000000000000))
(assert (= var76022 temp7706_3))
(assert (= var76026 var76022))
(assert (= temp7706_4 #x0000000000000000))
(assert (= var76027 (ite (= var76026 temp7706_4) #x0000000000000001 #x0000000000000000)))
(assert (= temp7706_5 #x0000000000000001))
(assert (= var76027 temp7706_5))
(assert (= temp7706_6 #x0000000000000005))
(assert (= var76042
   (ite (= ARGNAME_input_NAMEEND_DIM temp7706_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp7706_7 #x0000000000000001))
(assert (= var76042 temp7706_7))
(assert (= temp7706_8 #x0000000000000005))
(assert (= var76103
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp7706_8)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp7706_9 #x0000000000000001))
(assert (= var76103 temp7706_9))
(assert (= temp7706_10 #x0000000000000000))
(assert (= temp7706_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp7706_10)))
(assert (= temp7706_12 #x0000000000000001))
(assert (= temp7706_13 (select ARGNAME_input_NAMEEND_DIMSIZE temp7706_12)))
(assert (= temp7706_14 #x0000000000000002))
(assert (= temp7706_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp7706_14)))
(assert (= temp7706_16 #x0000000000000003))
(assert (= temp7706_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp7706_16)))
(assert (= temp7706_18 #x0000000000000004))
(assert (= temp7706_19 (select ARGNAME_input_NAMEEND_DIMSIZE temp7706_18)))
(assert (= temp7706_20 #x0000000000000005))
(assert (= temp7706_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp7706_20)))
(assert (= temp7706_22 #x0000000000000004))
(assert (= temp7706_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp7706_22)))
(assert (= var76131 temp7706_23))
(assert (= temp7706_24 #x0000000000000000))
(assert (= temp7706_25 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp7706_24)))
(assert (= temp7706_26 #x0000000000000001))
(assert (= temp7706_27 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp7706_26)))
(assert (= temp7706_28 #x0000000000000002))
(assert (= temp7706_29 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp7706_28)))
(assert (= temp7706_30 #x0000000000000003))
(assert (= temp7706_31 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp7706_30)))
(assert (= temp7706_32 #x0000000000000004))
(assert (= temp7706_33 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp7706_32)))
(assert (= temp7706_34 #x0000000000000005))
(assert (= temp7706_35 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp7706_34)))
(assert (= temp7706_36 #x0000000000000004))
(assert (= temp7706_37 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp7706_36)))
(assert (= var76165 temp7706_37))
(assert (= temp7706_38 #x0000000000000000))
(assert (= var76268
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp7706_38)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp7706_39 #x0000000000000000))
(assert (= var76268 temp7706_39))
(assert (= temp7706_40 #x0000000000000001))
(assert (= var341046 temp7706_40))
(assert (= temp7706_41 #x0000000000000001))
(assert (= var341064
   (ite (bvslt var341046 temp7706_41) #x0000000000000001 #x0000000000000000)))
(assert (= temp7706_42 #x0000000000000000))
(assert (= var341064 temp7706_42))
(assert (= temp7706_43 #x0000000000000001))
(assert (= var472118 temp7706_43))
(assert (= temp7706_44 #x0000000000000001))
(assert (= var472136
   (ite (bvslt var472118 temp7706_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp7706_45 #x0000000000000000))
(assert (= var472136 temp7706_45))
(assert (= temp7706_46 #x0000000000000001))
(assert (= var603190 temp7706_46))
(assert (= temp7706_47 #x0000000000000001))
(assert (= var603208
   (ite (bvslt var603190 temp7706_47) #x0000000000000001 #x0000000000000000)))
(assert (= temp7706_48 #x0000000000000000))
(assert (= var603208 temp7706_48))
(assert (= temp7706_50 #x0000000000000000))
(assert (= temp7706_49 temp7706_50))
(assert (= temp7706_52 #x00000000000000ff))
(assert (= temp7706_51 temp7706_52))
(assert (= temp7706_54 #x00000000000000ff))
(assert (= temp7706_53 temp7706_54))
(assert (= temp7706_56 #x00000000000000ff))
(assert (= temp7706_55 temp7706_56))
(assert (= temp7706_57 #x0000000000000000))
(assert (= var992331 temp7706_57))
(assert (= var992310 var992331))
(assert (= var795683 var992310))
(assert (= temp7706_58 #x0000000000000000))
(assert (= var795683 temp7706_58))
(assert (= temp7706_59 #x0000000000008000))
(assert (= var1188914 temp7706_59))
(assert (= temp7706_60 #x0000000000040000))
(assert (= var1254450 temp7706_60))
(assert (= temp7706_61 #x0000000000200000))
(assert (= var1319986 temp7706_61))
(assert (= temp7706_63 #x0000000000000000))
(assert (= temp7706_62 temp7706_63))
(assert (= temp7706_65 #x0000000000000000))
(assert (= temp7706_64 temp7706_65))
(model-add temp7706_1 () (_ BitVec 64) #x0000000000000001)
(model-add var139826 () (_ BitVec 64) #x0000000000000001)
(model-add var139820 () (_ BitVec 64) #x0000000000000001)
(model-add temp7706_2 () (_ BitVec 64) #x0000000000000001)
(model-add var75949 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_sizes_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))


