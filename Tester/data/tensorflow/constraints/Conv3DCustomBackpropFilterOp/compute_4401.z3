(declare-fun temp6658_1 () (_ BitVec 64))
(declare-fun var139826 () (_ BitVec 64))
(declare-fun var139820 () (_ BitVec 64))
(declare-fun temp6658_2 () (_ BitVec 64))
(declare-fun var75949 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_sizes_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp6658_3 () (_ BitVec 64))
(declare-fun var76022 () (_ BitVec 64))
(declare-fun var76026 () (_ BitVec 64))
(declare-fun temp6658_4 () (_ BitVec 64))
(declare-fun var76027 () (_ BitVec 64))
(declare-fun temp6658_5 () (_ BitVec 64))
(declare-fun temp6658_6 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76042 () (_ BitVec 64))
(declare-fun temp6658_7 () (_ BitVec 64))
(declare-fun temp6658_8 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76103 () (_ BitVec 64))
(declare-fun temp6658_9 () (_ BitVec 64))
(declare-fun temp6658_10 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp6658_11 () (_ BitVec 64))
(declare-fun temp6658_12 () (_ BitVec 64))
(declare-fun temp6658_13 () (_ BitVec 64))
(declare-fun temp6658_14 () (_ BitVec 64))
(declare-fun temp6658_15 () (_ BitVec 64))
(declare-fun temp6658_16 () (_ BitVec 64))
(declare-fun temp6658_17 () (_ BitVec 64))
(declare-fun temp6658_18 () (_ BitVec 64))
(declare-fun temp6658_19 () (_ BitVec 64))
(declare-fun temp6658_20 () (_ BitVec 64))
(declare-fun temp6658_21 () (_ BitVec 64))
(declare-fun temp6658_22 () (_ BitVec 64))
(declare-fun temp6658_23 () (_ BitVec 64))
(declare-fun var76131 () (_ BitVec 64))
(declare-fun temp6658_24 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp6658_25 () (_ BitVec 64))
(declare-fun temp6658_26 () (_ BitVec 64))
(declare-fun temp6658_27 () (_ BitVec 64))
(declare-fun temp6658_28 () (_ BitVec 64))
(declare-fun temp6658_29 () (_ BitVec 64))
(declare-fun temp6658_30 () (_ BitVec 64))
(declare-fun temp6658_31 () (_ BitVec 64))
(declare-fun temp6658_32 () (_ BitVec 64))
(declare-fun temp6658_33 () (_ BitVec 64))
(declare-fun temp6658_34 () (_ BitVec 64))
(declare-fun temp6658_35 () (_ BitVec 64))
(declare-fun temp6658_36 () (_ BitVec 64))
(declare-fun temp6658_37 () (_ BitVec 64))
(declare-fun var76165 () (_ BitVec 64))
(declare-fun temp6658_38 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var76268 () (_ BitVec 64))
(declare-fun temp6658_39 () (_ BitVec 64))
(declare-fun temp6658_40 () (_ BitVec 64))
(declare-fun var341046 () (_ BitVec 64))
(declare-fun temp6658_41 () (_ BitVec 64))
(declare-fun var341064 () (_ BitVec 64))
(declare-fun temp6658_42 () (_ BitVec 64))
(declare-fun temp6658_44 () (_ BitVec 64))
(declare-fun temp6658_43 () (_ BitVec 64))
(declare-fun temp6658_46 () (_ BitVec 64))
(declare-fun temp6658_45 () (_ BitVec 64))
(declare-fun temp6658_47 () (_ BitVec 64))
(declare-fun var472118 () (_ BitVec 64))
(declare-fun temp6658_48 () (_ BitVec 64))
(declare-fun var472136 () (_ BitVec 64))
(declare-fun temp6658_49 () (_ BitVec 64))
(declare-fun temp6658_51 () (_ BitVec 64))
(declare-fun temp6658_50 () (_ BitVec 64))
(declare-fun temp6658_53 () (_ BitVec 64))
(declare-fun temp6658_52 () (_ BitVec 64))
(declare-fun temp6658_54 () (_ BitVec 64))
(declare-fun var603190 () (_ BitVec 64))
(declare-fun temp6658_55 () (_ BitVec 64))
(declare-fun var603208 () (_ BitVec 64))
(declare-fun temp6658_56 () (_ BitVec 64))
(declare-fun temp6658_58 () (_ BitVec 64))
(declare-fun temp6658_57 () (_ BitVec 64))
(declare-fun temp6658_60 () (_ BitVec 64))
(declare-fun temp6658_59 () (_ BitVec 64))
(declare-fun temp6658_62 () (_ BitVec 64))
(declare-fun temp6658_61 () (_ BitVec 64))
(declare-fun temp6658_64 () (_ BitVec 64))
(declare-fun temp6658_63 () (_ BitVec 64))
(declare-fun temp6658_66 () (_ BitVec 64))
(declare-fun temp6658_65 () (_ BitVec 64))
(declare-fun temp6658_67 () (_ BitVec 64))
(declare-fun var795723 () (_ BitVec 64))
(declare-fun var795702 () (_ BitVec 64))
(declare-fun var730134 () (_ BitVec 64))
(declare-fun temp6658_68 () (_ BitVec 64))
(declare-fun temp6658_70 () (_ BitVec 64))
(declare-fun temp6658_69 () (_ BitVec 64))
(declare-fun temp6658_72 () (_ BitVec 64))
(declare-fun temp6658_71 () (_ BitVec 64))
(declare-fun temp6658_74 () (_ BitVec 64))
(declare-fun temp6658_73 () (_ BitVec 64))
(declare-fun temp6658_75 () (_ BitVec 64))
(declare-fun var992306 () (_ BitVec 64))
(declare-fun temp6658_76 () (_ BitVec 64))
(declare-fun var992307 () (_ BitVec 64))
(declare-fun var992308 () (_ BitVec 64))
(declare-fun var992304 () (_ BitVec 64))
(declare-fun var664540 () (_ BitVec 64))
(declare-fun temp6658_77 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp6658_78 () (_ BitVec 64))
(declare-fun var1057843 () (_ BitVec 64))
(declare-fun var1057844 () (_ BitVec 64))
(declare-fun var1057840 () (_ BitVec 64))
(declare-fun var664547 () (_ BitVec 64))
(declare-fun temp6658_79 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp6658_80 () (_ BitVec 64))
(declare-fun var1123379 () (_ BitVec 64))
(declare-fun var1123380 () (_ BitVec 64))
(declare-fun var1123376 () (_ BitVec 64))
(declare-fun var664552 () (_ BitVec 64))
(declare-fun var76450 () (_ BitVec 64))
(declare-fun temp6658_81 () (_ BitVec 64))
(declare-fun temp6658_82 () (_ BitVec 64))
(declare-fun var76511 () (_ BitVec 64))
(declare-fun var76512 () (_ BitVec 64))
(declare-fun temp6658_84 () (_ BitVec 64))
(declare-fun temp6658_83 () (_ BitVec 64))
(declare-fun temp6658_86 () (_ BitVec 64))
(declare-fun temp6658_85 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp6658_1 #x0000000000000001))
(assert (= var139826
   (ite (= ARGNAME_filter_sizes_NAMEEND_DIM temp6658_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var139820 var139826))
(assert (= var75949 var139820))
(assert (= temp6658_2 #x0000000000000001))
(assert (= var75949 temp6658_2))
(assert (= temp6658_3 #x0000000000000000))
(assert (= var76022 temp6658_3))
(assert (= var76026 var76022))
(assert (= temp6658_4 #x0000000000000000))
(assert (= var76027 (ite (= var76026 temp6658_4) #x0000000000000001 #x0000000000000000)))
(assert (= temp6658_5 #x0000000000000001))
(assert (= var76027 temp6658_5))
(assert (= temp6658_6 #x0000000000000005))
(assert (= var76042
   (ite (= ARGNAME_input_NAMEEND_DIM temp6658_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6658_7 #x0000000000000001))
(assert (= var76042 temp6658_7))
(assert (= temp6658_8 #x0000000000000005))
(assert (= var76103
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp6658_8)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6658_9 #x0000000000000001))
(assert (= var76103 temp6658_9))
(assert (= temp6658_10 #x0000000000000000))
(assert (= temp6658_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp6658_10)))
(assert (= temp6658_12 #x0000000000000001))
(assert (= temp6658_13 (select ARGNAME_input_NAMEEND_DIMSIZE temp6658_12)))
(assert (= temp6658_14 #x0000000000000002))
(assert (= temp6658_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp6658_14)))
(assert (= temp6658_16 #x0000000000000003))
(assert (= temp6658_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp6658_16)))
(assert (= temp6658_18 #x0000000000000004))
(assert (= temp6658_19 (select ARGNAME_input_NAMEEND_DIMSIZE temp6658_18)))
(assert (= temp6658_20 #x0000000000000005))
(assert (= temp6658_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp6658_20)))
(assert (= temp6658_22 #x0000000000000004))
(assert (= temp6658_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp6658_22)))
(assert (= var76131 temp6658_23))
(assert (= temp6658_24 #x0000000000000000))
(assert (= temp6658_25 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp6658_24)))
(assert (= temp6658_26 #x0000000000000001))
(assert (= temp6658_27 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp6658_26)))
(assert (= temp6658_28 #x0000000000000002))
(assert (= temp6658_29 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp6658_28)))
(assert (= temp6658_30 #x0000000000000003))
(assert (= temp6658_31 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp6658_30)))
(assert (= temp6658_32 #x0000000000000004))
(assert (= temp6658_33 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp6658_32)))
(assert (= temp6658_34 #x0000000000000005))
(assert (= temp6658_35 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp6658_34)))
(assert (= temp6658_36 #x0000000000000004))
(assert (= temp6658_37 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp6658_36)))
(assert (= var76165 temp6658_37))
(assert (= temp6658_38 #x0000000000000000))
(assert (= var76268
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp6658_38)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6658_39 #x0000000000000000))
(assert (= var76268 temp6658_39))
(assert (= temp6658_40 #x0000000000000001))
(assert (= var341046 temp6658_40))
(assert (= temp6658_41 #x0000000000000001))
(assert (= var341064
   (ite (bvslt var341046 temp6658_41) #x0000000000000001 #x0000000000000000)))
(assert (= temp6658_42 #x0000000000000000))
(assert (= var341064 temp6658_42))
(assert (= temp6658_44 #x0000000000000000))
(assert (= temp6658_43 temp6658_44))
(assert (= temp6658_46 #x0000000000000000))
(assert (= temp6658_45 temp6658_46))
(assert (= temp6658_47 #x0000000000000001))
(assert (= var472118 temp6658_47))
(assert (= temp6658_48 #x0000000000000001))
(assert (= var472136
   (ite (bvslt var472118 temp6658_48) #x0000000000000001 #x0000000000000000)))
(assert (= temp6658_49 #x0000000000000000))
(assert (= var472136 temp6658_49))
(assert (= temp6658_51 #x0000000000000000))
(assert (= temp6658_50 temp6658_51))
(assert (= temp6658_53 #x0000000000000000))
(assert (= temp6658_52 temp6658_53))
(assert (= temp6658_54 #x0000000000000001))
(assert (= var603190 temp6658_54))
(assert (= temp6658_55 #x0000000000000001))
(assert (= var603208
   (ite (bvslt var603190 temp6658_55) #x0000000000000001 #x0000000000000000)))
(assert (= temp6658_56 #x0000000000000000))
(assert (= var603208 temp6658_56))
(assert (= temp6658_58 #x0000000000000000))
(assert (= temp6658_57 temp6658_58))
(assert (= temp6658_60 #x0000000000000000))
(assert (= temp6658_59 temp6658_60))
(assert (= temp6658_62 #x00000000000000ff))
(assert (= temp6658_61 temp6658_62))
(assert (= temp6658_64 #x00000000000000ff))
(assert (= temp6658_63 temp6658_64))
(assert (= temp6658_66 #x00000000000000ff))
(assert (= temp6658_65 temp6658_66))
(assert (= temp6658_67 #x0000000000000000))
(assert (= var795723 temp6658_67))
(assert (= var795702 var795723))
(assert (= var730134 var795702))
(assert (= temp6658_68 #x0000000000000000))
(assert (= var730134 temp6658_68))
(assert (= temp6658_70 #x0000000000000000))
(assert (= temp6658_69 temp6658_70))
(assert (= temp6658_72 #x0000000000000000))
(assert (= temp6658_71 temp6658_72))
(assert (= temp6658_74 #x0000000000000000))
(assert (= temp6658_73 temp6658_74))
(assert (= temp6658_75 #x0000000000008000))
(assert (= var992306 temp6658_75))
(assert (= temp6658_76 #x0000000000000001))
(assert (= var992307
   (ite (bvslt temp6658_73 temp6658_76) #x0000000000000001 #x0000000000000000)))
(assert (= var992308 (ite (= var992307 #x0000000000000001) var992306 temp6658_73)))
(assert (= var992304 var992308))
(assert (= var664540 var992304))
(assert (= temp6658_77 #x0000000000040000))
(assert (= var1057842 temp6658_77))
(assert (= temp6658_78 #x0000000000000001))
(assert (= var1057843
   (ite (bvslt temp6658_71 temp6658_78) #x0000000000000001 #x0000000000000000)))
(assert (= var1057844 (ite (= var1057843 #x0000000000000001) var1057842 temp6658_71)))
(assert (= var1057840 var1057844))
(assert (= var664547 var1057840))
(assert (= temp6658_79 #x0000000000200000))
(assert (= var1123378 temp6658_79))
(assert (= temp6658_80 #x0000000000000001))
(assert (= var1123379
   (ite (bvslt temp6658_69 temp6658_80) #x0000000000000001 #x0000000000000000)))
(assert (= var1123380 (ite (= var1123379 #x0000000000000001) var1123378 temp6658_69)))
(assert (= var1123376 var1123380))
(assert (= var664552 var1123376))
(assert (= var76450 var664552))
(assert (= temp6658_81 #x0000000000000003))
(assert (= temp6658_82 #xffffffffffffffff))
(assert (= var76512 (bvadd var76511 temp6658_82)))
(assert (= temp6658_84 #x0000000000000000))
(assert (= temp6658_83 temp6658_84))
(assert (= temp6658_86 #x0000000000000000))
(assert (= temp6658_85 temp6658_86))
(model-add temp6658_1 () (_ BitVec 64) #x0000000000000001)
(model-add var139826 () (_ BitVec 64) #x0000000000000001)
(model-add var139820 () (_ BitVec 64) #x0000000000000001)
(model-add temp6658_2 () (_ BitVec 64) #x0000000000000001)
(model-add var75949 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_sizes_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))



