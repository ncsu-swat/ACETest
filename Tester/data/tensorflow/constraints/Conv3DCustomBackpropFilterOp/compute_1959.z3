(declare-fun temp3000_1 () (_ BitVec 64))
(declare-fun temp3000_2 () (_ BitVec 64))
(declare-fun var76042 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp3000_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76103 () (_ BitVec 64))
(declare-fun temp3000_4 () (_ BitVec 64))
(declare-fun temp3000_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp3000_6 () (_ BitVec 64))
(declare-fun temp3000_7 () (_ BitVec 64))
(declare-fun temp3000_8 () (_ BitVec 64))
(declare-fun temp3000_9 () (_ BitVec 64))
(declare-fun temp3000_10 () (_ BitVec 64))
(declare-fun temp3000_11 () (_ BitVec 64))
(declare-fun temp3000_12 () (_ BitVec 64))
(declare-fun temp3000_13 () (_ BitVec 64))
(declare-fun temp3000_14 () (_ BitVec 64))
(declare-fun temp3000_15 () (_ BitVec 64))
(declare-fun temp3000_16 () (_ BitVec 64))
(declare-fun temp3000_17 () (_ BitVec 64))
(declare-fun temp3000_18 () (_ BitVec 64))
(declare-fun var76131 () (_ BitVec 64))
(declare-fun temp3000_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp3000_20 () (_ BitVec 64))
(declare-fun temp3000_21 () (_ BitVec 64))
(declare-fun temp3000_22 () (_ BitVec 64))
(declare-fun temp3000_23 () (_ BitVec 64))
(declare-fun temp3000_24 () (_ BitVec 64))
(declare-fun temp3000_25 () (_ BitVec 64))
(declare-fun temp3000_26 () (_ BitVec 64))
(declare-fun temp3000_27 () (_ BitVec 64))
(declare-fun temp3000_28 () (_ BitVec 64))
(declare-fun temp3000_29 () (_ BitVec 64))
(declare-fun temp3000_30 () (_ BitVec 64))
(declare-fun temp3000_31 () (_ BitVec 64))
(declare-fun temp3000_32 () (_ BitVec 64))
(declare-fun var76165 () (_ BitVec 64))
(declare-fun temp3000_33 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var76268 () (_ BitVec 64))
(declare-fun temp3000_34 () (_ BitVec 64))
(declare-fun temp3000_35 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp3000_36 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp3000_37 () (_ BitVec 64))
(declare-fun temp3000_38 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp3000_39 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp3000_40 () (_ BitVec 64))
(declare-fun temp3000_42 () (_ BitVec 64))
(declare-fun temp3000_41 () (_ BitVec 64))
(declare-fun temp3000_44 () (_ BitVec 64))
(declare-fun temp3000_43 () (_ BitVec 64))
(declare-fun temp3000_45 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp3000_46 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp3000_47 () (_ BitVec 64))
(declare-fun temp3000_49 () (_ BitVec 64))
(declare-fun temp3000_48 () (_ BitVec 64))
(declare-fun temp3000_51 () (_ BitVec 64))
(declare-fun temp3000_50 () (_ BitVec 64))
(declare-fun temp3000_53 () (_ BitVec 64))
(declare-fun temp3000_52 () (_ BitVec 64))
(declare-fun temp3000_55 () (_ BitVec 64))
(declare-fun temp3000_54 () (_ BitVec 64))
(declare-fun temp3000_56 () (_ BitVec 64))
(declare-fun var795723 () (_ BitVec 64))
(declare-fun var795702 () (_ BitVec 64))
(declare-fun var730134 () (_ BitVec 64))
(declare-fun temp3000_57 () (_ BitVec 64))
(declare-fun temp3000_58 () (_ BitVec 64))
(declare-fun var861259 () (_ BitVec 64))
(declare-fun var861238 () (_ BitVec 64))
(declare-fun var730144 () (_ BitVec 64))
(declare-fun temp3000_59 () (_ BitVec 64))
(declare-fun temp3000_60 () (_ BitVec 64))
(declare-fun var926795 () (_ BitVec 64))
(declare-fun var926774 () (_ BitVec 64))
(declare-fun var730147 () (_ BitVec 64))
(declare-fun temp3000_61 () (_ BitVec 64))
(declare-fun temp3000_63 () (_ BitVec 64))
(declare-fun temp3000_62 () (_ BitVec 64))
(declare-fun temp3000_65 () (_ BitVec 64))
(declare-fun temp3000_64 () (_ BitVec 64))
(declare-fun temp3000_67 () (_ BitVec 64))
(declare-fun temp3000_66 () (_ BitVec 64))
(declare-fun temp3000_68 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp3000_69 () (_ BitVec 64))
(declare-fun var1057843 () (_ BitVec 64))
(declare-fun var1057844 () (_ BitVec 64))
(declare-fun var1057840 () (_ BitVec 64))
(declare-fun var664540 () (_ BitVec 64))
(declare-fun temp3000_70 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp3000_71 () (_ BitVec 64))
(declare-fun var1123379 () (_ BitVec 64))
(declare-fun var1123380 () (_ BitVec 64))
(declare-fun var1123376 () (_ BitVec 64))
(declare-fun var664547 () (_ BitVec 64))
(declare-fun temp3000_72 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp3000_73 () (_ BitVec 64))
(declare-fun var1188915 () (_ BitVec 64))
(declare-fun var1188916 () (_ BitVec 64))
(declare-fun var1188912 () (_ BitVec 64))
(declare-fun var664552 () (_ BitVec 64))
(declare-fun var76450 () (_ BitVec 64))
(declare-fun temp3000_74 () (_ BitVec 64))
(declare-fun temp3000_75 () (_ BitVec 64))
(declare-fun var76511 () (_ BitVec 64))
(declare-fun var76512 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp3000_1 #x0000000000000005))
(assert (= var76042
   (ite (= ARGNAME_input_NAMEEND_DIM temp3000_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3000_2 #x0000000000000001))
(assert (= var76042 temp3000_2))
(assert (= temp3000_3 #x0000000000000005))
(assert (= var76103
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp3000_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3000_4 #x0000000000000001))
(assert (= var76103 temp3000_4))
(assert (= temp3000_5 #x0000000000000000))
(assert (= temp3000_6 (select ARGNAME_input_NAMEEND_DIMSIZE temp3000_5)))
(assert (= temp3000_7 #x0000000000000001))
(assert (= temp3000_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp3000_7)))
(assert (= temp3000_9 #x0000000000000002))
(assert (= temp3000_10 (select ARGNAME_input_NAMEEND_DIMSIZE temp3000_9)))
(assert (= temp3000_11 #x0000000000000003))
(assert (= temp3000_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp3000_11)))
(assert (= temp3000_13 #x0000000000000004))
(assert (= temp3000_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp3000_13)))
(assert (= temp3000_15 #x0000000000000005))
(assert (= temp3000_16 (select ARGNAME_input_NAMEEND_DIMSIZE temp3000_15)))
(assert (= temp3000_17 #x0000000000000004))
(assert (= temp3000_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp3000_17)))
(assert (= var76131 temp3000_18))
(assert (= temp3000_19 #x0000000000000000))
(assert (= temp3000_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp3000_19)))
(assert (= temp3000_21 #x0000000000000001))
(assert (= temp3000_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp3000_21)))
(assert (= temp3000_23 #x0000000000000002))
(assert (= temp3000_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp3000_23)))
(assert (= temp3000_25 #x0000000000000003))
(assert (= temp3000_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp3000_25)))
(assert (= temp3000_27 #x0000000000000004))
(assert (= temp3000_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp3000_27)))
(assert (= temp3000_29 #x0000000000000005))
(assert (= temp3000_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp3000_29)))
(assert (= temp3000_31 #x0000000000000004))
(assert (= temp3000_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp3000_31)))
(assert (= var76165 temp3000_32))
(assert (= temp3000_33 #x0000000000000000))
(assert (= var76268
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp3000_33)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp3000_34 #x0000000000000000))
(assert (= var76268 temp3000_34))
(assert (= temp3000_35 #x0000000000000001))
(assert (= var275510 temp3000_35))
(assert (= temp3000_36 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp3000_36) #x0000000000000001 #x0000000000000000)))
(assert (= temp3000_37 #x0000000000000000))
(assert (= var275528 temp3000_37))
(assert (= temp3000_38 #x0000000000000001))
(assert (= var406582 temp3000_38))
(assert (= temp3000_39 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp3000_39) #x0000000000000001 #x0000000000000000)))
(assert (= temp3000_40 #x0000000000000000))
(assert (= var406600 temp3000_40))
(assert (= temp3000_42 #x0000000000000000))
(assert (= temp3000_41 temp3000_42))
(assert (= temp3000_44 #x0000000000000000))
(assert (= temp3000_43 temp3000_44))
(assert (= temp3000_45 #x0000000000000001))
(assert (= var537654 temp3000_45))
(assert (= temp3000_46 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp3000_46) #x0000000000000001 #x0000000000000000)))
(assert (= temp3000_47 #x0000000000000000))
(assert (= var537672 temp3000_47))
(assert (= temp3000_49 #x0000000000000000))
(assert (= temp3000_48 temp3000_49))
(assert (= temp3000_51 #x00000000000000ff))
(assert (= temp3000_50 temp3000_51))
(assert (= temp3000_53 #x00000000000000ff))
(assert (= temp3000_52 temp3000_53))
(assert (= temp3000_55 #x00000000000000ff))
(assert (= temp3000_54 temp3000_55))
(assert (= temp3000_56 #x0000000000000000))
(assert (= var795723 temp3000_56))
(assert (= var795702 var795723))
(assert (= var730134 var795702))
(assert (= temp3000_57 #x0000000000000000))
(assert (= var730134 temp3000_57))
(assert (= temp3000_58 #x0000000000000000))
(assert (= var861259 temp3000_58))
(assert (= var861238 var861259))
(assert (= var730144 var861238))
(assert (= temp3000_59 #x0000000000000000))
(assert (= var730144 temp3000_59))
(assert (= temp3000_60 #x0000000000000000))
(assert (= var926795 temp3000_60))
(assert (= var926774 var926795))
(assert (= var730147 var926774))
(assert (= temp3000_61 #x0000000000000000))
(assert (= var730147 temp3000_61))
(assert (= temp3000_63 #x0000000000000000))
(assert (= temp3000_62 temp3000_63))
(assert (= temp3000_65 #x0000000000000000))
(assert (= temp3000_64 temp3000_65))
(assert (= temp3000_67 #x0000000000000000))
(assert (= temp3000_66 temp3000_67))
(assert (= temp3000_68 #x0000000000008000))
(assert (= var1057842 temp3000_68))
(assert (= temp3000_69 #x0000000000000001))
(assert (= var1057843
   (ite (bvslt temp3000_66 temp3000_69) #x0000000000000001 #x0000000000000000)))
(assert (= var1057844 (ite (= var1057843 #x0000000000000001) var1057842 temp3000_66)))
(assert (= var1057840 var1057844))
(assert (= var664540 var1057840))
(assert (= temp3000_70 #x0000000000040000))
(assert (= var1123378 temp3000_70))
(assert (= temp3000_71 #x0000000000000001))
(assert (= var1123379
   (ite (bvslt temp3000_64 temp3000_71) #x0000000000000001 #x0000000000000000)))
(assert (= var1123380 (ite (= var1123379 #x0000000000000001) var1123378 temp3000_64)))
(assert (= var1123376 var1123380))
(assert (= var664547 var1123376))
(assert (= temp3000_72 #x0000000000200000))
(assert (= var1188914 temp3000_72))
(assert (= temp3000_73 #x0000000000000001))
(assert (= var1188915
   (ite (bvslt temp3000_62 temp3000_73) #x0000000000000001 #x0000000000000000)))
(assert (= var1188916 (ite (= var1188915 #x0000000000000001) var1188914 temp3000_62)))
(assert (= var1188912 var1188916))
(assert (= var664552 var1188912))
(assert (= var76450 var664552))
(assert (= temp3000_74 #x0000000000000003))
(assert (= temp3000_75 #xffffffffffffffff))
(assert (= var76512 (bvadd var76511 temp3000_75)))
(model-add temp3000_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp3000_2 () (_ BitVec 64) #x0000000000000001)
(model-add var76042 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))



