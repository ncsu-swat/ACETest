(declare-fun temp1650_1 () (_ BitVec 64))
(declare-fun temp1650_2 () (_ BitVec 64))
(declare-fun var76042 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp1650_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76103 () (_ BitVec 64))
(declare-fun temp1650_4 () (_ BitVec 64))
(declare-fun temp1650_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1650_6 () (_ BitVec 64))
(declare-fun temp1650_7 () (_ BitVec 64))
(declare-fun temp1650_8 () (_ BitVec 64))
(declare-fun temp1650_9 () (_ BitVec 64))
(declare-fun temp1650_10 () (_ BitVec 64))
(declare-fun temp1650_11 () (_ BitVec 64))
(declare-fun temp1650_12 () (_ BitVec 64))
(declare-fun temp1650_13 () (_ BitVec 64))
(declare-fun temp1650_14 () (_ BitVec 64))
(declare-fun temp1650_15 () (_ BitVec 64))
(declare-fun temp1650_16 () (_ BitVec 64))
(declare-fun temp1650_17 () (_ BitVec 64))
(declare-fun temp1650_18 () (_ BitVec 64))
(declare-fun var76131 () (_ BitVec 64))
(declare-fun temp1650_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1650_20 () (_ BitVec 64))
(declare-fun temp1650_21 () (_ BitVec 64))
(declare-fun temp1650_22 () (_ BitVec 64))
(declare-fun temp1650_23 () (_ BitVec 64))
(declare-fun temp1650_24 () (_ BitVec 64))
(declare-fun temp1650_25 () (_ BitVec 64))
(declare-fun temp1650_26 () (_ BitVec 64))
(declare-fun temp1650_27 () (_ BitVec 64))
(declare-fun temp1650_28 () (_ BitVec 64))
(declare-fun temp1650_29 () (_ BitVec 64))
(declare-fun temp1650_30 () (_ BitVec 64))
(declare-fun temp1650_31 () (_ BitVec 64))
(declare-fun temp1650_32 () (_ BitVec 64))
(declare-fun var76165 () (_ BitVec 64))
(declare-fun temp1650_33 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var76268 () (_ BitVec 64))
(declare-fun temp1650_34 () (_ BitVec 64))
(declare-fun temp1650_35 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp1650_36 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp1650_37 () (_ BitVec 64))
(declare-fun temp1650_39 () (_ BitVec 64))
(declare-fun temp1650_38 () (_ BitVec 64))
(declare-fun temp1650_41 () (_ BitVec 64))
(declare-fun temp1650_40 () (_ BitVec 64))
(declare-fun temp1650_42 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp1650_43 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp1650_44 () (_ BitVec 64))
(declare-fun temp1650_46 () (_ BitVec 64))
(declare-fun temp1650_45 () (_ BitVec 64))
(declare-fun temp1650_48 () (_ BitVec 64))
(declare-fun temp1650_47 () (_ BitVec 64))
(declare-fun temp1650_49 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp1650_50 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp1650_51 () (_ BitVec 64))
(declare-fun temp1650_53 () (_ BitVec 64))
(declare-fun temp1650_52 () (_ BitVec 64))
(declare-fun temp1650_55 () (_ BitVec 64))
(declare-fun temp1650_54 () (_ BitVec 64))
(declare-fun temp1650_57 () (_ BitVec 64))
(declare-fun temp1650_56 () (_ BitVec 64))
(declare-fun temp1650_59 () (_ BitVec 64))
(declare-fun temp1650_58 () (_ BitVec 64))
(declare-fun temp1650_61 () (_ BitVec 64))
(declare-fun temp1650_60 () (_ BitVec 64))
(declare-fun temp1650_62 () (_ BitVec 64))
(declare-fun var730187 () (_ BitVec 64))
(declare-fun var730166 () (_ BitVec 64))
(declare-fun var664598 () (_ BitVec 64))
(declare-fun temp1650_63 () (_ BitVec 64))
(declare-fun temp1650_64 () (_ BitVec 64))
(declare-fun var795723 () (_ BitVec 64))
(declare-fun var795702 () (_ BitVec 64))
(declare-fun var664608 () (_ BitVec 64))
(declare-fun temp1650_65 () (_ BitVec 64))
(declare-fun temp1650_66 () (_ BitVec 64))
(declare-fun var861259 () (_ BitVec 64))
(declare-fun var861238 () (_ BitVec 64))
(declare-fun var664611 () (_ BitVec 64))
(declare-fun temp1650_67 () (_ BitVec 64))
(declare-fun temp1650_68 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp1650_69 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp1650_70 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp1650_1 #x0000000000000005))
(assert (= var76042
   (ite (= ARGNAME_input_NAMEEND_DIM temp1650_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1650_2 #x0000000000000001))
(assert (= var76042 temp1650_2))
(assert (= temp1650_3 #x0000000000000005))
(assert (= var76103
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp1650_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1650_4 #x0000000000000001))
(assert (= var76103 temp1650_4))
(assert (= temp1650_5 #x0000000000000000))
(assert (= temp1650_6 (select ARGNAME_input_NAMEEND_DIMSIZE temp1650_5)))
(assert (= temp1650_7 #x0000000000000001))
(assert (= temp1650_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp1650_7)))
(assert (= temp1650_9 #x0000000000000002))
(assert (= temp1650_10 (select ARGNAME_input_NAMEEND_DIMSIZE temp1650_9)))
(assert (= temp1650_11 #x0000000000000003))
(assert (= temp1650_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp1650_11)))
(assert (= temp1650_13 #x0000000000000004))
(assert (= temp1650_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp1650_13)))
(assert (= temp1650_15 #x0000000000000005))
(assert (= temp1650_16 (select ARGNAME_input_NAMEEND_DIMSIZE temp1650_15)))
(assert (= temp1650_17 #x0000000000000004))
(assert (= temp1650_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp1650_17)))
(assert (= var76131 temp1650_18))
(assert (= temp1650_19 #x0000000000000000))
(assert (= temp1650_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp1650_19)))
(assert (= temp1650_21 #x0000000000000001))
(assert (= temp1650_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp1650_21)))
(assert (= temp1650_23 #x0000000000000002))
(assert (= temp1650_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp1650_23)))
(assert (= temp1650_25 #x0000000000000003))
(assert (= temp1650_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp1650_25)))
(assert (= temp1650_27 #x0000000000000004))
(assert (= temp1650_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp1650_27)))
(assert (= temp1650_29 #x0000000000000005))
(assert (= temp1650_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp1650_29)))
(assert (= temp1650_31 #x0000000000000004))
(assert (= temp1650_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp1650_31)))
(assert (= var76165 temp1650_32))
(assert (= temp1650_33 #x0000000000000000))
(assert (= var76268
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp1650_33)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1650_34 #x0000000000000000))
(assert (= var76268 temp1650_34))
(assert (= temp1650_35 #x0000000000000001))
(assert (= var275510 temp1650_35))
(assert (= temp1650_36 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp1650_36) #x0000000000000001 #x0000000000000000)))
(assert (= temp1650_37 #x0000000000000000))
(assert (= var275528 temp1650_37))
(assert (= temp1650_39 #x0000000000000000))
(assert (= temp1650_38 temp1650_39))
(assert (= temp1650_41 #x0000000000000000))
(assert (= temp1650_40 temp1650_41))
(assert (= temp1650_42 #x0000000000000001))
(assert (= var406582 temp1650_42))
(assert (= temp1650_43 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp1650_43) #x0000000000000001 #x0000000000000000)))
(assert (= temp1650_44 #x0000000000000000))
(assert (= var406600 temp1650_44))
(assert (= temp1650_46 #x0000000000000000))
(assert (= temp1650_45 temp1650_46))
(assert (= temp1650_48 #x0000000000000000))
(assert (= temp1650_47 temp1650_48))
(assert (= temp1650_49 #x0000000000000001))
(assert (= var537654 temp1650_49))
(assert (= temp1650_50 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp1650_50) #x0000000000000001 #x0000000000000000)))
(assert (= temp1650_51 #x0000000000000000))
(assert (= var537672 temp1650_51))
(assert (= temp1650_53 #x0000000000000000))
(assert (= temp1650_52 temp1650_53))
(assert (= temp1650_55 #x0000000000000000))
(assert (= temp1650_54 temp1650_55))
(assert (= temp1650_57 #x00000000000000ff))
(assert (= temp1650_56 temp1650_57))
(assert (= temp1650_59 #x00000000000000ff))
(assert (= temp1650_58 temp1650_59))
(assert (= temp1650_61 #x00000000000000ff))
(assert (= temp1650_60 temp1650_61))
(assert (= temp1650_62 #x0000000000000000))
(assert (= var730187 temp1650_62))
(assert (= var730166 var730187))
(assert (= var664598 var730166))
(assert (= temp1650_63 #x0000000000000000))
(assert (= var664598 temp1650_63))
(assert (= temp1650_64 #x0000000000000000))
(assert (= var795723 temp1650_64))
(assert (= var795702 var795723))
(assert (= var664608 var795702))
(assert (= temp1650_65 #x0000000000000000))
(assert (= var664608 temp1650_65))
(assert (= temp1650_66 #x0000000000000000))
(assert (= var861259 temp1650_66))
(assert (= var861238 var861259))
(assert (= var664611 var861238))
(assert (= temp1650_67 #x0000000000000000))
(assert (= var664611 temp1650_67))
(assert (= temp1650_68 #x0000000000008000))
(assert (= var1057842 temp1650_68))
(assert (= temp1650_69 #x0000000000040000))
(assert (= var1123378 temp1650_69))
(assert (= temp1650_70 #x0000000000200000))
(assert (= var1188914 temp1650_70))
(model-add temp1650_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp1650_2 () (_ BitVec 64) #x0000000000000001)
(model-add var76042 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


