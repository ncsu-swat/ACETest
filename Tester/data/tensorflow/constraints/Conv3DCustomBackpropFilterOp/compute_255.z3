(declare-fun temp388_1 () (_ BitVec 64))
(declare-fun temp388_2 () (_ BitVec 64))
(declare-fun var76042 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp388_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76103 () (_ BitVec 64))
(declare-fun temp388_4 () (_ BitVec 64))
(declare-fun temp388_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp388_6 () (_ BitVec 64))
(declare-fun temp388_7 () (_ BitVec 64))
(declare-fun temp388_8 () (_ BitVec 64))
(declare-fun temp388_9 () (_ BitVec 64))
(declare-fun temp388_10 () (_ BitVec 64))
(declare-fun temp388_11 () (_ BitVec 64))
(declare-fun temp388_12 () (_ BitVec 64))
(declare-fun temp388_13 () (_ BitVec 64))
(declare-fun temp388_14 () (_ BitVec 64))
(declare-fun temp388_15 () (_ BitVec 64))
(declare-fun temp388_16 () (_ BitVec 64))
(declare-fun temp388_17 () (_ BitVec 64))
(declare-fun temp388_18 () (_ BitVec 64))
(declare-fun var76131 () (_ BitVec 64))
(declare-fun temp388_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp388_20 () (_ BitVec 64))
(declare-fun temp388_21 () (_ BitVec 64))
(declare-fun temp388_22 () (_ BitVec 64))
(declare-fun temp388_23 () (_ BitVec 64))
(declare-fun temp388_24 () (_ BitVec 64))
(declare-fun temp388_25 () (_ BitVec 64))
(declare-fun temp388_26 () (_ BitVec 64))
(declare-fun temp388_27 () (_ BitVec 64))
(declare-fun temp388_28 () (_ BitVec 64))
(declare-fun temp388_29 () (_ BitVec 64))
(declare-fun temp388_30 () (_ BitVec 64))
(declare-fun temp388_31 () (_ BitVec 64))
(declare-fun temp388_32 () (_ BitVec 64))
(declare-fun var76165 () (_ BitVec 64))
(declare-fun temp388_33 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var76268 () (_ BitVec 64))
(declare-fun temp388_34 () (_ BitVec 64))
(declare-fun temp388_35 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp388_36 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp388_37 () (_ BitVec 64))
(declare-fun temp388_38 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp388_39 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp388_40 () (_ BitVec 64))
(declare-fun temp388_42 () (_ BitVec 64))
(declare-fun temp388_41 () (_ BitVec 64))
(declare-fun temp388_44 () (_ BitVec 64))
(declare-fun temp388_43 () (_ BitVec 64))
(declare-fun temp388_45 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp388_46 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp388_47 () (_ BitVec 64))
(declare-fun temp388_49 () (_ BitVec 64))
(declare-fun temp388_48 () (_ BitVec 64))
(declare-fun temp388_51 () (_ BitVec 64))
(declare-fun temp388_50 () (_ BitVec 64))
(declare-fun temp388_53 () (_ BitVec 64))
(declare-fun temp388_52 () (_ BitVec 64))
(declare-fun temp388_54 () (_ BitVec 64))
(declare-fun var730187 () (_ BitVec 64))
(declare-fun var730166 () (_ BitVec 64))
(declare-fun var664598 () (_ BitVec 64))
(declare-fun temp388_55 () (_ BitVec 64))
(declare-fun temp388_56 () (_ BitVec 64))
(declare-fun var795723 () (_ BitVec 64))
(declare-fun var795702 () (_ BitVec 64))
(declare-fun var664608 () (_ BitVec 64))
(declare-fun temp388_57 () (_ BitVec 64))
(declare-fun temp388_58 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp388_59 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp388_60 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp388_1 #x0000000000000005))
(assert (= var76042
   (ite (= ARGNAME_input_NAMEEND_DIM temp388_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp388_2 #x0000000000000001))
(assert (= var76042 temp388_2))
(assert (= temp388_3 #x0000000000000005))
(assert (= var76103
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp388_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp388_4 #x0000000000000001))
(assert (= var76103 temp388_4))
(assert (= temp388_5 #x0000000000000000))
(assert (= temp388_6 (select ARGNAME_input_NAMEEND_DIMSIZE temp388_5)))
(assert (= temp388_7 #x0000000000000001))
(assert (= temp388_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp388_7)))
(assert (= temp388_9 #x0000000000000002))
(assert (= temp388_10 (select ARGNAME_input_NAMEEND_DIMSIZE temp388_9)))
(assert (= temp388_11 #x0000000000000003))
(assert (= temp388_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp388_11)))
(assert (= temp388_13 #x0000000000000004))
(assert (= temp388_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp388_13)))
(assert (= temp388_15 #x0000000000000005))
(assert (= temp388_16 (select ARGNAME_input_NAMEEND_DIMSIZE temp388_15)))
(assert (= temp388_17 #x0000000000000004))
(assert (= temp388_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp388_17)))
(assert (= var76131 temp388_18))
(assert (= temp388_19 #x0000000000000000))
(assert (= temp388_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp388_19)))
(assert (= temp388_21 #x0000000000000001))
(assert (= temp388_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp388_21)))
(assert (= temp388_23 #x0000000000000002))
(assert (= temp388_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp388_23)))
(assert (= temp388_25 #x0000000000000003))
(assert (= temp388_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp388_25)))
(assert (= temp388_27 #x0000000000000004))
(assert (= temp388_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp388_27)))
(assert (= temp388_29 #x0000000000000005))
(assert (= temp388_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp388_29)))
(assert (= temp388_31 #x0000000000000004))
(assert (= temp388_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp388_31)))
(assert (= var76165 temp388_32))
(assert (= temp388_33 #x0000000000000000))
(assert (= var76268
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp388_33)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp388_34 #x0000000000000000))
(assert (= var76268 temp388_34))
(assert (= temp388_35 #x0000000000000001))
(assert (= var275510 temp388_35))
(assert (= temp388_36 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp388_36) #x0000000000000001 #x0000000000000000)))
(assert (= temp388_37 #x0000000000000000))
(assert (= var275528 temp388_37))
(assert (= temp388_38 #x0000000000000001))
(assert (= var406582 temp388_38))
(assert (= temp388_39 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp388_39) #x0000000000000001 #x0000000000000000)))
(assert (= temp388_40 #x0000000000000000))
(assert (= var406600 temp388_40))
(assert (= temp388_42 #x0000000000000000))
(assert (= temp388_41 temp388_42))
(assert (= temp388_44 #x0000000000000000))
(assert (= temp388_43 temp388_44))
(assert (= temp388_45 #x0000000000000001))
(assert (= var537654 temp388_45))
(assert (= temp388_46 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp388_46) #x0000000000000001 #x0000000000000000)))
(assert (= temp388_47 #x0000000000000000))
(assert (= var537672 temp388_47))
(assert (= temp388_49 #x00000000000000ff))
(assert (= temp388_48 temp388_49))
(assert (= temp388_51 #x00000000000000ff))
(assert (= temp388_50 temp388_51))
(assert (= temp388_53 #x00000000000000ff))
(assert (= temp388_52 temp388_53))
(assert (= temp388_54 #x0000000000000000))
(assert (= var730187 temp388_54))
(assert (= var730166 var730187))
(assert (= var664598 var730166))
(assert (= temp388_55 #x0000000000000000))
(assert (= var664598 temp388_55))
(assert (= temp388_56 #x0000000000000000))
(assert (= var795723 temp388_56))
(assert (= var795702 var795723))
(assert (= var664608 var795702))
(assert (= temp388_57 #x0000000000000000))
(assert (= var664608 temp388_57))
(assert (= temp388_58 #x0000000000008000))
(assert (= var1057842 temp388_58))
(assert (= temp388_59 #x0000000000040000))
(assert (= var1123378 temp388_59))
(assert (= temp388_60 #x0000000000200000))
(assert (= var1188914 temp388_60))
(model-add temp388_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp388_2 () (_ BitVec 64) #x0000000000000001)
(model-add var76042 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


