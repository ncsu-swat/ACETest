(declare-fun temp812_1 () (_ BitVec 64))
(declare-fun temp812_2 () (_ BitVec 64))
(declare-fun var76042 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp812_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76103 () (_ BitVec 64))
(declare-fun temp812_4 () (_ BitVec 64))
(declare-fun temp812_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp812_6 () (_ BitVec 64))
(declare-fun temp812_7 () (_ BitVec 64))
(declare-fun temp812_8 () (_ BitVec 64))
(declare-fun temp812_9 () (_ BitVec 64))
(declare-fun temp812_10 () (_ BitVec 64))
(declare-fun temp812_11 () (_ BitVec 64))
(declare-fun temp812_12 () (_ BitVec 64))
(declare-fun temp812_13 () (_ BitVec 64))
(declare-fun temp812_14 () (_ BitVec 64))
(declare-fun temp812_15 () (_ BitVec 64))
(declare-fun temp812_16 () (_ BitVec 64))
(declare-fun temp812_17 () (_ BitVec 64))
(declare-fun temp812_18 () (_ BitVec 64))
(declare-fun var76131 () (_ BitVec 64))
(declare-fun temp812_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp812_20 () (_ BitVec 64))
(declare-fun temp812_21 () (_ BitVec 64))
(declare-fun temp812_22 () (_ BitVec 64))
(declare-fun temp812_23 () (_ BitVec 64))
(declare-fun temp812_24 () (_ BitVec 64))
(declare-fun temp812_25 () (_ BitVec 64))
(declare-fun temp812_26 () (_ BitVec 64))
(declare-fun temp812_27 () (_ BitVec 64))
(declare-fun temp812_28 () (_ BitVec 64))
(declare-fun temp812_29 () (_ BitVec 64))
(declare-fun temp812_30 () (_ BitVec 64))
(declare-fun temp812_31 () (_ BitVec 64))
(declare-fun temp812_32 () (_ BitVec 64))
(declare-fun var76165 () (_ BitVec 64))
(declare-fun temp812_33 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var76268 () (_ BitVec 64))
(declare-fun temp812_34 () (_ BitVec 64))
(declare-fun temp812_35 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp812_36 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp812_37 () (_ BitVec 64))
(declare-fun temp812_38 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp812_39 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp812_40 () (_ BitVec 64))
(declare-fun temp812_41 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp812_42 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp812_43 () (_ BitVec 64))
(declare-fun temp812_45 () (_ BitVec 64))
(declare-fun temp812_44 () (_ BitVec 64))
(declare-fun temp812_47 () (_ BitVec 64))
(declare-fun temp812_46 () (_ BitVec 64))
(declare-fun temp812_49 () (_ BitVec 64))
(declare-fun temp812_48 () (_ BitVec 64))
(declare-fun temp812_50 () (_ BitVec 64))
(declare-fun var861259 () (_ BitVec 64))
(declare-fun var861238 () (_ BitVec 64))
(declare-fun var664611 () (_ BitVec 64))
(declare-fun temp812_51 () (_ BitVec 64))
(declare-fun temp812_52 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp812_53 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp812_54 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp812_1 #x0000000000000005))
(assert (= var76042
   (ite (= ARGNAME_input_NAMEEND_DIM temp812_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp812_2 #x0000000000000001))
(assert (= var76042 temp812_2))
(assert (= temp812_3 #x0000000000000005))
(assert (= var76103
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp812_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp812_4 #x0000000000000001))
(assert (= var76103 temp812_4))
(assert (= temp812_5 #x0000000000000000))
(assert (= temp812_6 (select ARGNAME_input_NAMEEND_DIMSIZE temp812_5)))
(assert (= temp812_7 #x0000000000000001))
(assert (= temp812_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp812_7)))
(assert (= temp812_9 #x0000000000000002))
(assert (= temp812_10 (select ARGNAME_input_NAMEEND_DIMSIZE temp812_9)))
(assert (= temp812_11 #x0000000000000003))
(assert (= temp812_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp812_11)))
(assert (= temp812_13 #x0000000000000004))
(assert (= temp812_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp812_13)))
(assert (= temp812_15 #x0000000000000005))
(assert (= temp812_16 (select ARGNAME_input_NAMEEND_DIMSIZE temp812_15)))
(assert (= temp812_17 #x0000000000000004))
(assert (= temp812_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp812_17)))
(assert (= var76131 temp812_18))
(assert (= temp812_19 #x0000000000000000))
(assert (= temp812_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp812_19)))
(assert (= temp812_21 #x0000000000000001))
(assert (= temp812_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp812_21)))
(assert (= temp812_23 #x0000000000000002))
(assert (= temp812_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp812_23)))
(assert (= temp812_25 #x0000000000000003))
(assert (= temp812_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp812_25)))
(assert (= temp812_27 #x0000000000000004))
(assert (= temp812_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp812_27)))
(assert (= temp812_29 #x0000000000000005))
(assert (= temp812_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp812_29)))
(assert (= temp812_31 #x0000000000000004))
(assert (= temp812_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp812_31)))
(assert (= var76165 temp812_32))
(assert (= temp812_33 #x0000000000000000))
(assert (= var76268
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp812_33)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp812_34 #x0000000000000000))
(assert (= var76268 temp812_34))
(assert (= temp812_35 #x0000000000000001))
(assert (= var275510 temp812_35))
(assert (= temp812_36 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp812_36) #x0000000000000001 #x0000000000000000)))
(assert (= temp812_37 #x0000000000000000))
(assert (= var275528 temp812_37))
(assert (= temp812_38 #x0000000000000001))
(assert (= var406582 temp812_38))
(assert (= temp812_39 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp812_39) #x0000000000000001 #x0000000000000000)))
(assert (= temp812_40 #x0000000000000000))
(assert (= var406600 temp812_40))
(assert (= temp812_41 #x0000000000000001))
(assert (= var537654 temp812_41))
(assert (= temp812_42 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp812_42) #x0000000000000001 #x0000000000000000)))
(assert (= temp812_43 #x0000000000000000))
(assert (= var537672 temp812_43))
(assert (= temp812_45 #x00000000000000ff))
(assert (= temp812_44 temp812_45))
(assert (= temp812_47 #x00000000000000ff))
(assert (= temp812_46 temp812_47))
(assert (= temp812_49 #x00000000000000ff))
(assert (= temp812_48 temp812_49))
(assert (= temp812_50 #x0000000000000000))
(assert (= var861259 temp812_50))
(assert (= var861238 var861259))
(assert (= var664611 var861238))
(assert (= temp812_51 #x0000000000000000))
(assert (= var664611 temp812_51))
(assert (= temp812_52 #x0000000000008000))
(assert (= var1057842 temp812_52))
(assert (= temp812_53 #x0000000000040000))
(assert (= var1123378 temp812_53))
(assert (= temp812_54 #x0000000000200000))
(assert (= var1188914 temp812_54))
(model-add temp812_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp812_2 () (_ BitVec 64) #x0000000000000001)
(model-add var76042 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


