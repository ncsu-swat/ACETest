(declare-fun temp5078_1 () (_ BitVec 64))
(declare-fun var139826 () (_ BitVec 64))
(declare-fun var139820 () (_ BitVec 64))
(declare-fun temp5078_2 () (_ BitVec 64))
(declare-fun var75949 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_sizes_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp5078_3 () (_ BitVec 64))
(declare-fun var76022 () (_ BitVec 64))
(declare-fun var76026 () (_ BitVec 64))
(declare-fun temp5078_4 () (_ BitVec 64))
(declare-fun var76027 () (_ BitVec 64))
(declare-fun temp5078_5 () (_ BitVec 64))
(declare-fun temp5078_6 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76042 () (_ BitVec 64))
(declare-fun temp5078_7 () (_ BitVec 64))
(declare-fun temp5078_8 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76103 () (_ BitVec 64))
(declare-fun temp5078_9 () (_ BitVec 64))
(declare-fun temp5078_10 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp5078_11 () (_ BitVec 64))
(declare-fun temp5078_12 () (_ BitVec 64))
(declare-fun temp5078_13 () (_ BitVec 64))
(declare-fun temp5078_14 () (_ BitVec 64))
(declare-fun temp5078_15 () (_ BitVec 64))
(declare-fun temp5078_16 () (_ BitVec 64))
(declare-fun temp5078_17 () (_ BitVec 64))
(declare-fun temp5078_18 () (_ BitVec 64))
(declare-fun temp5078_19 () (_ BitVec 64))
(declare-fun temp5078_20 () (_ BitVec 64))
(declare-fun temp5078_21 () (_ BitVec 64))
(declare-fun temp5078_22 () (_ BitVec 64))
(declare-fun temp5078_23 () (_ BitVec 64))
(declare-fun var76131 () (_ BitVec 64))
(declare-fun temp5078_24 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp5078_25 () (_ BitVec 64))
(declare-fun temp5078_26 () (_ BitVec 64))
(declare-fun temp5078_27 () (_ BitVec 64))
(declare-fun temp5078_28 () (_ BitVec 64))
(declare-fun temp5078_29 () (_ BitVec 64))
(declare-fun temp5078_30 () (_ BitVec 64))
(declare-fun temp5078_31 () (_ BitVec 64))
(declare-fun temp5078_32 () (_ BitVec 64))
(declare-fun temp5078_33 () (_ BitVec 64))
(declare-fun temp5078_34 () (_ BitVec 64))
(declare-fun temp5078_35 () (_ BitVec 64))
(declare-fun temp5078_36 () (_ BitVec 64))
(declare-fun temp5078_37 () (_ BitVec 64))
(declare-fun var76165 () (_ BitVec 64))
(declare-fun temp5078_38 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var76268 () (_ BitVec 64))
(declare-fun temp5078_39 () (_ BitVec 64))
(declare-fun temp5078_40 () (_ BitVec 64))
(declare-fun var341046 () (_ BitVec 64))
(declare-fun temp5078_41 () (_ BitVec 64))
(declare-fun var341064 () (_ BitVec 64))
(declare-fun temp5078_42 () (_ BitVec 64))
(declare-fun temp5078_43 () (_ BitVec 64))
(declare-fun var472118 () (_ BitVec 64))
(declare-fun temp5078_44 () (_ BitVec 64))
(declare-fun var472136 () (_ BitVec 64))
(declare-fun temp5078_45 () (_ BitVec 64))
(declare-fun temp5078_46 () (_ BitVec 64))
(declare-fun var603190 () (_ BitVec 64))
(declare-fun temp5078_47 () (_ BitVec 64))
(declare-fun var603208 () (_ BitVec 64))
(declare-fun temp5078_48 () (_ BitVec 64))
(declare-fun temp5078_50 () (_ BitVec 64))
(declare-fun temp5078_49 () (_ BitVec 64))
(declare-fun temp5078_52 () (_ BitVec 64))
(declare-fun temp5078_51 () (_ BitVec 64))
(declare-fun temp5078_54 () (_ BitVec 64))
(declare-fun temp5078_53 () (_ BitVec 64))
(declare-fun temp5078_56 () (_ BitVec 64))
(declare-fun temp5078_55 () (_ BitVec 64))
(declare-fun temp5078_58 () (_ BitVec 64))
(declare-fun temp5078_57 () (_ BitVec 64))
(declare-fun temp5078_60 () (_ BitVec 64))
(declare-fun temp5078_59 () (_ BitVec 64))
(declare-fun temp5078_62 () (_ BitVec 64))
(declare-fun temp5078_61 () (_ BitVec 64))
(declare-fun temp5078_64 () (_ BitVec 64))
(declare-fun temp5078_63 () (_ BitVec 64))
(declare-fun temp5078_65 () (_ BitVec 64))
(declare-fun var926770 () (_ BitVec 64))
(declare-fun temp5078_66 () (_ BitVec 64))
(declare-fun var926771 () (_ BitVec 64))
(declare-fun var926772 () (_ BitVec 64))
(declare-fun var926768 () (_ BitVec 64))
(declare-fun var664540 () (_ BitVec 64))
(declare-fun temp5078_67 () (_ BitVec 64))
(declare-fun var992306 () (_ BitVec 64))
(declare-fun temp5078_68 () (_ BitVec 64))
(declare-fun var992307 () (_ BitVec 64))
(declare-fun var992308 () (_ BitVec 64))
(declare-fun var992304 () (_ BitVec 64))
(declare-fun var664547 () (_ BitVec 64))
(declare-fun temp5078_69 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp5078_70 () (_ BitVec 64))
(declare-fun var1057843 () (_ BitVec 64))
(declare-fun var1057844 () (_ BitVec 64))
(declare-fun var1057840 () (_ BitVec 64))
(declare-fun var664552 () (_ BitVec 64))
(declare-fun var76450 () (_ BitVec 64))
(declare-fun temp5078_71 () (_ BitVec 64))
(declare-fun temp5078_72 () (_ BitVec 64))
(declare-fun var76511 () (_ BitVec 64))
(declare-fun var76512 () (_ BitVec 64))
(declare-fun temp5078_74 () (_ BitVec 64))
(declare-fun temp5078_73 () (_ BitVec 64))
(declare-fun temp5078_76 () (_ BitVec 64))
(declare-fun temp5078_75 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp5078_1 #x0000000000000001))
(assert (= var139826
   (ite (= ARGNAME_filter_sizes_NAMEEND_DIM temp5078_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var139820 var139826))
(assert (= var75949 var139820))
(assert (= temp5078_2 #x0000000000000001))
(assert (= var75949 temp5078_2))
(assert (= temp5078_3 #x0000000000000000))
(assert (= var76022 temp5078_3))
(assert (= var76026 var76022))
(assert (= temp5078_4 #x0000000000000000))
(assert (= var76027 (ite (= var76026 temp5078_4) #x0000000000000001 #x0000000000000000)))
(assert (= temp5078_5 #x0000000000000001))
(assert (= var76027 temp5078_5))
(assert (= temp5078_6 #x0000000000000005))
(assert (= var76042
   (ite (= ARGNAME_input_NAMEEND_DIM temp5078_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp5078_7 #x0000000000000001))
(assert (= var76042 temp5078_7))
(assert (= temp5078_8 #x0000000000000005))
(assert (= var76103
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp5078_8)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp5078_9 #x0000000000000001))
(assert (= var76103 temp5078_9))
(assert (= temp5078_10 #x0000000000000000))
(assert (= temp5078_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp5078_10)))
(assert (= temp5078_12 #x0000000000000001))
(assert (= temp5078_13 (select ARGNAME_input_NAMEEND_DIMSIZE temp5078_12)))
(assert (= temp5078_14 #x0000000000000002))
(assert (= temp5078_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp5078_14)))
(assert (= temp5078_16 #x0000000000000003))
(assert (= temp5078_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp5078_16)))
(assert (= temp5078_18 #x0000000000000004))
(assert (= temp5078_19 (select ARGNAME_input_NAMEEND_DIMSIZE temp5078_18)))
(assert (= temp5078_20 #x0000000000000005))
(assert (= temp5078_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp5078_20)))
(assert (= temp5078_22 #x0000000000000004))
(assert (= temp5078_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp5078_22)))
(assert (= var76131 temp5078_23))
(assert (= temp5078_24 #x0000000000000000))
(assert (= temp5078_25 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp5078_24)))
(assert (= temp5078_26 #x0000000000000001))
(assert (= temp5078_27 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp5078_26)))
(assert (= temp5078_28 #x0000000000000002))
(assert (= temp5078_29 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp5078_28)))
(assert (= temp5078_30 #x0000000000000003))
(assert (= temp5078_31 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp5078_30)))
(assert (= temp5078_32 #x0000000000000004))
(assert (= temp5078_33 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp5078_32)))
(assert (= temp5078_34 #x0000000000000005))
(assert (= temp5078_35 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp5078_34)))
(assert (= temp5078_36 #x0000000000000004))
(assert (= temp5078_37 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp5078_36)))
(assert (= var76165 temp5078_37))
(assert (= temp5078_38 #x0000000000000000))
(assert (= var76268
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp5078_38)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp5078_39 #x0000000000000000))
(assert (= var76268 temp5078_39))
(assert (= temp5078_40 #x0000000000000001))
(assert (= var341046 temp5078_40))
(assert (= temp5078_41 #x0000000000000001))
(assert (= var341064
   (ite (bvslt var341046 temp5078_41) #x0000000000000001 #x0000000000000000)))
(assert (= temp5078_42 #x0000000000000000))
(assert (= var341064 temp5078_42))
(assert (= temp5078_43 #x0000000000000001))
(assert (= var472118 temp5078_43))
(assert (= temp5078_44 #x0000000000000001))
(assert (= var472136
   (ite (bvslt var472118 temp5078_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp5078_45 #x0000000000000000))
(assert (= var472136 temp5078_45))
(assert (= temp5078_46 #x0000000000000001))
(assert (= var603190 temp5078_46))
(assert (= temp5078_47 #x0000000000000001))
(assert (= var603208
   (ite (bvslt var603190 temp5078_47) #x0000000000000001 #x0000000000000000)))
(assert (= temp5078_48 #x0000000000000000))
(assert (= var603208 temp5078_48))
(assert (= temp5078_50 #x0000000000000000))
(assert (= temp5078_49 temp5078_50))
(assert (= temp5078_52 #x0000000000000000))
(assert (= temp5078_51 temp5078_52))
(assert (= temp5078_54 #x00000000000000ff))
(assert (= temp5078_53 temp5078_54))
(assert (= temp5078_56 #x00000000000000ff))
(assert (= temp5078_55 temp5078_56))
(assert (= temp5078_58 #x00000000000000ff))
(assert (= temp5078_57 temp5078_58))
(assert (= temp5078_60 #x0000000000000000))
(assert (= temp5078_59 temp5078_60))
(assert (= temp5078_62 #x0000000000000000))
(assert (= temp5078_61 temp5078_62))
(assert (= temp5078_64 #x0000000000000000))
(assert (= temp5078_63 temp5078_64))
(assert (= temp5078_65 #x0000000000008000))
(assert (= var926770 temp5078_65))
(assert (= temp5078_66 #x0000000000000001))
(assert (= var926771
   (ite (bvslt temp5078_63 temp5078_66) #x0000000000000001 #x0000000000000000)))
(assert (= var926772 (ite (= var926771 #x0000000000000001) var926770 temp5078_63)))
(assert (= var926768 var926772))
(assert (= var664540 var926768))
(assert (= temp5078_67 #x0000000000040000))
(assert (= var992306 temp5078_67))
(assert (= temp5078_68 #x0000000000000001))
(assert (= var992307
   (ite (bvslt temp5078_61 temp5078_68) #x0000000000000001 #x0000000000000000)))
(assert (= var992308 (ite (= var992307 #x0000000000000001) var992306 temp5078_61)))
(assert (= var992304 var992308))
(assert (= var664547 var992304))
(assert (= temp5078_69 #x0000000000200000))
(assert (= var1057842 temp5078_69))
(assert (= temp5078_70 #x0000000000000001))
(assert (= var1057843
   (ite (bvslt temp5078_59 temp5078_70) #x0000000000000001 #x0000000000000000)))
(assert (= var1057844 (ite (= var1057843 #x0000000000000001) var1057842 temp5078_59)))
(assert (= var1057840 var1057844))
(assert (= var664552 var1057840))
(assert (= var76450 var664552))
(assert (= temp5078_71 #x0000000000000003))
(assert (= temp5078_72 #xffffffffffffffff))
(assert (= var76512 (bvadd var76511 temp5078_72)))
(assert (= temp5078_74 #x0000000000000000))
(assert (= temp5078_73 temp5078_74))
(assert (= temp5078_76 #x0000000000000000))
(assert (= temp5078_75 temp5078_76))
(model-add temp5078_1 () (_ BitVec 64) #x0000000000000001)
(model-add var139826 () (_ BitVec 64) #x0000000000000001)
(model-add var139820 () (_ BitVec 64) #x0000000000000001)
(model-add temp5078_2 () (_ BitVec 64) #x0000000000000001)
(model-add var75949 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_sizes_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))


