(declare-fun temp789_1 () (_ BitVec 64))
(declare-fun temp789_2 () (_ BitVec 64))
(declare-fun var76042 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp789_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76103 () (_ BitVec 64))
(declare-fun temp789_4 () (_ BitVec 64))
(declare-fun temp789_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp789_6 () (_ BitVec 64))
(declare-fun temp789_7 () (_ BitVec 64))
(declare-fun temp789_8 () (_ BitVec 64))
(declare-fun temp789_9 () (_ BitVec 64))
(declare-fun temp789_10 () (_ BitVec 64))
(declare-fun temp789_11 () (_ BitVec 64))
(declare-fun temp789_12 () (_ BitVec 64))
(declare-fun temp789_13 () (_ BitVec 64))
(declare-fun temp789_14 () (_ BitVec 64))
(declare-fun temp789_15 () (_ BitVec 64))
(declare-fun temp789_16 () (_ BitVec 64))
(declare-fun temp789_17 () (_ BitVec 64))
(declare-fun temp789_18 () (_ BitVec 64))
(declare-fun var76131 () (_ BitVec 64))
(declare-fun temp789_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp789_20 () (_ BitVec 64))
(declare-fun temp789_21 () (_ BitVec 64))
(declare-fun temp789_22 () (_ BitVec 64))
(declare-fun temp789_23 () (_ BitVec 64))
(declare-fun temp789_24 () (_ BitVec 64))
(declare-fun temp789_25 () (_ BitVec 64))
(declare-fun temp789_26 () (_ BitVec 64))
(declare-fun temp789_27 () (_ BitVec 64))
(declare-fun temp789_28 () (_ BitVec 64))
(declare-fun temp789_29 () (_ BitVec 64))
(declare-fun temp789_30 () (_ BitVec 64))
(declare-fun temp789_31 () (_ BitVec 64))
(declare-fun temp789_32 () (_ BitVec 64))
(declare-fun var76165 () (_ BitVec 64))
(declare-fun temp789_33 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var76268 () (_ BitVec 64))
(declare-fun temp789_34 () (_ BitVec 64))
(declare-fun temp789_35 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp789_36 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp789_37 () (_ BitVec 64))
(declare-fun temp789_38 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp789_39 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp789_40 () (_ BitVec 64))
(declare-fun temp789_41 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp789_42 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp789_43 () (_ BitVec 64))
(declare-fun temp789_45 () (_ BitVec 64))
(declare-fun temp789_44 () (_ BitVec 64))
(declare-fun temp789_47 () (_ BitVec 64))
(declare-fun temp789_46 () (_ BitVec 64))
(declare-fun temp789_49 () (_ BitVec 64))
(declare-fun temp789_48 () (_ BitVec 64))
(declare-fun temp789_50 () (_ BitVec 64))
(declare-fun var730187 () (_ BitVec 64))
(declare-fun var730166 () (_ BitVec 64))
(declare-fun var664598 () (_ BitVec 64))
(declare-fun temp789_51 () (_ BitVec 64))
(declare-fun temp789_52 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp789_53 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp789_54 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp789_1 #x0000000000000005))
(assert (= var76042
   (ite (= ARGNAME_input_NAMEEND_DIM temp789_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp789_2 #x0000000000000001))
(assert (= var76042 temp789_2))
(assert (= temp789_3 #x0000000000000005))
(assert (= var76103
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp789_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp789_4 #x0000000000000001))
(assert (= var76103 temp789_4))
(assert (= temp789_5 #x0000000000000000))
(assert (= temp789_6 (select ARGNAME_input_NAMEEND_DIMSIZE temp789_5)))
(assert (= temp789_7 #x0000000000000001))
(assert (= temp789_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp789_7)))
(assert (= temp789_9 #x0000000000000002))
(assert (= temp789_10 (select ARGNAME_input_NAMEEND_DIMSIZE temp789_9)))
(assert (= temp789_11 #x0000000000000003))
(assert (= temp789_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp789_11)))
(assert (= temp789_13 #x0000000000000004))
(assert (= temp789_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp789_13)))
(assert (= temp789_15 #x0000000000000005))
(assert (= temp789_16 (select ARGNAME_input_NAMEEND_DIMSIZE temp789_15)))
(assert (= temp789_17 #x0000000000000004))
(assert (= temp789_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp789_17)))
(assert (= var76131 temp789_18))
(assert (= temp789_19 #x0000000000000000))
(assert (= temp789_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp789_19)))
(assert (= temp789_21 #x0000000000000001))
(assert (= temp789_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp789_21)))
(assert (= temp789_23 #x0000000000000002))
(assert (= temp789_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp789_23)))
(assert (= temp789_25 #x0000000000000003))
(assert (= temp789_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp789_25)))
(assert (= temp789_27 #x0000000000000004))
(assert (= temp789_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp789_27)))
(assert (= temp789_29 #x0000000000000005))
(assert (= temp789_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp789_29)))
(assert (= temp789_31 #x0000000000000004))
(assert (= temp789_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp789_31)))
(assert (= var76165 temp789_32))
(assert (= temp789_33 #x0000000000000000))
(assert (= var76268
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp789_33)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp789_34 #x0000000000000000))
(assert (= var76268 temp789_34))
(assert (= temp789_35 #x0000000000000001))
(assert (= var275510 temp789_35))
(assert (= temp789_36 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp789_36) #x0000000000000001 #x0000000000000000)))
(assert (= temp789_37 #x0000000000000000))
(assert (= var275528 temp789_37))
(assert (= temp789_38 #x0000000000000001))
(assert (= var406582 temp789_38))
(assert (= temp789_39 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp789_39) #x0000000000000001 #x0000000000000000)))
(assert (= temp789_40 #x0000000000000000))
(assert (= var406600 temp789_40))
(assert (= temp789_41 #x0000000000000001))
(assert (= var537654 temp789_41))
(assert (= temp789_42 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp789_42) #x0000000000000001 #x0000000000000000)))
(assert (= temp789_43 #x0000000000000000))
(assert (= var537672 temp789_43))
(assert (= temp789_45 #x00000000000000ff))
(assert (= temp789_44 temp789_45))
(assert (= temp789_47 #x00000000000000ff))
(assert (= temp789_46 temp789_47))
(assert (= temp789_49 #x00000000000000ff))
(assert (= temp789_48 temp789_49))
(assert (= temp789_50 #x0000000000000000))
(assert (= var730187 temp789_50))
(assert (= var730166 var730187))
(assert (= var664598 var730166))
(assert (= temp789_51 #x0000000000000000))
(assert (= var664598 temp789_51))
(assert (= temp789_52 #x0000000000008000))
(assert (= var1057842 temp789_52))
(assert (= temp789_53 #x0000000000040000))
(assert (= var1123378 temp789_53))
(assert (= temp789_54 #x0000000000200000))
(assert (= var1188914 temp789_54))
(model-add temp789_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp789_2 () (_ BitVec 64) #x0000000000000001)
(model-add var76042 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


