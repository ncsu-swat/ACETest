(declare-fun temp8085_1 () (_ BitVec 64))
(declare-fun var139826 () (_ BitVec 64))
(declare-fun var139820 () (_ BitVec 64))
(declare-fun temp8085_2 () (_ BitVec 64))
(declare-fun var75949 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_sizes_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp8085_3 () (_ BitVec 64))
(declare-fun var76022 () (_ BitVec 64))
(declare-fun var76026 () (_ BitVec 64))
(declare-fun temp8085_4 () (_ BitVec 64))
(declare-fun var76027 () (_ BitVec 64))
(declare-fun temp8085_5 () (_ BitVec 64))
(declare-fun temp8085_6 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76042 () (_ BitVec 64))
(declare-fun temp8085_7 () (_ BitVec 64))
(declare-fun temp8085_8 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76103 () (_ BitVec 64))
(declare-fun temp8085_9 () (_ BitVec 64))
(declare-fun temp8085_10 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp8085_11 () (_ BitVec 64))
(declare-fun temp8085_12 () (_ BitVec 64))
(declare-fun temp8085_13 () (_ BitVec 64))
(declare-fun temp8085_14 () (_ BitVec 64))
(declare-fun temp8085_15 () (_ BitVec 64))
(declare-fun temp8085_16 () (_ BitVec 64))
(declare-fun temp8085_17 () (_ BitVec 64))
(declare-fun temp8085_18 () (_ BitVec 64))
(declare-fun temp8085_19 () (_ BitVec 64))
(declare-fun temp8085_20 () (_ BitVec 64))
(declare-fun temp8085_21 () (_ BitVec 64))
(declare-fun temp8085_22 () (_ BitVec 64))
(declare-fun temp8085_23 () (_ BitVec 64))
(declare-fun var76131 () (_ BitVec 64))
(declare-fun temp8085_24 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp8085_25 () (_ BitVec 64))
(declare-fun temp8085_26 () (_ BitVec 64))
(declare-fun temp8085_27 () (_ BitVec 64))
(declare-fun temp8085_28 () (_ BitVec 64))
(declare-fun temp8085_29 () (_ BitVec 64))
(declare-fun temp8085_30 () (_ BitVec 64))
(declare-fun temp8085_31 () (_ BitVec 64))
(declare-fun temp8085_32 () (_ BitVec 64))
(declare-fun temp8085_33 () (_ BitVec 64))
(declare-fun temp8085_34 () (_ BitVec 64))
(declare-fun temp8085_35 () (_ BitVec 64))
(declare-fun temp8085_36 () (_ BitVec 64))
(declare-fun temp8085_37 () (_ BitVec 64))
(declare-fun var76165 () (_ BitVec 64))
(declare-fun temp8085_38 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var76268 () (_ BitVec 64))
(declare-fun temp8085_39 () (_ BitVec 64))
(declare-fun temp8085_40 () (_ BitVec 64))
(declare-fun var341046 () (_ BitVec 64))
(declare-fun temp8085_41 () (_ BitVec 64))
(declare-fun var341064 () (_ BitVec 64))
(declare-fun temp8085_42 () (_ BitVec 64))
(declare-fun temp8085_43 () (_ BitVec 64))
(declare-fun var472118 () (_ BitVec 64))
(declare-fun temp8085_44 () (_ BitVec 64))
(declare-fun var472136 () (_ BitVec 64))
(declare-fun temp8085_45 () (_ BitVec 64))
(declare-fun temp8085_46 () (_ BitVec 64))
(declare-fun var603190 () (_ BitVec 64))
(declare-fun temp8085_47 () (_ BitVec 64))
(declare-fun var603208 () (_ BitVec 64))
(declare-fun temp8085_48 () (_ BitVec 64))
(declare-fun temp8085_50 () (_ BitVec 64))
(declare-fun temp8085_49 () (_ BitVec 64))
(declare-fun temp8085_52 () (_ BitVec 64))
(declare-fun temp8085_51 () (_ BitVec 64))
(declare-fun temp8085_54 () (_ BitVec 64))
(declare-fun temp8085_53 () (_ BitVec 64))
(declare-fun temp8085_55 () (_ BitVec 64))
(declare-fun var795723 () (_ BitVec 64))
(declare-fun var795702 () (_ BitVec 64))
(declare-fun var730134 () (_ BitVec 64))
(declare-fun temp8085_56 () (_ BitVec 64))
(declare-fun temp8085_57 () (_ BitVec 64))
(declare-fun var926795 () (_ BitVec 64))
(declare-fun var926774 () (_ BitVec 64))
(declare-fun var730147 () (_ BitVec 64))
(declare-fun temp8085_58 () (_ BitVec 64))
(declare-fun temp8085_59 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp8085_60 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp8085_61 () (_ BitVec 64))
(declare-fun var1254450 () (_ BitVec 64))
(declare-fun temp8085_63 () (_ BitVec 64))
(declare-fun temp8085_62 () (_ BitVec 64))
(declare-fun temp8085_65 () (_ BitVec 64))
(declare-fun temp8085_64 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp8085_1 #x0000000000000001))
(assert (= var139826
   (ite (= ARGNAME_filter_sizes_NAMEEND_DIM temp8085_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var139820 var139826))
(assert (= var75949 var139820))
(assert (= temp8085_2 #x0000000000000001))
(assert (= var75949 temp8085_2))
(assert (= temp8085_3 #x0000000000000000))
(assert (= var76022 temp8085_3))
(assert (= var76026 var76022))
(assert (= temp8085_4 #x0000000000000000))
(assert (= var76027 (ite (= var76026 temp8085_4) #x0000000000000001 #x0000000000000000)))
(assert (= temp8085_5 #x0000000000000001))
(assert (= var76027 temp8085_5))
(assert (= temp8085_6 #x0000000000000005))
(assert (= var76042
   (ite (= ARGNAME_input_NAMEEND_DIM temp8085_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8085_7 #x0000000000000001))
(assert (= var76042 temp8085_7))
(assert (= temp8085_8 #x0000000000000005))
(assert (= var76103
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp8085_8)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8085_9 #x0000000000000001))
(assert (= var76103 temp8085_9))
(assert (= temp8085_10 #x0000000000000000))
(assert (= temp8085_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp8085_10)))
(assert (= temp8085_12 #x0000000000000001))
(assert (= temp8085_13 (select ARGNAME_input_NAMEEND_DIMSIZE temp8085_12)))
(assert (= temp8085_14 #x0000000000000002))
(assert (= temp8085_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp8085_14)))
(assert (= temp8085_16 #x0000000000000003))
(assert (= temp8085_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp8085_16)))
(assert (= temp8085_18 #x0000000000000004))
(assert (= temp8085_19 (select ARGNAME_input_NAMEEND_DIMSIZE temp8085_18)))
(assert (= temp8085_20 #x0000000000000005))
(assert (= temp8085_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp8085_20)))
(assert (= temp8085_22 #x0000000000000004))
(assert (= temp8085_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp8085_22)))
(assert (= var76131 temp8085_23))
(assert (= temp8085_24 #x0000000000000000))
(assert (= temp8085_25 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8085_24)))
(assert (= temp8085_26 #x0000000000000001))
(assert (= temp8085_27 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8085_26)))
(assert (= temp8085_28 #x0000000000000002))
(assert (= temp8085_29 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8085_28)))
(assert (= temp8085_30 #x0000000000000003))
(assert (= temp8085_31 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8085_30)))
(assert (= temp8085_32 #x0000000000000004))
(assert (= temp8085_33 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8085_32)))
(assert (= temp8085_34 #x0000000000000005))
(assert (= temp8085_35 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8085_34)))
(assert (= temp8085_36 #x0000000000000004))
(assert (= temp8085_37 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8085_36)))
(assert (= var76165 temp8085_37))
(assert (= temp8085_38 #x0000000000000000))
(assert (= var76268
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp8085_38)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8085_39 #x0000000000000000))
(assert (= var76268 temp8085_39))
(assert (= temp8085_40 #x0000000000000001))
(assert (= var341046 temp8085_40))
(assert (= temp8085_41 #x0000000000000001))
(assert (= var341064
   (ite (bvslt var341046 temp8085_41) #x0000000000000001 #x0000000000000000)))
(assert (= temp8085_42 #x0000000000000000))
(assert (= var341064 temp8085_42))
(assert (= temp8085_43 #x0000000000000001))
(assert (= var472118 temp8085_43))
(assert (= temp8085_44 #x0000000000000001))
(assert (= var472136
   (ite (bvslt var472118 temp8085_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp8085_45 #x0000000000000000))
(assert (= var472136 temp8085_45))
(assert (= temp8085_46 #x0000000000000001))
(assert (= var603190 temp8085_46))
(assert (= temp8085_47 #x0000000000000001))
(assert (= var603208
   (ite (bvslt var603190 temp8085_47) #x0000000000000001 #x0000000000000000)))
(assert (= temp8085_48 #x0000000000000000))
(assert (= var603208 temp8085_48))
(assert (= temp8085_50 #x00000000000000ff))
(assert (= temp8085_49 temp8085_50))
(assert (= temp8085_52 #x00000000000000ff))
(assert (= temp8085_51 temp8085_52))
(assert (= temp8085_54 #x00000000000000ff))
(assert (= temp8085_53 temp8085_54))
(assert (= temp8085_55 #x0000000000000000))
(assert (= var795723 temp8085_55))
(assert (= var795702 var795723))
(assert (= var730134 var795702))
(assert (= temp8085_56 #x0000000000000000))
(assert (= var730134 temp8085_56))
(assert (= temp8085_57 #x0000000000000000))
(assert (= var926795 temp8085_57))
(assert (= var926774 var926795))
(assert (= var730147 var926774))
(assert (= temp8085_58 #x0000000000000000))
(assert (= var730147 temp8085_58))
(assert (= temp8085_59 #x0000000000008000))
(assert (= var1123378 temp8085_59))
(assert (= temp8085_60 #x0000000000040000))
(assert (= var1188914 temp8085_60))
(assert (= temp8085_61 #x0000000000200000))
(assert (= var1254450 temp8085_61))
(assert (= temp8085_63 #x0000000000000000))
(assert (= temp8085_62 temp8085_63))
(assert (= temp8085_65 #x0000000000000000))
(assert (= temp8085_64 temp8085_65))
(model-add temp8085_1 () (_ BitVec 64) #x0000000000000001)
(model-add var139826 () (_ BitVec 64) #x0000000000000001)
(model-add var139820 () (_ BitVec 64) #x0000000000000001)
(model-add temp8085_2 () (_ BitVec 64) #x0000000000000001)
(model-add var75949 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_sizes_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))


