(declare-fun temp4612_1 () (_ BitVec 64))
(declare-fun temp4612_2 () (_ BitVec 64))
(declare-fun var76042 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp4612_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76103 () (_ BitVec 64))
(declare-fun temp4612_4 () (_ BitVec 64))
(declare-fun temp4612_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp4612_6 () (_ BitVec 64))
(declare-fun temp4612_7 () (_ BitVec 64))
(declare-fun temp4612_8 () (_ BitVec 64))
(declare-fun temp4612_9 () (_ BitVec 64))
(declare-fun temp4612_10 () (_ BitVec 64))
(declare-fun temp4612_11 () (_ BitVec 64))
(declare-fun temp4612_12 () (_ BitVec 64))
(declare-fun temp4612_13 () (_ BitVec 64))
(declare-fun temp4612_14 () (_ BitVec 64))
(declare-fun temp4612_15 () (_ BitVec 64))
(declare-fun temp4612_16 () (_ BitVec 64))
(declare-fun temp4612_17 () (_ BitVec 64))
(declare-fun temp4612_18 () (_ BitVec 64))
(declare-fun var76131 () (_ BitVec 64))
(declare-fun temp4612_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp4612_20 () (_ BitVec 64))
(declare-fun temp4612_21 () (_ BitVec 64))
(declare-fun temp4612_22 () (_ BitVec 64))
(declare-fun temp4612_23 () (_ BitVec 64))
(declare-fun temp4612_24 () (_ BitVec 64))
(declare-fun temp4612_25 () (_ BitVec 64))
(declare-fun temp4612_26 () (_ BitVec 64))
(declare-fun temp4612_27 () (_ BitVec 64))
(declare-fun temp4612_28 () (_ BitVec 64))
(declare-fun temp4612_29 () (_ BitVec 64))
(declare-fun temp4612_30 () (_ BitVec 64))
(declare-fun temp4612_31 () (_ BitVec 64))
(declare-fun temp4612_32 () (_ BitVec 64))
(declare-fun var76165 () (_ BitVec 64))
(declare-fun temp4612_33 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var76268 () (_ BitVec 64))
(declare-fun temp4612_34 () (_ BitVec 64))
(declare-fun temp4612_35 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp4612_36 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp4612_37 () (_ BitVec 64))
(declare-fun temp4612_39 () (_ BitVec 64))
(declare-fun temp4612_38 () (_ BitVec 64))
(declare-fun temp4612_40 () (_ BitVec 64))
(declare-fun var472118 () (_ BitVec 64))
(declare-fun temp4612_41 () (_ BitVec 64))
(declare-fun var472136 () (_ BitVec 64))
(declare-fun temp4612_42 () (_ BitVec 64))
(declare-fun temp4612_43 () (_ BitVec 64))
(declare-fun var603190 () (_ BitVec 64))
(declare-fun temp4612_44 () (_ BitVec 64))
(declare-fun var603208 () (_ BitVec 64))
(declare-fun temp4612_45 () (_ BitVec 64))
(declare-fun temp4612_47 () (_ BitVec 64))
(declare-fun temp4612_46 () (_ BitVec 64))
(declare-fun temp4612_49 () (_ BitVec 64))
(declare-fun temp4612_48 () (_ BitVec 64))
(declare-fun temp4612_51 () (_ BitVec 64))
(declare-fun temp4612_50 () (_ BitVec 64))
(declare-fun temp4612_53 () (_ BitVec 64))
(declare-fun temp4612_52 () (_ BitVec 64))
(declare-fun temp4612_54 () (_ BitVec 64))
(declare-fun var861259 () (_ BitVec 64))
(declare-fun var861238 () (_ BitVec 64))
(declare-fun var795670 () (_ BitVec 64))
(declare-fun temp4612_55 () (_ BitVec 64))
(declare-fun temp4612_56 () (_ BitVec 64))
(declare-fun var926795 () (_ BitVec 64))
(declare-fun var926774 () (_ BitVec 64))
(declare-fun var795680 () (_ BitVec 64))
(declare-fun temp4612_57 () (_ BitVec 64))
(declare-fun temp4612_58 () (_ BitVec 64))
(declare-fun var992331 () (_ BitVec 64))
(declare-fun var992310 () (_ BitVec 64))
(declare-fun var795683 () (_ BitVec 64))
(declare-fun temp4612_59 () (_ BitVec 64))
(declare-fun temp4612_61 () (_ BitVec 64))
(declare-fun temp4612_60 () (_ BitVec 64))
(declare-fun temp4612_63 () (_ BitVec 64))
(declare-fun temp4612_62 () (_ BitVec 64))
(declare-fun temp4612_65 () (_ BitVec 64))
(declare-fun temp4612_64 () (_ BitVec 64))
(declare-fun temp4612_66 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp4612_67 () (_ BitVec 64))
(declare-fun var1123379 () (_ BitVec 64))
(declare-fun var1123380 () (_ BitVec 64))
(declare-fun var1123376 () (_ BitVec 64))
(declare-fun var730076 () (_ BitVec 64))
(declare-fun temp4612_68 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp4612_69 () (_ BitVec 64))
(declare-fun var1188915 () (_ BitVec 64))
(declare-fun var1188916 () (_ BitVec 64))
(declare-fun var1188912 () (_ BitVec 64))
(declare-fun var730083 () (_ BitVec 64))
(declare-fun temp4612_70 () (_ BitVec 64))
(declare-fun var1254450 () (_ BitVec 64))
(declare-fun temp4612_71 () (_ BitVec 64))
(declare-fun var1254451 () (_ BitVec 64))
(declare-fun var1254452 () (_ BitVec 64))
(declare-fun var1254448 () (_ BitVec 64))
(declare-fun var730088 () (_ BitVec 64))
(declare-fun var76450 () (_ BitVec 64))
(declare-fun temp4612_72 () (_ BitVec 64))
(declare-fun temp4612_73 () (_ BitVec 64))
(declare-fun var76511 () (_ BitVec 64))
(declare-fun var76512 () (_ BitVec 64))
(declare-fun temp4612_75 () (_ BitVec 64))
(declare-fun temp4612_74 () (_ BitVec 64))
(declare-fun temp4612_77 () (_ BitVec 64))
(declare-fun temp4612_76 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp4612_1 #x0000000000000005))
(assert (= var76042
   (ite (= ARGNAME_input_NAMEEND_DIM temp4612_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp4612_2 #x0000000000000001))
(assert (= var76042 temp4612_2))
(assert (= temp4612_3 #x0000000000000005))
(assert (= var76103
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp4612_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp4612_4 #x0000000000000001))
(assert (= var76103 temp4612_4))
(assert (= temp4612_5 #x0000000000000000))
(assert (= temp4612_6 (select ARGNAME_input_NAMEEND_DIMSIZE temp4612_5)))
(assert (= temp4612_7 #x0000000000000001))
(assert (= temp4612_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp4612_7)))
(assert (= temp4612_9 #x0000000000000002))
(assert (= temp4612_10 (select ARGNAME_input_NAMEEND_DIMSIZE temp4612_9)))
(assert (= temp4612_11 #x0000000000000003))
(assert (= temp4612_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp4612_11)))
(assert (= temp4612_13 #x0000000000000004))
(assert (= temp4612_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp4612_13)))
(assert (= temp4612_15 #x0000000000000005))
(assert (= temp4612_16 (select ARGNAME_input_NAMEEND_DIMSIZE temp4612_15)))
(assert (= temp4612_17 #x0000000000000004))
(assert (= temp4612_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp4612_17)))
(assert (= var76131 temp4612_18))
(assert (= temp4612_19 #x0000000000000000))
(assert (= temp4612_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp4612_19)))
(assert (= temp4612_21 #x0000000000000001))
(assert (= temp4612_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp4612_21)))
(assert (= temp4612_23 #x0000000000000002))
(assert (= temp4612_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp4612_23)))
(assert (= temp4612_25 #x0000000000000003))
(assert (= temp4612_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp4612_25)))
(assert (= temp4612_27 #x0000000000000004))
(assert (= temp4612_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp4612_27)))
(assert (= temp4612_29 #x0000000000000005))
(assert (= temp4612_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp4612_29)))
(assert (= temp4612_31 #x0000000000000004))
(assert (= temp4612_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp4612_31)))
(assert (= var76165 temp4612_32))
(assert (= temp4612_33 #x0000000000000000))
(assert (= var76268
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp4612_33)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp4612_34 #x0000000000000000))
(assert (= var76268 temp4612_34))
(assert (= temp4612_35 #x0000000000000001))
(assert (= var275510 temp4612_35))
(assert (= temp4612_36 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp4612_36) #x0000000000000001 #x0000000000000000)))
(assert (= temp4612_37 #x0000000000000000))
(assert (= var275528 temp4612_37))
(assert (= temp4612_39 #x0000000000000000))
(assert (= temp4612_38 temp4612_39))
(assert (= temp4612_40 #x0000000000000001))
(assert (= var472118 temp4612_40))
(assert (= temp4612_41 #x0000000000000001))
(assert (= var472136
   (ite (bvslt var472118 temp4612_41) #x0000000000000001 #x0000000000000000)))
(assert (= temp4612_42 #x0000000000000000))
(assert (= var472136 temp4612_42))
(assert (= temp4612_43 #x0000000000000001))
(assert (= var603190 temp4612_43))
(assert (= temp4612_44 #x0000000000000001))
(assert (= var603208
   (ite (bvslt var603190 temp4612_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp4612_45 #x0000000000000000))
(assert (= var603208 temp4612_45))
(assert (= temp4612_47 #x0000000000000000))
(assert (= temp4612_46 temp4612_47))
(assert (= temp4612_49 #x00000000000000ff))
(assert (= temp4612_48 temp4612_49))
(assert (= temp4612_51 #x00000000000000ff))
(assert (= temp4612_50 temp4612_51))
(assert (= temp4612_53 #x00000000000000ff))
(assert (= temp4612_52 temp4612_53))
(assert (= temp4612_54 #x0000000000000000))
(assert (= var861259 temp4612_54))
(assert (= var861238 var861259))
(assert (= var795670 var861238))
(assert (= temp4612_55 #x0000000000000000))
(assert (= var795670 temp4612_55))
(assert (= temp4612_56 #x0000000000000000))
(assert (= var926795 temp4612_56))
(assert (= var926774 var926795))
(assert (= var795680 var926774))
(assert (= temp4612_57 #x0000000000000000))
(assert (= var795680 temp4612_57))
(assert (= temp4612_58 #x0000000000000000))
(assert (= var992331 temp4612_58))
(assert (= var992310 var992331))
(assert (= var795683 var992310))
(assert (= temp4612_59 #x0000000000000000))
(assert (= var795683 temp4612_59))
(assert (= temp4612_61 #x0000000000000000))
(assert (= temp4612_60 temp4612_61))
(assert (= temp4612_63 #x0000000000000000))
(assert (= temp4612_62 temp4612_63))
(assert (= temp4612_65 #x0000000000000000))
(assert (= temp4612_64 temp4612_65))
(assert (= temp4612_66 #x0000000000008000))
(assert (= var1123378 temp4612_66))
(assert (= temp4612_67 #x0000000000000001))
(assert (= var1123379
   (ite (bvslt temp4612_64 temp4612_67) #x0000000000000001 #x0000000000000000)))
(assert (= var1123380 (ite (= var1123379 #x0000000000000001) var1123378 temp4612_64)))
(assert (= var1123376 var1123380))
(assert (= var730076 var1123376))
(assert (= temp4612_68 #x0000000000040000))
(assert (= var1188914 temp4612_68))
(assert (= temp4612_69 #x0000000000000001))
(assert (= var1188915
   (ite (bvslt temp4612_62 temp4612_69) #x0000000000000001 #x0000000000000000)))
(assert (= var1188916 (ite (= var1188915 #x0000000000000001) var1188914 temp4612_62)))
(assert (= var1188912 var1188916))
(assert (= var730083 var1188912))
(assert (= temp4612_70 #x0000000000200000))
(assert (= var1254450 temp4612_70))
(assert (= temp4612_71 #x0000000000000001))
(assert (= var1254451
   (ite (bvslt temp4612_60 temp4612_71) #x0000000000000001 #x0000000000000000)))
(assert (= var1254452 (ite (= var1254451 #x0000000000000001) var1254450 temp4612_60)))
(assert (= var1254448 var1254452))
(assert (= var730088 var1254448))
(assert (= var76450 var730088))
(assert (= temp4612_72 #x0000000000000003))
(assert (= temp4612_73 #xffffffffffffffff))
(assert (= var76512 (bvadd var76511 temp4612_73)))
(assert (= temp4612_75 #x0000000000000000))
(assert (= temp4612_74 temp4612_75))
(assert (= temp4612_77 #x0000000000000000))
(assert (= temp4612_76 temp4612_77))
(model-add temp4612_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp4612_2 () (_ BitVec 64) #x0000000000000001)
(model-add var76042 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


