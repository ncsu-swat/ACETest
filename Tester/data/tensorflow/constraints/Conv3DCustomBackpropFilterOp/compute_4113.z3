(declare-fun temp6228_1 () (_ BitVec 64))
(declare-fun var139826 () (_ BitVec 64))
(declare-fun var139820 () (_ BitVec 64))
(declare-fun temp6228_2 () (_ BitVec 64))
(declare-fun var75949 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_sizes_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp6228_3 () (_ BitVec 64))
(declare-fun var76022 () (_ BitVec 64))
(declare-fun var76026 () (_ BitVec 64))
(declare-fun temp6228_4 () (_ BitVec 64))
(declare-fun var76027 () (_ BitVec 64))
(declare-fun temp6228_5 () (_ BitVec 64))
(declare-fun temp6228_6 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76042 () (_ BitVec 64))
(declare-fun temp6228_7 () (_ BitVec 64))
(declare-fun temp6228_8 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76103 () (_ BitVec 64))
(declare-fun temp6228_9 () (_ BitVec 64))
(declare-fun temp6228_10 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp6228_11 () (_ BitVec 64))
(declare-fun temp6228_12 () (_ BitVec 64))
(declare-fun temp6228_13 () (_ BitVec 64))
(declare-fun temp6228_14 () (_ BitVec 64))
(declare-fun temp6228_15 () (_ BitVec 64))
(declare-fun temp6228_16 () (_ BitVec 64))
(declare-fun temp6228_17 () (_ BitVec 64))
(declare-fun temp6228_18 () (_ BitVec 64))
(declare-fun temp6228_19 () (_ BitVec 64))
(declare-fun temp6228_20 () (_ BitVec 64))
(declare-fun temp6228_21 () (_ BitVec 64))
(declare-fun temp6228_22 () (_ BitVec 64))
(declare-fun temp6228_23 () (_ BitVec 64))
(declare-fun var76131 () (_ BitVec 64))
(declare-fun temp6228_24 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp6228_25 () (_ BitVec 64))
(declare-fun temp6228_26 () (_ BitVec 64))
(declare-fun temp6228_27 () (_ BitVec 64))
(declare-fun temp6228_28 () (_ BitVec 64))
(declare-fun temp6228_29 () (_ BitVec 64))
(declare-fun temp6228_30 () (_ BitVec 64))
(declare-fun temp6228_31 () (_ BitVec 64))
(declare-fun temp6228_32 () (_ BitVec 64))
(declare-fun temp6228_33 () (_ BitVec 64))
(declare-fun temp6228_34 () (_ BitVec 64))
(declare-fun temp6228_35 () (_ BitVec 64))
(declare-fun temp6228_36 () (_ BitVec 64))
(declare-fun temp6228_37 () (_ BitVec 64))
(declare-fun var76165 () (_ BitVec 64))
(declare-fun temp6228_38 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var76268 () (_ BitVec 64))
(declare-fun temp6228_39 () (_ BitVec 64))
(declare-fun temp6228_40 () (_ BitVec 64))
(declare-fun var341046 () (_ BitVec 64))
(declare-fun temp6228_41 () (_ BitVec 64))
(declare-fun var341064 () (_ BitVec 64))
(declare-fun temp6228_42 () (_ BitVec 64))
(declare-fun temp6228_44 () (_ BitVec 64))
(declare-fun temp6228_43 () (_ BitVec 64))
(declare-fun temp6228_46 () (_ BitVec 64))
(declare-fun temp6228_45 () (_ BitVec 64))
(declare-fun temp6228_47 () (_ BitVec 64))
(declare-fun var472118 () (_ BitVec 64))
(declare-fun temp6228_48 () (_ BitVec 64))
(declare-fun var472136 () (_ BitVec 64))
(declare-fun temp6228_49 () (_ BitVec 64))
(declare-fun temp6228_50 () (_ BitVec 64))
(declare-fun var603190 () (_ BitVec 64))
(declare-fun temp6228_51 () (_ BitVec 64))
(declare-fun var603208 () (_ BitVec 64))
(declare-fun temp6228_52 () (_ BitVec 64))
(declare-fun temp6228_54 () (_ BitVec 64))
(declare-fun temp6228_53 () (_ BitVec 64))
(declare-fun temp6228_56 () (_ BitVec 64))
(declare-fun temp6228_55 () (_ BitVec 64))
(declare-fun temp6228_58 () (_ BitVec 64))
(declare-fun temp6228_57 () (_ BitVec 64))
(declare-fun temp6228_60 () (_ BitVec 64))
(declare-fun temp6228_59 () (_ BitVec 64))
(declare-fun temp6228_62 () (_ BitVec 64))
(declare-fun temp6228_61 () (_ BitVec 64))
(declare-fun temp6228_64 () (_ BitVec 64))
(declare-fun temp6228_63 () (_ BitVec 64))
(declare-fun temp6228_65 () (_ BitVec 64))
(declare-fun var926770 () (_ BitVec 64))
(declare-fun temp6228_66 () (_ BitVec 64))
(declare-fun var926771 () (_ BitVec 64))
(declare-fun var926772 () (_ BitVec 64))
(declare-fun var926768 () (_ BitVec 64))
(declare-fun var664540 () (_ BitVec 64))
(declare-fun temp6228_67 () (_ BitVec 64))
(declare-fun var992306 () (_ BitVec 64))
(declare-fun temp6228_68 () (_ BitVec 64))
(declare-fun var992307 () (_ BitVec 64))
(declare-fun var992308 () (_ BitVec 64))
(declare-fun var992304 () (_ BitVec 64))
(declare-fun var664547 () (_ BitVec 64))
(declare-fun temp6228_69 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp6228_70 () (_ BitVec 64))
(declare-fun var1057843 () (_ BitVec 64))
(declare-fun var1057844 () (_ BitVec 64))
(declare-fun var1057840 () (_ BitVec 64))
(declare-fun var664552 () (_ BitVec 64))
(declare-fun var76450 () (_ BitVec 64))
(declare-fun temp6228_71 () (_ BitVec 64))
(declare-fun temp6228_72 () (_ BitVec 64))
(declare-fun var76511 () (_ BitVec 64))
(declare-fun var76512 () (_ BitVec 64))
(declare-fun temp6228_74 () (_ BitVec 64))
(declare-fun temp6228_73 () (_ BitVec 64))
(declare-fun temp6228_76 () (_ BitVec 64))
(declare-fun temp6228_75 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp6228_1 #x0000000000000001))
(assert (= var139826
   (ite (= ARGNAME_filter_sizes_NAMEEND_DIM temp6228_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var139820 var139826))
(assert (= var75949 var139820))
(assert (= temp6228_2 #x0000000000000001))
(assert (= var75949 temp6228_2))
(assert (= temp6228_3 #x0000000000000000))
(assert (= var76022 temp6228_3))
(assert (= var76026 var76022))
(assert (= temp6228_4 #x0000000000000000))
(assert (= var76027 (ite (= var76026 temp6228_4) #x0000000000000001 #x0000000000000000)))
(assert (= temp6228_5 #x0000000000000001))
(assert (= var76027 temp6228_5))
(assert (= temp6228_6 #x0000000000000005))
(assert (= var76042
   (ite (= ARGNAME_input_NAMEEND_DIM temp6228_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6228_7 #x0000000000000001))
(assert (= var76042 temp6228_7))
(assert (= temp6228_8 #x0000000000000005))
(assert (= var76103
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp6228_8)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6228_9 #x0000000000000001))
(assert (= var76103 temp6228_9))
(assert (= temp6228_10 #x0000000000000000))
(assert (= temp6228_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp6228_10)))
(assert (= temp6228_12 #x0000000000000001))
(assert (= temp6228_13 (select ARGNAME_input_NAMEEND_DIMSIZE temp6228_12)))
(assert (= temp6228_14 #x0000000000000002))
(assert (= temp6228_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp6228_14)))
(assert (= temp6228_16 #x0000000000000003))
(assert (= temp6228_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp6228_16)))
(assert (= temp6228_18 #x0000000000000004))
(assert (= temp6228_19 (select ARGNAME_input_NAMEEND_DIMSIZE temp6228_18)))
(assert (= temp6228_20 #x0000000000000005))
(assert (= temp6228_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp6228_20)))
(assert (= temp6228_22 #x0000000000000004))
(assert (= temp6228_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp6228_22)))
(assert (= var76131 temp6228_23))
(assert (= temp6228_24 #x0000000000000000))
(assert (= temp6228_25 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp6228_24)))
(assert (= temp6228_26 #x0000000000000001))
(assert (= temp6228_27 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp6228_26)))
(assert (= temp6228_28 #x0000000000000002))
(assert (= temp6228_29 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp6228_28)))
(assert (= temp6228_30 #x0000000000000003))
(assert (= temp6228_31 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp6228_30)))
(assert (= temp6228_32 #x0000000000000004))
(assert (= temp6228_33 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp6228_32)))
(assert (= temp6228_34 #x0000000000000005))
(assert (= temp6228_35 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp6228_34)))
(assert (= temp6228_36 #x0000000000000004))
(assert (= temp6228_37 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp6228_36)))
(assert (= var76165 temp6228_37))
(assert (= temp6228_38 #x0000000000000000))
(assert (= var76268
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp6228_38)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6228_39 #x0000000000000000))
(assert (= var76268 temp6228_39))
(assert (= temp6228_40 #x0000000000000001))
(assert (= var341046 temp6228_40))
(assert (= temp6228_41 #x0000000000000001))
(assert (= var341064
   (ite (bvslt var341046 temp6228_41) #x0000000000000001 #x0000000000000000)))
(assert (= temp6228_42 #x0000000000000000))
(assert (= var341064 temp6228_42))
(assert (= temp6228_44 #x0000000000000000))
(assert (= temp6228_43 temp6228_44))
(assert (= temp6228_46 #x0000000000000000))
(assert (= temp6228_45 temp6228_46))
(assert (= temp6228_47 #x0000000000000001))
(assert (= var472118 temp6228_47))
(assert (= temp6228_48 #x0000000000000001))
(assert (= var472136
   (ite (bvslt var472118 temp6228_48) #x0000000000000001 #x0000000000000000)))
(assert (= temp6228_49 #x0000000000000000))
(assert (= var472136 temp6228_49))
(assert (= temp6228_50 #x0000000000000001))
(assert (= var603190 temp6228_50))
(assert (= temp6228_51 #x0000000000000001))
(assert (= var603208
   (ite (bvslt var603190 temp6228_51) #x0000000000000001 #x0000000000000000)))
(assert (= temp6228_52 #x0000000000000000))
(assert (= var603208 temp6228_52))
(assert (= temp6228_54 #x00000000000000ff))
(assert (= temp6228_53 temp6228_54))
(assert (= temp6228_56 #x00000000000000ff))
(assert (= temp6228_55 temp6228_56))
(assert (= temp6228_58 #x00000000000000ff))
(assert (= temp6228_57 temp6228_58))
(assert (= temp6228_60 #x0000000000000000))
(assert (= temp6228_59 temp6228_60))
(assert (= temp6228_62 #x0000000000000000))
(assert (= temp6228_61 temp6228_62))
(assert (= temp6228_64 #x0000000000000000))
(assert (= temp6228_63 temp6228_64))
(assert (= temp6228_65 #x0000000000008000))
(assert (= var926770 temp6228_65))
(assert (= temp6228_66 #x0000000000000001))
(assert (= var926771
   (ite (bvslt temp6228_63 temp6228_66) #x0000000000000001 #x0000000000000000)))
(assert (= var926772 (ite (= var926771 #x0000000000000001) var926770 temp6228_63)))
(assert (= var926768 var926772))
(assert (= var664540 var926768))
(assert (= temp6228_67 #x0000000000040000))
(assert (= var992306 temp6228_67))
(assert (= temp6228_68 #x0000000000000001))
(assert (= var992307
   (ite (bvslt temp6228_61 temp6228_68) #x0000000000000001 #x0000000000000000)))
(assert (= var992308 (ite (= var992307 #x0000000000000001) var992306 temp6228_61)))
(assert (= var992304 var992308))
(assert (= var664547 var992304))
(assert (= temp6228_69 #x0000000000200000))
(assert (= var1057842 temp6228_69))
(assert (= temp6228_70 #x0000000000000001))
(assert (= var1057843
   (ite (bvslt temp6228_59 temp6228_70) #x0000000000000001 #x0000000000000000)))
(assert (= var1057844 (ite (= var1057843 #x0000000000000001) var1057842 temp6228_59)))
(assert (= var1057840 var1057844))
(assert (= var664552 var1057840))
(assert (= var76450 var664552))
(assert (= temp6228_71 #x0000000000000003))
(assert (= temp6228_72 #xffffffffffffffff))
(assert (= var76512 (bvadd var76511 temp6228_72)))
(assert (= temp6228_74 #x0000000000000000))
(assert (= temp6228_73 temp6228_74))
(assert (= temp6228_76 #x0000000000000000))
(assert (= temp6228_75 temp6228_76))
(model-add temp6228_1 () (_ BitVec 64) #x0000000000000001)
(model-add var139826 () (_ BitVec 64) #x0000000000000001)
(model-add var139820 () (_ BitVec 64) #x0000000000000001)
(model-add temp6228_2 () (_ BitVec 64) #x0000000000000001)
(model-add var75949 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_sizes_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))


