(declare-fun temp8558_1 () (_ BitVec 64))
(declare-fun var139826 () (_ BitVec 64))
(declare-fun var139820 () (_ BitVec 64))
(declare-fun temp8558_2 () (_ BitVec 64))
(declare-fun var75949 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_sizes_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp8558_3 () (_ BitVec 64))
(declare-fun var76022 () (_ BitVec 64))
(declare-fun var76026 () (_ BitVec 64))
(declare-fun temp8558_4 () (_ BitVec 64))
(declare-fun var76027 () (_ BitVec 64))
(declare-fun temp8558_5 () (_ BitVec 64))
(declare-fun temp8558_6 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76042 () (_ BitVec 64))
(declare-fun temp8558_7 () (_ BitVec 64))
(declare-fun temp8558_8 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76103 () (_ BitVec 64))
(declare-fun temp8558_9 () (_ BitVec 64))
(declare-fun temp8558_10 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp8558_11 () (_ BitVec 64))
(declare-fun temp8558_12 () (_ BitVec 64))
(declare-fun temp8558_13 () (_ BitVec 64))
(declare-fun temp8558_14 () (_ BitVec 64))
(declare-fun temp8558_15 () (_ BitVec 64))
(declare-fun temp8558_16 () (_ BitVec 64))
(declare-fun temp8558_17 () (_ BitVec 64))
(declare-fun temp8558_18 () (_ BitVec 64))
(declare-fun temp8558_19 () (_ BitVec 64))
(declare-fun temp8558_20 () (_ BitVec 64))
(declare-fun temp8558_21 () (_ BitVec 64))
(declare-fun temp8558_22 () (_ BitVec 64))
(declare-fun temp8558_23 () (_ BitVec 64))
(declare-fun var76131 () (_ BitVec 64))
(declare-fun temp8558_24 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp8558_25 () (_ BitVec 64))
(declare-fun temp8558_26 () (_ BitVec 64))
(declare-fun temp8558_27 () (_ BitVec 64))
(declare-fun temp8558_28 () (_ BitVec 64))
(declare-fun temp8558_29 () (_ BitVec 64))
(declare-fun temp8558_30 () (_ BitVec 64))
(declare-fun temp8558_31 () (_ BitVec 64))
(declare-fun temp8558_32 () (_ BitVec 64))
(declare-fun temp8558_33 () (_ BitVec 64))
(declare-fun temp8558_34 () (_ BitVec 64))
(declare-fun temp8558_35 () (_ BitVec 64))
(declare-fun temp8558_36 () (_ BitVec 64))
(declare-fun temp8558_37 () (_ BitVec 64))
(declare-fun var76165 () (_ BitVec 64))
(declare-fun temp8558_38 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var76268 () (_ BitVec 64))
(declare-fun temp8558_39 () (_ BitVec 64))
(declare-fun temp8558_40 () (_ BitVec 64))
(declare-fun var341046 () (_ BitVec 64))
(declare-fun temp8558_41 () (_ BitVec 64))
(declare-fun var341064 () (_ BitVec 64))
(declare-fun temp8558_42 () (_ BitVec 64))
(declare-fun temp8558_43 () (_ BitVec 64))
(declare-fun var472118 () (_ BitVec 64))
(declare-fun temp8558_44 () (_ BitVec 64))
(declare-fun var472136 () (_ BitVec 64))
(declare-fun temp8558_45 () (_ BitVec 64))
(declare-fun temp8558_47 () (_ BitVec 64))
(declare-fun temp8558_46 () (_ BitVec 64))
(declare-fun temp8558_48 () (_ BitVec 64))
(declare-fun var668726 () (_ BitVec 64))
(declare-fun temp8558_49 () (_ BitVec 64))
(declare-fun var668744 () (_ BitVec 64))
(declare-fun temp8558_50 () (_ BitVec 64))
(declare-fun temp8558_52 () (_ BitVec 64))
(declare-fun temp8558_51 () (_ BitVec 64))
(declare-fun temp8558_54 () (_ BitVec 64))
(declare-fun temp8558_53 () (_ BitVec 64))
(declare-fun temp8558_56 () (_ BitVec 64))
(declare-fun temp8558_55 () (_ BitVec 64))
(declare-fun temp8558_58 () (_ BitVec 64))
(declare-fun temp8558_57 () (_ BitVec 64))
(declare-fun temp8558_60 () (_ BitVec 64))
(declare-fun temp8558_59 () (_ BitVec 64))
(declare-fun temp8558_61 () (_ BitVec 64))
(declare-fun var861259 () (_ BitVec 64))
(declare-fun var861238 () (_ BitVec 64))
(declare-fun var795670 () (_ BitVec 64))
(declare-fun temp8558_62 () (_ BitVec 64))
(declare-fun temp8558_63 () (_ BitVec 64))
(declare-fun var926795 () (_ BitVec 64))
(declare-fun var926774 () (_ BitVec 64))
(declare-fun var795680 () (_ BitVec 64))
(declare-fun temp8558_64 () (_ BitVec 64))
(declare-fun temp8558_66 () (_ BitVec 64))
(declare-fun temp8558_65 () (_ BitVec 64))
(declare-fun temp8558_68 () (_ BitVec 64))
(declare-fun temp8558_67 () (_ BitVec 64))
(declare-fun temp8558_70 () (_ BitVec 64))
(declare-fun temp8558_69 () (_ BitVec 64))
(declare-fun temp8558_71 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp8558_72 () (_ BitVec 64))
(declare-fun var1123379 () (_ BitVec 64))
(declare-fun var1123380 () (_ BitVec 64))
(declare-fun var1123376 () (_ BitVec 64))
(declare-fun var730076 () (_ BitVec 64))
(declare-fun temp8558_73 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp8558_74 () (_ BitVec 64))
(declare-fun var1188915 () (_ BitVec 64))
(declare-fun var1188916 () (_ BitVec 64))
(declare-fun var1188912 () (_ BitVec 64))
(declare-fun var730083 () (_ BitVec 64))
(declare-fun temp8558_75 () (_ BitVec 64))
(declare-fun var1254450 () (_ BitVec 64))
(declare-fun temp8558_76 () (_ BitVec 64))
(declare-fun var1254451 () (_ BitVec 64))
(declare-fun var1254452 () (_ BitVec 64))
(declare-fun var1254448 () (_ BitVec 64))
(declare-fun var730088 () (_ BitVec 64))
(declare-fun var76450 () (_ BitVec 64))
(declare-fun temp8558_77 () (_ BitVec 64))
(declare-fun temp8558_78 () (_ BitVec 64))
(declare-fun var76511 () (_ BitVec 64))
(declare-fun var76512 () (_ BitVec 64))
(declare-fun temp8558_80 () (_ BitVec 64))
(declare-fun temp8558_79 () (_ BitVec 64))
(declare-fun temp8558_82 () (_ BitVec 64))
(declare-fun temp8558_81 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp8558_1 #x0000000000000001))
(assert (= var139826
   (ite (= ARGNAME_filter_sizes_NAMEEND_DIM temp8558_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var139820 var139826))
(assert (= var75949 var139820))
(assert (= temp8558_2 #x0000000000000001))
(assert (= var75949 temp8558_2))
(assert (= temp8558_3 #x0000000000000000))
(assert (= var76022 temp8558_3))
(assert (= var76026 var76022))
(assert (= temp8558_4 #x0000000000000000))
(assert (= var76027 (ite (= var76026 temp8558_4) #x0000000000000001 #x0000000000000000)))
(assert (= temp8558_5 #x0000000000000001))
(assert (= var76027 temp8558_5))
(assert (= temp8558_6 #x0000000000000005))
(assert (= var76042
   (ite (= ARGNAME_input_NAMEEND_DIM temp8558_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8558_7 #x0000000000000001))
(assert (= var76042 temp8558_7))
(assert (= temp8558_8 #x0000000000000005))
(assert (= var76103
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp8558_8)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8558_9 #x0000000000000001))
(assert (= var76103 temp8558_9))
(assert (= temp8558_10 #x0000000000000000))
(assert (= temp8558_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp8558_10)))
(assert (= temp8558_12 #x0000000000000001))
(assert (= temp8558_13 (select ARGNAME_input_NAMEEND_DIMSIZE temp8558_12)))
(assert (= temp8558_14 #x0000000000000002))
(assert (= temp8558_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp8558_14)))
(assert (= temp8558_16 #x0000000000000003))
(assert (= temp8558_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp8558_16)))
(assert (= temp8558_18 #x0000000000000004))
(assert (= temp8558_19 (select ARGNAME_input_NAMEEND_DIMSIZE temp8558_18)))
(assert (= temp8558_20 #x0000000000000005))
(assert (= temp8558_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp8558_20)))
(assert (= temp8558_22 #x0000000000000004))
(assert (= temp8558_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp8558_22)))
(assert (= var76131 temp8558_23))
(assert (= temp8558_24 #x0000000000000000))
(assert (= temp8558_25 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8558_24)))
(assert (= temp8558_26 #x0000000000000001))
(assert (= temp8558_27 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8558_26)))
(assert (= temp8558_28 #x0000000000000002))
(assert (= temp8558_29 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8558_28)))
(assert (= temp8558_30 #x0000000000000003))
(assert (= temp8558_31 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8558_30)))
(assert (= temp8558_32 #x0000000000000004))
(assert (= temp8558_33 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8558_32)))
(assert (= temp8558_34 #x0000000000000005))
(assert (= temp8558_35 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8558_34)))
(assert (= temp8558_36 #x0000000000000004))
(assert (= temp8558_37 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8558_36)))
(assert (= var76165 temp8558_37))
(assert (= temp8558_38 #x0000000000000000))
(assert (= var76268
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp8558_38)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8558_39 #x0000000000000000))
(assert (= var76268 temp8558_39))
(assert (= temp8558_40 #x0000000000000001))
(assert (= var341046 temp8558_40))
(assert (= temp8558_41 #x0000000000000001))
(assert (= var341064
   (ite (bvslt var341046 temp8558_41) #x0000000000000001 #x0000000000000000)))
(assert (= temp8558_42 #x0000000000000000))
(assert (= var341064 temp8558_42))
(assert (= temp8558_43 #x0000000000000001))
(assert (= var472118 temp8558_43))
(assert (= temp8558_44 #x0000000000000001))
(assert (= var472136
   (ite (bvslt var472118 temp8558_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp8558_45 #x0000000000000000))
(assert (= var472136 temp8558_45))
(assert (= temp8558_47 #x0000000000000000))
(assert (= temp8558_46 temp8558_47))
(assert (= temp8558_48 #x0000000000000001))
(assert (= var668726 temp8558_48))
(assert (= temp8558_49 #x0000000000000001))
(assert (= var668744
   (ite (bvslt var668726 temp8558_49) #x0000000000000001 #x0000000000000000)))
(assert (= temp8558_50 #x0000000000000000))
(assert (= var668744 temp8558_50))
(assert (= temp8558_52 #x0000000000000000))
(assert (= temp8558_51 temp8558_52))
(assert (= temp8558_54 #x0000000000000000))
(assert (= temp8558_53 temp8558_54))
(assert (= temp8558_56 #x00000000000000ff))
(assert (= temp8558_55 temp8558_56))
(assert (= temp8558_58 #x00000000000000ff))
(assert (= temp8558_57 temp8558_58))
(assert (= temp8558_60 #x00000000000000ff))
(assert (= temp8558_59 temp8558_60))
(assert (= temp8558_61 #x0000000000000000))
(assert (= var861259 temp8558_61))
(assert (= var861238 var861259))
(assert (= var795670 var861238))
(assert (= temp8558_62 #x0000000000000000))
(assert (= var795670 temp8558_62))
(assert (= temp8558_63 #x0000000000000000))
(assert (= var926795 temp8558_63))
(assert (= var926774 var926795))
(assert (= var795680 var926774))
(assert (= temp8558_64 #x0000000000000000))
(assert (= var795680 temp8558_64))
(assert (= temp8558_66 #x0000000000000000))
(assert (= temp8558_65 temp8558_66))
(assert (= temp8558_68 #x0000000000000000))
(assert (= temp8558_67 temp8558_68))
(assert (= temp8558_70 #x0000000000000000))
(assert (= temp8558_69 temp8558_70))
(assert (= temp8558_71 #x0000000000008000))
(assert (= var1123378 temp8558_71))
(assert (= temp8558_72 #x0000000000000001))
(assert (= var1123379
   (ite (bvslt temp8558_69 temp8558_72) #x0000000000000001 #x0000000000000000)))
(assert (= var1123380 (ite (= var1123379 #x0000000000000001) var1123378 temp8558_69)))
(assert (= var1123376 var1123380))
(assert (= var730076 var1123376))
(assert (= temp8558_73 #x0000000000040000))
(assert (= var1188914 temp8558_73))
(assert (= temp8558_74 #x0000000000000001))
(assert (= var1188915
   (ite (bvslt temp8558_67 temp8558_74) #x0000000000000001 #x0000000000000000)))
(assert (= var1188916 (ite (= var1188915 #x0000000000000001) var1188914 temp8558_67)))
(assert (= var1188912 var1188916))
(assert (= var730083 var1188912))
(assert (= temp8558_75 #x0000000000200000))
(assert (= var1254450 temp8558_75))
(assert (= temp8558_76 #x0000000000000001))
(assert (= var1254451
   (ite (bvslt temp8558_65 temp8558_76) #x0000000000000001 #x0000000000000000)))
(assert (= var1254452 (ite (= var1254451 #x0000000000000001) var1254450 temp8558_65)))
(assert (= var1254448 var1254452))
(assert (= var730088 var1254448))
(assert (= var76450 var730088))
(assert (= temp8558_77 #x0000000000000003))
(assert (= temp8558_78 #xffffffffffffffff))
(assert (= var76512 (bvadd var76511 temp8558_78)))
(assert (= temp8558_80 #x0000000000000000))
(assert (= temp8558_79 temp8558_80))
(assert (= temp8558_82 #x0000000000000000))
(assert (= temp8558_81 temp8558_82))
(model-add temp8558_1 () (_ BitVec 64) #x0000000000000001)
(model-add var139826 () (_ BitVec 64) #x0000000000000001)
(model-add var139820 () (_ BitVec 64) #x0000000000000001)
(model-add temp8558_2 () (_ BitVec 64) #x0000000000000001)
(model-add var75949 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_sizes_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))


