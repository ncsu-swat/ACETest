(declare-fun temp605_1 () (_ BitVec 64))
(declare-fun temp605_2 () (_ BitVec 64))
(declare-fun var76042 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp605_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76103 () (_ BitVec 64))
(declare-fun temp605_4 () (_ BitVec 64))
(declare-fun temp605_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp605_6 () (_ BitVec 64))
(declare-fun temp605_7 () (_ BitVec 64))
(declare-fun temp605_8 () (_ BitVec 64))
(declare-fun temp605_9 () (_ BitVec 64))
(declare-fun temp605_10 () (_ BitVec 64))
(declare-fun temp605_11 () (_ BitVec 64))
(declare-fun temp605_12 () (_ BitVec 64))
(declare-fun temp605_13 () (_ BitVec 64))
(declare-fun temp605_14 () (_ BitVec 64))
(declare-fun temp605_15 () (_ BitVec 64))
(declare-fun temp605_16 () (_ BitVec 64))
(declare-fun temp605_17 () (_ BitVec 64))
(declare-fun temp605_18 () (_ BitVec 64))
(declare-fun var76131 () (_ BitVec 64))
(declare-fun temp605_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp605_20 () (_ BitVec 64))
(declare-fun temp605_21 () (_ BitVec 64))
(declare-fun temp605_22 () (_ BitVec 64))
(declare-fun temp605_23 () (_ BitVec 64))
(declare-fun temp605_24 () (_ BitVec 64))
(declare-fun temp605_25 () (_ BitVec 64))
(declare-fun temp605_26 () (_ BitVec 64))
(declare-fun temp605_27 () (_ BitVec 64))
(declare-fun temp605_28 () (_ BitVec 64))
(declare-fun temp605_29 () (_ BitVec 64))
(declare-fun temp605_30 () (_ BitVec 64))
(declare-fun temp605_31 () (_ BitVec 64))
(declare-fun temp605_32 () (_ BitVec 64))
(declare-fun var76165 () (_ BitVec 64))
(declare-fun temp605_33 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var76268 () (_ BitVec 64))
(declare-fun temp605_34 () (_ BitVec 64))
(declare-fun temp605_35 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp605_36 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp605_37 () (_ BitVec 64))
(declare-fun temp605_38 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp605_39 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp605_40 () (_ BitVec 64))
(declare-fun temp605_42 () (_ BitVec 64))
(declare-fun temp605_41 () (_ BitVec 64))
(declare-fun temp605_44 () (_ BitVec 64))
(declare-fun temp605_43 () (_ BitVec 64))
(declare-fun temp605_45 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp605_46 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp605_47 () (_ BitVec 64))
(declare-fun temp605_49 () (_ BitVec 64))
(declare-fun temp605_48 () (_ BitVec 64))
(declare-fun temp605_51 () (_ BitVec 64))
(declare-fun temp605_50 () (_ BitVec 64))
(declare-fun temp605_53 () (_ BitVec 64))
(declare-fun temp605_52 () (_ BitVec 64))
(declare-fun temp605_55 () (_ BitVec 64))
(declare-fun temp605_54 () (_ BitVec 64))
(declare-fun temp605_56 () (_ BitVec 64))
(declare-fun var795723 () (_ BitVec 64))
(declare-fun var795702 () (_ BitVec 64))
(declare-fun var730134 () (_ BitVec 64))
(declare-fun temp605_57 () (_ BitVec 64))
(declare-fun temp605_58 () (_ BitVec 64))
(declare-fun var861259 () (_ BitVec 64))
(declare-fun var861238 () (_ BitVec 64))
(declare-fun var730144 () (_ BitVec 64))
(declare-fun temp605_59 () (_ BitVec 64))
(declare-fun temp605_60 () (_ BitVec 64))
(declare-fun var926795 () (_ BitVec 64))
(declare-fun var926774 () (_ BitVec 64))
(declare-fun var730147 () (_ BitVec 64))
(declare-fun temp605_61 () (_ BitVec 64))
(declare-fun temp605_63 () (_ BitVec 64))
(declare-fun temp605_62 () (_ BitVec 64))
(declare-fun temp605_65 () (_ BitVec 64))
(declare-fun temp605_64 () (_ BitVec 64))
(declare-fun temp605_67 () (_ BitVec 64))
(declare-fun temp605_66 () (_ BitVec 64))
(declare-fun temp605_68 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp605_69 () (_ BitVec 64))
(declare-fun var1057843 () (_ BitVec 64))
(declare-fun var1057844 () (_ BitVec 64))
(declare-fun var1057840 () (_ BitVec 64))
(declare-fun var664540 () (_ BitVec 64))
(declare-fun temp605_70 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp605_71 () (_ BitVec 64))
(declare-fun var1123379 () (_ BitVec 64))
(declare-fun var1123380 () (_ BitVec 64))
(declare-fun var1123376 () (_ BitVec 64))
(declare-fun var664547 () (_ BitVec 64))
(declare-fun temp605_72 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp605_73 () (_ BitVec 64))
(declare-fun var1188915 () (_ BitVec 64))
(declare-fun var1188916 () (_ BitVec 64))
(declare-fun var1188912 () (_ BitVec 64))
(declare-fun var664552 () (_ BitVec 64))
(declare-fun var76450 () (_ BitVec 64))
(declare-fun temp605_74 () (_ BitVec 64))
(declare-fun temp605_75 () (_ BitVec 64))
(declare-fun var76511 () (_ BitVec 64))
(declare-fun var76512 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp605_1 #x0000000000000005))
(assert (= var76042
   (ite (= ARGNAME_input_NAMEEND_DIM temp605_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_2 #x0000000000000001))
(assert (= var76042 temp605_2))
(assert (= temp605_3 #x0000000000000005))
(assert (= var76103
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp605_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_4 #x0000000000000001))
(assert (= var76103 temp605_4))
(assert (= temp605_5 #x0000000000000000))
(assert (= temp605_6 (select ARGNAME_input_NAMEEND_DIMSIZE temp605_5)))
(assert (= temp605_7 #x0000000000000001))
(assert (= temp605_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp605_7)))
(assert (= temp605_9 #x0000000000000002))
(assert (= temp605_10 (select ARGNAME_input_NAMEEND_DIMSIZE temp605_9)))
(assert (= temp605_11 #x0000000000000003))
(assert (= temp605_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp605_11)))
(assert (= temp605_13 #x0000000000000004))
(assert (= temp605_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp605_13)))
(assert (= temp605_15 #x0000000000000005))
(assert (= temp605_16 (select ARGNAME_input_NAMEEND_DIMSIZE temp605_15)))
(assert (= temp605_17 #x0000000000000004))
(assert (= temp605_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp605_17)))
(assert (= var76131 temp605_18))
(assert (= temp605_19 #x0000000000000000))
(assert (= temp605_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp605_19)))
(assert (= temp605_21 #x0000000000000001))
(assert (= temp605_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp605_21)))
(assert (= temp605_23 #x0000000000000002))
(assert (= temp605_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp605_23)))
(assert (= temp605_25 #x0000000000000003))
(assert (= temp605_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp605_25)))
(assert (= temp605_27 #x0000000000000004))
(assert (= temp605_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp605_27)))
(assert (= temp605_29 #x0000000000000005))
(assert (= temp605_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp605_29)))
(assert (= temp605_31 #x0000000000000004))
(assert (= temp605_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp605_31)))
(assert (= var76165 temp605_32))
(assert (= temp605_33 #x0000000000000000))
(assert (= var76268
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp605_33)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_34 #x0000000000000000))
(assert (= var76268 temp605_34))
(assert (= temp605_35 #x0000000000000001))
(assert (= var275510 temp605_35))
(assert (= temp605_36 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp605_36) #x0000000000000001 #x0000000000000000)))
(assert (= temp605_37 #x0000000000000000))
(assert (= var275528 temp605_37))
(assert (= temp605_38 #x0000000000000001))
(assert (= var406582 temp605_38))
(assert (= temp605_39 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp605_39) #x0000000000000001 #x0000000000000000)))
(assert (= temp605_40 #x0000000000000000))
(assert (= var406600 temp605_40))
(assert (= temp605_42 #x0000000000000000))
(assert (= temp605_41 temp605_42))
(assert (= temp605_44 #x0000000000000000))
(assert (= temp605_43 temp605_44))
(assert (= temp605_45 #x0000000000000001))
(assert (= var537654 temp605_45))
(assert (= temp605_46 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp605_46) #x0000000000000001 #x0000000000000000)))
(assert (= temp605_47 #x0000000000000000))
(assert (= var537672 temp605_47))
(assert (= temp605_49 #x0000000000000000))
(assert (= temp605_48 temp605_49))
(assert (= temp605_51 #x00000000000000ff))
(assert (= temp605_50 temp605_51))
(assert (= temp605_53 #x00000000000000ff))
(assert (= temp605_52 temp605_53))
(assert (= temp605_55 #x00000000000000ff))
(assert (= temp605_54 temp605_55))
(assert (= temp605_56 #x0000000000000000))
(assert (= var795723 temp605_56))
(assert (= var795702 var795723))
(assert (= var730134 var795702))
(assert (= temp605_57 #x0000000000000000))
(assert (= var730134 temp605_57))
(assert (= temp605_58 #x0000000000000000))
(assert (= var861259 temp605_58))
(assert (= var861238 var861259))
(assert (= var730144 var861238))
(assert (= temp605_59 #x0000000000000000))
(assert (= var730144 temp605_59))
(assert (= temp605_60 #x0000000000000000))
(assert (= var926795 temp605_60))
(assert (= var926774 var926795))
(assert (= var730147 var926774))
(assert (= temp605_61 #x0000000000000000))
(assert (= var730147 temp605_61))
(assert (= temp605_63 #x0000000000000000))
(assert (= temp605_62 temp605_63))
(assert (= temp605_65 #x0000000000000000))
(assert (= temp605_64 temp605_65))
(assert (= temp605_67 #x0000000000000000))
(assert (= temp605_66 temp605_67))
(assert (= temp605_68 #x0000000000008000))
(assert (= var1057842 temp605_68))
(assert (= temp605_69 #x0000000000000001))
(assert (= var1057843
   (ite (bvslt temp605_66 temp605_69) #x0000000000000001 #x0000000000000000)))
(assert (= var1057844 (ite (= var1057843 #x0000000000000001) var1057842 temp605_66)))
(assert (= var1057840 var1057844))
(assert (= var664540 var1057840))
(assert (= temp605_70 #x0000000000040000))
(assert (= var1123378 temp605_70))
(assert (= temp605_71 #x0000000000000001))
(assert (= var1123379
   (ite (bvslt temp605_64 temp605_71) #x0000000000000001 #x0000000000000000)))
(assert (= var1123380 (ite (= var1123379 #x0000000000000001) var1123378 temp605_64)))
(assert (= var1123376 var1123380))
(assert (= var664547 var1123376))
(assert (= temp605_72 #x0000000000200000))
(assert (= var1188914 temp605_72))
(assert (= temp605_73 #x0000000000000001))
(assert (= var1188915
   (ite (bvslt temp605_62 temp605_73) #x0000000000000001 #x0000000000000000)))
(assert (= var1188916 (ite (= var1188915 #x0000000000000001) var1188914 temp605_62)))
(assert (= var1188912 var1188916))
(assert (= var664552 var1188912))
(assert (= var76450 var664552))
(assert (= temp605_74 #x0000000000000003))
(assert (= temp605_75 #xffffffffffffffff))
(assert (= var76512 (bvadd var76511 temp605_75)))
(model-add temp605_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp605_2 () (_ BitVec 64) #x0000000000000001)
(model-add var76042 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))



