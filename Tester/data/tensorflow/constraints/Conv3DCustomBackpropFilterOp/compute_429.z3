(declare-fun temp668_1 () (_ BitVec 64))
(declare-fun temp668_2 () (_ BitVec 64))
(declare-fun var76042 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp668_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76103 () (_ BitVec 64))
(declare-fun temp668_4 () (_ BitVec 64))
(declare-fun temp668_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp668_6 () (_ BitVec 64))
(declare-fun temp668_7 () (_ BitVec 64))
(declare-fun temp668_8 () (_ BitVec 64))
(declare-fun temp668_9 () (_ BitVec 64))
(declare-fun temp668_10 () (_ BitVec 64))
(declare-fun temp668_11 () (_ BitVec 64))
(declare-fun temp668_12 () (_ BitVec 64))
(declare-fun temp668_13 () (_ BitVec 64))
(declare-fun temp668_14 () (_ BitVec 64))
(declare-fun temp668_15 () (_ BitVec 64))
(declare-fun temp668_16 () (_ BitVec 64))
(declare-fun temp668_17 () (_ BitVec 64))
(declare-fun temp668_18 () (_ BitVec 64))
(declare-fun var76131 () (_ BitVec 64))
(declare-fun temp668_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp668_20 () (_ BitVec 64))
(declare-fun temp668_21 () (_ BitVec 64))
(declare-fun temp668_22 () (_ BitVec 64))
(declare-fun temp668_23 () (_ BitVec 64))
(declare-fun temp668_24 () (_ BitVec 64))
(declare-fun temp668_25 () (_ BitVec 64))
(declare-fun temp668_26 () (_ BitVec 64))
(declare-fun temp668_27 () (_ BitVec 64))
(declare-fun temp668_28 () (_ BitVec 64))
(declare-fun temp668_29 () (_ BitVec 64))
(declare-fun temp668_30 () (_ BitVec 64))
(declare-fun temp668_31 () (_ BitVec 64))
(declare-fun temp668_32 () (_ BitVec 64))
(declare-fun var76165 () (_ BitVec 64))
(declare-fun temp668_33 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var76268 () (_ BitVec 64))
(declare-fun temp668_34 () (_ BitVec 64))
(declare-fun temp668_35 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp668_36 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp668_37 () (_ BitVec 64))
(declare-fun temp668_38 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp668_39 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp668_40 () (_ BitVec 64))
(declare-fun temp668_41 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp668_42 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp668_43 () (_ BitVec 64))
(declare-fun temp668_45 () (_ BitVec 64))
(declare-fun temp668_44 () (_ BitVec 64))
(declare-fun temp668_47 () (_ BitVec 64))
(declare-fun temp668_46 () (_ BitVec 64))
(declare-fun temp668_49 () (_ BitVec 64))
(declare-fun temp668_48 () (_ BitVec 64))
(declare-fun temp668_50 () (_ BitVec 64))
(declare-fun var861259 () (_ BitVec 64))
(declare-fun var861238 () (_ BitVec 64))
(declare-fun var664611 () (_ BitVec 64))
(declare-fun temp668_51 () (_ BitVec 64))
(declare-fun temp668_52 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp668_53 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp668_54 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp668_1 #x0000000000000005))
(assert (= var76042
   (ite (= ARGNAME_input_NAMEEND_DIM temp668_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp668_2 #x0000000000000001))
(assert (= var76042 temp668_2))
(assert (= temp668_3 #x0000000000000005))
(assert (= var76103
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp668_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp668_4 #x0000000000000001))
(assert (= var76103 temp668_4))
(assert (= temp668_5 #x0000000000000000))
(assert (= temp668_6 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_5)))
(assert (= temp668_7 #x0000000000000001))
(assert (= temp668_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_7)))
(assert (= temp668_9 #x0000000000000002))
(assert (= temp668_10 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_9)))
(assert (= temp668_11 #x0000000000000003))
(assert (= temp668_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_11)))
(assert (= temp668_13 #x0000000000000004))
(assert (= temp668_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_13)))
(assert (= temp668_15 #x0000000000000005))
(assert (= temp668_16 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_15)))
(assert (= temp668_17 #x0000000000000004))
(assert (= temp668_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_17)))
(assert (= var76131 temp668_18))
(assert (= temp668_19 #x0000000000000000))
(assert (= temp668_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp668_19)))
(assert (= temp668_21 #x0000000000000001))
(assert (= temp668_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp668_21)))
(assert (= temp668_23 #x0000000000000002))
(assert (= temp668_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp668_23)))
(assert (= temp668_25 #x0000000000000003))
(assert (= temp668_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp668_25)))
(assert (= temp668_27 #x0000000000000004))
(assert (= temp668_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp668_27)))
(assert (= temp668_29 #x0000000000000005))
(assert (= temp668_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp668_29)))
(assert (= temp668_31 #x0000000000000004))
(assert (= temp668_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp668_31)))
(assert (= var76165 temp668_32))
(assert (= temp668_33 #x0000000000000000))
(assert (= var76268
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp668_33)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp668_34 #x0000000000000000))
(assert (= var76268 temp668_34))
(assert (= temp668_35 #x0000000000000001))
(assert (= var275510 temp668_35))
(assert (= temp668_36 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp668_36) #x0000000000000001 #x0000000000000000)))
(assert (= temp668_37 #x0000000000000000))
(assert (= var275528 temp668_37))
(assert (= temp668_38 #x0000000000000001))
(assert (= var406582 temp668_38))
(assert (= temp668_39 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp668_39) #x0000000000000001 #x0000000000000000)))
(assert (= temp668_40 #x0000000000000000))
(assert (= var406600 temp668_40))
(assert (= temp668_41 #x0000000000000001))
(assert (= var537654 temp668_41))
(assert (= temp668_42 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp668_42) #x0000000000000001 #x0000000000000000)))
(assert (= temp668_43 #x0000000000000000))
(assert (= var537672 temp668_43))
(assert (= temp668_45 #x00000000000000ff))
(assert (= temp668_44 temp668_45))
(assert (= temp668_47 #x00000000000000ff))
(assert (= temp668_46 temp668_47))
(assert (= temp668_49 #x00000000000000ff))
(assert (= temp668_48 temp668_49))
(assert (= temp668_50 #x0000000000000000))
(assert (= var861259 temp668_50))
(assert (= var861238 var861259))
(assert (= var664611 var861238))
(assert (= temp668_51 #x0000000000000000))
(assert (= var664611 temp668_51))
(assert (= temp668_52 #x0000000000008000))
(assert (= var1057842 temp668_52))
(assert (= temp668_53 #x0000000000040000))
(assert (= var1123378 temp668_53))
(assert (= temp668_54 #x0000000000200000))
(assert (= var1188914 temp668_54))
(model-add temp668_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp668_2 () (_ BitVec 64) #x0000000000000001)
(model-add var76042 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


