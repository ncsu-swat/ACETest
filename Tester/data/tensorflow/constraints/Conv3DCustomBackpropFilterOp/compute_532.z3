(declare-fun temp836_1 () (_ BitVec 64))
(declare-fun temp836_2 () (_ BitVec 64))
(declare-fun var76042 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp836_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76103 () (_ BitVec 64))
(declare-fun temp836_4 () (_ BitVec 64))
(declare-fun temp836_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp836_6 () (_ BitVec 64))
(declare-fun temp836_7 () (_ BitVec 64))
(declare-fun temp836_8 () (_ BitVec 64))
(declare-fun temp836_9 () (_ BitVec 64))
(declare-fun temp836_10 () (_ BitVec 64))
(declare-fun temp836_11 () (_ BitVec 64))
(declare-fun temp836_12 () (_ BitVec 64))
(declare-fun temp836_13 () (_ BitVec 64))
(declare-fun temp836_14 () (_ BitVec 64))
(declare-fun temp836_15 () (_ BitVec 64))
(declare-fun temp836_16 () (_ BitVec 64))
(declare-fun temp836_17 () (_ BitVec 64))
(declare-fun temp836_18 () (_ BitVec 64))
(declare-fun var76131 () (_ BitVec 64))
(declare-fun temp836_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp836_20 () (_ BitVec 64))
(declare-fun temp836_21 () (_ BitVec 64))
(declare-fun temp836_22 () (_ BitVec 64))
(declare-fun temp836_23 () (_ BitVec 64))
(declare-fun temp836_24 () (_ BitVec 64))
(declare-fun temp836_25 () (_ BitVec 64))
(declare-fun temp836_26 () (_ BitVec 64))
(declare-fun temp836_27 () (_ BitVec 64))
(declare-fun temp836_28 () (_ BitVec 64))
(declare-fun temp836_29 () (_ BitVec 64))
(declare-fun temp836_30 () (_ BitVec 64))
(declare-fun temp836_31 () (_ BitVec 64))
(declare-fun temp836_32 () (_ BitVec 64))
(declare-fun var76165 () (_ BitVec 64))
(declare-fun temp836_33 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var76268 () (_ BitVec 64))
(declare-fun temp836_34 () (_ BitVec 64))
(declare-fun temp836_35 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp836_36 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp836_37 () (_ BitVec 64))
(declare-fun temp836_38 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp836_39 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp836_40 () (_ BitVec 64))
(declare-fun temp836_41 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp836_42 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp836_43 () (_ BitVec 64))
(declare-fun temp836_45 () (_ BitVec 64))
(declare-fun temp836_44 () (_ BitVec 64))
(declare-fun temp836_47 () (_ BitVec 64))
(declare-fun temp836_46 () (_ BitVec 64))
(declare-fun temp836_49 () (_ BitVec 64))
(declare-fun temp836_48 () (_ BitVec 64))
(declare-fun temp836_50 () (_ BitVec 64))
(declare-fun var730187 () (_ BitVec 64))
(declare-fun var730166 () (_ BitVec 64))
(declare-fun var664598 () (_ BitVec 64))
(declare-fun temp836_51 () (_ BitVec 64))
(declare-fun temp836_52 () (_ BitVec 64))
(declare-fun var926770 () (_ BitVec 64))
(declare-fun temp836_53 () (_ BitVec 64))
(declare-fun var992306 () (_ BitVec 64))
(declare-fun temp836_54 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp836_1 #x0000000000000005))
(assert (= var76042
   (ite (= ARGNAME_input_NAMEEND_DIM temp836_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp836_2 #x0000000000000001))
(assert (= var76042 temp836_2))
(assert (= temp836_3 #x0000000000000005))
(assert (= var76103
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp836_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp836_4 #x0000000000000001))
(assert (= var76103 temp836_4))
(assert (= temp836_5 #x0000000000000000))
(assert (= temp836_6 (select ARGNAME_input_NAMEEND_DIMSIZE temp836_5)))
(assert (= temp836_7 #x0000000000000001))
(assert (= temp836_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp836_7)))
(assert (= temp836_9 #x0000000000000002))
(assert (= temp836_10 (select ARGNAME_input_NAMEEND_DIMSIZE temp836_9)))
(assert (= temp836_11 #x0000000000000003))
(assert (= temp836_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp836_11)))
(assert (= temp836_13 #x0000000000000004))
(assert (= temp836_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp836_13)))
(assert (= temp836_15 #x0000000000000005))
(assert (= temp836_16 (select ARGNAME_input_NAMEEND_DIMSIZE temp836_15)))
(assert (= temp836_17 #x0000000000000004))
(assert (= temp836_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp836_17)))
(assert (= var76131 temp836_18))
(assert (= temp836_19 #x0000000000000000))
(assert (= temp836_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp836_19)))
(assert (= temp836_21 #x0000000000000001))
(assert (= temp836_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp836_21)))
(assert (= temp836_23 #x0000000000000002))
(assert (= temp836_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp836_23)))
(assert (= temp836_25 #x0000000000000003))
(assert (= temp836_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp836_25)))
(assert (= temp836_27 #x0000000000000004))
(assert (= temp836_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp836_27)))
(assert (= temp836_29 #x0000000000000005))
(assert (= temp836_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp836_29)))
(assert (= temp836_31 #x0000000000000004))
(assert (= temp836_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp836_31)))
(assert (= var76165 temp836_32))
(assert (= temp836_33 #x0000000000000000))
(assert (= var76268
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp836_33)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp836_34 #x0000000000000000))
(assert (= var76268 temp836_34))
(assert (= temp836_35 #x0000000000000001))
(assert (= var275510 temp836_35))
(assert (= temp836_36 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp836_36) #x0000000000000001 #x0000000000000000)))
(assert (= temp836_37 #x0000000000000000))
(assert (= var275528 temp836_37))
(assert (= temp836_38 #x0000000000000001))
(assert (= var406582 temp836_38))
(assert (= temp836_39 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp836_39) #x0000000000000001 #x0000000000000000)))
(assert (= temp836_40 #x0000000000000000))
(assert (= var406600 temp836_40))
(assert (= temp836_41 #x0000000000000001))
(assert (= var537654 temp836_41))
(assert (= temp836_42 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp836_42) #x0000000000000001 #x0000000000000000)))
(assert (= temp836_43 #x0000000000000000))
(assert (= var537672 temp836_43))
(assert (= temp836_45 #x00000000000000ff))
(assert (= temp836_44 temp836_45))
(assert (= temp836_47 #x00000000000000ff))
(assert (= temp836_46 temp836_47))
(assert (= temp836_49 #x00000000000000ff))
(assert (= temp836_48 temp836_49))
(assert (= temp836_50 #x0000000000000000))
(assert (= var730187 temp836_50))
(assert (= var730166 var730187))
(assert (= var664598 var730166))
(assert (= temp836_51 #x0000000000000000))
(assert (= var664598 temp836_51))
(assert (= temp836_52 #x0000000000008000))
(assert (= var926770 temp836_52))
(assert (= temp836_53 #x0000000000040000))
(assert (= var992306 temp836_53))
(assert (= temp836_54 #x0000000000200000))
(assert (= var1057842 temp836_54))
(model-add temp836_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp836_2 () (_ BitVec 64) #x0000000000000001)
(model-add var76042 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


