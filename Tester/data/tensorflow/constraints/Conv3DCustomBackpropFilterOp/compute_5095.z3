(declare-fun temp7708_1 () (_ BitVec 64))
(declare-fun var139826 () (_ BitVec 64))
(declare-fun var139820 () (_ BitVec 64))
(declare-fun temp7708_2 () (_ BitVec 64))
(declare-fun var75949 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_sizes_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp7708_3 () (_ BitVec 64))
(declare-fun var76022 () (_ BitVec 64))
(declare-fun var76026 () (_ BitVec 64))
(declare-fun temp7708_4 () (_ BitVec 64))
(declare-fun var76027 () (_ BitVec 64))
(declare-fun temp7708_5 () (_ BitVec 64))
(declare-fun temp7708_6 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76042 () (_ BitVec 64))
(declare-fun temp7708_7 () (_ BitVec 64))
(declare-fun temp7708_8 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76103 () (_ BitVec 64))
(declare-fun temp7708_9 () (_ BitVec 64))
(declare-fun temp7708_10 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp7708_11 () (_ BitVec 64))
(declare-fun temp7708_12 () (_ BitVec 64))
(declare-fun temp7708_13 () (_ BitVec 64))
(declare-fun temp7708_14 () (_ BitVec 64))
(declare-fun temp7708_15 () (_ BitVec 64))
(declare-fun temp7708_16 () (_ BitVec 64))
(declare-fun temp7708_17 () (_ BitVec 64))
(declare-fun temp7708_18 () (_ BitVec 64))
(declare-fun temp7708_19 () (_ BitVec 64))
(declare-fun temp7708_20 () (_ BitVec 64))
(declare-fun temp7708_21 () (_ BitVec 64))
(declare-fun temp7708_22 () (_ BitVec 64))
(declare-fun temp7708_23 () (_ BitVec 64))
(declare-fun var76131 () (_ BitVec 64))
(declare-fun temp7708_24 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp7708_25 () (_ BitVec 64))
(declare-fun temp7708_26 () (_ BitVec 64))
(declare-fun temp7708_27 () (_ BitVec 64))
(declare-fun temp7708_28 () (_ BitVec 64))
(declare-fun temp7708_29 () (_ BitVec 64))
(declare-fun temp7708_30 () (_ BitVec 64))
(declare-fun temp7708_31 () (_ BitVec 64))
(declare-fun temp7708_32 () (_ BitVec 64))
(declare-fun temp7708_33 () (_ BitVec 64))
(declare-fun temp7708_34 () (_ BitVec 64))
(declare-fun temp7708_35 () (_ BitVec 64))
(declare-fun temp7708_36 () (_ BitVec 64))
(declare-fun temp7708_37 () (_ BitVec 64))
(declare-fun var76165 () (_ BitVec 64))
(declare-fun temp7708_38 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var76268 () (_ BitVec 64))
(declare-fun temp7708_39 () (_ BitVec 64))
(declare-fun temp7708_40 () (_ BitVec 64))
(declare-fun var341046 () (_ BitVec 64))
(declare-fun temp7708_41 () (_ BitVec 64))
(declare-fun var341064 () (_ BitVec 64))
(declare-fun temp7708_42 () (_ BitVec 64))
(declare-fun temp7708_43 () (_ BitVec 64))
(declare-fun var472118 () (_ BitVec 64))
(declare-fun temp7708_44 () (_ BitVec 64))
(declare-fun var472136 () (_ BitVec 64))
(declare-fun temp7708_45 () (_ BitVec 64))
(declare-fun temp7708_46 () (_ BitVec 64))
(declare-fun var603190 () (_ BitVec 64))
(declare-fun temp7708_47 () (_ BitVec 64))
(declare-fun var603208 () (_ BitVec 64))
(declare-fun temp7708_48 () (_ BitVec 64))
(declare-fun temp7708_50 () (_ BitVec 64))
(declare-fun temp7708_49 () (_ BitVec 64))
(declare-fun temp7708_52 () (_ BitVec 64))
(declare-fun temp7708_51 () (_ BitVec 64))
(declare-fun temp7708_54 () (_ BitVec 64))
(declare-fun temp7708_53 () (_ BitVec 64))
(declare-fun temp7708_56 () (_ BitVec 64))
(declare-fun temp7708_55 () (_ BitVec 64))
(declare-fun temp7708_58 () (_ BitVec 64))
(declare-fun temp7708_57 () (_ BitVec 64))
(declare-fun temp7708_60 () (_ BitVec 64))
(declare-fun temp7708_59 () (_ BitVec 64))
(declare-fun temp7708_62 () (_ BitVec 64))
(declare-fun temp7708_61 () (_ BitVec 64))
(declare-fun temp7708_63 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp7708_64 () (_ BitVec 64))
(declare-fun var1123379 () (_ BitVec 64))
(declare-fun var1123380 () (_ BitVec 64))
(declare-fun var1123376 () (_ BitVec 64))
(declare-fun var730076 () (_ BitVec 64))
(declare-fun temp7708_65 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp7708_66 () (_ BitVec 64))
(declare-fun var1188915 () (_ BitVec 64))
(declare-fun var1188916 () (_ BitVec 64))
(declare-fun var1188912 () (_ BitVec 64))
(declare-fun var730083 () (_ BitVec 64))
(declare-fun temp7708_67 () (_ BitVec 64))
(declare-fun var1254450 () (_ BitVec 64))
(declare-fun temp7708_68 () (_ BitVec 64))
(declare-fun var1254451 () (_ BitVec 64))
(declare-fun var1254452 () (_ BitVec 64))
(declare-fun var1254448 () (_ BitVec 64))
(declare-fun var730088 () (_ BitVec 64))
(declare-fun var76450 () (_ BitVec 64))
(declare-fun temp7708_69 () (_ BitVec 64))
(declare-fun temp7708_70 () (_ BitVec 64))
(declare-fun var76511 () (_ BitVec 64))
(declare-fun var76512 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp7708_1 #x0000000000000001))
(assert (= var139826
   (ite (= ARGNAME_filter_sizes_NAMEEND_DIM temp7708_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var139820 var139826))
(assert (= var75949 var139820))
(assert (= temp7708_2 #x0000000000000001))
(assert (= var75949 temp7708_2))
(assert (= temp7708_3 #x0000000000000000))
(assert (= var76022 temp7708_3))
(assert (= var76026 var76022))
(assert (= temp7708_4 #x0000000000000000))
(assert (= var76027 (ite (= var76026 temp7708_4) #x0000000000000001 #x0000000000000000)))
(assert (= temp7708_5 #x0000000000000001))
(assert (= var76027 temp7708_5))
(assert (= temp7708_6 #x0000000000000005))
(assert (= var76042
   (ite (= ARGNAME_input_NAMEEND_DIM temp7708_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp7708_7 #x0000000000000001))
(assert (= var76042 temp7708_7))
(assert (= temp7708_8 #x0000000000000005))
(assert (= var76103
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp7708_8)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp7708_9 #x0000000000000001))
(assert (= var76103 temp7708_9))
(assert (= temp7708_10 #x0000000000000000))
(assert (= temp7708_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp7708_10)))
(assert (= temp7708_12 #x0000000000000001))
(assert (= temp7708_13 (select ARGNAME_input_NAMEEND_DIMSIZE temp7708_12)))
(assert (= temp7708_14 #x0000000000000002))
(assert (= temp7708_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp7708_14)))
(assert (= temp7708_16 #x0000000000000003))
(assert (= temp7708_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp7708_16)))
(assert (= temp7708_18 #x0000000000000004))
(assert (= temp7708_19 (select ARGNAME_input_NAMEEND_DIMSIZE temp7708_18)))
(assert (= temp7708_20 #x0000000000000005))
(assert (= temp7708_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp7708_20)))
(assert (= temp7708_22 #x0000000000000004))
(assert (= temp7708_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp7708_22)))
(assert (= var76131 temp7708_23))
(assert (= temp7708_24 #x0000000000000000))
(assert (= temp7708_25 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp7708_24)))
(assert (= temp7708_26 #x0000000000000001))
(assert (= temp7708_27 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp7708_26)))
(assert (= temp7708_28 #x0000000000000002))
(assert (= temp7708_29 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp7708_28)))
(assert (= temp7708_30 #x0000000000000003))
(assert (= temp7708_31 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp7708_30)))
(assert (= temp7708_32 #x0000000000000004))
(assert (= temp7708_33 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp7708_32)))
(assert (= temp7708_34 #x0000000000000005))
(assert (= temp7708_35 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp7708_34)))
(assert (= temp7708_36 #x0000000000000004))
(assert (= temp7708_37 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp7708_36)))
(assert (= var76165 temp7708_37))
(assert (= temp7708_38 #x0000000000000000))
(assert (= var76268
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp7708_38)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp7708_39 #x0000000000000000))
(assert (= var76268 temp7708_39))
(assert (= temp7708_40 #x0000000000000001))
(assert (= var341046 temp7708_40))
(assert (= temp7708_41 #x0000000000000001))
(assert (= var341064
   (ite (bvslt var341046 temp7708_41) #x0000000000000001 #x0000000000000000)))
(assert (= temp7708_42 #x0000000000000000))
(assert (= var341064 temp7708_42))
(assert (= temp7708_43 #x0000000000000001))
(assert (= var472118 temp7708_43))
(assert (= temp7708_44 #x0000000000000001))
(assert (= var472136
   (ite (bvslt var472118 temp7708_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp7708_45 #x0000000000000000))
(assert (= var472136 temp7708_45))
(assert (= temp7708_46 #x0000000000000001))
(assert (= var603190 temp7708_46))
(assert (= temp7708_47 #x0000000000000001))
(assert (= var603208
   (ite (bvslt var603190 temp7708_47) #x0000000000000001 #x0000000000000000)))
(assert (= temp7708_48 #x0000000000000000))
(assert (= var603208 temp7708_48))
(assert (= temp7708_50 #x0000000000000000))
(assert (= temp7708_49 temp7708_50))
(assert (= temp7708_52 #x00000000000000ff))
(assert (= temp7708_51 temp7708_52))
(assert (= temp7708_54 #x00000000000000ff))
(assert (= temp7708_53 temp7708_54))
(assert (= temp7708_56 #x00000000000000ff))
(assert (= temp7708_55 temp7708_56))
(assert (= temp7708_58 #x0000000000000000))
(assert (= temp7708_57 temp7708_58))
(assert (= temp7708_60 #x0000000000000000))
(assert (= temp7708_59 temp7708_60))
(assert (= temp7708_62 #x0000000000000000))
(assert (= temp7708_61 temp7708_62))
(assert (= temp7708_63 #x0000000000008000))
(assert (= var1123378 temp7708_63))
(assert (= temp7708_64 #x0000000000000001))
(assert (= var1123379
   (ite (bvslt temp7708_61 temp7708_64) #x0000000000000001 #x0000000000000000)))
(assert (= var1123380 (ite (= var1123379 #x0000000000000001) var1123378 temp7708_61)))
(assert (= var1123376 var1123380))
(assert (= var730076 var1123376))
(assert (= temp7708_65 #x0000000000040000))
(assert (= var1188914 temp7708_65))
(assert (= temp7708_66 #x0000000000000001))
(assert (= var1188915
   (ite (bvslt temp7708_59 temp7708_66) #x0000000000000001 #x0000000000000000)))
(assert (= var1188916 (ite (= var1188915 #x0000000000000001) var1188914 temp7708_59)))
(assert (= var1188912 var1188916))
(assert (= var730083 var1188912))
(assert (= temp7708_67 #x0000000000200000))
(assert (= var1254450 temp7708_67))
(assert (= temp7708_68 #x0000000000000001))
(assert (= var1254451
   (ite (bvslt temp7708_57 temp7708_68) #x0000000000000001 #x0000000000000000)))
(assert (= var1254452 (ite (= var1254451 #x0000000000000001) var1254450 temp7708_57)))
(assert (= var1254448 var1254452))
(assert (= var730088 var1254448))
(assert (= var76450 var730088))
(assert (= temp7708_69 #x0000000000000003))
(assert (= temp7708_70 #xffffffffffffffff))
(assert (= var76512 (bvadd var76511 temp7708_70)))
(model-add temp7708_1 () (_ BitVec 64) #x0000000000000001)
(model-add var139826 () (_ BitVec 64) #x0000000000000001)
(model-add var139820 () (_ BitVec 64) #x0000000000000001)
(model-add temp7708_2 () (_ BitVec 64) #x0000000000000001)
(model-add var75949 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_sizes_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))




