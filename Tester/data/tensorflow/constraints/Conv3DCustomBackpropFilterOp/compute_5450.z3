(declare-fun temp8251_1 () (_ BitVec 64))
(declare-fun var139826 () (_ BitVec 64))
(declare-fun var139820 () (_ BitVec 64))
(declare-fun temp8251_2 () (_ BitVec 64))
(declare-fun var75949 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_sizes_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp8251_3 () (_ BitVec 64))
(declare-fun var76022 () (_ BitVec 64))
(declare-fun var76026 () (_ BitVec 64))
(declare-fun temp8251_4 () (_ BitVec 64))
(declare-fun var76027 () (_ BitVec 64))
(declare-fun temp8251_5 () (_ BitVec 64))
(declare-fun temp8251_6 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76042 () (_ BitVec 64))
(declare-fun temp8251_7 () (_ BitVec 64))
(declare-fun temp8251_8 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var76103 () (_ BitVec 64))
(declare-fun temp8251_9 () (_ BitVec 64))
(declare-fun temp8251_10 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp8251_11 () (_ BitVec 64))
(declare-fun temp8251_12 () (_ BitVec 64))
(declare-fun temp8251_13 () (_ BitVec 64))
(declare-fun temp8251_14 () (_ BitVec 64))
(declare-fun temp8251_15 () (_ BitVec 64))
(declare-fun temp8251_16 () (_ BitVec 64))
(declare-fun temp8251_17 () (_ BitVec 64))
(declare-fun temp8251_18 () (_ BitVec 64))
(declare-fun temp8251_19 () (_ BitVec 64))
(declare-fun temp8251_20 () (_ BitVec 64))
(declare-fun temp8251_21 () (_ BitVec 64))
(declare-fun temp8251_22 () (_ BitVec 64))
(declare-fun temp8251_23 () (_ BitVec 64))
(declare-fun var76131 () (_ BitVec 64))
(declare-fun temp8251_24 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp8251_25 () (_ BitVec 64))
(declare-fun temp8251_26 () (_ BitVec 64))
(declare-fun temp8251_27 () (_ BitVec 64))
(declare-fun temp8251_28 () (_ BitVec 64))
(declare-fun temp8251_29 () (_ BitVec 64))
(declare-fun temp8251_30 () (_ BitVec 64))
(declare-fun temp8251_31 () (_ BitVec 64))
(declare-fun temp8251_32 () (_ BitVec 64))
(declare-fun temp8251_33 () (_ BitVec 64))
(declare-fun temp8251_34 () (_ BitVec 64))
(declare-fun temp8251_35 () (_ BitVec 64))
(declare-fun temp8251_36 () (_ BitVec 64))
(declare-fun temp8251_37 () (_ BitVec 64))
(declare-fun var76165 () (_ BitVec 64))
(declare-fun temp8251_38 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var76268 () (_ BitVec 64))
(declare-fun temp8251_39 () (_ BitVec 64))
(declare-fun temp8251_40 () (_ BitVec 64))
(declare-fun var341046 () (_ BitVec 64))
(declare-fun temp8251_41 () (_ BitVec 64))
(declare-fun var341064 () (_ BitVec 64))
(declare-fun temp8251_42 () (_ BitVec 64))
(declare-fun temp8251_43 () (_ BitVec 64))
(declare-fun var472118 () (_ BitVec 64))
(declare-fun temp8251_44 () (_ BitVec 64))
(declare-fun var472136 () (_ BitVec 64))
(declare-fun temp8251_45 () (_ BitVec 64))
(declare-fun temp8251_46 () (_ BitVec 64))
(declare-fun var603190 () (_ BitVec 64))
(declare-fun temp8251_47 () (_ BitVec 64))
(declare-fun var603208 () (_ BitVec 64))
(declare-fun temp8251_48 () (_ BitVec 64))
(declare-fun temp8251_50 () (_ BitVec 64))
(declare-fun temp8251_49 () (_ BitVec 64))
(declare-fun temp8251_52 () (_ BitVec 64))
(declare-fun temp8251_51 () (_ BitVec 64))
(declare-fun temp8251_54 () (_ BitVec 64))
(declare-fun temp8251_53 () (_ BitVec 64))
(declare-fun temp8251_55 () (_ BitVec 64))
(declare-fun var795723 () (_ BitVec 64))
(declare-fun var795702 () (_ BitVec 64))
(declare-fun var730134 () (_ BitVec 64))
(declare-fun temp8251_56 () (_ BitVec 64))
(declare-fun temp8251_57 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp8251_58 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp8251_59 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp8251_1 #x0000000000000001))
(assert (= var139826
   (ite (= ARGNAME_filter_sizes_NAMEEND_DIM temp8251_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var139820 var139826))
(assert (= var75949 var139820))
(assert (= temp8251_2 #x0000000000000001))
(assert (= var75949 temp8251_2))
(assert (= temp8251_3 #x0000000000000000))
(assert (= var76022 temp8251_3))
(assert (= var76026 var76022))
(assert (= temp8251_4 #x0000000000000000))
(assert (= var76027 (ite (= var76026 temp8251_4) #x0000000000000001 #x0000000000000000)))
(assert (= temp8251_5 #x0000000000000001))
(assert (= var76027 temp8251_5))
(assert (= temp8251_6 #x0000000000000005))
(assert (= var76042
   (ite (= ARGNAME_input_NAMEEND_DIM temp8251_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8251_7 #x0000000000000001))
(assert (= var76042 temp8251_7))
(assert (= temp8251_8 #x0000000000000005))
(assert (= var76103
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp8251_8)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8251_9 #x0000000000000001))
(assert (= var76103 temp8251_9))
(assert (= temp8251_10 #x0000000000000000))
(assert (= temp8251_11 (select ARGNAME_input_NAMEEND_DIMSIZE temp8251_10)))
(assert (= temp8251_12 #x0000000000000001))
(assert (= temp8251_13 (select ARGNAME_input_NAMEEND_DIMSIZE temp8251_12)))
(assert (= temp8251_14 #x0000000000000002))
(assert (= temp8251_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp8251_14)))
(assert (= temp8251_16 #x0000000000000003))
(assert (= temp8251_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp8251_16)))
(assert (= temp8251_18 #x0000000000000004))
(assert (= temp8251_19 (select ARGNAME_input_NAMEEND_DIMSIZE temp8251_18)))
(assert (= temp8251_20 #x0000000000000005))
(assert (= temp8251_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp8251_20)))
(assert (= temp8251_22 #x0000000000000004))
(assert (= temp8251_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp8251_22)))
(assert (= var76131 temp8251_23))
(assert (= temp8251_24 #x0000000000000000))
(assert (= temp8251_25 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8251_24)))
(assert (= temp8251_26 #x0000000000000001))
(assert (= temp8251_27 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8251_26)))
(assert (= temp8251_28 #x0000000000000002))
(assert (= temp8251_29 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8251_28)))
(assert (= temp8251_30 #x0000000000000003))
(assert (= temp8251_31 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8251_30)))
(assert (= temp8251_32 #x0000000000000004))
(assert (= temp8251_33 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8251_32)))
(assert (= temp8251_34 #x0000000000000005))
(assert (= temp8251_35 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8251_34)))
(assert (= temp8251_36 #x0000000000000004))
(assert (= temp8251_37 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8251_36)))
(assert (= var76165 temp8251_37))
(assert (= temp8251_38 #x0000000000000000))
(assert (= var76268
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp8251_38)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8251_39 #x0000000000000000))
(assert (= var76268 temp8251_39))
(assert (= temp8251_40 #x0000000000000001))
(assert (= var341046 temp8251_40))
(assert (= temp8251_41 #x0000000000000001))
(assert (= var341064
   (ite (bvslt var341046 temp8251_41) #x0000000000000001 #x0000000000000000)))
(assert (= temp8251_42 #x0000000000000000))
(assert (= var341064 temp8251_42))
(assert (= temp8251_43 #x0000000000000001))
(assert (= var472118 temp8251_43))
(assert (= temp8251_44 #x0000000000000001))
(assert (= var472136
   (ite (bvslt var472118 temp8251_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp8251_45 #x0000000000000000))
(assert (= var472136 temp8251_45))
(assert (= temp8251_46 #x0000000000000001))
(assert (= var603190 temp8251_46))
(assert (= temp8251_47 #x0000000000000001))
(assert (= var603208
   (ite (bvslt var603190 temp8251_47) #x0000000000000001 #x0000000000000000)))
(assert (= temp8251_48 #x0000000000000000))
(assert (= var603208 temp8251_48))
(assert (= temp8251_50 #x00000000000000ff))
(assert (= temp8251_49 temp8251_50))
(assert (= temp8251_52 #x00000000000000ff))
(assert (= temp8251_51 temp8251_52))
(assert (= temp8251_54 #x00000000000000ff))
(assert (= temp8251_53 temp8251_54))
(assert (= temp8251_55 #x0000000000000000))
(assert (= var795723 temp8251_55))
(assert (= var795702 var795723))
(assert (= var730134 var795702))
(assert (= temp8251_56 #x0000000000000000))
(assert (= var730134 temp8251_56))
(assert (= temp8251_57 #x0000000000008000))
(assert (= var1057842 temp8251_57))
(assert (= temp8251_58 #x0000000000040000))
(assert (= var1123378 temp8251_58))
(assert (= temp8251_59 #x0000000000200000))
(assert (= var1188914 temp8251_59))
(model-add temp8251_1 () (_ BitVec 64) #x0000000000000001)
(model-add var139826 () (_ BitVec 64) #x0000000000000001)
(model-add var139820 () (_ BitVec 64) #x0000000000000001)
(model-add temp8251_2 () (_ BitVec 64) #x0000000000000001)
(model-add var75949 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_sizes_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))


