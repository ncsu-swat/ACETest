(declare-fun temp1_1 () (_ BitVec 64))
(declare-fun temp1_2 () (_ BitVec 64))
(declare-fun var65882 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_images_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1_3 () (_ BitVec 64))
(declare-fun ARGNAME_delta_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var131715 () (_ BitVec 64))
(declare-fun var131711 () (_ BitVec 64))
(declare-fun var65928 () (_ BitVec 64))
(declare-fun temp1_4 () (_ BitVec 64))
(declare-fun temp1_5 () (_ BitVec 64))
(declare-fun var65964 () (_ BitVec 64))
(declare-fun temp1_6 () (_ BitVec 64))
(declare-fun temp1_7 () (_ BitVec 64))
(declare-fun ARGNAME_images_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1_8 () (_ BitVec 64))
(declare-fun temp1_9 () (_ BitVec 64))
(declare-fun temp1_10 () (_ BitVec 64))
(declare-fun temp1_11 () (_ BitVec 64))
(declare-fun temp1_12 () (_ BitVec 64))
(declare-fun temp1_13 () (_ BitVec 64))
(declare-fun temp1_14 () (_ BitVec 64))
(declare-fun temp1_15 () (_ BitVec 64))
(declare-fun temp1_16 () (_ BitVec 64))
(declare-fun temp1_17 () (_ BitVec 64))
(declare-fun temp1_18 () (_ BitVec 64))
(declare-fun temp1_19 () (_ BitVec 64))
(declare-fun temp1_20 () (_ BitVec 64))
(declare-fun temp1_21 () (_ BitVec 64))
(declare-fun temp1_22 () (_ BitVec 64))
(declare-fun temp1_23 () (_ BitVec 64))
(declare-fun temp1_24 () (_ BitVec 64))
(declare-fun temp1_25 () (_ BitVec 64))
(declare-fun temp1_26 () (_ BitVec 64))
(declare-fun var65966 () (_ BitVec 64))
(declare-fun temp1_27 () (_ BitVec 64))
(declare-fun var65969 () (_ BitVec 64))
(declare-fun temp1_28 () (_ BitVec 64))
(declare-fun temp1_30 () (_ BitVec 64))
(declare-fun temp1_29 () (_ BitVec 64))
(assert (= temp1_1 #x0000000000000002))
(assert (= var65882
   (ite (bvsgt ARGNAME_images_NAMEEND_DIM temp1_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_2 #x0000000000000001))
(assert (= var65882 temp1_2))
(assert (= temp1_3 #x0000000000000000))
(assert (= var131715
   (ite (= ARGNAME_delta_NAMEEND_DIM temp1_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var131711 var131715))
(assert (= var65928 var131711))
(assert (= temp1_4 #x0000000000000001))
(assert (= var65928 temp1_4))
(assert (= temp1_5 #xffffffffffffffff))
(assert (= var65964 (bvadd ARGNAME_images_NAMEEND_DIM temp1_5)))
(assert (= temp1_6 #x0000000000000000))
(assert (= temp1_7 temp1_6))
(assert (= temp1_8 (select ARGNAME_images_NAMEEND_DIMSIZE temp1_7)))
(assert (= temp1_9 #x0000000000000001))
(assert (= temp1_10 temp1_9))
(assert (= temp1_11 (select ARGNAME_images_NAMEEND_DIMSIZE temp1_10)))
(assert (= temp1_12 #x0000000000000002))
(assert (= temp1_13 temp1_12))
(assert (= temp1_14 (select ARGNAME_images_NAMEEND_DIMSIZE temp1_13)))
(assert (= temp1_15 #x0000000000000003))
(assert (= temp1_16 temp1_15))
(assert (= temp1_17 (select ARGNAME_images_NAMEEND_DIMSIZE temp1_16)))
(assert (= temp1_18 #x0000000000000004))
(assert (= temp1_19 temp1_18))
(assert (= temp1_20 (select ARGNAME_images_NAMEEND_DIMSIZE temp1_19)))
(assert (= temp1_21 #x0000000000000005))
(assert (= temp1_22 temp1_21))
(assert (= temp1_23 (select ARGNAME_images_NAMEEND_DIMSIZE temp1_22)))
(assert (= temp1_24 #x0000000000000000))
(assert (= temp1_25
   (ite (bvslt var65964 temp1_24)
        (bvadd ARGNAME_images_NAMEEND_DIM var65964)
        var65964)))
(assert (= temp1_26 (select ARGNAME_images_NAMEEND_DIMSIZE temp1_25)))
(assert (= var65966 temp1_26))
(assert (= temp1_27 #x0000000000000003))
(assert (= var65969 (ite (= var65966 temp1_27) #x0000000000000001 #x0000000000000000)))
(assert (= temp1_28 #x0000000000000001))
(assert (= var65969 temp1_28))
(assert (= temp1_30 #x0000000000000000))
(assert (= temp1_29 temp1_30))
(model-add temp1_1 () (_ BitVec 64) #x0000000000000002)
(model-add temp1_2 () (_ BitVec 64) #x0000000000000001)
(model-add var65882 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_images_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000002 #x7fffffffffffffff))
                #x0000000000000002
                (bvadd #x0000000000000002 #x0000000000000001)))












