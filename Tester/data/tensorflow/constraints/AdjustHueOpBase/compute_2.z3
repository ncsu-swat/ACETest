(declare-fun temp2_1 () (_ BitVec 64))
(declare-fun temp2_2 () (_ BitVec 64))
(declare-fun var65882 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_images_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp2_3 () (_ BitVec 64))
(declare-fun ARGNAME_delta_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var131715 () (_ BitVec 64))
(declare-fun var131711 () (_ BitVec 64))
(declare-fun var65928 () (_ BitVec 64))
(declare-fun temp2_4 () (_ BitVec 64))
(declare-fun temp2_5 () (_ BitVec 64))
(declare-fun var65964 () (_ BitVec 64))
(declare-fun temp2_6 () (_ BitVec 64))
(declare-fun temp2_7 () (_ BitVec 64))
(declare-fun ARGNAME_images_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp2_8 () (_ BitVec 64))
(declare-fun temp2_9 () (_ BitVec 64))
(declare-fun temp2_10 () (_ BitVec 64))
(declare-fun temp2_11 () (_ BitVec 64))
(declare-fun temp2_12 () (_ BitVec 64))
(declare-fun temp2_13 () (_ BitVec 64))
(declare-fun temp2_14 () (_ BitVec 64))
(declare-fun temp2_15 () (_ BitVec 64))
(declare-fun temp2_16 () (_ BitVec 64))
(declare-fun temp2_17 () (_ BitVec 64))
(declare-fun temp2_18 () (_ BitVec 64))
(declare-fun temp2_19 () (_ BitVec 64))
(declare-fun temp2_20 () (_ BitVec 64))
(declare-fun temp2_21 () (_ BitVec 64))
(declare-fun temp2_22 () (_ BitVec 64))
(declare-fun temp2_23 () (_ BitVec 64))
(declare-fun temp2_24 () (_ BitVec 64))
(declare-fun temp2_25 () (_ BitVec 64))
(declare-fun temp2_26 () (_ BitVec 64))
(declare-fun var65966 () (_ BitVec 64))
(declare-fun temp2_27 () (_ BitVec 64))
(declare-fun var65969 () (_ BitVec 64))
(declare-fun temp2_28 () (_ BitVec 64))
(declare-fun temp2_30 () (_ BitVec 64))
(declare-fun temp2_29 () (_ BitVec 64))
(assert (= temp2_1 #x0000000000000002))
(assert (= var65882
   (ite (bvsgt ARGNAME_images_NAMEEND_DIM temp2_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2_2 #x0000000000000001))
(assert (= var65882 temp2_2))
(assert (= temp2_3 #x0000000000000000))
(assert (= var131715
   (ite (= ARGNAME_delta_NAMEEND_DIM temp2_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var131711 var131715))
(assert (= var65928 var131711))
(assert (= temp2_4 #x0000000000000001))
(assert (= var65928 temp2_4))
(assert (= temp2_5 #xffffffffffffffff))
(assert (= var65964 (bvadd ARGNAME_images_NAMEEND_DIM temp2_5)))
(assert (= temp2_6 #x0000000000000000))
(assert (= temp2_7 temp2_6))
(assert (= temp2_8 (select ARGNAME_images_NAMEEND_DIMSIZE temp2_7)))
(assert (= temp2_9 #x0000000000000001))
(assert (= temp2_10 temp2_9))
(assert (= temp2_11 (select ARGNAME_images_NAMEEND_DIMSIZE temp2_10)))
(assert (= temp2_12 #x0000000000000002))
(assert (= temp2_13 temp2_12))
(assert (= temp2_14 (select ARGNAME_images_NAMEEND_DIMSIZE temp2_13)))
(assert (= temp2_15 #x0000000000000003))
(assert (= temp2_16 temp2_15))
(assert (= temp2_17 (select ARGNAME_images_NAMEEND_DIMSIZE temp2_16)))
(assert (= temp2_18 #x0000000000000004))
(assert (= temp2_19 temp2_18))
(assert (= temp2_20 (select ARGNAME_images_NAMEEND_DIMSIZE temp2_19)))
(assert (= temp2_21 #x0000000000000005))
(assert (= temp2_22 temp2_21))
(assert (= temp2_23 (select ARGNAME_images_NAMEEND_DIMSIZE temp2_22)))
(assert (= temp2_24 #x0000000000000000))
(assert (= temp2_25
   (ite (bvslt var65964 temp2_24)
        (bvadd ARGNAME_images_NAMEEND_DIM var65964)
        var65964)))
(assert (= temp2_26 (select ARGNAME_images_NAMEEND_DIMSIZE temp2_25)))
(assert (= var65966 temp2_26))
(assert (= temp2_27 #x0000000000000003))
(assert (= var65969 (ite (= var65966 temp2_27) #x0000000000000001 #x0000000000000000)))
(assert (= temp2_28 #x0000000000000001))
(assert (= var65969 temp2_28))
(assert (= temp2_30 #x0000000000000000))
(assert (= temp2_29 temp2_30))
(model-add temp2_1 () (_ BitVec 64) #x0000000000000002)
(model-add temp2_2 () (_ BitVec 64) #x0000000000000001)
(model-add var65882 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_images_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000002 #x7fffffffffffffff))
                #x0000000000000002
                (bvadd #x0000000000000002 #x0000000000000001)))












