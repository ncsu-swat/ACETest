(declare-fun temp0_1 () (_ BitVec 64))
(declare-fun var67078 () (_ BitVec 64))
(declare-fun temp0_2 () (_ BitVec 64))
(declare-fun temp0_3 () (_ BitVec 64))
(declare-fun temp0_4 () (_ BitVec 64))
(declare-fun ARGNAME_boxes_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp0_5 () (_ BitVec 64))
(declare-fun temp0_6 () (_ BitVec 64))
(declare-fun temp0_7 () (_ BitVec 64))
(declare-fun temp0_8 () (_ BitVec 64))
(declare-fun temp0_9 () (_ BitVec 64))
(declare-fun temp0_10 () (_ BitVec 64))
(declare-fun temp0_11 () (_ BitVec 64))
(declare-fun temp0_12 () (_ BitVec 64))
(declare-fun temp0_13 () (_ BitVec 64))
(declare-fun temp0_14 () (_ BitVec 64))
(declare-fun temp0_15 () (_ BitVec 64))
(declare-fun temp0_16 () (_ BitVec 64))
(declare-fun temp0_17 () (_ BitVec 64))
(declare-fun temp0_18 () (_ BitVec 64))
(declare-fun temp0_19 () (_ BitVec 64))
(declare-fun temp0_20 () (_ BitVec 64))
(declare-fun temp0_21 () (_ BitVec 64))
(declare-fun temp0_22 () (_ BitVec 64))
(declare-fun var67083 () (_ BitVec 64))
(declare-fun temp0_23 () (_ BitVec 64))
(declare-fun temp0_24 () (_ BitVec 64))
(declare-fun temp0_25 () (_ BitVec 64))
(declare-fun temp0_26 () (_ BitVec 64))
(declare-fun ARGNAME_scores_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp0_27 () (_ BitVec 64))
(declare-fun temp0_28 () (_ BitVec 64))
(declare-fun temp0_29 () (_ BitVec 64))
(declare-fun temp0_30 () (_ BitVec 64))
(declare-fun temp0_31 () (_ BitVec 64))
(declare-fun temp0_32 () (_ BitVec 64))
(declare-fun temp0_33 () (_ BitVec 64))
(declare-fun temp0_34 () (_ BitVec 64))
(declare-fun temp0_35 () (_ BitVec 64))
(declare-fun temp0_36 () (_ BitVec 64))
(declare-fun temp0_37 () (_ BitVec 64))
(declare-fun temp0_38 () (_ BitVec 64))
(declare-fun temp0_39 () (_ BitVec 64))
(declare-fun temp0_40 () (_ BitVec 64))
(declare-fun temp0_41 () (_ BitVec 64))
(declare-fun temp0_42 () (_ BitVec 64))
(declare-fun temp0_43 () (_ BitVec 64))
(declare-fun temp0_44 () (_ BitVec 64))
(declare-fun var67086 () (_ BitVec 64))
(declare-fun temp0_45 () (_ BitVec 64))
(declare-fun var67087 () (_ BitVec 64))
(declare-fun k!0 () (_ BitVec 64))
(declare-fun k!1 () (_ BitVec 64))
(declare-fun k!2 () Bool)
(declare-fun ARGNAME_boxes_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_scores_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp0_46 () (_ BitVec 64))
(declare-fun extend_1345 () (_ BitVec 64))
(declare-fun var133084 () (_ BitVec 64))
(declare-fun var133078 () (_ BitVec 64))
(declare-fun var67120 () (_ BitVec 64))
(declare-fun temp0_47 () (_ BitVec 64))
(declare-fun temp0_48 () (_ BitVec 64))
(declare-fun ARGNAME_max_output_size_per_class_NAMEEND () (_ BitVec 64))
(declare-fun var67171 () (_ BitVec 64))
(declare-fun temp0_49 () (_ BitVec 64))
(declare-fun temp0_50 () (_ BitVec 64))
(declare-fun extend_1348 () (_ BitVec 64))
(declare-fun var264156 () (_ BitVec 64))
(declare-fun var264150 () (_ BitVec 64))
(declare-fun var67194 () (_ BitVec 64))
(declare-fun temp0_51 () (_ BitVec 64))
(declare-fun temp0_52 () (_ BitVec 64))
(declare-fun ARGNAME_max_total_size_NAMEEND () (_ BitVec 64))
(declare-fun var67235 () (_ BitVec 64))
(declare-fun temp0_53 () (_ BitVec 64))
(declare-fun temp0_54 () (_ BitVec 64))
(declare-fun var395334 () (_ BitVec 64))
(declare-fun temp0_55 () (_ BitVec 64))
(declare-fun var395335 () (_ BitVec 64))
(declare-fun temp0_56 () (_ BitVec 64))
(declare-fun extend_1351 () (_ BitVec 64))
(declare-fun var722908 () (_ BitVec 64))
(declare-fun var722902 () (_ BitVec 64))
(declare-fun var67315 () (_ BitVec 64))
(declare-fun temp0_57 () (_ BitVec 64))
(declare-fun temp0_58 () (_ BitVec 64))
(declare-fun ARGNAME_score_threshold_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var853980 () (_ BitVec 64))
(declare-fun var853974 () (_ BitVec 64))
(declare-fun var67363 () (_ BitVec 64))
(declare-fun temp0_59 () (_ BitVec 64))
(declare-fun temp0_60 () (_ BitVec 64))
(declare-fun ARGNAME_iou_threshold_NAMEEND () (_ BitVec 64))
(declare-fun var67404 () (_ BitVec 64))
(declare-fun temp0_61 () (_ BitVec 64))
(declare-fun var67406 () (_ BitVec 64))
(declare-fun var67408 () (_ BitVec 64))
(declare-fun temp0_62 () (_ BitVec 64))
(declare-fun temp0_63 () (_ BitVec 64))
(declare-fun var67116 () (_ BitVec 64))
(declare-fun temp0_64 () (_ BitVec 64))
(declare-fun temp0_65 () (_ BitVec 64))
(declare-fun temp0_66 () (_ BitVec 64))
(declare-fun var67432 () (_ BitVec 64))
(declare-fun var67433 () (_ BitVec 64))
(declare-fun var985206 () (_ BitVec 64))
(declare-fun temp0_67 () (_ BitVec 64))
(declare-fun var985218 () (_ BitVec 64))
(declare-fun temp0_68 () (_ BitVec 64))
(declare-fun temp0_69 () (_ BitVec 64))
(declare-fun var984620 () (_ BitVec 64))
(declare-fun temp0_70 () (_ BitVec 64))
(declare-fun temp0_71 () (_ BitVec 64))
(declare-fun temp0_72 () (_ BitVec 64))
(declare-fun var985253 () (_ BitVec 64))
(declare-fun temp0_73 () (_ BitVec 64))
(declare-fun var985254 () (_ BitVec 64))
(declare-fun temp0_74 () (_ BitVec 64))
(declare-fun temp0_75 () (_ BitVec 64))
(declare-fun var984586 () (_ BitVec 64))
(declare-fun temp0_76 () (_ BitVec 64))
(declare-fun temp0_77 () (_ BitVec 64))
(declare-fun temp0_78 () (_ BitVec 64))
(declare-fun var985278 () (_ BitVec 64))
(declare-fun var985279 () (_ BitVec 64))
(declare-fun temp0_79 () (_ BitVec 64))
(declare-fun var984696 () (_ BitVec 64))
(declare-fun temp0_80 () (_ BitVec 64))
(declare-fun temp0_81 () (_ BitVec 64))
(declare-fun temp0_82 () (_ BitVec 64))
(declare-fun var985281 () (_ BitVec 64))
(declare-fun temp0_83 () (_ BitVec 64))
(declare-fun var985282 () (_ BitVec 64))
(declare-fun temp0_84 () (_ BitVec 64))
(declare-fun var67437 () (_ BitVec 64))
(declare-fun var1050846 () (_ BitVec 64))
(declare-fun temp0_85 () (_ BitVec 64))
(declare-fun var1050855 () (_ BitVec 64))
(declare-fun temp0_86 () (_ BitVec 64))
(declare-fun temp0_87 () (_ BitVec 64))
(declare-fun var1050122 () (_ BitVec 64))
(declare-fun temp0_88 () (_ BitVec 64))
(declare-fun temp0_89 () (_ BitVec 64))
(declare-fun temp0_90 () (_ BitVec 64))
(declare-fun var1050890 () (_ BitVec 64))
(declare-fun var1050891 () (_ BitVec 64))
(declare-fun var1050892 () (_ BitVec 64))
(declare-fun temp0_91 () (_ BitVec 64))
(assert (= temp0_1 #x0000000000000000))
(assert (= var67078 temp0_1))
(assert (= temp0_2 #x0000000000000000))
(assert (= temp0_3 temp0_2))
(assert (= temp0_4 (select ARGNAME_boxes_NAMEEND_DIMSIZE temp0_3)))
(assert (= temp0_5 #x0000000000000001))
(assert (= temp0_6 temp0_5))
(assert (= temp0_7 (select ARGNAME_boxes_NAMEEND_DIMSIZE temp0_6)))
(assert (= temp0_8 #x0000000000000002))
(assert (= temp0_9 temp0_8))
(assert (= temp0_10 (select ARGNAME_boxes_NAMEEND_DIMSIZE temp0_9)))
(assert (= temp0_11 #x0000000000000003))
(assert (= temp0_12 temp0_11))
(assert (= temp0_13 (select ARGNAME_boxes_NAMEEND_DIMSIZE temp0_12)))
(assert (= temp0_14 #x0000000000000004))
(assert (= temp0_15 temp0_14))
(assert (= temp0_16 (select ARGNAME_boxes_NAMEEND_DIMSIZE temp0_15)))
(assert (= temp0_17 #x0000000000000005))
(assert (= temp0_18 temp0_17))
(assert (= temp0_19 (select ARGNAME_boxes_NAMEEND_DIMSIZE temp0_18)))
(assert (= temp0_20 #x0000000000000000))
(assert (= temp0_21
   (ite (bvslt var67078 temp0_20)
        (bvadd ARGNAME_boxes_NAMEEND_DIM var67078)
        var67078)))
(assert (= temp0_22 (select ARGNAME_boxes_NAMEEND_DIMSIZE temp0_21)))
(assert (= var67083 temp0_22))
(assert (= temp0_23 #x0000000000000000))
(assert (= var67078 temp0_23))
(assert (= temp0_24 #x0000000000000000))
(assert (= temp0_25 temp0_24))
(assert (= temp0_26 (select ARGNAME_scores_NAMEEND_DIMSIZE temp0_25)))
(assert (= temp0_27 #x0000000000000001))
(assert (= temp0_28 temp0_27))
(assert (= temp0_29 (select ARGNAME_scores_NAMEEND_DIMSIZE temp0_28)))
(assert (= temp0_30 #x0000000000000002))
(assert (= temp0_31 temp0_30))
(assert (= temp0_32 (select ARGNAME_scores_NAMEEND_DIMSIZE temp0_31)))
(assert (= temp0_33 #x0000000000000003))
(assert (= temp0_34 temp0_33))
(assert (= temp0_35 (select ARGNAME_scores_NAMEEND_DIMSIZE temp0_34)))
(assert (= temp0_36 #x0000000000000004))
(assert (= temp0_37 temp0_36))
(assert (= temp0_38 (select ARGNAME_scores_NAMEEND_DIMSIZE temp0_37)))
(assert (= temp0_39 #x0000000000000005))
(assert (= temp0_40 temp0_39))
(assert (= temp0_41 (select ARGNAME_scores_NAMEEND_DIMSIZE temp0_40)))
(assert (= temp0_42 #x0000000000000000))
(assert (= temp0_43
   (ite (bvslt var67078 temp0_42)
        (bvadd ARGNAME_scores_NAMEEND_DIM var67078)
        var67078)))
(assert (= temp0_44 (select ARGNAME_scores_NAMEEND_DIMSIZE temp0_43)))
(assert (= var67086 temp0_44))
(assert (= var67087 (ite (= var67083 var67086) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_45 #x0000000000000001))
(assert (= var67087 temp0_45))
(assert (= temp0_46 #x0000000000000000))
(assert (= var133084
   (ite (= extend_1345 temp0_46)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var133078 var133084))
(assert (= var67120 var133078))
(assert (= temp0_47 #x0000000000000001))
(assert (= var67120 temp0_47))
(assert (= temp0_48 #x0000000000000000))
(assert (= var67171
   (ite (bvsgt ARGNAME_max_output_size_per_class_NAMEEND temp0_48)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_49 #x0000000000000001))
(assert (= var67171 temp0_49))
(assert (= temp0_50 #x0000000000000000))
(assert (= var264156
   (ite (= extend_1348 temp0_50)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var264150 var264156))
(assert (= var67194 var264150))
(assert (= temp0_51 #x0000000000000001))
(assert (= var67194 temp0_51))
(assert (= temp0_52 #x0000000000000000))
(assert (= var67235
   (ite (bvsgt ARGNAME_max_total_size_NAMEEND temp0_52)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_53 #x0000000000000001))
(assert (= var67235 temp0_53))
(assert (= temp0_54 #x000000000000000a))
(assert (= var395334 temp0_54))
(assert (= temp0_55 #x0000000000000006))
(assert (= var395335 temp0_55))
(assert (= temp0_56 #x0000000000000000))
(assert (= var722908
   (ite (= extend_1351 temp0_56)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var722902 var722908))
(assert (= var67315 var722902))
(assert (= temp0_57 #x0000000000000001))
(assert (= var67315 temp0_57))
(assert (= temp0_58 #x0000000000000000))
(assert (= var853980
   (ite (= ARGNAME_score_threshold_NAMEEND_DIM temp0_58)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var853974 var853980))
(assert (= var67363 var853974))
(assert (= temp0_59 #x0000000000000001))
(assert (= var67363 temp0_59))
(assert (= temp0_60 #x0000000000000000))
(assert (= var67404
   (ite (bvsge ARGNAME_iou_threshold_NAMEEND temp0_60)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_61 #x0000000000000001))
(assert (= var67406
   (ite (bvsle ARGNAME_iou_threshold_NAMEEND temp0_61)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var67408 (bvand var67404 var67406)))
(assert (= temp0_62 #x0000000000000001))
(assert (= var67408 temp0_62))
(assert (= temp0_63 #x0000000000000002))
(assert (= var67116 temp0_63))
(assert (= temp0_64 #x0000000000000000))
(assert (= temp0_65
   (ite (bvslt var67116 temp0_64)
        (bvadd ARGNAME_scores_NAMEEND_DIM var67116)
        var67116)))
(assert (= temp0_66 (select ARGNAME_scores_NAMEEND_DIMSIZE temp0_65)))
(assert (= var67432 temp0_66))
(assert (= var67433 var67432))
(assert (= var985206 var67433))
(assert (= temp0_67 #x0000000000000004))
(assert (= var985218
   (ite (= ARGNAME_boxes_NAMEEND_DIM temp0_67)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_68 #x0000000000000001))
(assert (= var985218 temp0_68))
(assert (= temp0_69 #x0000000000000002))
(assert (= var984620 temp0_69))
(assert (= temp0_70 #x0000000000000000))
(assert (= temp0_71
   (ite (bvslt var984620 temp0_70)
        (bvadd ARGNAME_boxes_NAMEEND_DIM var984620)
        var984620)))
(assert (= temp0_72 (select ARGNAME_boxes_NAMEEND_DIMSIZE temp0_71)))
(assert (= var985253 temp0_72))
(assert (= temp0_73 #x0000000000000001))
(assert (= var985254 (ite (= var985253 temp0_73) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_74 #x0000000000000001))
(assert (= var985254 temp0_74))
(assert (= temp0_75 #x0000000000000001))
(assert (= var984586 temp0_75))
(assert (= temp0_76 #x0000000000000000))
(assert (= temp0_77
   (ite (bvslt var984586 temp0_76)
        (bvadd ARGNAME_boxes_NAMEEND_DIM var984586)
        var984586)))
(assert (= temp0_78 (select ARGNAME_boxes_NAMEEND_DIMSIZE temp0_77)))
(assert (= var985278 temp0_78))
(assert (= var985279 var985278))
(assert (= temp0_79 #x0000000000000003))
(assert (= var984696 temp0_79))
(assert (= temp0_80 #x0000000000000000))
(assert (= temp0_81
   (ite (bvslt var984696 temp0_80)
        (bvadd ARGNAME_boxes_NAMEEND_DIM var984696)
        var984696)))
(assert (= temp0_82 (select ARGNAME_boxes_NAMEEND_DIMSIZE temp0_81)))
(assert (= var985281 temp0_82))
(assert (= temp0_83 #x0000000000000004))
(assert (= var985282 (ite (= var985281 temp0_83) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_84 #x0000000000000001))
(assert (= var985282 temp0_84))
(assert (= var67437 var985279))
(assert (= var1050846 var67437))
(assert (= temp0_85 #x0000000000000003))
(assert (= var1050855
   (ite (= ARGNAME_scores_NAMEEND_DIM temp0_85)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_86 #x0000000000000001))
(assert (= var1050855 temp0_86))
(assert (= temp0_87 #x0000000000000001))
(assert (= var1050122 temp0_87))
(assert (= temp0_88 #x0000000000000000))
(assert (= temp0_89
   (ite (bvslt var1050122 temp0_88)
        (bvadd ARGNAME_scores_NAMEEND_DIM var1050122)
        var1050122)))
(assert (= temp0_90 (select ARGNAME_scores_NAMEEND_DIMSIZE temp0_89)))
(assert (= var1050890 temp0_90))
(assert (= var1050891 var1050846))
(assert (= var1050892
   (ite (= var1050890 var1050891) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_91 #x0000000000000001))
(assert (= var1050892 temp0_91))
(model-add temp0_1 () (_ BitVec 64) #x0000000000000000)
(model-add var67078 () (_ BitVec 64) #x0000000000000000)
(model-add temp0_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp0_3 () (_ BitVec 64) #x0000000000000000)
(model-add temp0_4
           ()
           (_ BitVec 64)
           (select ARGNAME_boxes_NAMEEND_DIMSIZE #x0000000000000000))
(model-add temp0_5 () (_ BitVec 64) #x0000000000000001)
(model-add temp0_6 () (_ BitVec 64) #x0000000000000001)
(model-add temp0_7
           ()
           (_ BitVec 64)
           (select ARGNAME_boxes_NAMEEND_DIMSIZE #x0000000000000001))
(model-add temp0_8 () (_ BitVec 64) #x0000000000000002)
(model-add temp0_9 () (_ BitVec 64) #x0000000000000002)
(model-add temp0_10
           ()
           (_ BitVec 64)
           (select ARGNAME_boxes_NAMEEND_DIMSIZE #x0000000000000002))
(model-add temp0_11 () (_ BitVec 64) #x0000000000000003)
(model-add temp0_12 () (_ BitVec 64) #x0000000000000003)
(model-add temp0_13
           ()
           (_ BitVec 64)
           (select ARGNAME_boxes_NAMEEND_DIMSIZE #x0000000000000003))
(model-add temp0_14 () (_ BitVec 64) #x0000000000000004)
(model-add temp0_15 () (_ BitVec 64) #x0000000000000004)
(model-add temp0_16
           ()
           (_ BitVec 64)
           (select ARGNAME_boxes_NAMEEND_DIMSIZE #x0000000000000004))
(model-add temp0_17 () (_ BitVec 64) #x0000000000000005)
(model-add temp0_18 () (_ BitVec 64) #x0000000000000005)
(model-add temp0_19
           ()
           (_ BitVec 64)
           (select ARGNAME_boxes_NAMEEND_DIMSIZE #x0000000000000005))
(model-add temp0_20 () (_ BitVec 64) #x0000000000000000)
(model-add temp0_21 () (_ BitVec 64) #x0000000000000000)
(model-add temp0_22
           ()
           (_ BitVec 64)
           (select ARGNAME_boxes_NAMEEND_DIMSIZE #x0000000000000000))
(model-add var67083
           ()
           (_ BitVec 64)
           (select ARGNAME_boxes_NAMEEND_DIMSIZE #x0000000000000000))
(model-add temp0_23 () (_ BitVec 64) #x0000000000000000)
(model-add temp0_24 () (_ BitVec 64) #x0000000000000000)
(model-add temp0_25 () (_ BitVec 64) #x0000000000000000)
(model-add temp0_26
           ()
           (_ BitVec 64)
           (select ARGNAME_scores_NAMEEND_DIMSIZE #x0000000000000000))
(model-add temp0_27 () (_ BitVec 64) #x0000000000000001)
(model-add temp0_28 () (_ BitVec 64) #x0000000000000001)
(model-add temp0_29
           ()
           (_ BitVec 64)
           (select ARGNAME_scores_NAMEEND_DIMSIZE #x0000000000000001))
(model-add temp0_30 () (_ BitVec 64) #x0000000000000002)
(model-add temp0_31 () (_ BitVec 64) #x0000000000000002)
(model-add temp0_32
           ()
           (_ BitVec 64)
           (select ARGNAME_scores_NAMEEND_DIMSIZE #x0000000000000002))
(model-add temp0_33 () (_ BitVec 64) #x0000000000000003)
(model-add temp0_34 () (_ BitVec 64) #x0000000000000003)
(model-add temp0_35
           ()
           (_ BitVec 64)
           (select ARGNAME_scores_NAMEEND_DIMSIZE #x0000000000000003))
(model-add temp0_36 () (_ BitVec 64) #x0000000000000004)
(model-add temp0_37 () (_ BitVec 64) #x0000000000000004)
(model-add temp0_38
           ()
           (_ BitVec 64)
           (select ARGNAME_scores_NAMEEND_DIMSIZE #x0000000000000004))
(model-add temp0_39 () (_ BitVec 64) #x0000000000000005)
(model-add temp0_40 () (_ BitVec 64) #x0000000000000005)
(model-add temp0_41
           ()
           (_ BitVec 64)
           (select ARGNAME_scores_NAMEEND_DIMSIZE #x0000000000000005))
(model-add temp0_42 () (_ BitVec 64) #x0000000000000000)
(model-add temp0_43 () (_ BitVec 64) #x0000000000000000)
(model-add temp0_44
           ()
           (_ BitVec 64)
           (select ARGNAME_scores_NAMEEND_DIMSIZE #x0000000000000000))
(model-add var67086
           ()
           (_ BitVec 64)
           (select ARGNAME_scores_NAMEEND_DIMSIZE #x0000000000000000))
(model-add temp0_45 () (_ BitVec 64) #x0000000000000001)
(model-add var67087 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_boxes_NAMEEND_DIMSIZE
           ()
           (Array (_ BitVec 64) (_ BitVec 64))
           ((as const (Array (_ BitVec 64) (_ BitVec 64))) k!0))
(model-del k!1)
(model-add ARGNAME_scores_NAMEEND_DIMSIZE
           ()
           (Array (_ BitVec 64) (_ BitVec 64))
           ((as const (Array (_ BitVec 64) (_ BitVec 64))) k!1))
(model-del k!2)
(model-add k!0 () (_ BitVec 64) (ite k!2 k!1 (bvnot k!1)))














