(declare-fun temp2708_1 () (_ BitVec 64))
(declare-fun temp2708_2 () (_ BitVec 64))
(declare-fun var71881 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_strides_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp2708_3 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp2708_4 () (_ BitVec 64))
(declare-fun temp2708_5 () (_ BitVec 64))
(declare-fun temp2708_6 () (_ BitVec 64))
(declare-fun temp2708_7 () (_ BitVec 64))
(declare-fun temp2708_8 () (_ BitVec 64))
(declare-fun temp2708_9 () (_ BitVec 64))
(declare-fun temp2708_10 () (_ BitVec 64))
(declare-fun temp2708_11 () (_ BitVec 64))
(declare-fun temp2708_12 () (_ BitVec 64))
(declare-fun temp2708_13 () (_ BitVec 64))
(declare-fun temp2708_14 () (_ BitVec 64))
(declare-fun temp2708_18 () (_ BitVec 64))
(declare-fun temp2708_19 () (_ BitVec 64))
(declare-fun temp2708_20 () (_ BitVec 64))
(declare-fun temp2708_21 () (_ BitVec 64))
(declare-fun temp2708_16 () (_ BitVec 64))
(declare-fun temp2708_22 () (_ BitVec 64))
(declare-fun temp2708_23 () (_ BitVec 64))
(declare-fun temp2708_24 () (_ BitVec 64))
(declare-fun temp2708_17 () (_ BitVec 64))
(declare-fun temp2708_26 () (_ BitVec 64))
(declare-fun temp2708_27 () (_ BitVec 64))
(declare-fun temp2708_28 () (_ BitVec 64))
(declare-fun temp2708_29 () (_ BitVec 64))
(declare-fun temp2708_30 () (_ BitVec 64))
(declare-fun temp2708_31 () (_ BitVec 64))
(declare-fun temp2708_15 () (_ BitVec 64))
(declare-fun temp2708_32 () (_ BitVec 64))
(declare-fun var71991 () (_ BitVec 64))
(declare-fun var71992 () (_ BitVec 64))
(declare-fun temp2708_36 () (_ BitVec 64))
(declare-fun temp2708_37 () (_ BitVec 64))
(declare-fun temp2708_38 () (_ BitVec 64))
(declare-fun temp2708_39 () (_ BitVec 64))
(declare-fun temp2708_34 () (_ BitVec 64))
(declare-fun temp2708_40 () (_ BitVec 64))
(declare-fun temp2708_41 () (_ BitVec 64))
(declare-fun temp2708_42 () (_ BitVec 64))
(declare-fun temp2708_35 () (_ BitVec 64))
(declare-fun temp2708_44 () (_ BitVec 64))
(declare-fun temp2708_45 () (_ BitVec 64))
(declare-fun temp2708_46 () (_ BitVec 64))
(declare-fun temp2708_47 () (_ BitVec 64))
(declare-fun temp2708_48 () (_ BitVec 64))
(declare-fun temp2708_49 () (_ BitVec 64))
(declare-fun temp2708_33 () (_ BitVec 64))
(declare-fun temp2708_50 () (_ BitVec 64))
(declare-fun var71996 () (_ BitVec 64))
(declare-fun var71997 () (_ BitVec 64))
(declare-fun temp2708_54 () (_ BitVec 64))
(declare-fun temp2708_55 () (_ BitVec 64))
(declare-fun temp2708_56 () (_ BitVec 64))
(declare-fun temp2708_57 () (_ BitVec 64))
(declare-fun temp2708_52 () (_ BitVec 64))
(declare-fun temp2708_58 () (_ BitVec 64))
(declare-fun temp2708_59 () (_ BitVec 64))
(declare-fun temp2708_60 () (_ BitVec 64))
(declare-fun temp2708_53 () (_ BitVec 64))
(declare-fun temp2708_62 () (_ BitVec 64))
(declare-fun temp2708_63 () (_ BitVec 64))
(declare-fun temp2708_64 () (_ BitVec 64))
(declare-fun temp2708_65 () (_ BitVec 64))
(declare-fun temp2708_51 () (_ BitVec 64))
(declare-fun temp2708_66 () (_ BitVec 64))
(declare-fun var71999 () (_ BitVec 64))
(declare-fun temp2708_70 () (_ BitVec 64))
(declare-fun temp2708_71 () (_ BitVec 64))
(declare-fun temp2708_72 () (_ BitVec 64))
(declare-fun temp2708_73 () (_ BitVec 64))
(declare-fun temp2708_68 () (_ BitVec 64))
(declare-fun temp2708_74 () (_ BitVec 64))
(declare-fun temp2708_75 () (_ BitVec 64))
(declare-fun temp2708_76 () (_ BitVec 64))
(declare-fun temp2708_69 () (_ BitVec 64))
(declare-fun temp2708_78 () (_ BitVec 64))
(declare-fun temp2708_79 () (_ BitVec 64))
(declare-fun temp2708_80 () (_ BitVec 64))
(declare-fun temp2708_81 () (_ BitVec 64))
(declare-fun temp2708_82 () (_ BitVec 64))
(declare-fun temp2708_67 () (_ BitVec 64))
(declare-fun temp2708_83 () (_ BitVec 64))
(declare-fun var72001 () (_ BitVec 64))
(declare-fun var72002 () (_ BitVec 64))
(declare-fun var72003 () (_ BitVec 64))
(declare-fun temp2708_84 () (_ BitVec 64))
(declare-fun temp2708_85 () (_ BitVec 64))
(declare-fun var72043 () (_ BitVec 64))
(declare-fun temp2708_86 () (_ BitVec 64))
(declare-fun var72044 () (_ BitVec 64))
(declare-fun var72045 () (_ BitVec 64))
(declare-fun temp2708_87 () (_ BitVec 64))
(declare-fun temp2708_88 () (_ BitVec 64))
(declare-fun var139334 () (_ BitVec 64))
(declare-fun temp2708_89 () (_ BitVec 64))
(declare-fun var139340 () (_ BitVec 64))
(declare-fun temp2708_90 () (_ BitVec 64))
(declare-fun temp2708_91 () (_ BitVec 64))
(declare-fun var139344 () (_ BitVec 64))
(declare-fun ARGNAME_explicit_paddings_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var139345 () (_ BitVec 64))
(declare-fun temp2708_92 () (_ BitVec 64))
(declare-fun temp2708_93 () (_ BitVec 64))
(declare-fun ARGNAME_explicit_paddings_NAMEEND_ITERATOR_VAL () (_ BitVec 64))
(declare-fun var139377 () (_ BitVec 64))
(declare-fun temp2708_94 () (_ BitVec 64))
(declare-fun temp2708_95 () (_ BitVec 64))
(declare-fun var139383 () (_ BitVec 64))
(declare-fun temp2708_96 () (_ BitVec 64))
(declare-fun var139384 () (_ BitVec 64))
(declare-fun temp2708_98 () (_ BitVec 64))
(declare-fun var139391 () (_ BitVec 64))
(declare-fun temp2708_99 () (_ BitVec 64))
(declare-fun var139394 () (_ BitVec 64))
(declare-fun temp2708_100 () (_ BitVec 64))
(declare-fun var205161 () (_ BitVec 64))
(declare-fun temp2708_101 () (_ BitVec 64))
(declare-fun temp2708_102 () (_ BitVec 64))
(declare-fun temp2708_103 () (_ BitVec 64))
(declare-fun temp2708_104 () (_ BitVec 64))
(declare-fun temp2708_105 () (_ BitVec 64))
(declare-fun var205185 () (_ BitVec 64))
(declare-fun var205160 () (_ BitVec 64))
(declare-fun var139396 () (_ BitVec 64))
(declare-fun var270725 () (_ BitVec 64))
(declare-fun temp2708_106 () (_ BitVec 64))
(declare-fun temp2708_107 () (_ BitVec 64))
(declare-fun temp2708_108 () (_ BitVec 64))
(declare-fun var270730 () (_ BitVec 64))
(declare-fun var270748 () (_ BitVec 64))
(declare-fun var270724 () (_ BitVec 64))
(declare-fun var139399 () (_ BitVec 64))
(declare-fun temp2708_109 () (_ BitVec 64))
(declare-fun var139402 () (_ BitVec 64))
(declare-fun var139403 () (_ BitVec 64))
(declare-fun temp2708_110 () (_ BitVec 64))
(declare-fun ARGNAME_explicit_paddings_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp2708_111 () (_ BitVec 64))
(declare-fun temp2708_112 () (_ BitVec 64))
(declare-fun temp2708_113 () (_ BitVec 64))
(declare-fun temp2708_114 () (_ BitVec 64))
(declare-fun temp2708_115 () (_ BitVec 64))
(declare-fun temp2708_116 () (_ BitVec 64))
(declare-fun temp2708_117 () (_ BitVec 64))
(declare-fun temp2708_118 () (_ BitVec 64))
(declare-fun temp2708_119 () (_ BitVec 64))
(declare-fun temp2708_120 () (_ BitVec 64))
(declare-fun temp2708_121 () (_ BitVec 64))
(declare-fun temp2708_123 () (_ BitVec 64))
(declare-fun temp2708_122 () (_ BitVec 64))
(declare-fun temp2708_124 () (_ BitVec 64))
(declare-fun var139406 () (_ BitVec 64))
(declare-fun temp2708_125 () (_ BitVec 64))
(declare-fun temp2708_126 () (_ BitVec 64))
(declare-fun var139408 () (_ BitVec 64))
(declare-fun var139409 () (_ BitVec 64))
(declare-fun temp2708_128 () (_ BitVec 64))
(declare-fun temp2708_127 () (_ BitVec 64))
(declare-fun temp2708_129 () (_ BitVec 64))
(declare-fun var139412 () (_ BitVec 64))
(declare-fun temp2708_130 () (_ BitVec 64))
(declare-fun temp2708_131 () (_ BitVec 64))
(declare-fun var139414 () (_ BitVec 64))
(declare-fun var139415 () (_ BitVec 64))
(declare-fun temp2708_133 () (_ BitVec 64))
(declare-fun temp2708_132 () (_ BitVec 64))
(declare-fun temp2708_134 () (_ BitVec 64))
(declare-fun var139418 () (_ BitVec 64))
(declare-fun temp2708_135 () (_ BitVec 64))
(declare-fun temp2708_136 () (_ BitVec 64))
(declare-fun var139420 () (_ BitVec 64))
(declare-fun var139421 () (_ BitVec 64))
(declare-fun temp2708_138 () (_ BitVec 64))
(declare-fun temp2708_137 () (_ BitVec 64))
(declare-fun temp2708_139 () (_ BitVec 64))
(declare-fun var139424 () (_ BitVec 64))
(declare-fun temp2708_140 () (_ BitVec 64))
(declare-fun temp2708_141 () (_ BitVec 64))
(declare-fun var139429 () (_ BitVec 64))
(assert (or (= ARGNAME_padding_NAMEEND #x0000000000000001)
    (= ARGNAME_padding_NAMEEND #x0000000000000002)
    (= ARGNAME_padding_NAMEEND #x0000000000000003)))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp2708_1 #x0000000000000004))
(assert (= var71881
   (ite (= ARGNAME_strides_NAMEEND_LEN temp2708_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2708_2 #x0000000000000001))
(assert (= var71881 temp2708_2))
(assert (= temp2708_3 #x0000000000000000))
(assert (= temp2708_4 (select ARGNAME_strides_NAMEEND_VAL temp2708_3)))
(assert (= temp2708_5 #x0000000000000001))
(assert (= temp2708_6 (select ARGNAME_strides_NAMEEND_VAL temp2708_5)))
(assert (= temp2708_7 #x0000000000000002))
(assert (= temp2708_8 (select ARGNAME_strides_NAMEEND_VAL temp2708_7)))
(assert (= temp2708_9 #x0000000000000003))
(assert (= temp2708_10 (select ARGNAME_strides_NAMEEND_VAL temp2708_9)))
(assert (= temp2708_11 #x0000000000000004))
(assert (= temp2708_12 (select ARGNAME_strides_NAMEEND_VAL temp2708_11)))
(assert (= temp2708_13 #x0000000000000005))
(assert (= temp2708_14 (select ARGNAME_strides_NAMEEND_VAL temp2708_13)))
(assert (= temp2708_18 #x0000000000000002))
(assert (= temp2708_19 #x0000000000000003))
(assert (= temp2708_20 #x0000000000000002))
(assert (= temp2708_21 #x0000000000000003))
(assert (= temp2708_16
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2708_20)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2708_21))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp2708_19)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp2708_18))))
(assert (= temp2708_22 #x0000000000000002))
(assert (= temp2708_23 #x0000000000000003))
(assert (= temp2708_24 #x0000000000000003))
(assert (= temp2708_17 (ite (= temp2708_16 temp2708_24) temp2708_23 temp2708_22)))
(assert (= temp2708_26 #x0000000000000002))
(assert (= temp2708_27 #x0000000000000001))
(assert (= temp2708_28 #x0000000000000002))
(assert (= temp2708_29 #x0000000000000001))
(assert (= temp2708_30 #x0000000000000000))
(assert (= temp2708_31 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2708_30)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp2708_31))
                (bvsub temp2708_17 temp2708_29)
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2708_27)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp2708_28))
                     temp2708_17
                     (bvsub temp2708_17 temp2708_26)))))
  (= temp2708_15 a!1)))
(assert (= temp2708_32 (select ARGNAME_strides_NAMEEND_VAL temp2708_15)))
(assert (= var71991 temp2708_32))
(assert (= var71992 var71991))
(assert (= temp2708_36 #x0000000000000002))
(assert (= temp2708_37 #x0000000000000003))
(assert (= temp2708_38 #x0000000000000002))
(assert (= temp2708_39 #x0000000000000003))
(assert (= temp2708_34
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2708_38)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2708_39))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp2708_37)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp2708_36))))
(assert (= temp2708_40 #x0000000000000002))
(assert (= temp2708_41 #x0000000000000003))
(assert (= temp2708_42 #x0000000000000003))
(assert (= temp2708_35 (ite (= temp2708_34 temp2708_42) temp2708_41 temp2708_40)))
(assert (= temp2708_44 #x0000000000000001))
(assert (= temp2708_45 #x0000000000000001))
(assert (= temp2708_46 #x0000000000000001))
(assert (= temp2708_47 #x0000000000000002))
(assert (= temp2708_48 #x0000000000000000))
(assert (= temp2708_49 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2708_48)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp2708_49))
                temp2708_35
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2708_46)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp2708_47))
                     (bvadd temp2708_35 temp2708_45)
                     (bvsub temp2708_35 temp2708_44)))))
  (= temp2708_33 a!1)))
(assert (= temp2708_50 (select ARGNAME_strides_NAMEEND_VAL temp2708_33)))
(assert (= var71996 temp2708_50))
(assert (= var71997 var71996))
(assert (= temp2708_54 #x0000000000000002))
(assert (= temp2708_55 #x0000000000000003))
(assert (= temp2708_56 #x0000000000000002))
(assert (= temp2708_57 #x0000000000000003))
(assert (= temp2708_52
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2708_56)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2708_57))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp2708_55)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp2708_54))))
(assert (= temp2708_58 #x0000000000000002))
(assert (= temp2708_59 #x0000000000000003))
(assert (= temp2708_60 #x0000000000000003))
(assert (= temp2708_53 (ite (= temp2708_52 temp2708_60) temp2708_59 temp2708_58)))
(assert (= temp2708_62 #x0000000000000000))
(assert (= temp2708_63 #x0000000000000001))
(assert (= temp2708_64 #x0000000000000005))
(assert (= temp2708_65 #x0000000000000004))
(assert (= temp2708_51
   (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp2708_65)
        temp2708_53
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp2708_64)
             (bvadd temp2708_53 temp2708_63)
             temp2708_62))))
(assert (= temp2708_66 (select ARGNAME_strides_NAMEEND_VAL temp2708_51)))
(assert (= var71999 temp2708_66))
(assert (= temp2708_70 #x0000000000000002))
(assert (= temp2708_71 #x0000000000000003))
(assert (= temp2708_72 #x0000000000000002))
(assert (= temp2708_73 #x0000000000000003))
(assert (= temp2708_68
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2708_72)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2708_73))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp2708_71)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp2708_70))))
(assert (= temp2708_74 #x0000000000000002))
(assert (= temp2708_75 #x0000000000000003))
(assert (= temp2708_76 #x0000000000000003))
(assert (= temp2708_69 (ite (= temp2708_68 temp2708_76) temp2708_75 temp2708_74)))
(assert (= temp2708_78 #x0000000000000001))
(assert (= temp2708_79 #x0000000000000005))
(assert (= temp2708_80 #x0000000000000001))
(assert (= temp2708_81 #x0000000000000001))
(assert (= temp2708_82 #x0000000000000002))
(assert (= temp2708_67
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2708_81)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2708_82))
        temp2708_80
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp2708_79)
             temp2708_69
             (bvadd temp2708_69 temp2708_78)))))
(assert (= temp2708_83 (select ARGNAME_strides_NAMEEND_VAL temp2708_67)))
(assert (= var72001 temp2708_83))
(assert (= var72002 var71992))
(assert (= var72003 (ite (= var72002 var71997) #x0000000000000001 #x0000000000000000)))
(assert (= temp2708_84 #x0000000000000001))
(assert (= var72003 temp2708_84))
(assert (= temp2708_85 #x0000000000000001))
(assert (= var72043
   (ite (= var71999 temp2708_85) #x0000000000000001 #x0000000000000000)))
(assert (= temp2708_86 #x0000000000000001))
(assert (= var72044
   (ite (= var72001 temp2708_86) #x0000000000000001 #x0000000000000000)))
(assert (= var72045 (bvand var72043 var72044)))
(assert (= temp2708_87 #x0000000000000001))
(assert (= var72045 temp2708_87))
(assert (= temp2708_88 #x0000000000000004))
(assert (= var139334 temp2708_88))
(assert (= temp2708_89 #x0000000000000003))
(assert (= var139340
   (ite (= ARGNAME_padding_NAMEEND temp2708_89)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2708_90 #x0000000000000001))
(assert (= var139340 temp2708_90))
(assert (= temp2708_91 #x0000000000000001))
(assert (= var139344 (bvshl var139334 temp2708_91)))
(assert (= var139345
   (ite (= var139344 ARGNAME_explicit_paddings_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2708_92 #x0000000000000001))
(assert (= var139345 temp2708_92))
(assert (= temp2708_93 #x0000000000000000))
(assert (= var139377
   (ite (bvslt ARGNAME_explicit_paddings_NAMEEND_ITERATOR_VAL temp2708_93)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2708_94 #x0000000000000000))
(assert (= var139377 temp2708_94))
(assert (= temp2708_95 #x0000000000000000))
(assert (= var139383 temp2708_95))
(assert (= temp2708_96 #x0000000000000000))
(assert (= var139384
   (ite (= var139383 temp2708_96) #x0000000000000001 #x0000000000000000)))
(assert (= temp2708_98 #x0000000000000002))
(assert (= var139391 temp2708_98))
(assert (= temp2708_99 #x0000000000000002))
(assert (= var139394
   (ite (= var139391 temp2708_99) #x0000000000000001 #x0000000000000000)))
(assert (= temp2708_100 #x0000000000000001))
(assert (= var139394 temp2708_100))
(assert (= var205161 var139334))
(assert (= temp2708_101 #x0000000000000000))
(assert (= temp2708_102 #x0000000000000001))
(assert (= temp2708_103 #x0000000000000002))
(assert (= temp2708_104 #x0000000000000003))
(assert (or false
    (= ARGNAME_data_format_NAMEEND_STRFMT temp2708_101)
    (= ARGNAME_data_format_NAMEEND_STRFMT temp2708_102)
    (= ARGNAME_data_format_NAMEEND_STRFMT temp2708_103)
    (= ARGNAME_data_format_NAMEEND_STRFMT temp2708_104)))
(assert (= temp2708_105 #x0000000000000000))
(assert (= var205185 temp2708_105))
(assert (= var205160 var205185))
(assert (= var139396 var205160))
(assert (= var270725 var139334))
(assert (= temp2708_106 #x0000000000000000))
(assert (= temp2708_107 #x0000000000000004))
(assert (or false
    (= ARGNAME_data_format_NAMEEND_STRFMT temp2708_106)
    (= ARGNAME_data_format_NAMEEND_STRFMT temp2708_107)))
(assert (= temp2708_108 #xffffffffffffffff))
(assert (= var270730 (bvadd var270725 temp2708_108)))
(assert (= var270748 var270730))
(assert (= var270724 var270748))
(assert (= var139399 var270724))
(assert (= temp2708_109 #x0000000000000001))
(assert (= var139402 (bvshl var139396 temp2708_109)))
(assert (= var139403 var139402))
(assert (= temp2708_110 #x0000000000000000))
(assert (= temp2708_111 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp2708_110)))
(assert (= temp2708_112 #x0000000000000001))
(assert (= temp2708_113 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp2708_112)))
(assert (= temp2708_114 #x0000000000000002))
(assert (= temp2708_115 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp2708_114)))
(assert (= temp2708_116 #x0000000000000003))
(assert (= temp2708_117 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp2708_116)))
(assert (= temp2708_118 #x0000000000000004))
(assert (= temp2708_119 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp2708_118)))
(assert (= temp2708_120 #x0000000000000005))
(assert (= temp2708_121 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp2708_120)))
(assert (= temp2708_123 (select ARGNAME_explicit_paddings_NAMEEND_VAL var139403)))
(assert (= temp2708_122 temp2708_123))
(assert (= temp2708_124 #x0000000000000000))
(assert (= var139406
   (ite (= temp2708_122 temp2708_124) #x0000000000000001 #x0000000000000000)))
(assert (= temp2708_125 #x0000000000000001))
(assert (= var139406 temp2708_125))
(assert (= temp2708_126 #x0000000000000001))
(assert (= var139408 (bvor var139402 temp2708_126)))
(assert (= var139409 var139408))
(assert (= temp2708_128 (select ARGNAME_explicit_paddings_NAMEEND_VAL var139409)))
(assert (= temp2708_127 temp2708_128))
(assert (= temp2708_129 #x0000000000000000))
(assert (= var139412
   (ite (= temp2708_127 temp2708_129) #x0000000000000001 #x0000000000000000)))
(assert (= temp2708_130 #x0000000000000001))
(assert (= var139412 temp2708_130))
(assert (= temp2708_131 #x0000000000000001))
(assert (= var139414 (bvshl var139399 temp2708_131)))
(assert (= var139415 var139414))
(assert (= temp2708_133 (select ARGNAME_explicit_paddings_NAMEEND_VAL var139415)))
(assert (= temp2708_132 temp2708_133))
(assert (= temp2708_134 #x0000000000000000))
(assert (= var139418
   (ite (= temp2708_132 temp2708_134) #x0000000000000001 #x0000000000000000)))
(assert (= temp2708_135 #x0000000000000001))
(assert (= var139418 temp2708_135))
(assert (= temp2708_136 #x0000000000000001))
(assert (= var139420 (bvor var139414 temp2708_136)))
(assert (= var139421 var139420))
(assert (= temp2708_138 (select ARGNAME_explicit_paddings_NAMEEND_VAL var139421)))
(assert (= temp2708_137 temp2708_138))
(assert (= temp2708_139 #x0000000000000000))
(assert (= var139424
   (ite (= temp2708_137 temp2708_139) #x0000000000000001 #x0000000000000000)))
(assert (= temp2708_140 #x0000000000000001))
(assert (= var139424 temp2708_140))
(assert (= temp2708_141 #x0000000000000000))
(assert (= var139429 temp2708_141))
(model-add temp2708_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp2708_2 () (_ BitVec 64) #x0000000000000001)
(model-add var71881 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_strides_NAMEEND_LEN
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))
















