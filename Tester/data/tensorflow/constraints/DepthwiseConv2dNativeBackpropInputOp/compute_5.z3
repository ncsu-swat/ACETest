(declare-fun temp1768_1 () (_ BitVec 64))
(declare-fun var135042 () (_ BitVec 64))
(declare-fun var135038 () (_ BitVec 64))
(declare-fun temp1768_2 () (_ BitVec 64))
(declare-fun var72296 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_sizes_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp1768_3 () (_ BitVec 64))
(declare-fun var72337 () (_ BitVec 64))
(declare-fun ARGNAME_input_sizes_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var72340 () (_ BitVec 64))
(declare-fun temp1768_5 () (_ BitVec 64))
(declare-fun var72422 () (_ BitVec 64))
(declare-fun temp1768_6 () (_ BitVec 64))
(declare-fun var72423 () (_ BitVec 64))
(declare-fun temp1768_7 () (_ BitVec 64))
(declare-fun temp1768_8 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var72465 () (_ BitVec 64))
(declare-fun temp1768_9 () (_ BitVec 64))
(declare-fun temp1768_10 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var72494 () (_ BitVec 64))
(declare-fun temp1768_11 () (_ BitVec 64))
(declare-fun temp1768_12 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1768_13 () (_ BitVec 64))
(declare-fun temp1768_14 () (_ BitVec 64))
(declare-fun temp1768_15 () (_ BitVec 64))
(declare-fun temp1768_16 () (_ BitVec 64))
(declare-fun temp1768_17 () (_ BitVec 64))
(declare-fun temp1768_18 () (_ BitVec 64))
(declare-fun temp1768_19 () (_ BitVec 64))
(declare-fun temp1768_20 () (_ BitVec 64))
(declare-fun temp1768_21 () (_ BitVec 64))
(declare-fun temp1768_22 () (_ BitVec 64))
(declare-fun temp1768_23 () (_ BitVec 64))
(declare-fun temp1768_24 () (_ BitVec 64))
(declare-fun temp1768_25 () (_ BitVec 64))
(declare-fun var72523 () (_ BitVec 64))
(declare-fun temp1768_26 () (_ BitVec 64))
(declare-fun var200952 () (_ BitVec 64))
(declare-fun var72559 () (_ BitVec 64))
(declare-fun var72560 () (_ BitVec 64))
(declare-fun temp1768_27 () (_ BitVec 64))
(declare-fun var266488 () (_ BitVec 64))
(declare-fun var72595 () (_ BitVec 64))
(declare-fun var72596 () (_ BitVec 64))
(declare-fun temp1768_28 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1768_29 () (_ BitVec 64))
(declare-fun temp1768_30 () (_ BitVec 64))
(declare-fun temp1768_31 () (_ BitVec 64))
(declare-fun temp1768_32 () (_ BitVec 64))
(declare-fun temp1768_33 () (_ BitVec 64))
(declare-fun temp1768_34 () (_ BitVec 64))
(declare-fun temp1768_35 () (_ BitVec 64))
(declare-fun temp1768_36 () (_ BitVec 64))
(declare-fun temp1768_37 () (_ BitVec 64))
(declare-fun temp1768_38 () (_ BitVec 64))
(declare-fun temp1768_39 () (_ BitVec 64))
(declare-fun temp1768_40 () (_ BitVec 64))
(declare-fun temp1768_41 () (_ BitVec 64))
(declare-fun var72629 () (_ BitVec 64))
(declare-fun temp1768_42 () (_ BitVec 64))
(declare-fun temp1768_43 () (_ BitVec 64))
(declare-fun var72630 () (_ BitVec 64))
(declare-fun temp1768_47 () (_ BitVec 64))
(declare-fun temp1768_48 () (_ BitVec 64))
(declare-fun temp1768_49 () (_ BitVec 64))
(declare-fun temp1768_50 () (_ BitVec 64))
(declare-fun temp1768_45 () (_ BitVec 64))
(declare-fun temp1768_51 () (_ BitVec 64))
(declare-fun temp1768_52 () (_ BitVec 64))
(declare-fun temp1768_53 () (_ BitVec 64))
(declare-fun temp1768_46 () (_ BitVec 64))
(declare-fun temp1768_55 () (_ BitVec 64))
(declare-fun temp1768_56 () (_ BitVec 64))
(declare-fun temp1768_57 () (_ BitVec 64))
(declare-fun temp1768_58 () (_ BitVec 64))
(declare-fun temp1768_59 () (_ BitVec 64))
(declare-fun temp1768_60 () (_ BitVec 64))
(declare-fun temp1768_44 () (_ BitVec 64))
(declare-fun temp1768_61 () (_ BitVec 64))
(declare-fun var72633 () (_ BitVec 64))
(declare-fun temp1768_62 () (_ BitVec 64))
(declare-fun var332024 () (_ BitVec 64))
(declare-fun var72634 () (_ BitVec 64))
(declare-fun var72635 () (_ BitVec 64))
(declare-fun var72636 () (_ BitVec 64))
(declare-fun temp1768_63 () (_ BitVec 64))
(declare-fun var72675 () (_ BitVec 64))
(declare-fun temp1768_67 () (_ BitVec 64))
(declare-fun temp1768_68 () (_ BitVec 64))
(declare-fun temp1768_69 () (_ BitVec 64))
(declare-fun temp1768_70 () (_ BitVec 64))
(declare-fun temp1768_65 () (_ BitVec 64))
(declare-fun temp1768_71 () (_ BitVec 64))
(declare-fun temp1768_72 () (_ BitVec 64))
(declare-fun temp1768_73 () (_ BitVec 64))
(declare-fun temp1768_66 () (_ BitVec 64))
(declare-fun temp1768_75 () (_ BitVec 64))
(declare-fun temp1768_76 () (_ BitVec 64))
(declare-fun temp1768_77 () (_ BitVec 64))
(declare-fun temp1768_78 () (_ BitVec 64))
(declare-fun temp1768_79 () (_ BitVec 64))
(declare-fun temp1768_80 () (_ BitVec 64))
(declare-fun temp1768_64 () (_ BitVec 64))
(declare-fun temp1768_81 () (_ BitVec 64))
(declare-fun var72678 () (_ BitVec 64))
(declare-fun temp1768_82 () (_ BitVec 64))
(declare-fun var397560 () (_ BitVec 64))
(declare-fun var72679 () (_ BitVec 64))
(declare-fun var72680 () (_ BitVec 64))
(declare-fun var72681 () (_ BitVec 64))
(declare-fun temp1768_83 () (_ BitVec 64))
(declare-fun var72712 () (_ BitVec 64))
(declare-fun temp1768_84 () (_ BitVec 64))
(declare-fun temp1768_85 () (_ BitVec 64))
(declare-fun var72715 () (_ BitVec 64))
(declare-fun temp1768_86 () (_ BitVec 64))
(declare-fun temp1768_87 () (_ BitVec 64))
(declare-fun var72748 () (_ BitVec 64))
(declare-fun temp1768_91 () (_ BitVec 64))
(declare-fun temp1768_92 () (_ BitVec 64))
(declare-fun temp1768_93 () (_ BitVec 64))
(declare-fun temp1768_94 () (_ BitVec 64))
(declare-fun temp1768_89 () (_ BitVec 64))
(declare-fun temp1768_95 () (_ BitVec 64))
(declare-fun temp1768_96 () (_ BitVec 64))
(declare-fun temp1768_97 () (_ BitVec 64))
(declare-fun temp1768_90 () (_ BitVec 64))
(declare-fun temp1768_99 () (_ BitVec 64))
(declare-fun temp1768_100 () (_ BitVec 64))
(declare-fun temp1768_101 () (_ BitVec 64))
(declare-fun temp1768_102 () (_ BitVec 64))
(declare-fun temp1768_103 () (_ BitVec 64))
(declare-fun temp1768_88 () (_ BitVec 64))
(declare-fun temp1768_104 () (_ BitVec 64))
(declare-fun var72751 () (_ BitVec 64))
(declare-fun temp1768_105 () (_ BitVec 64))
(declare-fun var463096 () (_ BitVec 64))
(declare-fun var72752 () (_ BitVec 64))
(declare-fun var72753 () (_ BitVec 64))
(declare-fun var72754 () (_ BitVec 64))
(declare-fun temp1768_106 () (_ BitVec 64))
(declare-fun var72789 () (_ BitVec 64))
(declare-fun temp1768_107 () (_ BitVec 64))
(declare-fun var72791 () (_ BitVec 64))
(declare-fun temp1768_108 () (_ BitVec 64))
(declare-fun var72792 () (_ BitVec 64))
(declare-fun temp1768_110 () (_ BitVec 64))
(declare-fun temp1768_109 () (_ BitVec 64))
(declare-fun temp1768_112 () (_ BitVec 64))
(declare-fun temp1768_111 () (_ BitVec 64))
(declare-fun temp1768_114 () (_ BitVec 64))
(declare-fun temp1768_113 () (_ BitVec 64))
(declare-fun temp1768_116 () (_ BitVec 64))
(declare-fun temp1768_115 () (_ BitVec 64))
(declare-fun temp1768_118 () (_ BitVec 64))
(declare-fun temp1768_117 () (_ BitVec 64))
(declare-fun temp1768_120 () (_ BitVec 64))
(declare-fun temp1768_119 () (_ BitVec 64))
(declare-fun temp1768_121 () (_ BitVec 64))
(declare-fun var72847 () (_ BitVec 64))
(declare-fun temp1768_122 () (_ BitVec 64))
(declare-fun temp1768_123 () (_ BitVec 64))
(declare-fun var528638 () (_ BitVec 64))
(declare-fun temp1768_124 () (_ BitVec 64))
(declare-fun var528644 () (_ BitVec 64))
(declare-fun var528645 () (_ BitVec 64))
(declare-fun temp1768_128 () (_ BitVec 64))
(declare-fun temp1768_129 () (_ BitVec 64))
(declare-fun temp1768_130 () (_ BitVec 64))
(declare-fun temp1768_131 () (_ BitVec 64))
(declare-fun temp1768_126 () (_ BitVec 64))
(declare-fun temp1768_132 () (_ BitVec 64))
(declare-fun temp1768_133 () (_ BitVec 64))
(declare-fun temp1768_134 () (_ BitVec 64))
(declare-fun temp1768_127 () (_ BitVec 64))
(declare-fun temp1768_136 () (_ BitVec 64))
(declare-fun temp1768_137 () (_ BitVec 64))
(declare-fun temp1768_138 () (_ BitVec 64))
(declare-fun temp1768_139 () (_ BitVec 64))
(declare-fun temp1768_140 () (_ BitVec 64))
(declare-fun temp1768_141 () (_ BitVec 64))
(declare-fun temp1768_125 () (_ BitVec 64))
(declare-fun var528646 () (_ BitVec 64))
(declare-fun temp1768_142 () (_ BitVec 64))
(declare-fun var528647 () (_ BitVec 64))
(declare-fun var528648 () (_ BitVec 64))
(declare-fun temp1768_143 () (_ BitVec 64))
(declare-fun ARGNAME_explicit_paddings_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1768_144 () (_ BitVec 64))
(declare-fun temp1768_145 () (_ BitVec 64))
(declare-fun temp1768_146 () (_ BitVec 64))
(declare-fun temp1768_147 () (_ BitVec 64))
(declare-fun temp1768_148 () (_ BitVec 64))
(declare-fun temp1768_149 () (_ BitVec 64))
(declare-fun temp1768_150 () (_ BitVec 64))
(declare-fun temp1768_151 () (_ BitVec 64))
(declare-fun temp1768_152 () (_ BitVec 64))
(declare-fun temp1768_153 () (_ BitVec 64))
(declare-fun temp1768_154 () (_ BitVec 64))
(declare-fun temp1768_156 () (_ BitVec 64))
(declare-fun temp1768_155 () (_ BitVec 64))
(declare-fun temp1768_157 () (_ BitVec 64))
(declare-fun var528654 () (_ BitVec 64))
(declare-fun var528655 () (_ BitVec 64))
(declare-fun temp1768_159 () (_ BitVec 64))
(declare-fun temp1768_158 () (_ BitVec 64))
(declare-fun temp1768_160 () (_ BitVec 64))
(declare-fun var594174 () (_ BitVec 64))
(declare-fun temp1768_161 () (_ BitVec 64))
(declare-fun var594180 () (_ BitVec 64))
(declare-fun var594181 () (_ BitVec 64))
(declare-fun temp1768_165 () (_ BitVec 64))
(declare-fun temp1768_166 () (_ BitVec 64))
(declare-fun temp1768_167 () (_ BitVec 64))
(declare-fun temp1768_168 () (_ BitVec 64))
(declare-fun temp1768_163 () (_ BitVec 64))
(declare-fun temp1768_169 () (_ BitVec 64))
(declare-fun temp1768_170 () (_ BitVec 64))
(declare-fun temp1768_171 () (_ BitVec 64))
(declare-fun temp1768_164 () (_ BitVec 64))
(declare-fun temp1768_173 () (_ BitVec 64))
(declare-fun temp1768_174 () (_ BitVec 64))
(declare-fun temp1768_175 () (_ BitVec 64))
(declare-fun temp1768_176 () (_ BitVec 64))
(declare-fun temp1768_177 () (_ BitVec 64))
(declare-fun temp1768_178 () (_ BitVec 64))
(declare-fun temp1768_162 () (_ BitVec 64))
(declare-fun var594182 () (_ BitVec 64))
(declare-fun temp1768_179 () (_ BitVec 64))
(declare-fun var594183 () (_ BitVec 64))
(declare-fun var594184 () (_ BitVec 64))
(declare-fun temp1768_181 () (_ BitVec 64))
(declare-fun temp1768_180 () (_ BitVec 64))
(declare-fun temp1768_182 () (_ BitVec 64))
(declare-fun var594190 () (_ BitVec 64))
(declare-fun var594191 () (_ BitVec 64))
(declare-fun temp1768_184 () (_ BitVec 64))
(declare-fun temp1768_183 () (_ BitVec 64))
(declare-fun var664440 () (_ BitVec 64))
(declare-fun var729556 () (_ BitVec 64))
(declare-fun temp1768_185 () (_ BitVec 64))
(declare-fun var729557 () (_ BitVec 64))
(declare-fun temp1768_186 () (_ BitVec 64))
(declare-fun var729575 () (_ BitVec 64))
(declare-fun temp1768_187 () (_ BitVec 64))
(declare-fun temp1768_188 () (_ BitVec 64))
(declare-fun var729580 () (_ BitVec 64))
(declare-fun var729582 () (_ BitVec 64))
(declare-fun temp1768_189 () (_ BitVec 64))
(declare-fun var729583 () (_ BitVec 64))
(declare-fun temp1768_190 () (_ BitVec 64))
(declare-fun var729584 () (_ BitVec 64))
(declare-fun temp1768_191 () (_ BitVec 64))
(declare-fun temp1768_192 () (_ BitVec 64))
(declare-fun var729627 () (_ BitVec 64))
(declare-fun temp1768_193 () (_ BitVec 64))
(declare-fun var795512 () (_ BitVec 64))
(declare-fun var860628 () (_ BitVec 64))
(declare-fun temp1768_194 () (_ BitVec 64))
(declare-fun var860629 () (_ BitVec 64))
(declare-fun temp1768_195 () (_ BitVec 64))
(declare-fun var860647 () (_ BitVec 64))
(declare-fun temp1768_196 () (_ BitVec 64))
(declare-fun temp1768_197 () (_ BitVec 64))
(declare-fun var860652 () (_ BitVec 64))
(declare-fun var860654 () (_ BitVec 64))
(declare-fun temp1768_198 () (_ BitVec 64))
(declare-fun var860655 () (_ BitVec 64))
(declare-fun temp1768_199 () (_ BitVec 64))
(declare-fun var860656 () (_ BitVec 64))
(declare-fun temp1768_200 () (_ BitVec 64))
(declare-fun temp1768_201 () (_ BitVec 64))
(declare-fun var860699 () (_ BitVec 64))
(declare-fun temp1768_202 () (_ BitVec 64))
(declare-fun temp1768_203 () (_ BitVec 64))
(declare-fun var72913 () (_ BitVec 64))
(declare-fun temp1768_204 () (_ BitVec 64))
(declare-fun var72914 () (_ BitVec 64))
(declare-fun var72916 () (_ BitVec 64))
(declare-fun temp1768_205 () (_ BitVec 64))
(declare-fun temp1768_206 () (_ BitVec 64))
(declare-fun var72952 () (_ BitVec 64))
(declare-fun temp1768_207 () (_ BitVec 64))
(declare-fun var72953 () (_ BitVec 64))
(declare-fun var72955 () (_ BitVec 64))
(declare-fun temp1768_208 () (_ BitVec 64))
(declare-fun temp1768_210 () (_ BitVec 64))
(declare-fun temp1768_209 () (_ BitVec 64))
(declare-fun temp1768_212 () (_ BitVec 64))
(declare-fun temp1768_211 () (_ BitVec 64))
(declare-fun temp1768_214 () (_ BitVec 64))
(declare-fun temp1768_213 () (_ BitVec 64))
(declare-fun temp1768_216 () (_ BitVec 64))
(declare-fun temp1768_215 () (_ BitVec 64))
(declare-fun temp1768_218 () (_ BitVec 64))
(declare-fun temp1768_217 () (_ BitVec 64))
(declare-fun temp1768_220 () (_ BitVec 64))
(declare-fun temp1768_219 () (_ BitVec 64))
(declare-fun temp1768_222 () (_ BitVec 64))
(declare-fun temp1768_221 () (_ BitVec 64))
(declare-fun temp1768_224 () (_ BitVec 64))
(declare-fun temp1768_223 () (_ BitVec 64))
(declare-fun temp1768_226 () (_ BitVec 64))
(declare-fun temp1768_225 () (_ BitVec 64))
(declare-fun temp1768_228 () (_ BitVec 64))
(declare-fun temp1768_227 () (_ BitVec 64))
(declare-fun temp1768_230 () (_ BitVec 64))
(declare-fun temp1768_229 () (_ BitVec 64))
(declare-fun temp1768_232 () (_ BitVec 64))
(declare-fun temp1768_231 () (_ BitVec 64))
(declare-fun temp1768_234 () (_ BitVec 64))
(declare-fun temp1768_233 () (_ BitVec 64))
(declare-fun var72999 () (_ BitVec 64))
(declare-fun var73002 () (_ BitVec 64))
(declare-fun var73005 () (_ BitVec 64))
(declare-fun temp1768_235 () (_ BitVec 64))
(declare-fun var990899 () (_ BitVec 64))
(declare-fun temp1768_237 () (_ BitVec 64))
(declare-fun temp1768_236 () (_ BitVec 64))
(declare-fun temp1768_238 () (_ BitVec 64))
(declare-fun var1121995 () (_ BitVec 64))
(declare-fun temp1768_239 () (_ BitVec 64))
(declare-fun var1187625 () (_ BitVec 64))
(declare-fun temp1768_240 () (_ BitVec 64))
(assert (or (= ARGNAME_padding_NAMEEND #x0000000000000001)
    (= ARGNAME_padding_NAMEEND #x0000000000000002)
    (= ARGNAME_padding_NAMEEND #x0000000000000003)))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp1768_1 #x0000000000000001))
(assert (= var135042
   (ite (= ARGNAME_input_sizes_NAMEEND_DIM temp1768_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var135038 var135042))
(assert (= var72296 var135038))
(assert (= temp1768_2 #x0000000000000001))
(assert (= var72296 temp1768_2))
(assert (= temp1768_3 #x0000000000000000))
(assert (= var72337 temp1768_3))
(assert (= var72340
   (ite (bvsgt ARGNAME_input_sizes_NAMEEND_NUMELEMENT var72337)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1768_5 #x0000000000000004))
(assert (= var72422 temp1768_5))
(assert (= temp1768_6 #x0000000000000004))
(assert (= var72423 (ite (= var72422 temp1768_6) #x0000000000000001 #x0000000000000000)))
(assert (= temp1768_7 #x0000000000000001))
(assert (= var72423 temp1768_7))
(assert (= temp1768_8 #x0000000000000004))
(assert (= var72465
   (ite (= ARGNAME_filter_NAMEEND_DIM temp1768_8)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1768_9 #x0000000000000001))
(assert (= var72465 temp1768_9))
(assert (= temp1768_10 #x0000000000000004))
(assert (= var72494
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp1768_10)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1768_11 #x0000000000000001))
(assert (= var72494 temp1768_11))
(assert (= temp1768_12 #x0000000000000000))
(assert (= temp1768_13 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp1768_12)))
(assert (= temp1768_14 #x0000000000000001))
(assert (= temp1768_15 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp1768_14)))
(assert (= temp1768_16 #x0000000000000002))
(assert (= temp1768_17 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp1768_16)))
(assert (= temp1768_18 #x0000000000000003))
(assert (= temp1768_19 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp1768_18)))
(assert (= temp1768_20 #x0000000000000004))
(assert (= temp1768_21 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp1768_20)))
(assert (= temp1768_22 #x0000000000000005))
(assert (= temp1768_23 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp1768_22)))
(assert (= temp1768_24 #x0000000000000000))
(assert (= temp1768_25 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp1768_24)))
(assert (= var72523 temp1768_25))
(assert (= temp1768_26 #x000000007fffffff))
(assert (= var200952 temp1768_26))
(assert (= var72559 var200952))
(assert (= var72560 var72559))
(assert (= temp1768_27 #x000000007fffffff))
(assert (= var266488 temp1768_27))
(assert (= var72595 var266488))
(assert (= var72596 var72595))
(assert (= temp1768_28 #x0000000000000000))
(assert (= temp1768_29 (select ARGNAME_filter_NAMEEND_DIMSIZE temp1768_28)))
(assert (= temp1768_30 #x0000000000000001))
(assert (= temp1768_31 (select ARGNAME_filter_NAMEEND_DIMSIZE temp1768_30)))
(assert (= temp1768_32 #x0000000000000002))
(assert (= temp1768_33 (select ARGNAME_filter_NAMEEND_DIMSIZE temp1768_32)))
(assert (= temp1768_34 #x0000000000000003))
(assert (= temp1768_35 (select ARGNAME_filter_NAMEEND_DIMSIZE temp1768_34)))
(assert (= temp1768_36 #x0000000000000004))
(assert (= temp1768_37 (select ARGNAME_filter_NAMEEND_DIMSIZE temp1768_36)))
(assert (= temp1768_38 #x0000000000000005))
(assert (= temp1768_39 (select ARGNAME_filter_NAMEEND_DIMSIZE temp1768_38)))
(assert (= temp1768_40 #x0000000000000000))
(assert (= temp1768_41 (select ARGNAME_filter_NAMEEND_DIMSIZE temp1768_40)))
(assert (= var72629 temp1768_41))
(assert (= temp1768_42 #x0000000000000001))
(assert (= temp1768_43 (select ARGNAME_filter_NAMEEND_DIMSIZE temp1768_42)))
(assert (= var72630 temp1768_43))
(assert (= temp1768_47 #x0000000000000002))
(assert (= temp1768_48 #x0000000000000003))
(assert (= temp1768_49 #x0000000000000002))
(assert (= temp1768_50 #x0000000000000003))
(assert (= temp1768_45
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1768_49)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp1768_50))
        (bvsub ARGNAME_out_backprop_NAMEEND_DIM temp1768_48)
        (bvsub ARGNAME_out_backprop_NAMEEND_DIM temp1768_47))))
(assert (= temp1768_51 #x0000000000000002))
(assert (= temp1768_52 #x0000000000000003))
(assert (= temp1768_53 #x0000000000000003))
(assert (= temp1768_46 (ite (= temp1768_45 temp1768_53) temp1768_52 temp1768_51)))
(assert (= temp1768_55 #x0000000000000002))
(assert (= temp1768_56 #x0000000000000001))
(assert (= temp1768_57 #x0000000000000002))
(assert (= temp1768_58 #x0000000000000001))
(assert (= temp1768_59 #x0000000000000000))
(assert (= temp1768_60 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1768_59)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp1768_60))
                (bvsub temp1768_46 temp1768_58)
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1768_56)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp1768_57))
                     temp1768_46
                     (bvsub temp1768_46 temp1768_55)))))
  (= temp1768_44 a!1)))
(assert (= temp1768_61 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp1768_44)))
(assert (= var72633 temp1768_61))
(assert (= temp1768_62 #x000000007fffffff))
(assert (= var332024 temp1768_62))
(assert (= var72634 var332024))
(assert (= var72635 var72634))
(assert (= var72636
   (ite (bvslt var72633 var72635) #x0000000000000001 #x0000000000000000)))
(assert (= temp1768_63 #x0000000000000001))
(assert (= var72636 temp1768_63))
(assert (= var72675 var72633))
(assert (= temp1768_67 #x0000000000000002))
(assert (= temp1768_68 #x0000000000000003))
(assert (= temp1768_69 #x0000000000000002))
(assert (= temp1768_70 #x0000000000000003))
(assert (= temp1768_65
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1768_69)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp1768_70))
        (bvsub ARGNAME_out_backprop_NAMEEND_DIM temp1768_68)
        (bvsub ARGNAME_out_backprop_NAMEEND_DIM temp1768_67))))
(assert (= temp1768_71 #x0000000000000002))
(assert (= temp1768_72 #x0000000000000003))
(assert (= temp1768_73 #x0000000000000003))
(assert (= temp1768_66 (ite (= temp1768_65 temp1768_73) temp1768_72 temp1768_71)))
(assert (= temp1768_75 #x0000000000000001))
(assert (= temp1768_76 #x0000000000000001))
(assert (= temp1768_77 #x0000000000000001))
(assert (= temp1768_78 #x0000000000000002))
(assert (= temp1768_79 #x0000000000000000))
(assert (= temp1768_80 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1768_79)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp1768_80))
                temp1768_66
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1768_77)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp1768_78))
                     (bvadd temp1768_66 temp1768_76)
                     (bvsub temp1768_66 temp1768_75)))))
  (= temp1768_64 a!1)))
(assert (= temp1768_81 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp1768_64)))
(assert (= var72678 temp1768_81))
(assert (= temp1768_82 #x000000007fffffff))
(assert (= var397560 temp1768_82))
(assert (= var72679 var397560))
(assert (= var72680 var72679))
(assert (= var72681
   (ite (bvslt var72678 var72680) #x0000000000000001 #x0000000000000000)))
(assert (= temp1768_83 #x0000000000000001))
(assert (= var72681 temp1768_83))
(assert (= var72712 var72678))
(assert (= temp1768_84 #x0000000000000002))
(assert (= temp1768_85 (select ARGNAME_filter_NAMEEND_DIMSIZE temp1768_84)))
(assert (= var72715 temp1768_85))
(assert (= temp1768_86 #x0000000000000003))
(assert (= temp1768_87 (select ARGNAME_filter_NAMEEND_DIMSIZE temp1768_86)))
(assert (= var72748 temp1768_87))
(assert (= temp1768_91 #x0000000000000002))
(assert (= temp1768_92 #x0000000000000003))
(assert (= temp1768_93 #x0000000000000002))
(assert (= temp1768_94 #x0000000000000003))
(assert (= temp1768_89
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1768_93)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp1768_94))
        (bvsub ARGNAME_out_backprop_NAMEEND_DIM temp1768_92)
        (bvsub ARGNAME_out_backprop_NAMEEND_DIM temp1768_91))))
(assert (= temp1768_95 #x0000000000000002))
(assert (= temp1768_96 #x0000000000000003))
(assert (= temp1768_97 #x0000000000000003))
(assert (= temp1768_90 (ite (= temp1768_89 temp1768_97) temp1768_96 temp1768_95)))
(assert (= temp1768_99 #x0000000000000001))
(assert (= temp1768_100 #x0000000000000005))
(assert (= temp1768_101 #x0000000000000001))
(assert (= temp1768_102 #x0000000000000001))
(assert (= temp1768_103 #x0000000000000002))
(assert (= temp1768_88
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1768_102)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp1768_103))
        temp1768_101
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp1768_100)
             temp1768_90
             (bvadd temp1768_90 temp1768_99)))))
(assert (= temp1768_104 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp1768_88)))
(assert (= var72751 temp1768_104))
(assert (= temp1768_105 #x000000007fffffff))
(assert (= var463096 temp1768_105))
(assert (= var72752 var463096))
(assert (= var72753 var72752))
(assert (= var72754
   (ite (bvslt var72751 var72753) #x0000000000000001 #x0000000000000000)))
(assert (= temp1768_106 #x0000000000000001))
(assert (= var72754 temp1768_106))
(assert (= var72789 var72751))
(assert (= temp1768_107 #x0000000000000020))
(assert (= var72791 (bvshl var72751 temp1768_107)))
(assert (= temp1768_108 #x0000000000000020))
(assert (= var72792 (bvashr var72791 temp1768_108)))
(assert (= temp1768_110 #x0000000000000000))
(assert (= temp1768_109 temp1768_110))
(assert (= temp1768_112 #x0000000000000000))
(assert (= temp1768_111 temp1768_112))
(assert (= temp1768_114 #x0000000000000000))
(assert (= temp1768_113 temp1768_114))
(assert (= temp1768_116 #x0000000000000000))
(assert (= temp1768_115 temp1768_116))
(assert (= temp1768_118 #x0000000000000000))
(assert (= temp1768_117 temp1768_118))
(assert (= temp1768_120 #x0000000000000000))
(assert (= temp1768_119 temp1768_120))
(assert (= temp1768_121 #x0000000000000003))
(assert (= var72847
   (ite (= ARGNAME_padding_NAMEEND temp1768_121)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1768_122 #x0000000000000001))
(assert (= var72847 temp1768_122))
(assert (= temp1768_123 #x0000000000000048))
(assert (= var528638 temp1768_123))
(assert (= temp1768_124 #x0000000000000001))
(assert (= var528645 var528644))
(assert (= temp1768_128 #x0000000000000002))
(assert (= temp1768_129 #x0000000000000003))
(assert (= temp1768_130 #x0000000000000002))
(assert (= temp1768_131 #x0000000000000003))
(assert (= temp1768_126
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1768_130)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp1768_131))
        (bvsub var528645 temp1768_129)
        (bvsub var528645 temp1768_128))))
(assert (= temp1768_132 #x0000000000000002))
(assert (= temp1768_133 #x0000000000000003))
(assert (= temp1768_134 #x0000000000000003))
(assert (= temp1768_127 (ite (= temp1768_126 temp1768_134) temp1768_133 temp1768_132)))
(assert (= temp1768_136 #x0000000000000002))
(assert (= temp1768_137 #x0000000000000001))
(assert (= temp1768_138 #x0000000000000002))
(assert (= temp1768_139 #x0000000000000001))
(assert (= temp1768_140 #x0000000000000000))
(assert (= temp1768_141 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1768_140)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp1768_141))
                (bvsub temp1768_127 temp1768_139)
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1768_137)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp1768_138))
                     temp1768_127
                     (bvsub temp1768_127 temp1768_136)))))
  (= temp1768_125 a!1)))
(assert (= var528646 temp1768_125))
(assert (= temp1768_142 #x0000000000000001))
(assert (= var528647 (bvshl var528646 temp1768_142)))
(assert (= var528648 var528647))
(assert (= temp1768_143 #x0000000000000000))
(assert (= temp1768_144 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp1768_143)))
(assert (= temp1768_145 #x0000000000000001))
(assert (= temp1768_146 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp1768_145)))
(assert (= temp1768_147 #x0000000000000002))
(assert (= temp1768_148 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp1768_147)))
(assert (= temp1768_149 #x0000000000000003))
(assert (= temp1768_150 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp1768_149)))
(assert (= temp1768_151 #x0000000000000004))
(assert (= temp1768_152 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp1768_151)))
(assert (= temp1768_153 #x0000000000000005))
(assert (= temp1768_154 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp1768_153)))
(assert (= temp1768_156 (select ARGNAME_explicit_paddings_NAMEEND_VAL var528648)))
(assert (= temp1768_155 temp1768_156))
(assert (= temp1768_157 #x0000000000000001))
(assert (= var528654 (bvor var528647 temp1768_157)))
(assert (= var528655 var528654))
(assert (= temp1768_159 (select ARGNAME_explicit_paddings_NAMEEND_VAL var528655)))
(assert (= temp1768_158 temp1768_159))
(assert (= temp1768_160 #x0000000000000057))
(assert (= var594174 temp1768_160))
(assert (= temp1768_161 #x0000000000000001))
(assert (= var594181 var594180))
(assert (= temp1768_165 #x0000000000000002))
(assert (= temp1768_166 #x0000000000000003))
(assert (= temp1768_167 #x0000000000000002))
(assert (= temp1768_168 #x0000000000000003))
(assert (= temp1768_163
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1768_167)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp1768_168))
        (bvsub var594181 temp1768_166)
        (bvsub var594181 temp1768_165))))
(assert (= temp1768_169 #x0000000000000002))
(assert (= temp1768_170 #x0000000000000003))
(assert (= temp1768_171 #x0000000000000003))
(assert (= temp1768_164 (ite (= temp1768_163 temp1768_171) temp1768_170 temp1768_169)))
(assert (= temp1768_173 #x0000000000000001))
(assert (= temp1768_174 #x0000000000000001))
(assert (= temp1768_175 #x0000000000000001))
(assert (= temp1768_176 #x0000000000000002))
(assert (= temp1768_177 #x0000000000000000))
(assert (= temp1768_178 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1768_177)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp1768_178))
                temp1768_164
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1768_175)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp1768_176))
                     (bvadd temp1768_164 temp1768_174)
                     (bvsub temp1768_164 temp1768_173)))))
  (= temp1768_162 a!1)))
(assert (= var594182 temp1768_162))
(assert (= temp1768_179 #x0000000000000001))
(assert (= var594183 (bvshl var594182 temp1768_179)))
(assert (= var594184 var594183))
(assert (= temp1768_181 (select ARGNAME_explicit_paddings_NAMEEND_VAL var594184)))
(assert (= temp1768_180 temp1768_181))
(assert (= temp1768_182 #x0000000000000001))
(assert (= var594190 (bvor var594183 temp1768_182)))
(assert (= var594191 var594190))
(assert (= temp1768_184 (select ARGNAME_explicit_paddings_NAMEEND_VAL var594191)))
(assert (= temp1768_183 temp1768_184))
(assert (= var664440 var72629))
(assert (= var729556 var664440))
(assert (= temp1768_185 #x0000000000000001))
(assert (= var729557 temp1768_185))
(assert (= temp1768_186 #x0000000000000001))
(assert (= var729575
   (ite (bvslt var729557 temp1768_186) #x0000000000000001 #x0000000000000000)))
(assert (= temp1768_187 #x0000000000000000))
(assert (= var729575 temp1768_187))
(assert (= temp1768_188 #xffffffffffffffff))
(assert (= var729580 (bvadd var729556 temp1768_188)))
(assert (= var729582 (bvmul var729580 var729557)))
(assert (= temp1768_189 #x0000000000000001))
(assert (= var729583 (bvadd var729582 temp1768_189)))
(assert (= temp1768_190 #xffffffffffffffff))
(assert (= var729584 (bvxor var729582 temp1768_190)))
(assert (= temp1768_191 #x0000000000000003))
(assert (or false (= ARGNAME_padding_NAMEEND temp1768_191)))
(assert (= temp1768_192 #x0000000000000000))
(assert (= var729627
   (ite (bvslt temp1768_109 temp1768_192) #x0000000000000001 #x0000000000000000)))
(assert (= temp1768_193 #x0000000000000000))
(assert (= var729627 temp1768_193))
(assert (= var795512 var72630))
(assert (= var860628 var795512))
(assert (= temp1768_194 #x0000000000000001))
(assert (= var860629 temp1768_194))
(assert (= temp1768_195 #x0000000000000001))
(assert (= var860647
   (ite (bvslt var860629 temp1768_195) #x0000000000000001 #x0000000000000000)))
(assert (= temp1768_196 #x0000000000000000))
(assert (= var860647 temp1768_196))
(assert (= temp1768_197 #xffffffffffffffff))
(assert (= var860652 (bvadd var860628 temp1768_197)))
(assert (= var860654 (bvmul var860652 var860629)))
(assert (= temp1768_198 #x0000000000000001))
(assert (= var860655 (bvadd var860654 temp1768_198)))
(assert (= temp1768_199 #xffffffffffffffff))
(assert (= var860656 (bvxor var860654 temp1768_199)))
(assert (= temp1768_200 #x0000000000000003))
(assert (or false (= ARGNAME_padding_NAMEEND temp1768_200)))
(assert (= temp1768_201 #x0000000000000000))
(assert (= var860699
   (ite (bvslt temp1768_111 temp1768_201) #x0000000000000001 #x0000000000000000)))
(assert (= temp1768_202 #x0000000000000000))
(assert (= var860699 temp1768_202))
(assert (= temp1768_203 #x0000000000000020))
(assert (= var72913 (bvshl var72633 temp1768_203)))
(assert (= temp1768_204 #x0000000000000020))
(assert (= var72914 (bvashr var72913 temp1768_204)))
(assert (= var72916
   (ite (= var72914 temp1768_109) #x0000000000000001 #x0000000000000000)))
(assert (= temp1768_205 #x0000000000000001))
(assert (= var72916 temp1768_205))
(assert (= temp1768_206 #x0000000000000020))
(assert (= var72952 (bvshl var72678 temp1768_206)))
(assert (= temp1768_207 #x0000000000000020))
(assert (= var72953 (bvashr var72952 temp1768_207)))
(assert (= var72955
   (ite (= var72953 temp1768_111) #x0000000000000001 #x0000000000000000)))
(assert (= temp1768_208 #x0000000000000001))
(assert (= var72955 temp1768_208))
(assert (= temp1768_210 #x0000000000000000))
(assert (= temp1768_209 temp1768_210))
(assert (= temp1768_212 #x0000000000000000))
(assert (= temp1768_211 temp1768_212))
(assert (= temp1768_214 #x0000000000000000))
(assert (= temp1768_213 temp1768_214))
(assert (= temp1768_216 #x0000000000000000))
(assert (= temp1768_215 temp1768_216))
(assert (= temp1768_218 #x0000000000000000))
(assert (= temp1768_217 temp1768_218))
(assert (= temp1768_220 #x0000000000000000))
(assert (= temp1768_219 temp1768_220))
(assert (= temp1768_222 #x0000000000000000))
(assert (= temp1768_221 temp1768_222))
(assert (= temp1768_224 #x0000000000000000))
(assert (= temp1768_223 temp1768_224))
(assert (= temp1768_226 #x0000000000000000))
(assert (= temp1768_225 temp1768_226))
(assert (= temp1768_228 #x0000000000000000))
(assert (= temp1768_227 temp1768_228))
(assert (= temp1768_230 #x0000000000000000))
(assert (= temp1768_229 temp1768_230))
(assert (= temp1768_232 #x0000000000000000))
(assert (= temp1768_231 temp1768_232))
(assert (= temp1768_234 #x0000000000000000))
(assert (= temp1768_233 temp1768_234))
(assert (= var72999 var72629))
(assert (= var73002 var72630))
(assert (= var73005 var72748))
(assert (= temp1768_235 #x0000000000000002))
(assert (= var990899 temp1768_235))
(assert (= temp1768_237 #x0000000000000000))
(assert (= temp1768_236 temp1768_237))
(assert (= temp1768_238 #x0000000000000002))
(assert (= var1121995 temp1768_238))
(assert (= temp1768_239 #x0000000000000000))
(assert (= var1187625
   (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp1768_239)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1768_240 #x0000000000000001))
(assert (= var1187625 temp1768_240))
(model-add temp1768_1 () (_ BitVec 64) #x0000000000000001)
(model-add var135042 () (_ BitVec 64) #x0000000000000001)
(model-add var135038 () (_ BitVec 64) #x0000000000000001)
(model-add temp1768_2 () (_ BitVec 64) #x0000000000000001)
(model-add var72296 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_sizes_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))












