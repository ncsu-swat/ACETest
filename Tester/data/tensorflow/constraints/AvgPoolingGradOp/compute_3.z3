(declare-fun temp15_1 () (_ BitVec 64))
(declare-fun temp15_2 () (_ BitVec 64))
(declare-fun var67738 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun extend_9() (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND () (_ BitVec 64))
(declare-fun temp15_3 () (_ BitVec 64))
(declare-fun ARGNAME_orig_input_shape_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var67743 () (_ BitVec 64))
(declare-fun temp15_4 () (_ BitVec 64))
(declare-fun temp15_5 () (_ BitVec 64))
(declare-fun ARGNAME_grad_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var67770 () (_ BitVec 64))
(declare-fun temp15_6 () (_ BitVec 64))
(declare-fun temp15_7 () (_ BitVec 64))
(declare-fun var66361 () (_ BitVec 64))
(declare-fun temp15_8 () (_ BitVec 64))
(declare-fun temp15_9 () (_ BitVec 64))
(declare-fun ARGNAME_grad_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp15_10 () (_ BitVec 64))
(declare-fun temp15_11 () (_ BitVec 64))
(declare-fun temp15_12 () (_ BitVec 64))
(declare-fun temp15_13 () (_ BitVec 64))
(declare-fun temp15_14 () (_ BitVec 64))
(declare-fun temp15_15 () (_ BitVec 64))
(declare-fun temp15_16 () (_ BitVec 64))
(declare-fun temp15_17 () (_ BitVec 64))
(declare-fun temp15_18 () (_ BitVec 64))
(declare-fun temp15_19 () (_ BitVec 64))
(declare-fun temp15_20 () (_ BitVec 64))
(declare-fun temp15_21 () (_ BitVec 64))
(declare-fun temp15_22 () (_ BitVec 64))
(declare-fun temp15_23 () (_ BitVec 64))
(declare-fun temp15_24 () (_ BitVec 64))
(declare-fun temp15_25 () (_ BitVec 64))
(declare-fun temp15_26 () (_ BitVec 64))
(declare-fun temp15_27 () (_ BitVec 64))
(declare-fun temp15_28 () (_ BitVec 64))
(declare-fun var67791 () (_ BitVec 64))
(declare-fun temp15_29 () (_ BitVec 64))
(declare-fun var66573 () (_ BitVec 64))
(declare-fun temp15_30 () (_ BitVec 64))
(declare-fun temp15_31 () (_ BitVec 64))
(declare-fun temp15_32 () (_ BitVec 64))
(declare-fun var67794 () (_ BitVec 64))
(declare-fun temp15_33 () (_ BitVec 64))
(declare-fun var67796 () (_ BitVec 64))
(declare-fun temp15_34 () (_ BitVec 64))
(declare-fun temp15_35 () (_ BitVec 64))
(declare-fun temp15_36 () (_ BitVec 64))
(declare-fun var67795 () (_ BitVec 64))
(declare-fun temp15_37 () (_ BitVec 64))
(declare-fun var66739 () (_ BitVec 64))
(declare-fun temp15_38 () (_ BitVec 64))
(declare-fun temp15_39 () (_ BitVec 64))
(declare-fun temp15_40 () (_ BitVec 64))
(declare-fun var67797 () (_ BitVec 64))
(declare-fun temp15_41 () (_ BitVec 64))
(declare-fun var67817 () (_ BitVec 64))
(declare-fun var67820 () (_ BitVec 64))
(declare-fun temp15_43 () (_ BitVec 64))
(declare-fun var527542 () (_ BitVec 64))
(declare-fun temp15_44 () (_ BitVec 64))
(declare-fun var67347 () (_ BitVec 64))
(declare-fun temp15_45 () (_ BitVec 64))
(declare-fun temp15_46 () (_ BitVec 64))
(declare-fun ARGNAME_ksize_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp15_47 () (_ BitVec 64))
(declare-fun temp15_48 () (_ BitVec 64))
(declare-fun temp15_49 () (_ BitVec 64))
(declare-fun temp15_50 () (_ BitVec 64))
(declare-fun temp15_51 () (_ BitVec 64))
(declare-fun temp15_52 () (_ BitVec 64))
(declare-fun temp15_53 () (_ BitVec 64))
(declare-fun temp15_54 () (_ BitVec 64))
(declare-fun temp15_55 () (_ BitVec 64))
(declare-fun temp15_56 () (_ BitVec 64))
(declare-fun temp15_57 () (_ BitVec 64))
(declare-fun temp15_58 () (_ BitVec 64))
(declare-fun temp15_59 () (_ BitVec 64))
(declare-fun temp15_60 () (_ BitVec 64))
(declare-fun temp15_61 () (_ BitVec 64))
(declare-fun temp15_62 () (_ BitVec 64))
(declare-fun temp15_64 () (_ BitVec 64))
(declare-fun temp15_65 () (_ BitVec 64))
(declare-fun temp15_63 () (_ BitVec 64))
(declare-fun temp15_66 () (_ BitVec 64))
(declare-fun var66903 () (_ BitVec 64))
(declare-fun temp15_68 () (_ BitVec 64))
(declare-fun temp15_69 () (_ BitVec 64))
(declare-fun temp15_67 () (_ BitVec 64))
(declare-fun temp15_70 () (_ BitVec 64))
(declare-fun var67290 () (_ BitVec 64))
(declare-fun temp15_72 () (_ BitVec 64))
(declare-fun temp15_73 () (_ BitVec 64))
(declare-fun temp15_71 () (_ BitVec 64))
(declare-fun temp15_74 () (_ BitVec 64))
(declare-fun temp15_75 () (_ BitVec 64))
(declare-fun temp15_76 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp15_77 () (_ BitVec 64))
(declare-fun temp15_78 () (_ BitVec 64))
(declare-fun temp15_79 () (_ BitVec 64))
(declare-fun temp15_80 () (_ BitVec 64))
(declare-fun temp15_81 () (_ BitVec 64))
(declare-fun temp15_82 () (_ BitVec 64))
(declare-fun temp15_83 () (_ BitVec 64))
(declare-fun temp15_84 () (_ BitVec 64))
(declare-fun temp15_85 () (_ BitVec 64))
(declare-fun temp15_86 () (_ BitVec 64))
(declare-fun temp15_87 () (_ BitVec 64))
(declare-fun temp15_88 () (_ BitVec 64))
(declare-fun temp15_89 () (_ BitVec 64))
(declare-fun temp15_90 () (_ BitVec 64))
(declare-fun temp15_91 () (_ BitVec 64))
(declare-fun temp15_92 () (_ BitVec 64))
(declare-fun temp15_94 () (_ BitVec 64))
(declare-fun temp15_95 () (_ BitVec 64))
(declare-fun temp15_93 () (_ BitVec 64))
(declare-fun temp15_96 () (_ BitVec 64))
(declare-fun temp15_98 () (_ BitVec 64))
(declare-fun temp15_99 () (_ BitVec 64))
(declare-fun temp15_97 () (_ BitVec 64))
(declare-fun temp15_100 () (_ BitVec 64))
(declare-fun var67923 () (_ BitVec 64))
(declare-fun temp15_101 () (_ BitVec 64))
(declare-fun temp15_102 () (_ BitVec 64))
(declare-fun var988877 () (_ BitVec 64))
(declare-fun temp15_103 () (_ BitVec 64))
(declare-fun temp15_104 () (_ BitVec 64))
(declare-fun var1119510 () (_ BitVec 64))
(declare-fun temp15_105 () (_ BitVec 64))
(declare-fun var1119520 () (_ BitVec 64))
(declare-fun temp15_106 () (_ BitVec 64))
(declare-fun temp15_107 () (_ BitVec 64))
(declare-fun var1119528 () (_ BitVec 64))
(declare-fun temp15_108 () (_ BitVec 64))
(declare-fun temp15_109 () (_ BitVec 64))
(declare-fun var1119533 () (_ BitVec 64))
(declare-fun var1119535 () (_ BitVec 64))
(declare-fun temp15_110 () (_ BitVec 64))
(declare-fun var1119536 () (_ BitVec 64))
(declare-fun temp15_111 () (_ BitVec 64))
(declare-fun var1119537 () (_ BitVec 64))
(declare-fun temp15_112 () (_ BitVec 64))
(declare-fun temp15_114 () (_ BitVec 64))
(declare-fun temp15_113 () (_ BitVec 64))
(declare-fun temp15_116 () (_ BitVec 64))
(declare-fun temp15_115 () (_ BitVec 64))
(declare-fun temp15_117 () (_ BitVec 64))
(declare-fun var1316557 () (_ BitVec 64))
(declare-fun temp15_118 () (_ BitVec 64))
(declare-fun temp15_119 () (_ BitVec 64))
(declare-fun var1447190 () (_ BitVec 64))
(declare-fun temp15_120 () (_ BitVec 64))
(declare-fun var1447200 () (_ BitVec 64))
(declare-fun temp15_121 () (_ BitVec 64))
(declare-fun temp15_122 () (_ BitVec 64))
(declare-fun var1447208 () (_ BitVec 64))
(declare-fun temp15_123 () (_ BitVec 64))
(declare-fun temp15_124 () (_ BitVec 64))
(declare-fun var1447213 () (_ BitVec 64))
(declare-fun var1447215 () (_ BitVec 64))
(declare-fun temp15_125 () (_ BitVec 64))
(declare-fun var1447216 () (_ BitVec 64))
(declare-fun temp15_126 () (_ BitVec 64))
(declare-fun var1447217 () (_ BitVec 64))
(declare-fun temp15_127 () (_ BitVec 64))
(declare-fun temp15_129 () (_ BitVec 64))
(declare-fun temp15_128 () (_ BitVec 64))
(declare-fun temp15_131 () (_ BitVec 64))
(declare-fun temp15_130 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (or (= ARGNAME_padding_NAMEEND #x0000000000000001)
    (= ARGNAME_padding_NAMEEND #x0000000000000002)
    (= ARGNAME_padding_NAMEEND #x0000000000000003)))
(assert (= temp15_1 #x0000000000000001))
(assert (= var67738
   (ite (= extend_9
           temp15_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp15_2 #x0000000000000001))
(assert (= var67738 temp15_2))
(assert (= temp15_3 #x0000000000000004))
(assert (= var67743
   (ite (= ARGNAME_orig_input_shape_NAMEEND_LEN temp15_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp15_4 #x0000000000000001))
(assert (= var67743 temp15_4))
(assert (= temp15_5 #x0000000000000004))
(assert (= var67770
   (ite (= ARGNAME_grad_NAMEEND_DIM temp15_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp15_6 #x0000000000000001))
(assert (= var67770 temp15_6))
(assert (= temp15_7 #x0000000000000000))
(assert (= var66361 temp15_7))
(assert (= temp15_8 #x0000000000000000))
(assert (= temp15_9 temp15_8))
(assert (= temp15_10 (select ARGNAME_grad_NAMEEND_DIMSIZE temp15_9)))
(assert (= temp15_11 #x0000000000000001))
(assert (= temp15_12 temp15_11))
(assert (= temp15_13 (select ARGNAME_grad_NAMEEND_DIMSIZE temp15_12)))
(assert (= temp15_14 #x0000000000000002))
(assert (= temp15_15 temp15_14))
(assert (= temp15_16 (select ARGNAME_grad_NAMEEND_DIMSIZE temp15_15)))
(assert (= temp15_17 #x0000000000000003))
(assert (= temp15_18 temp15_17))
(assert (= temp15_19 (select ARGNAME_grad_NAMEEND_DIMSIZE temp15_18)))
(assert (= temp15_20 #x0000000000000004))
(assert (= temp15_21 temp15_20))
(assert (= temp15_22 (select ARGNAME_grad_NAMEEND_DIMSIZE temp15_21)))
(assert (= temp15_23 #x0000000000000005))
(assert (= temp15_24 temp15_23))
(assert (= temp15_25 (select ARGNAME_grad_NAMEEND_DIMSIZE temp15_24)))
(assert (= temp15_26 #x0000000000000000))
(assert (= temp15_27
   (ite (bvslt var66361 temp15_26)
        (bvadd ARGNAME_grad_NAMEEND_DIM var66361)
        var66361)))
(assert (= temp15_28 (select ARGNAME_grad_NAMEEND_DIMSIZE temp15_27)))
(assert (= var67791 temp15_28))
(assert (= temp15_29 #x0000000000000001))
(assert (= var66573 temp15_29))
(assert (= temp15_30 #x0000000000000000))
(assert (= temp15_31
   (ite (bvslt var66573 temp15_30)
        (bvadd ARGNAME_grad_NAMEEND_DIM var66573)
        var66573)))
(assert (= temp15_32 (select ARGNAME_grad_NAMEEND_DIMSIZE temp15_31)))
(assert (= var67794 temp15_32))
(assert (= temp15_33 #x0000000000000002))
(assert (= var67796 temp15_33))
(assert (= temp15_34 #x0000000000000000))
(assert (= temp15_35
   (ite (bvslt var67796 temp15_34)
        (bvadd ARGNAME_grad_NAMEEND_DIM var67796)
        var67796)))
(assert (= temp15_36 (select ARGNAME_grad_NAMEEND_DIMSIZE temp15_35)))
(assert (= var67795 temp15_36))
(assert (= temp15_37 #x0000000000000003))
(assert (= var66739 temp15_37))
(assert (= temp15_38 #x0000000000000000))
(assert (= temp15_39
   (ite (bvslt var66739 temp15_38)
        (bvadd ARGNAME_grad_NAMEEND_DIM var66739)
        var66739)))
(assert (= temp15_40 (select ARGNAME_grad_NAMEEND_DIMSIZE temp15_39)))
(assert (= var67797 temp15_40))
(assert (= temp15_41 #x0000000000000000))
(assert (= var67817 temp15_41))
(assert (= var67820
   (ite (bvslt var67817 ARGNAME_orig_input_shape_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp15_43 #x0000000000000000))
(assert (= var527542 temp15_43))
(assert (= temp15_44 #x0000000000000001))
(assert (= var67347 temp15_44))
(assert (= temp15_45 #x0000000000000000))
(assert (= temp15_46 temp15_45))
(assert (= temp15_47 (select ARGNAME_ksize_NAMEEND_VAL temp15_46)))
(assert (= temp15_48 #x0000000000000001))
(assert (= temp15_49 temp15_48))
(assert (= temp15_50 (select ARGNAME_ksize_NAMEEND_VAL temp15_49)))
(assert (= temp15_51 #x0000000000000002))
(assert (= temp15_52 temp15_51))
(assert (= temp15_53 (select ARGNAME_ksize_NAMEEND_VAL temp15_52)))
(assert (= temp15_54 #x0000000000000003))
(assert (= temp15_55 temp15_54))
(assert (= temp15_56 (select ARGNAME_ksize_NAMEEND_VAL temp15_55)))
(assert (= temp15_57 #x0000000000000004))
(assert (= temp15_58 temp15_57))
(assert (= temp15_59 (select ARGNAME_ksize_NAMEEND_VAL temp15_58)))
(assert (= temp15_60 #x0000000000000005))
(assert (= temp15_61 temp15_60))
(assert (= temp15_62 (select ARGNAME_ksize_NAMEEND_VAL temp15_61)))
(assert (= temp15_64 var67347))
(assert (= temp15_65 (select ARGNAME_ksize_NAMEEND_VAL temp15_64)))
(assert (= temp15_63 temp15_65))
(assert (= temp15_66 #x0000000000000002))
(assert (= var66903 temp15_66))
(assert (= temp15_68 var66903))
(assert (= temp15_69 (select ARGNAME_ksize_NAMEEND_VAL temp15_68)))
(assert (= temp15_67 temp15_69))
(assert (= temp15_70 #x0000000000000003))
(assert (= var67290 temp15_70))
(assert (= temp15_72 var67290))
(assert (= temp15_73 (select ARGNAME_ksize_NAMEEND_VAL temp15_72)))
(assert (= temp15_71 temp15_73))
(assert (= temp15_74 #x0000000000000001))
(assert (= var67347 temp15_74))
(assert (= temp15_75 #x0000000000000000))
(assert (= temp15_76 temp15_75))
(assert (= temp15_77 (select ARGNAME_strides_NAMEEND_VAL temp15_76)))
(assert (= temp15_78 #x0000000000000001))
(assert (= temp15_79 temp15_78))
(assert (= temp15_80 (select ARGNAME_strides_NAMEEND_VAL temp15_79)))
(assert (= temp15_81 #x0000000000000002))
(assert (= temp15_82 temp15_81))
(assert (= temp15_83 (select ARGNAME_strides_NAMEEND_VAL temp15_82)))
(assert (= temp15_84 #x0000000000000003))
(assert (= temp15_85 temp15_84))
(assert (= temp15_86 (select ARGNAME_strides_NAMEEND_VAL temp15_85)))
(assert (= temp15_87 #x0000000000000004))
(assert (= temp15_88 temp15_87))
(assert (= temp15_89 (select ARGNAME_strides_NAMEEND_VAL temp15_88)))
(assert (= temp15_90 #x0000000000000005))
(assert (= temp15_91 temp15_90))
(assert (= temp15_92 (select ARGNAME_strides_NAMEEND_VAL temp15_91)))
(assert (= temp15_94 var67347))
(assert (= temp15_95 (select ARGNAME_strides_NAMEEND_VAL temp15_94)))
(assert (= temp15_93 temp15_95))
(assert (= temp15_96 #x0000000000000002))
(assert (= var66903 temp15_96))
(assert (= temp15_98 var66903))
(assert (= temp15_99 (select ARGNAME_strides_NAMEEND_VAL temp15_98)))
(assert (= temp15_97 temp15_99))
(assert (= temp15_100 #x0000000000000001))
(assert (= var67923
   (ite (= temp15_71 temp15_100) #x0000000000000001 #x0000000000000000)))
(assert (= temp15_101 #x0000000000000001))
(assert (= var67923 temp15_101))
(assert (= temp15_102 #x0000000000000003))
(assert (= var988877
   (ite (= ARGNAME_padding_NAMEEND temp15_102)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp15_103 #x0000000000000000))
(assert (= var988877 temp15_103))
(assert (= temp15_104 #x0000000000000001))
(assert (= var1119510 temp15_104))
(assert (= temp15_105 #x0000000000000001))
(assert (= var1119520
   (ite (bvslt temp15_93 temp15_105) #x0000000000000001 #x0000000000000000)))
(assert (= temp15_106 #x0000000000000000))
(assert (= var1119520 temp15_106))
(assert (= temp15_107 #x0000000000000001))
(assert (= var1119528
   (ite (bvslt var1119510 temp15_107) #x0000000000000001 #x0000000000000000)))
(assert (= temp15_108 #x0000000000000000))
(assert (= var1119528 temp15_108))
(assert (= temp15_109 #xffffffffffffffff))
(assert (= var1119533 (bvadd temp15_63 temp15_109)))
(assert (= var1119535 (bvmul var1119533 var1119510)))
(assert (= temp15_110 #x0000000000000001))
(assert (= var1119536 (bvadd var1119535 temp15_110)))
(assert (= temp15_111 #xffffffffffffffff))
(assert (= var1119537 (bvxor var1119535 temp15_111)))
(assert (= temp15_112 #x0000000000000001))
(assert (or false (= ARGNAME_padding_NAMEEND temp15_112)))
(assert (= temp15_114 #x0000000000000000))
(assert (= temp15_113 temp15_114))
(assert (= temp15_116 #x0000000000000000))
(assert (= temp15_115 temp15_116))
(assert (= temp15_117 #x0000000000000003))
(assert (= var1316557
   (ite (= ARGNAME_padding_NAMEEND temp15_117)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp15_118 #x0000000000000000))
(assert (= var1316557 temp15_118))
(assert (= temp15_119 #x0000000000000001))
(assert (= var1447190 temp15_119))
(assert (= temp15_120 #x0000000000000001))
(assert (= var1447200
   (ite (bvslt temp15_97 temp15_120) #x0000000000000001 #x0000000000000000)))
(assert (= temp15_121 #x0000000000000000))
(assert (= var1447200 temp15_121))
(assert (= temp15_122 #x0000000000000001))
(assert (= var1447208
   (ite (bvslt var1447190 temp15_122) #x0000000000000001 #x0000000000000000)))
(assert (= temp15_123 #x0000000000000000))
(assert (= var1447208 temp15_123))
(assert (= temp15_124 #xffffffffffffffff))
(assert (= var1447213 (bvadd temp15_67 temp15_124)))
(assert (= var1447215 (bvmul var1447213 var1447190)))
(assert (= temp15_125 #x0000000000000001))
(assert (= var1447216 (bvadd var1447215 temp15_125)))
(assert (= temp15_126 #xffffffffffffffff))
(assert (= var1447217 (bvxor var1447215 temp15_126)))
(assert (= temp15_127 #x0000000000000001))
(assert (or false (= ARGNAME_padding_NAMEEND temp15_127)))
(assert (= temp15_129 #x0000000000000000))
(assert (= temp15_128 temp15_129))
(assert (= temp15_131 #x0000000000000000))
(assert (= temp15_130 temp15_131))
(model-add temp15_1 () (_ BitVec 64) #x0000000000000001)
(model-add temp15_2 () (_ BitVec 64) #x0000000000000001)
(model-add var67738 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_orig_input_shape_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))

















