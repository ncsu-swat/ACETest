(declare-fun temp1330_1 () (_ BitVec 64))
(declare-fun var133465 () (_ BitVec 64))
(declare-fun var133459 () (_ BitVec 64))
(declare-fun temp1330_2 () (_ BitVec 64))
(declare-fun var67739 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_contents_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1330_3 () (_ BitVec 64))
(declare-fun var399420 () (_ BitVec 64))
(declare-fun var399392 () (_ BitVec 64))
(declare-fun var333818 () (_ BitVec 64))
(declare-fun var333815 () (_ BitVec 64))
(declare-fun var264573 () (_ BitVec 64))
(declare-fun temp1330_4 () (_ BitVec 64))
(declare-fun var657813 () (_ BitVec 64))
(declare-fun var67829 () (_ BitVec 64))
(declare-fun var67832 () (_ BitVec 64))
(declare-fun temp1330_5 () (_ BitVec 64))
(declare-fun var1447914 () (_ BitVec 64))
(declare-fun var1447882 () (_ BitVec 64))
(declare-fun var723469 () (_ BitVec 64))
(declare-fun temp1330_6 () (_ BitVec 64))
(declare-fun temp1330_7 () (_ BitVec 64))
(declare-fun temp1330_8 () (_ BitVec 64))
(declare-fun temp1330_9 () (_ BitVec 64))
(declare-fun ARGNAME_channels_NAMEEND () (_ BitVec 64))
(declare-fun temp1330_11 () (_ BitVec 64))
(declare-fun temp1330_10 () (_ BitVec 64))
(declare-fun temp1330_12 () (_ BitVec 64))
(declare-fun ARGNAME_crop_window_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var2034306 () (_ BitVec 64))
(declare-fun temp1330_13 () (_ BitVec 64))
(declare-fun temp1330_14 () (_ BitVec 64))
(declare-fun ARGNAME_crop_window_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1330_15 () (_ BitVec 64))
(declare-fun temp1330_16 () (_ BitVec 64))
(declare-fun temp1330_17 () (_ BitVec 64))
(declare-fun temp1330_18 () (_ BitVec 64))
(declare-fun temp1330_19 () (_ BitVec 64))
(declare-fun temp1330_20 () (_ BitVec 64))
(declare-fun temp1330_21 () (_ BitVec 64))
(declare-fun temp1330_22 () (_ BitVec 64))
(declare-fun temp1330_23 () (_ BitVec 64))
(declare-fun temp1330_24 () (_ BitVec 64))
(declare-fun temp1330_25 () (_ BitVec 64))
(declare-fun temp1330_26 () (_ BitVec 64))
(declare-fun temp1330_27 () (_ BitVec 64))
(declare-fun var2034343 () (_ BitVec 64))
(declare-fun temp1330_28 () (_ BitVec 64))
(declare-fun var2034346 () (_ BitVec 64))
(declare-fun temp1330_29 () (_ BitVec 64))
(declare-fun temp1330_30 () (_ BitVec 64))
(declare-fun var2168618 () (_ BitVec 64))
(declare-fun temp1330_31 () (_ BitVec 64))
(declare-fun var2234154 () (_ BitVec 64))
(declare-fun temp1330_32 () (_ BitVec 64))
(declare-fun var2299690 () (_ BitVec 64))
(declare-fun temp1330_33 () (_ BitVec 64))
(declare-fun var2365226 () (_ BitVec 64))
(declare-fun temp1330_35 () (_ BitVec 64))
(declare-fun temp1330_34 () (_ BitVec 64))
(assert (= temp1330_1 #x0000000000000000))
(assert (= var133465
   (ite (= ARGNAME_contents_NAMEEND_DIM temp1330_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var133459 var133465))
(assert (= var67739 var133459))
(assert (= temp1330_2 #x0000000000000001))
(assert (= var67739 temp1330_2))
(assert (= temp1330_3 #x0000000000000000))
(assert (= var399420 temp1330_3))
(assert (= var399392 var399420))
(assert (= var333818 var399392))
(assert (= var333815 var333818))
(assert (= var264573 var333815))
(assert (= temp1330_4 #x000000007fffffff))
(assert (= var657813 temp1330_4))
(assert (= var67829 var657813))
(assert (= var67832 var67829))
(assert (= temp1330_5 #x0000000000000000))
(assert (= var1447914 temp1330_5))
(assert (= var1447882 var1447914))
(assert (= var723469 var1447882))
(assert (= temp1330_6 #x0000000000000000))
(assert (= var723469 temp1330_6))
(assert (= temp1330_7 #x0000000000000000))
(assert (= temp1330_8 #x0000000000000001))
(assert (= temp1330_9 #x0000000000000003))
(assert (or false
    (= ARGNAME_channels_NAMEEND temp1330_7)
    (= ARGNAME_channels_NAMEEND temp1330_8)
    (= ARGNAME_channels_NAMEEND temp1330_9)))
(assert (= temp1330_11 #x0000000000000001))
(assert (= temp1330_10 temp1330_11))
(assert (= temp1330_12 #x0000000000000001))
(assert (= var2034306
   (ite (= ARGNAME_crop_window_NAMEEND_DIM temp1330_12)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1330_13 #x0000000000000001))
(assert (= var2034306 temp1330_13))
(assert (= temp1330_14 #x0000000000000000))
(assert (= temp1330_15 (select ARGNAME_crop_window_NAMEEND_DIMSIZE temp1330_14)))
(assert (= temp1330_16 #x0000000000000001))
(assert (= temp1330_17 (select ARGNAME_crop_window_NAMEEND_DIMSIZE temp1330_16)))
(assert (= temp1330_18 #x0000000000000002))
(assert (= temp1330_19 (select ARGNAME_crop_window_NAMEEND_DIMSIZE temp1330_18)))
(assert (= temp1330_20 #x0000000000000003))
(assert (= temp1330_21 (select ARGNAME_crop_window_NAMEEND_DIMSIZE temp1330_20)))
(assert (= temp1330_22 #x0000000000000004))
(assert (= temp1330_23 (select ARGNAME_crop_window_NAMEEND_DIMSIZE temp1330_22)))
(assert (= temp1330_24 #x0000000000000005))
(assert (= temp1330_25 (select ARGNAME_crop_window_NAMEEND_DIMSIZE temp1330_24)))
(assert (= temp1330_26 #x0000000000000000))
(assert (= temp1330_27 (select ARGNAME_crop_window_NAMEEND_DIMSIZE temp1330_26)))
(assert (= var2034343 temp1330_27))
(assert (= temp1330_28 #x0000000000000004))
(assert (= var2034346
   (ite (= var2034343 temp1330_28) #x0000000000000001 #x0000000000000000)))
(assert (= temp1330_29 #x0000000000000001))
(assert (= var2034346 temp1330_29))
(assert (= temp1330_30 #x0000000000000000))
(assert (= var2168618 temp1330_30))
(assert (= temp1330_31 #x0000000000000001))
(assert (= var2234154 temp1330_31))
(assert (= temp1330_32 #x0000000000000002))
(assert (= var2299690 temp1330_32))
(assert (= temp1330_33 #x0000000000000003))
(assert (= var2365226 temp1330_33))
(assert (= temp1330_35 #x0000000000000000))
(assert (= temp1330_34 temp1330_35))
(model-add temp1330_1 () (_ BitVec 64) #x0000000000000000)
(model-add var133465 () (_ BitVec 64) #x0000000000000001)
(model-add var133459 () (_ BitVec 64) #x0000000000000001)
(model-add temp1330_2 () (_ BitVec 64) #x0000000000000001)
(model-add var67739 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_contents_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000000 (bvnot #x0000000000000000)))
















