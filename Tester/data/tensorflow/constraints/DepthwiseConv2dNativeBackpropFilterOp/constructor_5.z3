(declare-fun temp26_1 () (_ BitVec 64))
(declare-fun temp26_2 () (_ BitVec 64))
(declare-fun var66254 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_strides_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp26_3 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp26_4 () (_ BitVec 64))
(declare-fun temp26_5 () (_ BitVec 64))
(declare-fun temp26_6 () (_ BitVec 64))
(declare-fun temp26_7 () (_ BitVec 64))
(declare-fun temp26_8 () (_ BitVec 64))
(declare-fun temp26_9 () (_ BitVec 64))
(declare-fun temp26_10 () (_ BitVec 64))
(declare-fun temp26_11 () (_ BitVec 64))
(declare-fun temp26_12 () (_ BitVec 64))
(declare-fun temp26_13 () (_ BitVec 64))
(declare-fun temp26_14 () (_ BitVec 64))
(declare-fun temp26_18 () (_ BitVec 64))
(declare-fun temp26_19 () (_ BitVec 64))
(declare-fun temp26_20 () (_ BitVec 64))
(declare-fun temp26_21 () (_ BitVec 64))
(declare-fun temp26_16 () (_ BitVec 64))
(declare-fun temp26_22 () (_ BitVec 64))
(declare-fun temp26_23 () (_ BitVec 64))
(declare-fun temp26_24 () (_ BitVec 64))
(declare-fun temp26_17 () (_ BitVec 64))
(declare-fun temp26_26 () (_ BitVec 64))
(declare-fun temp26_27 () (_ BitVec 64))
(declare-fun temp26_28 () (_ BitVec 64))
(declare-fun temp26_29 () (_ BitVec 64))
(declare-fun temp26_30 () (_ BitVec 64))
(declare-fun temp26_31 () (_ BitVec 64))
(declare-fun temp26_15 () (_ BitVec 64))
(declare-fun temp26_32 () (_ BitVec 64))
(declare-fun var66375 () (_ BitVec 64))
(declare-fun var66379 () (_ BitVec 64))
(declare-fun temp26_36 () (_ BitVec 64))
(declare-fun temp26_37 () (_ BitVec 64))
(declare-fun temp26_38 () (_ BitVec 64))
(declare-fun temp26_39 () (_ BitVec 64))
(declare-fun temp26_34 () (_ BitVec 64))
(declare-fun temp26_40 () (_ BitVec 64))
(declare-fun temp26_41 () (_ BitVec 64))
(declare-fun temp26_42 () (_ BitVec 64))
(declare-fun temp26_35 () (_ BitVec 64))
(declare-fun temp26_44 () (_ BitVec 64))
(declare-fun temp26_45 () (_ BitVec 64))
(declare-fun temp26_46 () (_ BitVec 64))
(declare-fun temp26_47 () (_ BitVec 64))
(declare-fun temp26_48 () (_ BitVec 64))
(declare-fun temp26_49 () (_ BitVec 64))
(declare-fun temp26_33 () (_ BitVec 64))
(declare-fun temp26_50 () (_ BitVec 64))
(declare-fun var66383 () (_ BitVec 64))
(declare-fun var66385 () (_ BitVec 64))
(declare-fun temp26_54 () (_ BitVec 64))
(declare-fun temp26_55 () (_ BitVec 64))
(declare-fun temp26_56 () (_ BitVec 64))
(declare-fun temp26_57 () (_ BitVec 64))
(declare-fun temp26_52 () (_ BitVec 64))
(declare-fun temp26_58 () (_ BitVec 64))
(declare-fun temp26_59 () (_ BitVec 64))
(declare-fun temp26_60 () (_ BitVec 64))
(declare-fun temp26_53 () (_ BitVec 64))
(declare-fun temp26_62 () (_ BitVec 64))
(declare-fun temp26_63 () (_ BitVec 64))
(declare-fun temp26_64 () (_ BitVec 64))
(declare-fun temp26_65 () (_ BitVec 64))
(declare-fun temp26_51 () (_ BitVec 64))
(declare-fun temp26_66 () (_ BitVec 64))
(declare-fun var66387 () (_ BitVec 64))
(declare-fun temp26_70 () (_ BitVec 64))
(declare-fun temp26_71 () (_ BitVec 64))
(declare-fun temp26_72 () (_ BitVec 64))
(declare-fun temp26_73 () (_ BitVec 64))
(declare-fun temp26_68 () (_ BitVec 64))
(declare-fun temp26_74 () (_ BitVec 64))
(declare-fun temp26_75 () (_ BitVec 64))
(declare-fun temp26_76 () (_ BitVec 64))
(declare-fun temp26_69 () (_ BitVec 64))
(declare-fun temp26_78 () (_ BitVec 64))
(declare-fun temp26_79 () (_ BitVec 64))
(declare-fun temp26_80 () (_ BitVec 64))
(declare-fun temp26_81 () (_ BitVec 64))
(declare-fun temp26_82 () (_ BitVec 64))
(declare-fun temp26_67 () (_ BitVec 64))
(declare-fun temp26_83 () (_ BitVec 64))
(declare-fun var66390 () (_ BitVec 64))
(declare-fun var66392 () (_ BitVec 64))
(declare-fun var66393 () (_ BitVec 64))
(declare-fun temp26_84 () (_ BitVec 64))
(declare-fun temp26_85 () (_ BitVec 64))
(declare-fun var66433 () (_ BitVec 64))
(declare-fun temp26_86 () (_ BitVec 64))
(declare-fun var66435 () (_ BitVec 64))
(declare-fun var66436 () (_ BitVec 64))
(declare-fun temp26_87 () (_ BitVec 64))
(declare-fun temp26_88 () (_ BitVec 64))
(declare-fun var139334 () (_ BitVec 64))
(declare-fun temp26_89 () (_ BitVec 64))
(declare-fun var139340 () (_ BitVec 64))
(declare-fun temp26_90 () (_ BitVec 64))
(declare-fun temp26_91 () (_ BitVec 64))
(declare-fun var139344 () (_ BitVec 64))
(declare-fun ARGNAME_explicit_paddings_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var139345 () (_ BitVec 64))
(declare-fun temp26_92 () (_ BitVec 64))
(declare-fun temp26_93 () (_ BitVec 64))
(declare-fun ARGNAME_explicit_paddings_NAMEEND_ITERATOR_VAL () (_ BitVec 64))
(declare-fun var139377 () (_ BitVec 64))
(declare-fun temp26_94 () (_ BitVec 64))
(declare-fun temp26_95 () (_ BitVec 64))
(declare-fun var139383 () (_ BitVec 64))
(declare-fun temp26_96 () (_ BitVec 64))
(declare-fun var139384 () (_ BitVec 64))
(declare-fun temp26_98 () (_ BitVec 64))
(declare-fun var139391 () (_ BitVec 64))
(declare-fun temp26_99 () (_ BitVec 64))
(declare-fun var139394 () (_ BitVec 64))
(declare-fun temp26_100 () (_ BitVec 64))
(declare-fun var205161 () (_ BitVec 64))
(declare-fun temp26_101 () (_ BitVec 64))
(declare-fun temp26_102 () (_ BitVec 64))
(declare-fun var205170 () (_ BitVec 64))
(declare-fun var205185 () (_ BitVec 64))
(declare-fun var205160 () (_ BitVec 64))
(declare-fun var139396 () (_ BitVec 64))
(declare-fun var270725 () (_ BitVec 64))
(declare-fun temp26_103 () (_ BitVec 64))
(declare-fun temp26_104 () (_ BitVec 64))
(declare-fun temp26_105 () (_ BitVec 64))
(declare-fun var270733 () (_ BitVec 64))
(declare-fun var270748 () (_ BitVec 64))
(declare-fun var270724 () (_ BitVec 64))
(declare-fun var139399 () (_ BitVec 64))
(declare-fun temp26_106 () (_ BitVec 64))
(declare-fun var139402 () (_ BitVec 64))
(declare-fun var139403 () (_ BitVec 64))
(declare-fun temp26_107 () (_ BitVec 64))
(declare-fun ARGNAME_explicit_paddings_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp26_108 () (_ BitVec 64))
(declare-fun temp26_109 () (_ BitVec 64))
(declare-fun temp26_110 () (_ BitVec 64))
(declare-fun temp26_111 () (_ BitVec 64))
(declare-fun temp26_112 () (_ BitVec 64))
(declare-fun temp26_113 () (_ BitVec 64))
(declare-fun temp26_114 () (_ BitVec 64))
(declare-fun temp26_115 () (_ BitVec 64))
(declare-fun temp26_116 () (_ BitVec 64))
(declare-fun temp26_117 () (_ BitVec 64))
(declare-fun temp26_118 () (_ BitVec 64))
(declare-fun temp26_120 () (_ BitVec 64))
(declare-fun temp26_119 () (_ BitVec 64))
(declare-fun temp26_121 () (_ BitVec 64))
(declare-fun var139406 () (_ BitVec 64))
(declare-fun temp26_122 () (_ BitVec 64))
(declare-fun temp26_123 () (_ BitVec 64))
(declare-fun var139408 () (_ BitVec 64))
(declare-fun var139409 () (_ BitVec 64))
(declare-fun temp26_125 () (_ BitVec 64))
(declare-fun temp26_124 () (_ BitVec 64))
(declare-fun temp26_126 () (_ BitVec 64))
(declare-fun var139412 () (_ BitVec 64))
(declare-fun temp26_127 () (_ BitVec 64))
(declare-fun temp26_128 () (_ BitVec 64))
(declare-fun var139414 () (_ BitVec 64))
(declare-fun var139415 () (_ BitVec 64))
(declare-fun temp26_130 () (_ BitVec 64))
(declare-fun temp26_129 () (_ BitVec 64))
(declare-fun temp26_131 () (_ BitVec 64))
(declare-fun var139418 () (_ BitVec 64))
(declare-fun temp26_132 () (_ BitVec 64))
(declare-fun temp26_133 () (_ BitVec 64))
(declare-fun var139420 () (_ BitVec 64))
(declare-fun var139421 () (_ BitVec 64))
(declare-fun temp26_135 () (_ BitVec 64))
(declare-fun temp26_134 () (_ BitVec 64))
(declare-fun temp26_136 () (_ BitVec 64))
(declare-fun var139424 () (_ BitVec 64))
(declare-fun temp26_137 () (_ BitVec 64))
(declare-fun temp26_138 () (_ BitVec 64))
(declare-fun var139429 () (_ BitVec 64))
(assert (or (= ARGNAME_padding_NAMEEND #x0000000000000001)
    (= ARGNAME_padding_NAMEEND #x0000000000000002)
    (= ARGNAME_padding_NAMEEND #x0000000000000003)))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp26_1 #x0000000000000004))
(assert (= var66254
   (ite (= ARGNAME_strides_NAMEEND_LEN temp26_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp26_2 #x0000000000000001))
(assert (= var66254 temp26_2))
(assert (= temp26_3 #x0000000000000000))
(assert (= temp26_4 (select ARGNAME_strides_NAMEEND_VAL temp26_3)))
(assert (= temp26_5 #x0000000000000001))
(assert (= temp26_6 (select ARGNAME_strides_NAMEEND_VAL temp26_5)))
(assert (= temp26_7 #x0000000000000002))
(assert (= temp26_8 (select ARGNAME_strides_NAMEEND_VAL temp26_7)))
(assert (= temp26_9 #x0000000000000003))
(assert (= temp26_10 (select ARGNAME_strides_NAMEEND_VAL temp26_9)))
(assert (= temp26_11 #x0000000000000004))
(assert (= temp26_12 (select ARGNAME_strides_NAMEEND_VAL temp26_11)))
(assert (= temp26_13 #x0000000000000005))
(assert (= temp26_14 (select ARGNAME_strides_NAMEEND_VAL temp26_13)))
(assert (= temp26_18 #x0000000000000002))
(assert (= temp26_19 #x0000000000000003))
(assert (= temp26_20 #x0000000000000002))
(assert (= temp26_21 #x0000000000000003))
(assert (= temp26_16
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp26_20)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp26_21))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp26_19)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp26_18))))
(assert (= temp26_22 #x0000000000000002))
(assert (= temp26_23 #x0000000000000003))
(assert (= temp26_24 #x0000000000000003))
(assert (= temp26_17 (ite (= temp26_16 temp26_24) temp26_23 temp26_22)))
(assert (= temp26_26 #x0000000000000002))
(assert (= temp26_27 #x0000000000000001))
(assert (= temp26_28 #x0000000000000002))
(assert (= temp26_29 #x0000000000000001))
(assert (= temp26_30 #x0000000000000000))
(assert (= temp26_31 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp26_30)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp26_31))
                (bvsub temp26_17 temp26_29)
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp26_27)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp26_28))
                     temp26_17
                     (bvsub temp26_17 temp26_26)))))
  (= temp26_15 a!1)))
(assert (= temp26_32 (select ARGNAME_strides_NAMEEND_VAL temp26_15)))
(assert (= var66375 temp26_32))
(assert (= var66379 var66375))
(assert (= temp26_36 #x0000000000000002))
(assert (= temp26_37 #x0000000000000003))
(assert (= temp26_38 #x0000000000000002))
(assert (= temp26_39 #x0000000000000003))
(assert (= temp26_34
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp26_38)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp26_39))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp26_37)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp26_36))))
(assert (= temp26_40 #x0000000000000002))
(assert (= temp26_41 #x0000000000000003))
(assert (= temp26_42 #x0000000000000003))
(assert (= temp26_35 (ite (= temp26_34 temp26_42) temp26_41 temp26_40)))
(assert (= temp26_44 #x0000000000000001))
(assert (= temp26_45 #x0000000000000001))
(assert (= temp26_46 #x0000000000000001))
(assert (= temp26_47 #x0000000000000002))
(assert (= temp26_48 #x0000000000000000))
(assert (= temp26_49 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp26_48)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp26_49))
                temp26_35
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp26_46)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp26_47))
                     (bvadd temp26_35 temp26_45)
                     (bvsub temp26_35 temp26_44)))))
  (= temp26_33 a!1)))
(assert (= temp26_50 (select ARGNAME_strides_NAMEEND_VAL temp26_33)))
(assert (= var66383 temp26_50))
(assert (= var66385 var66383))
(assert (= temp26_54 #x0000000000000002))
(assert (= temp26_55 #x0000000000000003))
(assert (= temp26_56 #x0000000000000002))
(assert (= temp26_57 #x0000000000000003))
(assert (= temp26_52
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp26_56)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp26_57))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp26_55)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp26_54))))
(assert (= temp26_58 #x0000000000000002))
(assert (= temp26_59 #x0000000000000003))
(assert (= temp26_60 #x0000000000000003))
(assert (= temp26_53 (ite (= temp26_52 temp26_60) temp26_59 temp26_58)))
(assert (= temp26_62 #x0000000000000000))
(assert (= temp26_63 #x0000000000000001))
(assert (= temp26_64 #x0000000000000005))
(assert (= temp26_65 #x0000000000000004))
(assert (= temp26_51
   (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp26_65)
        temp26_53
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp26_64)
             (bvadd temp26_53 temp26_63)
             temp26_62))))
(assert (= temp26_66 (select ARGNAME_strides_NAMEEND_VAL temp26_51)))
(assert (= var66387 temp26_66))
(assert (= temp26_70 #x0000000000000002))
(assert (= temp26_71 #x0000000000000003))
(assert (= temp26_72 #x0000000000000002))
(assert (= temp26_73 #x0000000000000003))
(assert (= temp26_68
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp26_72)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp26_73))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp26_71)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp26_70))))
(assert (= temp26_74 #x0000000000000002))
(assert (= temp26_75 #x0000000000000003))
(assert (= temp26_76 #x0000000000000003))
(assert (= temp26_69 (ite (= temp26_68 temp26_76) temp26_75 temp26_74)))
(assert (= temp26_78 #x0000000000000001))
(assert (= temp26_79 #x0000000000000005))
(assert (= temp26_80 #x0000000000000001))
(assert (= temp26_81 #x0000000000000001))
(assert (= temp26_82 #x0000000000000002))
(assert (= temp26_67
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp26_81)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp26_82))
        temp26_80
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp26_79)
             temp26_69
             (bvadd temp26_69 temp26_78)))))
(assert (= temp26_83 (select ARGNAME_strides_NAMEEND_VAL temp26_67)))
(assert (= var66390 temp26_83))
(assert (= var66392 var66379))
(assert (= var66393 (ite (= var66392 var66385) #x0000000000000001 #x0000000000000000)))
(assert (= temp26_84 #x0000000000000001))
(assert (= var66393 temp26_84))
(assert (= temp26_85 #x0000000000000001))
(assert (= var66433 (ite (= var66387 temp26_85) #x0000000000000001 #x0000000000000000)))
(assert (= temp26_86 #x0000000000000001))
(assert (= var66435 (ite (= var66390 temp26_86) #x0000000000000001 #x0000000000000000)))
(assert (= var66436 (bvand var66433 var66435)))
(assert (= temp26_87 #x0000000000000001))
(assert (= var66436 temp26_87))
(assert (= temp26_88 #x0000000000000004))
(assert (= var139334 temp26_88))
(assert (= temp26_89 #x0000000000000003))
(assert (= var139340
   (ite (= ARGNAME_padding_NAMEEND temp26_89)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp26_90 #x0000000000000001))
(assert (= var139340 temp26_90))
(assert (= temp26_91 #x0000000000000001))
(assert (= var139344 (bvshl var139334 temp26_91)))
(assert (= var139345
   (ite (= var139344 ARGNAME_explicit_paddings_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp26_92 #x0000000000000001))
(assert (= var139345 temp26_92))
(assert (= temp26_93 #x0000000000000000))
(assert (= var139377
   (ite (bvslt ARGNAME_explicit_paddings_NAMEEND_ITERATOR_VAL temp26_93)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp26_94 #x0000000000000000))
(assert (= var139377 temp26_94))
(assert (= temp26_95 #x0000000000000000))
(assert (= var139383 temp26_95))
(assert (= temp26_96 #x0000000000000000))
(assert (= var139384
   (ite (= var139383 temp26_96) #x0000000000000001 #x0000000000000000)))
(assert (= temp26_98 #x0000000000000002))
(assert (= var139391 temp26_98))
(assert (= temp26_99 #x0000000000000002))
(assert (= var139394
   (ite (= var139391 temp26_99) #x0000000000000001 #x0000000000000000)))
(assert (= temp26_100 #x0000000000000001))
(assert (= var139394 temp26_100))
(assert (= var205161 var139334))
(assert (= temp26_101 #x0000000000000005))
(assert (or false (= ARGNAME_data_format_NAMEEND_STRFMT temp26_101)))
(assert (= temp26_102 #xffffffffffffffff))
(assert (= var205170 (bvadd var205161 temp26_102)))
(assert (= var205185 var205170))
(assert (= var205160 var205185))
(assert (= var139396 var205160))
(assert (= var270725 var139334))
(assert (= temp26_103 #x0000000000000003))
(assert (= temp26_104 #x0000000000000005))
(assert (or false
    (= ARGNAME_data_format_NAMEEND_STRFMT temp26_103)
    (= ARGNAME_data_format_NAMEEND_STRFMT temp26_104)))
(assert (= temp26_105 #xfffffffffffffffe))
(assert (= var270733 (bvadd var270725 temp26_105)))
(assert (= var270748 var270733))
(assert (= var270724 var270748))
(assert (= var139399 var270724))
(assert (= temp26_106 #x0000000000000001))
(assert (= var139402 (bvshl var139396 temp26_106)))
(assert (= var139403 var139402))
(assert (= temp26_107 #x0000000000000000))
(assert (= temp26_108 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp26_107)))
(assert (= temp26_109 #x0000000000000001))
(assert (= temp26_110 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp26_109)))
(assert (= temp26_111 #x0000000000000002))
(assert (= temp26_112 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp26_111)))
(assert (= temp26_113 #x0000000000000003))
(assert (= temp26_114 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp26_113)))
(assert (= temp26_115 #x0000000000000004))
(assert (= temp26_116 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp26_115)))
(assert (= temp26_117 #x0000000000000005))
(assert (= temp26_118 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp26_117)))
(assert (= temp26_120 (select ARGNAME_explicit_paddings_NAMEEND_VAL var139403)))
(assert (= temp26_119 temp26_120))
(assert (= temp26_121 #x0000000000000000))
(assert (= var139406
   (ite (= temp26_119 temp26_121) #x0000000000000001 #x0000000000000000)))
(assert (= temp26_122 #x0000000000000001))
(assert (= var139406 temp26_122))
(assert (= temp26_123 #x0000000000000001))
(assert (= var139408 (bvor var139402 temp26_123)))
(assert (= var139409 var139408))
(assert (= temp26_125 (select ARGNAME_explicit_paddings_NAMEEND_VAL var139409)))
(assert (= temp26_124 temp26_125))
(assert (= temp26_126 #x0000000000000000))
(assert (= var139412
   (ite (= temp26_124 temp26_126) #x0000000000000001 #x0000000000000000)))
(assert (= temp26_127 #x0000000000000001))
(assert (= var139412 temp26_127))
(assert (= temp26_128 #x0000000000000001))
(assert (= var139414 (bvshl var139399 temp26_128)))
(assert (= var139415 var139414))
(assert (= temp26_130 (select ARGNAME_explicit_paddings_NAMEEND_VAL var139415)))
(assert (= temp26_129 temp26_130))
(assert (= temp26_131 #x0000000000000000))
(assert (= var139418
   (ite (= temp26_129 temp26_131) #x0000000000000001 #x0000000000000000)))
(assert (= temp26_132 #x0000000000000001))
(assert (= var139418 temp26_132))
(assert (= temp26_133 #x0000000000000001))
(assert (= var139420 (bvor var139414 temp26_133)))
(assert (= var139421 var139420))
(assert (= temp26_135 (select ARGNAME_explicit_paddings_NAMEEND_VAL var139421)))
(assert (= temp26_134 temp26_135))
(assert (= temp26_136 #x0000000000000000))
(assert (= var139424
   (ite (= temp26_134 temp26_136) #x0000000000000001 #x0000000000000000)))
(assert (= temp26_137 #x0000000000000001))
(assert (= var139424 temp26_137))
(assert (= temp26_138 #x0000000000000000))
(assert (= var139429 temp26_138))
(model-add temp26_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp26_2 () (_ BitVec 64) #x0000000000000001)
(model-add var66254 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_strides_NAMEEND_LEN
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))



























