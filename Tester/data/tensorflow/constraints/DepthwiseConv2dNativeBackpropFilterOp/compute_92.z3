(declare-fun temp2682_1 () (_ BitVec 64))
(declare-fun var135042 () (_ BitVec 64))
(declare-fun var135038 () (_ BitVec 64))
(declare-fun temp2682_2 () (_ BitVec 64))
(declare-fun var68277 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_sizes_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp2682_3 () (_ BitVec 64))
(declare-fun var68332 () (_ BitVec 64))
(declare-fun ARGNAME_filter_sizes_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var68337 () (_ BitVec 64))
(declare-fun temp2682_5 () (_ BitVec 64))
(declare-fun var68423 () (_ BitVec 64))
(declare-fun temp2682_6 () (_ BitVec 64))
(declare-fun var68424 () (_ BitVec 64))
(declare-fun temp2682_7 () (_ BitVec 64))
(declare-fun temp2682_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var68432 () (_ BitVec 64))
(declare-fun temp2682_9 () (_ BitVec 64))
(declare-fun temp2682_10 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var68499 () (_ BitVec 64))
(declare-fun temp2682_11 () (_ BitVec 64))
(declare-fun temp2682_12 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp2682_13 () (_ BitVec 64))
(declare-fun temp2682_14 () (_ BitVec 64))
(declare-fun temp2682_15 () (_ BitVec 64))
(declare-fun temp2682_16 () (_ BitVec 64))
(declare-fun temp2682_17 () (_ BitVec 64))
(declare-fun temp2682_18 () (_ BitVec 64))
(declare-fun temp2682_19 () (_ BitVec 64))
(declare-fun temp2682_20 () (_ BitVec 64))
(declare-fun temp2682_21 () (_ BitVec 64))
(declare-fun temp2682_22 () (_ BitVec 64))
(declare-fun temp2682_23 () (_ BitVec 64))
(declare-fun temp2682_24 () (_ BitVec 64))
(declare-fun temp2682_25 () (_ BitVec 64))
(declare-fun var68527 () (_ BitVec 64))
(declare-fun temp2682_26 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp2682_27 () (_ BitVec 64))
(declare-fun temp2682_28 () (_ BitVec 64))
(declare-fun temp2682_29 () (_ BitVec 64))
(declare-fun temp2682_30 () (_ BitVec 64))
(declare-fun temp2682_31 () (_ BitVec 64))
(declare-fun temp2682_32 () (_ BitVec 64))
(declare-fun temp2682_33 () (_ BitVec 64))
(declare-fun temp2682_34 () (_ BitVec 64))
(declare-fun temp2682_35 () (_ BitVec 64))
(declare-fun temp2682_36 () (_ BitVec 64))
(declare-fun temp2682_37 () (_ BitVec 64))
(declare-fun temp2682_38 () (_ BitVec 64))
(declare-fun temp2682_39 () (_ BitVec 64))
(declare-fun var68530 () (_ BitVec 64))
(declare-fun var68533 () (_ BitVec 64))
(declare-fun temp2682_40 () (_ BitVec 64))
(declare-fun temp2682_44 () (_ BitVec 64))
(declare-fun temp2682_45 () (_ BitVec 64))
(declare-fun temp2682_46 () (_ BitVec 64))
(declare-fun temp2682_47 () (_ BitVec 64))
(declare-fun temp2682_42 () (_ BitVec 64))
(declare-fun temp2682_48 () (_ BitVec 64))
(declare-fun temp2682_49 () (_ BitVec 64))
(declare-fun temp2682_50 () (_ BitVec 64))
(declare-fun temp2682_43 () (_ BitVec 64))
(declare-fun temp2682_52 () (_ BitVec 64))
(declare-fun temp2682_53 () (_ BitVec 64))
(declare-fun temp2682_54 () (_ BitVec 64))
(declare-fun temp2682_55 () (_ BitVec 64))
(declare-fun temp2682_56 () (_ BitVec 64))
(declare-fun temp2682_57 () (_ BitVec 64))
(declare-fun temp2682_41 () (_ BitVec 64))
(declare-fun temp2682_58 () (_ BitVec 64))
(declare-fun var68567 () (_ BitVec 64))
(declare-fun temp2682_59 () (_ BitVec 64))
(declare-fun var200952 () (_ BitVec 64))
(declare-fun var68570 () (_ BitVec 64))
(declare-fun var68573 () (_ BitVec 64))
(declare-fun var68574 () (_ BitVec 64))
(declare-fun temp2682_60 () (_ BitVec 64))
(declare-fun var68605 () (_ BitVec 64))
(declare-fun temp2682_64 () (_ BitVec 64))
(declare-fun temp2682_65 () (_ BitVec 64))
(declare-fun temp2682_66 () (_ BitVec 64))
(declare-fun temp2682_67 () (_ BitVec 64))
(declare-fun temp2682_62 () (_ BitVec 64))
(declare-fun temp2682_68 () (_ BitVec 64))
(declare-fun temp2682_69 () (_ BitVec 64))
(declare-fun temp2682_70 () (_ BitVec 64))
(declare-fun temp2682_63 () (_ BitVec 64))
(declare-fun temp2682_72 () (_ BitVec 64))
(declare-fun temp2682_73 () (_ BitVec 64))
(declare-fun temp2682_74 () (_ BitVec 64))
(declare-fun temp2682_75 () (_ BitVec 64))
(declare-fun temp2682_76 () (_ BitVec 64))
(declare-fun temp2682_77 () (_ BitVec 64))
(declare-fun temp2682_61 () (_ BitVec 64))
(declare-fun temp2682_78 () (_ BitVec 64))
(declare-fun var68607 () (_ BitVec 64))
(declare-fun temp2682_79 () (_ BitVec 64))
(declare-fun var266488 () (_ BitVec 64))
(declare-fun var68608 () (_ BitVec 64))
(declare-fun var68609 () (_ BitVec 64))
(declare-fun var68610 () (_ BitVec 64))
(declare-fun temp2682_80 () (_ BitVec 64))
(declare-fun var68641 () (_ BitVec 64))
(declare-fun temp2682_84 () (_ BitVec 64))
(declare-fun temp2682_85 () (_ BitVec 64))
(declare-fun temp2682_86 () (_ BitVec 64))
(declare-fun temp2682_87 () (_ BitVec 64))
(declare-fun temp2682_82 () (_ BitVec 64))
(declare-fun temp2682_88 () (_ BitVec 64))
(declare-fun temp2682_89 () (_ BitVec 64))
(declare-fun temp2682_90 () (_ BitVec 64))
(declare-fun temp2682_83 () (_ BitVec 64))
(declare-fun temp2682_92 () (_ BitVec 64))
(declare-fun temp2682_93 () (_ BitVec 64))
(declare-fun temp2682_94 () (_ BitVec 64))
(declare-fun temp2682_95 () (_ BitVec 64))
(declare-fun temp2682_96 () (_ BitVec 64))
(declare-fun temp2682_97 () (_ BitVec 64))
(declare-fun temp2682_81 () (_ BitVec 64))
(declare-fun temp2682_98 () (_ BitVec 64))
(declare-fun var68646 () (_ BitVec 64))
(declare-fun temp2682_99 () (_ BitVec 64))
(declare-fun var332024 () (_ BitVec 64))
(declare-fun var68647 () (_ BitVec 64))
(declare-fun var68648 () (_ BitVec 64))
(declare-fun var68649 () (_ BitVec 64))
(declare-fun temp2682_100 () (_ BitVec 64))
(declare-fun var68688 () (_ BitVec 64))
(declare-fun temp2682_104 () (_ BitVec 64))
(declare-fun temp2682_105 () (_ BitVec 64))
(declare-fun temp2682_106 () (_ BitVec 64))
(declare-fun temp2682_107 () (_ BitVec 64))
(declare-fun temp2682_102 () (_ BitVec 64))
(declare-fun temp2682_108 () (_ BitVec 64))
(declare-fun temp2682_109 () (_ BitVec 64))
(declare-fun temp2682_110 () (_ BitVec 64))
(declare-fun temp2682_103 () (_ BitVec 64))
(declare-fun temp2682_112 () (_ BitVec 64))
(declare-fun temp2682_113 () (_ BitVec 64))
(declare-fun temp2682_114 () (_ BitVec 64))
(declare-fun temp2682_115 () (_ BitVec 64))
(declare-fun temp2682_116 () (_ BitVec 64))
(declare-fun temp2682_117 () (_ BitVec 64))
(declare-fun temp2682_101 () (_ BitVec 64))
(declare-fun temp2682_118 () (_ BitVec 64))
(declare-fun var68691 () (_ BitVec 64))
(declare-fun temp2682_119 () (_ BitVec 64))
(declare-fun var397560 () (_ BitVec 64))
(declare-fun var68692 () (_ BitVec 64))
(declare-fun var68693 () (_ BitVec 64))
(declare-fun var68694 () (_ BitVec 64))
(declare-fun temp2682_120 () (_ BitVec 64))
(declare-fun var68725 () (_ BitVec 64))
(declare-fun temp2682_124 () (_ BitVec 64))
(declare-fun temp2682_125 () (_ BitVec 64))
(declare-fun temp2682_126 () (_ BitVec 64))
(declare-fun temp2682_127 () (_ BitVec 64))
(declare-fun temp2682_122 () (_ BitVec 64))
(declare-fun temp2682_128 () (_ BitVec 64))
(declare-fun temp2682_129 () (_ BitVec 64))
(declare-fun temp2682_130 () (_ BitVec 64))
(declare-fun temp2682_123 () (_ BitVec 64))
(declare-fun temp2682_132 () (_ BitVec 64))
(declare-fun temp2682_133 () (_ BitVec 64))
(declare-fun temp2682_134 () (_ BitVec 64))
(declare-fun temp2682_135 () (_ BitVec 64))
(declare-fun temp2682_136 () (_ BitVec 64))
(declare-fun temp2682_121 () (_ BitVec 64))
(declare-fun temp2682_137 () (_ BitVec 64))
(declare-fun var68727 () (_ BitVec 64))
(declare-fun temp2682_141 () (_ BitVec 64))
(declare-fun temp2682_142 () (_ BitVec 64))
(declare-fun temp2682_143 () (_ BitVec 64))
(declare-fun temp2682_144 () (_ BitVec 64))
(declare-fun temp2682_139 () (_ BitVec 64))
(declare-fun temp2682_145 () (_ BitVec 64))
(declare-fun temp2682_146 () (_ BitVec 64))
(declare-fun temp2682_147 () (_ BitVec 64))
(declare-fun temp2682_140 () (_ BitVec 64))
(declare-fun temp2682_149 () (_ BitVec 64))
(declare-fun temp2682_150 () (_ BitVec 64))
(declare-fun temp2682_151 () (_ BitVec 64))
(declare-fun temp2682_152 () (_ BitVec 64))
(declare-fun temp2682_153 () (_ BitVec 64))
(declare-fun temp2682_138 () (_ BitVec 64))
(declare-fun temp2682_154 () (_ BitVec 64))
(declare-fun var68764 () (_ BitVec 64))
(declare-fun temp2682_155 () (_ BitVec 64))
(declare-fun var463096 () (_ BitVec 64))
(declare-fun var68765 () (_ BitVec 64))
(declare-fun var68766 () (_ BitVec 64))
(declare-fun var68767 () (_ BitVec 64))
(declare-fun temp2682_156 () (_ BitVec 64))
(declare-fun var68802 () (_ BitVec 64))
(declare-fun temp2682_157 () (_ BitVec 64))
(declare-fun var68804 () (_ BitVec 64))
(declare-fun temp2682_158 () (_ BitVec 64))
(declare-fun var68805 () (_ BitVec 64))
(declare-fun temp2682_160 () (_ BitVec 64))
(declare-fun temp2682_159 () (_ BitVec 64))
(declare-fun temp2682_162 () (_ BitVec 64))
(declare-fun temp2682_161 () (_ BitVec 64))
(declare-fun temp2682_164 () (_ BitVec 64))
(declare-fun temp2682_163 () (_ BitVec 64))
(declare-fun temp2682_166 () (_ BitVec 64))
(declare-fun temp2682_165 () (_ BitVec 64))
(declare-fun temp2682_168 () (_ BitVec 64))
(declare-fun temp2682_167 () (_ BitVec 64))
(declare-fun temp2682_170 () (_ BitVec 64))
(declare-fun temp2682_169 () (_ BitVec 64))
(declare-fun temp2682_171 () (_ BitVec 64))
(declare-fun var68861 () (_ BitVec 64))
(declare-fun temp2682_172 () (_ BitVec 64))
(declare-fun temp2682_173 () (_ BitVec 64))
(declare-fun var68877 () (_ BitVec 64))
(declare-fun temp2682_174 () (_ BitVec 64))
(declare-fun var68878 () (_ BitVec 64))
(declare-fun var533367 () (_ BitVec 64))
(declare-fun var598483 () (_ BitVec 64))
(declare-fun temp2682_175 () (_ BitVec 64))
(declare-fun var598485 () (_ BitVec 64))
(declare-fun temp2682_176 () (_ BitVec 64))
(declare-fun var598503 () (_ BitVec 64))
(declare-fun temp2682_177 () (_ BitVec 64))
(declare-fun temp2682_178 () (_ BitVec 64))
(declare-fun temp2682_179 () (_ BitVec 64))
(declare-fun var598531 () (_ BitVec 64))
(declare-fun temp2682_181 () (_ BitVec 64))
(declare-fun temp2682_180 () (_ BitVec 64))
(declare-fun temp2682_182 () (_ BitVec 64))
(declare-fun var598555 () (_ BitVec 64))
(declare-fun temp2682_183 () (_ BitVec 64))
(declare-fun temp2682_184 () (_ BitVec 64))
(declare-fun var68904 () (_ BitVec 64))
(declare-fun temp2682_185 () (_ BitVec 64))
(declare-fun var68905 () (_ BitVec 64))
(declare-fun var729975 () (_ BitVec 64))
(declare-fun var795091 () (_ BitVec 64))
(declare-fun temp2682_186 () (_ BitVec 64))
(declare-fun var795093 () (_ BitVec 64))
(declare-fun temp2682_187 () (_ BitVec 64))
(declare-fun var795111 () (_ BitVec 64))
(declare-fun temp2682_188 () (_ BitVec 64))
(declare-fun temp2682_189 () (_ BitVec 64))
(declare-fun temp2682_190 () (_ BitVec 64))
(declare-fun var795139 () (_ BitVec 64))
(declare-fun temp2682_192 () (_ BitVec 64))
(declare-fun temp2682_191 () (_ BitVec 64))
(declare-fun temp2682_193 () (_ BitVec 64))
(declare-fun var795163 () (_ BitVec 64))
(declare-fun temp2682_194 () (_ BitVec 64))
(declare-fun temp2682_195 () (_ BitVec 64))
(declare-fun var68931 () (_ BitVec 64))
(declare-fun temp2682_196 () (_ BitVec 64))
(declare-fun var68932 () (_ BitVec 64))
(declare-fun var68934 () (_ BitVec 64))
(declare-fun temp2682_197 () (_ BitVec 64))
(declare-fun temp2682_198 () (_ BitVec 64))
(declare-fun var68972 () (_ BitVec 64))
(declare-fun temp2682_199 () (_ BitVec 64))
(declare-fun var68973 () (_ BitVec 64))
(declare-fun var68975 () (_ BitVec 64))
(declare-fun temp2682_200 () (_ BitVec 64))
(declare-fun temp2682_202 () (_ BitVec 64))
(declare-fun temp2682_201 () (_ BitVec 64))
(declare-fun temp2682_204 () (_ BitVec 64))
(declare-fun temp2682_203 () (_ BitVec 64))
(declare-fun temp2682_206 () (_ BitVec 64))
(declare-fun temp2682_205 () (_ BitVec 64))
(declare-fun temp2682_208 () (_ BitVec 64))
(declare-fun temp2682_207 () (_ BitVec 64))
(declare-fun temp2682_210 () (_ BitVec 64))
(declare-fun temp2682_209 () (_ BitVec 64))
(declare-fun temp2682_212 () (_ BitVec 64))
(declare-fun temp2682_211 () (_ BitVec 64))
(declare-fun temp2682_214 () (_ BitVec 64))
(declare-fun temp2682_213 () (_ BitVec 64))
(declare-fun temp2682_216 () (_ BitVec 64))
(declare-fun temp2682_215 () (_ BitVec 64))
(declare-fun temp2682_218 () (_ BitVec 64))
(declare-fun temp2682_217 () (_ BitVec 64))
(declare-fun temp2682_220 () (_ BitVec 64))
(declare-fun temp2682_219 () (_ BitVec 64))
(declare-fun temp2682_222 () (_ BitVec 64))
(declare-fun temp2682_221 () (_ BitVec 64))
(declare-fun temp2682_224 () (_ BitVec 64))
(declare-fun temp2682_223 () (_ BitVec 64))
(declare-fun temp2682_226 () (_ BitVec 64))
(declare-fun temp2682_225 () (_ BitVec 64))
(declare-fun var69012 () (_ BitVec 64))
(declare-fun var69019 () (_ BitVec 64))
(declare-fun temp2682_227 () (_ BitVec 64))
(declare-fun var987606 () (_ BitVec 64))
(declare-fun temp2682_229 () (_ BitVec 64))
(declare-fun temp2682_228 () (_ BitVec 64))
(declare-fun temp2682_230 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var69206 () (_ BitVec 64))
(declare-fun temp2682_231 () (_ BitVec 64))
(declare-fun temp2682_232 () (_ BitVec 64))
(declare-fun var1118812 () (_ BitVec 64))
(declare-fun temp2682_233 () (_ BitVec 64))
(declare-fun var1250010 () (_ BitVec 64))
(declare-fun temp2682_234 () (_ BitVec 64))
(assert (or (= ARGNAME_padding_NAMEEND #x0000000000000001)
    (= ARGNAME_padding_NAMEEND #x0000000000000002)
    (= ARGNAME_padding_NAMEEND #x0000000000000003)))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp2682_1 #x0000000000000001))
(assert (= var135042
   (ite (= ARGNAME_filter_sizes_NAMEEND_DIM temp2682_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var135038 var135042))
(assert (= var68277 var135038))
(assert (= temp2682_2 #x0000000000000001))
(assert (= var68277 temp2682_2))
(assert (= temp2682_3 #x0000000000000000))
(assert (= var68332 temp2682_3))
(assert (= var68337
   (ite (bvsgt ARGNAME_filter_sizes_NAMEEND_NUMELEMENT var68332)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2682_5 #x0000000000000004))
(assert (= var68423 temp2682_5))
(assert (= temp2682_6 #x0000000000000004))
(assert (= var68424 (ite (= var68423 temp2682_6) #x0000000000000001 #x0000000000000000)))
(assert (= temp2682_7 #x0000000000000001))
(assert (= var68424 temp2682_7))
(assert (= temp2682_8 #x0000000000000004))
(assert (= var68432
   (ite (= ARGNAME_input_NAMEEND_DIM temp2682_8)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2682_9 #x0000000000000001))
(assert (= var68432 temp2682_9))
(assert (= temp2682_10 #x0000000000000004))
(assert (= var68499
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp2682_10)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2682_11 #x0000000000000001))
(assert (= var68499 temp2682_11))
(assert (= temp2682_12 #x0000000000000000))
(assert (= temp2682_13 (select ARGNAME_input_NAMEEND_DIMSIZE temp2682_12)))
(assert (= temp2682_14 #x0000000000000001))
(assert (= temp2682_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp2682_14)))
(assert (= temp2682_16 #x0000000000000002))
(assert (= temp2682_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp2682_16)))
(assert (= temp2682_18 #x0000000000000003))
(assert (= temp2682_19 (select ARGNAME_input_NAMEEND_DIMSIZE temp2682_18)))
(assert (= temp2682_20 #x0000000000000004))
(assert (= temp2682_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp2682_20)))
(assert (= temp2682_22 #x0000000000000005))
(assert (= temp2682_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp2682_22)))
(assert (= temp2682_24 #x0000000000000000))
(assert (= temp2682_25 (select ARGNAME_input_NAMEEND_DIMSIZE temp2682_24)))
(assert (= var68527 temp2682_25))
(assert (= temp2682_26 #x0000000000000000))
(assert (= temp2682_27 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp2682_26)))
(assert (= temp2682_28 #x0000000000000001))
(assert (= temp2682_29 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp2682_28)))
(assert (= temp2682_30 #x0000000000000002))
(assert (= temp2682_31 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp2682_30)))
(assert (= temp2682_32 #x0000000000000003))
(assert (= temp2682_33 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp2682_32)))
(assert (= temp2682_34 #x0000000000000004))
(assert (= temp2682_35 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp2682_34)))
(assert (= temp2682_36 #x0000000000000005))
(assert (= temp2682_37 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp2682_36)))
(assert (= temp2682_38 #x0000000000000000))
(assert (= temp2682_39 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp2682_38)))
(assert (= var68530 temp2682_39))
(assert (= var68533 (ite (= var68527 var68530) #x0000000000000001 #x0000000000000000)))
(assert (= temp2682_40 #x0000000000000001))
(assert (= var68533 temp2682_40))
(assert (= temp2682_44 #x0000000000000002))
(assert (= temp2682_45 #x0000000000000003))
(assert (= temp2682_46 #x0000000000000002))
(assert (= temp2682_47 #x0000000000000003))
(assert (= temp2682_42
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_46)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_47))
        (bvsub ARGNAME_input_NAMEEND_DIM temp2682_45)
        (bvsub ARGNAME_input_NAMEEND_DIM temp2682_44))))
(assert (= temp2682_48 #x0000000000000002))
(assert (= temp2682_49 #x0000000000000003))
(assert (= temp2682_50 #x0000000000000003))
(assert (= temp2682_43 (ite (= temp2682_42 temp2682_50) temp2682_49 temp2682_48)))
(assert (= temp2682_52 #x0000000000000002))
(assert (= temp2682_53 #x0000000000000001))
(assert (= temp2682_54 #x0000000000000002))
(assert (= temp2682_55 #x0000000000000001))
(assert (= temp2682_56 #x0000000000000000))
(assert (= temp2682_57 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_56)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_57))
                (bvsub temp2682_43 temp2682_55)
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_53)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_54))
                     temp2682_43
                     (bvsub temp2682_43 temp2682_52)))))
  (= temp2682_41 a!1)))
(assert (= temp2682_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp2682_41)))
(assert (= var68567 temp2682_58))
(assert (= temp2682_59 #x000000007fffffff))
(assert (= var200952 temp2682_59))
(assert (= var68570 var200952))
(assert (= var68573 var68570))
(assert (= var68574
   (ite (bvslt var68567 var68573) #x0000000000000001 #x0000000000000000)))
(assert (= temp2682_60 #x0000000000000001))
(assert (= var68574 temp2682_60))
(assert (= var68605 var68567))
(assert (= temp2682_64 #x0000000000000002))
(assert (= temp2682_65 #x0000000000000003))
(assert (= temp2682_66 #x0000000000000002))
(assert (= temp2682_67 #x0000000000000003))
(assert (= temp2682_62
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_66)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_67))
        (bvsub ARGNAME_input_NAMEEND_DIM temp2682_65)
        (bvsub ARGNAME_input_NAMEEND_DIM temp2682_64))))
(assert (= temp2682_68 #x0000000000000002))
(assert (= temp2682_69 #x0000000000000003))
(assert (= temp2682_70 #x0000000000000003))
(assert (= temp2682_63 (ite (= temp2682_62 temp2682_70) temp2682_69 temp2682_68)))
(assert (= temp2682_72 #x0000000000000001))
(assert (= temp2682_73 #x0000000000000001))
(assert (= temp2682_74 #x0000000000000001))
(assert (= temp2682_75 #x0000000000000002))
(assert (= temp2682_76 #x0000000000000000))
(assert (= temp2682_77 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_76)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_77))
                temp2682_63
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_74)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_75))
                     (bvadd temp2682_63 temp2682_73)
                     (bvsub temp2682_63 temp2682_72)))))
  (= temp2682_61 a!1)))
(assert (= temp2682_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp2682_61)))
(assert (= var68607 temp2682_78))
(assert (= temp2682_79 #x000000007fffffff))
(assert (= var266488 temp2682_79))
(assert (= var68608 var266488))
(assert (= var68609 var68608))
(assert (= var68610
   (ite (bvslt var68607 var68609) #x0000000000000001 #x0000000000000000)))
(assert (= temp2682_80 #x0000000000000001))
(assert (= var68610 temp2682_80))
(assert (= var68641 var68607))
(assert (= temp2682_84 #x0000000000000002))
(assert (= temp2682_85 #x0000000000000003))
(assert (= temp2682_86 #x0000000000000002))
(assert (= temp2682_87 #x0000000000000003))
(assert (= temp2682_82
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_86)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_87))
        (bvsub ARGNAME_out_backprop_NAMEEND_DIM temp2682_85)
        (bvsub ARGNAME_out_backprop_NAMEEND_DIM temp2682_84))))
(assert (= temp2682_88 #x0000000000000002))
(assert (= temp2682_89 #x0000000000000003))
(assert (= temp2682_90 #x0000000000000003))
(assert (= temp2682_83 (ite (= temp2682_82 temp2682_90) temp2682_89 temp2682_88)))
(assert (= temp2682_92 #x0000000000000002))
(assert (= temp2682_93 #x0000000000000001))
(assert (= temp2682_94 #x0000000000000002))
(assert (= temp2682_95 #x0000000000000001))
(assert (= temp2682_96 #x0000000000000000))
(assert (= temp2682_97 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_96)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_97))
                (bvsub temp2682_83 temp2682_95)
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_93)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_94))
                     temp2682_83
                     (bvsub temp2682_83 temp2682_92)))))
  (= temp2682_81 a!1)))
(assert (= temp2682_98 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp2682_81)))
(assert (= var68646 temp2682_98))
(assert (= temp2682_99 #x000000007fffffff))
(assert (= var332024 temp2682_99))
(assert (= var68647 var332024))
(assert (= var68648 var68647))
(assert (= var68649
   (ite (bvslt var68646 var68648) #x0000000000000001 #x0000000000000000)))
(assert (= temp2682_100 #x0000000000000001))
(assert (= var68649 temp2682_100))
(assert (= var68688 var68646))
(assert (= temp2682_104 #x0000000000000002))
(assert (= temp2682_105 #x0000000000000003))
(assert (= temp2682_106 #x0000000000000002))
(assert (= temp2682_107 #x0000000000000003))
(assert (= temp2682_102
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_106)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_107))
        (bvsub ARGNAME_out_backprop_NAMEEND_DIM temp2682_105)
        (bvsub ARGNAME_out_backprop_NAMEEND_DIM temp2682_104))))
(assert (= temp2682_108 #x0000000000000002))
(assert (= temp2682_109 #x0000000000000003))
(assert (= temp2682_110 #x0000000000000003))
(assert (= temp2682_103 (ite (= temp2682_102 temp2682_110) temp2682_109 temp2682_108)))
(assert (= temp2682_112 #x0000000000000001))
(assert (= temp2682_113 #x0000000000000001))
(assert (= temp2682_114 #x0000000000000001))
(assert (= temp2682_115 #x0000000000000002))
(assert (= temp2682_116 #x0000000000000000))
(assert (= temp2682_117 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_116)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_117))
                temp2682_103
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_114)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_115))
                     (bvadd temp2682_103 temp2682_113)
                     (bvsub temp2682_103 temp2682_112)))))
  (= temp2682_101 a!1)))
(assert (= temp2682_118 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp2682_101)))
(assert (= var68691 temp2682_118))
(assert (= temp2682_119 #x000000007fffffff))
(assert (= var397560 temp2682_119))
(assert (= var68692 var397560))
(assert (= var68693 var68692))
(assert (= var68694
   (ite (bvslt var68691 var68693) #x0000000000000001 #x0000000000000000)))
(assert (= temp2682_120 #x0000000000000001))
(assert (= var68694 temp2682_120))
(assert (= var68725 var68691))
(assert (= temp2682_124 #x0000000000000002))
(assert (= temp2682_125 #x0000000000000003))
(assert (= temp2682_126 #x0000000000000002))
(assert (= temp2682_127 #x0000000000000003))
(assert (= temp2682_122
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_126)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_127))
        (bvsub ARGNAME_input_NAMEEND_DIM temp2682_125)
        (bvsub ARGNAME_input_NAMEEND_DIM temp2682_124))))
(assert (= temp2682_128 #x0000000000000002))
(assert (= temp2682_129 #x0000000000000003))
(assert (= temp2682_130 #x0000000000000003))
(assert (= temp2682_123 (ite (= temp2682_122 temp2682_130) temp2682_129 temp2682_128)))
(assert (= temp2682_132 #x0000000000000001))
(assert (= temp2682_133 #x0000000000000005))
(assert (= temp2682_134 #x0000000000000001))
(assert (= temp2682_135 #x0000000000000001))
(assert (= temp2682_136 #x0000000000000002))
(assert (= temp2682_121
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_135)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_136))
        temp2682_134
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_133)
             temp2682_123
             (bvadd temp2682_123 temp2682_132)))))
(assert (= temp2682_137 (select ARGNAME_input_NAMEEND_DIMSIZE temp2682_121)))
(assert (= var68727 temp2682_137))
(assert (= temp2682_141 #x0000000000000002))
(assert (= temp2682_142 #x0000000000000003))
(assert (= temp2682_143 #x0000000000000002))
(assert (= temp2682_144 #x0000000000000003))
(assert (= temp2682_139
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_143)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_144))
        (bvsub ARGNAME_out_backprop_NAMEEND_DIM temp2682_142)
        (bvsub ARGNAME_out_backprop_NAMEEND_DIM temp2682_141))))
(assert (= temp2682_145 #x0000000000000002))
(assert (= temp2682_146 #x0000000000000003))
(assert (= temp2682_147 #x0000000000000003))
(assert (= temp2682_140 (ite (= temp2682_139 temp2682_147) temp2682_146 temp2682_145)))
(assert (= temp2682_149 #x0000000000000001))
(assert (= temp2682_150 #x0000000000000005))
(assert (= temp2682_151 #x0000000000000001))
(assert (= temp2682_152 #x0000000000000001))
(assert (= temp2682_153 #x0000000000000002))
(assert (= temp2682_138
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_152)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_153))
        temp2682_151
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_150)
             temp2682_140
             (bvadd temp2682_140 temp2682_149)))))
(assert (= temp2682_154 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp2682_138)))
(assert (= var68764 temp2682_154))
(assert (= temp2682_155 #x000000007fffffff))
(assert (= var463096 temp2682_155))
(assert (= var68765 var463096))
(assert (= var68766 var68765))
(assert (= var68767
   (ite (bvslt var68764 var68766) #x0000000000000001 #x0000000000000000)))
(assert (= temp2682_156 #x0000000000000001))
(assert (= var68767 temp2682_156))
(assert (= var68802 var68764))
(assert (= temp2682_157 #x0000000000000020))
(assert (= var68804 (bvshl var68764 temp2682_157)))
(assert (= temp2682_158 #x0000000000000020))
(assert (= var68805 (bvashr var68804 temp2682_158)))
(assert (= temp2682_160 #x0000000000000000))
(assert (= temp2682_159 temp2682_160))
(assert (= temp2682_162 #x0000000000000000))
(assert (= temp2682_161 temp2682_162))
(assert (= temp2682_164 #x0000000000000000))
(assert (= temp2682_163 temp2682_164))
(assert (= temp2682_166 #x0000000000000000))
(assert (= temp2682_165 temp2682_166))
(assert (= temp2682_168 #x0000000000000000))
(assert (= temp2682_167 temp2682_168))
(assert (= temp2682_170 #x0000000000000000))
(assert (= temp2682_169 temp2682_170))
(assert (= temp2682_171 #x0000000000000003))
(assert (= var68861
   (ite (= ARGNAME_padding_NAMEEND temp2682_171)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2682_172 #x0000000000000000))
(assert (= var68861 temp2682_172))
(assert (= temp2682_173 #x0000000000000020))
(assert (= var68877 (bvshl var68567 temp2682_173)))
(assert (= temp2682_174 #x0000000000000020))
(assert (= var68878 (bvashr var68877 temp2682_174)))
(assert (= var533367 var68878))
(assert (= var598483 var533367))
(assert (= temp2682_175 #x0000000000000001))
(assert (= var598485 temp2682_175))
(assert (= temp2682_176 #x0000000000000001))
(assert (= var598503
   (ite (bvslt var598485 temp2682_176) #x0000000000000001 #x0000000000000000)))
(assert (= temp2682_177 #x0000000000000000))
(assert (= var598503 temp2682_177))
(assert (= temp2682_178 #x0000000000000002))
(assert (or false (= ARGNAME_padding_NAMEEND temp2682_178)))
(assert (= temp2682_179 #xffffffffffffffff))
(assert (= var598531 (bvadd var598483 temp2682_179)))
(assert (= temp2682_181 #x0000000000000000))
(assert (= temp2682_180 temp2682_181))
(assert (= temp2682_182 #x0000000000000000))
(assert (= var598555
   (ite (bvslt temp2682_159 temp2682_182) #x0000000000000001 #x0000000000000000)))
(assert (= temp2682_183 #x0000000000000000))
(assert (= var598555 temp2682_183))
(assert (= temp2682_184 #x0000000000000020))
(assert (= var68904 (bvshl var68607 temp2682_184)))
(assert (= temp2682_185 #x0000000000000020))
(assert (= var68905 (bvashr var68904 temp2682_185)))
(assert (= var729975 var68905))
(assert (= var795091 var729975))
(assert (= temp2682_186 #x0000000000000001))
(assert (= var795093 temp2682_186))
(assert (= temp2682_187 #x0000000000000001))
(assert (= var795111
   (ite (bvslt var795093 temp2682_187) #x0000000000000001 #x0000000000000000)))
(assert (= temp2682_188 #x0000000000000000))
(assert (= var795111 temp2682_188))
(assert (= temp2682_189 #x0000000000000002))
(assert (or false (= ARGNAME_padding_NAMEEND temp2682_189)))
(assert (= temp2682_190 #xffffffffffffffff))
(assert (= var795139 (bvadd var795091 temp2682_190)))
(assert (= temp2682_192 #x0000000000000000))
(assert (= temp2682_191 temp2682_192))
(assert (= temp2682_193 #x0000000000000000))
(assert (= var795163
   (ite (bvslt temp2682_161 temp2682_193) #x0000000000000001 #x0000000000000000)))
(assert (= temp2682_194 #x0000000000000000))
(assert (= var795163 temp2682_194))
(assert (= temp2682_195 #x0000000000000020))
(assert (= var68931 (bvshl var68646 temp2682_195)))
(assert (= temp2682_196 #x0000000000000020))
(assert (= var68932 (bvashr var68931 temp2682_196)))
(assert (= var68934
   (ite (= var68932 temp2682_159) #x0000000000000001 #x0000000000000000)))
(assert (= temp2682_197 #x0000000000000001))
(assert (= var68934 temp2682_197))
(assert (= temp2682_198 #x0000000000000020))
(assert (= var68972 (bvshl var68691 temp2682_198)))
(assert (= temp2682_199 #x0000000000000020))
(assert (= var68973 (bvashr var68972 temp2682_199)))
(assert (= var68975
   (ite (= var68973 temp2682_161) #x0000000000000001 #x0000000000000000)))
(assert (= temp2682_200 #x0000000000000001))
(assert (= var68975 temp2682_200))
(assert (= temp2682_202 #x0000000000000000))
(assert (= temp2682_201 temp2682_202))
(assert (= temp2682_204 #x0000000000000000))
(assert (= temp2682_203 temp2682_204))
(assert (= temp2682_206 #x0000000000000000))
(assert (= temp2682_205 temp2682_206))
(assert (= temp2682_208 #x0000000000000000))
(assert (= temp2682_207 temp2682_208))
(assert (= temp2682_210 #x0000000000000000))
(assert (= temp2682_209 temp2682_210))
(assert (= temp2682_212 #x0000000000000000))
(assert (= temp2682_211 temp2682_212))
(assert (= temp2682_214 #x0000000000000000))
(assert (= temp2682_213 temp2682_214))
(assert (= temp2682_216 #x0000000000000000))
(assert (= temp2682_215 temp2682_216))
(assert (= temp2682_218 #x0000000000000000))
(assert (= temp2682_217 temp2682_218))
(assert (= temp2682_220 #x0000000000000000))
(assert (= temp2682_219 temp2682_220))
(assert (= temp2682_222 #x0000000000000000))
(assert (= temp2682_221 temp2682_222))
(assert (= temp2682_224 #x0000000000000000))
(assert (= temp2682_223 temp2682_224))
(assert (= temp2682_226 #x0000000000000000))
(assert (= temp2682_225 temp2682_226))
(assert (= var69012 var68527))
(assert (= var69019 var68727))
(assert (= temp2682_227 #x0000000000000002))
(assert (= var987606 temp2682_227))
(assert (= temp2682_229 #x0000000000000001))
(assert (= temp2682_228 temp2682_229))
(assert (= temp2682_230 #x0000000000000000))
(assert (= var69206
   (ite (= ARGNAME_out_backprop_NAMEEND_NUMELEMENT temp2682_230)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2682_231 #x0000000000000000))
(assert (= var69206 temp2682_231))
(assert (= temp2682_232 #x0000000000000002))
(assert (= var1118812 temp2682_232))
(assert (= temp2682_233 #x0000000000000000))
(assert (= var1250010
   (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp2682_233)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2682_234 #x0000000000000001))
(assert (= var1250010 temp2682_234))
(model-add temp2682_1 () (_ BitVec 64) #x0000000000000001)
(model-add var135042 () (_ BitVec 64) #x0000000000000001)
(model-add var135038 () (_ BitVec 64) #x0000000000000001)
(model-add temp2682_2 () (_ BitVec 64) #x0000000000000001)
(model-add var68277 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_sizes_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))




















