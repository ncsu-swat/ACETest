(declare-fun temp21_1 () (_ BitVec 64))
(declare-fun temp21_2 () (_ BitVec 64))
(declare-fun var66254 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_strides_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp21_3 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp21_4 () (_ BitVec 64))
(declare-fun temp21_5 () (_ BitVec 64))
(declare-fun temp21_6 () (_ BitVec 64))
(declare-fun temp21_7 () (_ BitVec 64))
(declare-fun temp21_8 () (_ BitVec 64))
(declare-fun temp21_9 () (_ BitVec 64))
(declare-fun temp21_10 () (_ BitVec 64))
(declare-fun temp21_11 () (_ BitVec 64))
(declare-fun temp21_12 () (_ BitVec 64))
(declare-fun temp21_13 () (_ BitVec 64))
(declare-fun temp21_14 () (_ BitVec 64))
(declare-fun temp21_18 () (_ BitVec 64))
(declare-fun temp21_19 () (_ BitVec 64))
(declare-fun temp21_20 () (_ BitVec 64))
(declare-fun temp21_21 () (_ BitVec 64))
(declare-fun temp21_16 () (_ BitVec 64))
(declare-fun temp21_22 () (_ BitVec 64))
(declare-fun temp21_23 () (_ BitVec 64))
(declare-fun temp21_24 () (_ BitVec 64))
(declare-fun temp21_17 () (_ BitVec 64))
(declare-fun temp21_26 () (_ BitVec 64))
(declare-fun temp21_27 () (_ BitVec 64))
(declare-fun temp21_28 () (_ BitVec 64))
(declare-fun temp21_29 () (_ BitVec 64))
(declare-fun temp21_30 () (_ BitVec 64))
(declare-fun temp21_31 () (_ BitVec 64))
(declare-fun temp21_15 () (_ BitVec 64))
(declare-fun temp21_32 () (_ BitVec 64))
(declare-fun var66375 () (_ BitVec 64))
(declare-fun var66379 () (_ BitVec 64))
(declare-fun temp21_36 () (_ BitVec 64))
(declare-fun temp21_37 () (_ BitVec 64))
(declare-fun temp21_38 () (_ BitVec 64))
(declare-fun temp21_39 () (_ BitVec 64))
(declare-fun temp21_34 () (_ BitVec 64))
(declare-fun temp21_40 () (_ BitVec 64))
(declare-fun temp21_41 () (_ BitVec 64))
(declare-fun temp21_42 () (_ BitVec 64))
(declare-fun temp21_35 () (_ BitVec 64))
(declare-fun temp21_44 () (_ BitVec 64))
(declare-fun temp21_45 () (_ BitVec 64))
(declare-fun temp21_46 () (_ BitVec 64))
(declare-fun temp21_47 () (_ BitVec 64))
(declare-fun temp21_48 () (_ BitVec 64))
(declare-fun temp21_49 () (_ BitVec 64))
(declare-fun temp21_33 () (_ BitVec 64))
(declare-fun temp21_50 () (_ BitVec 64))
(declare-fun var66383 () (_ BitVec 64))
(declare-fun var66385 () (_ BitVec 64))
(declare-fun temp21_54 () (_ BitVec 64))
(declare-fun temp21_55 () (_ BitVec 64))
(declare-fun temp21_56 () (_ BitVec 64))
(declare-fun temp21_57 () (_ BitVec 64))
(declare-fun temp21_52 () (_ BitVec 64))
(declare-fun temp21_58 () (_ BitVec 64))
(declare-fun temp21_59 () (_ BitVec 64))
(declare-fun temp21_60 () (_ BitVec 64))
(declare-fun temp21_53 () (_ BitVec 64))
(declare-fun temp21_62 () (_ BitVec 64))
(declare-fun temp21_63 () (_ BitVec 64))
(declare-fun temp21_64 () (_ BitVec 64))
(declare-fun temp21_65 () (_ BitVec 64))
(declare-fun temp21_51 () (_ BitVec 64))
(declare-fun temp21_66 () (_ BitVec 64))
(declare-fun var66387 () (_ BitVec 64))
(declare-fun temp21_70 () (_ BitVec 64))
(declare-fun temp21_71 () (_ BitVec 64))
(declare-fun temp21_72 () (_ BitVec 64))
(declare-fun temp21_73 () (_ BitVec 64))
(declare-fun temp21_68 () (_ BitVec 64))
(declare-fun temp21_74 () (_ BitVec 64))
(declare-fun temp21_75 () (_ BitVec 64))
(declare-fun temp21_76 () (_ BitVec 64))
(declare-fun temp21_69 () (_ BitVec 64))
(declare-fun temp21_78 () (_ BitVec 64))
(declare-fun temp21_79 () (_ BitVec 64))
(declare-fun temp21_80 () (_ BitVec 64))
(declare-fun temp21_81 () (_ BitVec 64))
(declare-fun temp21_82 () (_ BitVec 64))
(declare-fun temp21_67 () (_ BitVec 64))
(declare-fun temp21_83 () (_ BitVec 64))
(declare-fun var66390 () (_ BitVec 64))
(declare-fun var66392 () (_ BitVec 64))
(declare-fun var66393 () (_ BitVec 64))
(declare-fun temp21_84 () (_ BitVec 64))
(declare-fun temp21_85 () (_ BitVec 64))
(declare-fun var66433 () (_ BitVec 64))
(declare-fun temp21_86 () (_ BitVec 64))
(declare-fun var66435 () (_ BitVec 64))
(declare-fun var66436 () (_ BitVec 64))
(declare-fun temp21_87 () (_ BitVec 64))
(declare-fun temp21_88 () (_ BitVec 64))
(declare-fun var139334 () (_ BitVec 64))
(declare-fun temp21_89 () (_ BitVec 64))
(declare-fun var139340 () (_ BitVec 64))
(declare-fun temp21_90 () (_ BitVec 64))
(declare-fun temp21_91 () (_ BitVec 64))
(declare-fun var139344 () (_ BitVec 64))
(declare-fun ARGNAME_explicit_paddings_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var139345 () (_ BitVec 64))
(declare-fun temp21_92 () (_ BitVec 64))
(declare-fun temp21_93 () (_ BitVec 64))
(declare-fun ARGNAME_explicit_paddings_NAMEEND_ITERATOR_VAL () (_ BitVec 64))
(declare-fun var139377 () (_ BitVec 64))
(declare-fun temp21_94 () (_ BitVec 64))
(declare-fun temp21_95 () (_ BitVec 64))
(declare-fun var139383 () (_ BitVec 64))
(declare-fun temp21_96 () (_ BitVec 64))
(declare-fun var139384 () (_ BitVec 64))
(declare-fun temp21_98 () (_ BitVec 64))
(declare-fun var139391 () (_ BitVec 64))
(declare-fun temp21_99 () (_ BitVec 64))
(declare-fun var139394 () (_ BitVec 64))
(declare-fun temp21_100 () (_ BitVec 64))
(declare-fun var205161 () (_ BitVec 64))
(declare-fun temp21_101 () (_ BitVec 64))
(declare-fun temp21_102 () (_ BitVec 64))
(declare-fun var205166 () (_ BitVec 64))
(declare-fun var205185 () (_ BitVec 64))
(declare-fun var205160 () (_ BitVec 64))
(declare-fun var139396 () (_ BitVec 64))
(declare-fun var270725 () (_ BitVec 64))
(declare-fun temp21_103 () (_ BitVec 64))
(declare-fun temp21_104 () (_ BitVec 64))
(declare-fun temp21_105 () (_ BitVec 64))
(declare-fun var270730 () (_ BitVec 64))
(declare-fun var270748 () (_ BitVec 64))
(declare-fun var270724 () (_ BitVec 64))
(declare-fun var139399 () (_ BitVec 64))
(declare-fun temp21_106 () (_ BitVec 64))
(declare-fun var139402 () (_ BitVec 64))
(declare-fun var139403 () (_ BitVec 64))
(declare-fun temp21_107 () (_ BitVec 64))
(declare-fun ARGNAME_explicit_paddings_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp21_108 () (_ BitVec 64))
(declare-fun temp21_109 () (_ BitVec 64))
(declare-fun temp21_110 () (_ BitVec 64))
(declare-fun temp21_111 () (_ BitVec 64))
(declare-fun temp21_112 () (_ BitVec 64))
(declare-fun temp21_113 () (_ BitVec 64))
(declare-fun temp21_114 () (_ BitVec 64))
(declare-fun temp21_115 () (_ BitVec 64))
(declare-fun temp21_116 () (_ BitVec 64))
(declare-fun temp21_117 () (_ BitVec 64))
(declare-fun temp21_118 () (_ BitVec 64))
(declare-fun temp21_120 () (_ BitVec 64))
(declare-fun temp21_119 () (_ BitVec 64))
(declare-fun temp21_121 () (_ BitVec 64))
(declare-fun var139406 () (_ BitVec 64))
(declare-fun temp21_122 () (_ BitVec 64))
(declare-fun temp21_123 () (_ BitVec 64))
(declare-fun var139408 () (_ BitVec 64))
(declare-fun var139409 () (_ BitVec 64))
(declare-fun temp21_125 () (_ BitVec 64))
(declare-fun temp21_124 () (_ BitVec 64))
(declare-fun temp21_126 () (_ BitVec 64))
(declare-fun var139412 () (_ BitVec 64))
(declare-fun temp21_127 () (_ BitVec 64))
(declare-fun temp21_128 () (_ BitVec 64))
(declare-fun var139414 () (_ BitVec 64))
(declare-fun var139415 () (_ BitVec 64))
(declare-fun temp21_130 () (_ BitVec 64))
(declare-fun temp21_129 () (_ BitVec 64))
(declare-fun temp21_131 () (_ BitVec 64))
(declare-fun var139418 () (_ BitVec 64))
(declare-fun temp21_132 () (_ BitVec 64))
(declare-fun temp21_133 () (_ BitVec 64))
(declare-fun var139420 () (_ BitVec 64))
(declare-fun var139421 () (_ BitVec 64))
(declare-fun temp21_135 () (_ BitVec 64))
(declare-fun temp21_134 () (_ BitVec 64))
(declare-fun temp21_136 () (_ BitVec 64))
(declare-fun var139424 () (_ BitVec 64))
(declare-fun temp21_137 () (_ BitVec 64))
(declare-fun temp21_138 () (_ BitVec 64))
(declare-fun var139429 () (_ BitVec 64))
(assert (or (= ARGNAME_padding_NAMEEND #x0000000000000001)
    (= ARGNAME_padding_NAMEEND #x0000000000000002)
    (= ARGNAME_padding_NAMEEND #x0000000000000003)))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp21_1 #x0000000000000004))
(assert (= var66254
   (ite (= ARGNAME_strides_NAMEEND_LEN temp21_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp21_2 #x0000000000000001))
(assert (= var66254 temp21_2))
(assert (= temp21_3 #x0000000000000000))
(assert (= temp21_4 (select ARGNAME_strides_NAMEEND_VAL temp21_3)))
(assert (= temp21_5 #x0000000000000001))
(assert (= temp21_6 (select ARGNAME_strides_NAMEEND_VAL temp21_5)))
(assert (= temp21_7 #x0000000000000002))
(assert (= temp21_8 (select ARGNAME_strides_NAMEEND_VAL temp21_7)))
(assert (= temp21_9 #x0000000000000003))
(assert (= temp21_10 (select ARGNAME_strides_NAMEEND_VAL temp21_9)))
(assert (= temp21_11 #x0000000000000004))
(assert (= temp21_12 (select ARGNAME_strides_NAMEEND_VAL temp21_11)))
(assert (= temp21_13 #x0000000000000005))
(assert (= temp21_14 (select ARGNAME_strides_NAMEEND_VAL temp21_13)))
(assert (= temp21_18 #x0000000000000002))
(assert (= temp21_19 #x0000000000000003))
(assert (= temp21_20 #x0000000000000002))
(assert (= temp21_21 #x0000000000000003))
(assert (= temp21_16
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp21_20)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp21_21))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp21_19)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp21_18))))
(assert (= temp21_22 #x0000000000000002))
(assert (= temp21_23 #x0000000000000003))
(assert (= temp21_24 #x0000000000000003))
(assert (= temp21_17 (ite (= temp21_16 temp21_24) temp21_23 temp21_22)))
(assert (= temp21_26 #x0000000000000002))
(assert (= temp21_27 #x0000000000000001))
(assert (= temp21_28 #x0000000000000002))
(assert (= temp21_29 #x0000000000000001))
(assert (= temp21_30 #x0000000000000000))
(assert (= temp21_31 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp21_30)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp21_31))
                (bvsub temp21_17 temp21_29)
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp21_27)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp21_28))
                     temp21_17
                     (bvsub temp21_17 temp21_26)))))
  (= temp21_15 a!1)))
(assert (= temp21_32 (select ARGNAME_strides_NAMEEND_VAL temp21_15)))
(assert (= var66375 temp21_32))
(assert (= var66379 var66375))
(assert (= temp21_36 #x0000000000000002))
(assert (= temp21_37 #x0000000000000003))
(assert (= temp21_38 #x0000000000000002))
(assert (= temp21_39 #x0000000000000003))
(assert (= temp21_34
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp21_38)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp21_39))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp21_37)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp21_36))))
(assert (= temp21_40 #x0000000000000002))
(assert (= temp21_41 #x0000000000000003))
(assert (= temp21_42 #x0000000000000003))
(assert (= temp21_35 (ite (= temp21_34 temp21_42) temp21_41 temp21_40)))
(assert (= temp21_44 #x0000000000000001))
(assert (= temp21_45 #x0000000000000001))
(assert (= temp21_46 #x0000000000000001))
(assert (= temp21_47 #x0000000000000002))
(assert (= temp21_48 #x0000000000000000))
(assert (= temp21_49 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp21_48)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp21_49))
                temp21_35
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp21_46)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp21_47))
                     (bvadd temp21_35 temp21_45)
                     (bvsub temp21_35 temp21_44)))))
  (= temp21_33 a!1)))
(assert (= temp21_50 (select ARGNAME_strides_NAMEEND_VAL temp21_33)))
(assert (= var66383 temp21_50))
(assert (= var66385 var66383))
(assert (= temp21_54 #x0000000000000002))
(assert (= temp21_55 #x0000000000000003))
(assert (= temp21_56 #x0000000000000002))
(assert (= temp21_57 #x0000000000000003))
(assert (= temp21_52
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp21_56)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp21_57))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp21_55)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp21_54))))
(assert (= temp21_58 #x0000000000000002))
(assert (= temp21_59 #x0000000000000003))
(assert (= temp21_60 #x0000000000000003))
(assert (= temp21_53 (ite (= temp21_52 temp21_60) temp21_59 temp21_58)))
(assert (= temp21_62 #x0000000000000000))
(assert (= temp21_63 #x0000000000000001))
(assert (= temp21_64 #x0000000000000005))
(assert (= temp21_65 #x0000000000000004))
(assert (= temp21_51
   (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp21_65)
        temp21_53
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp21_64)
             (bvadd temp21_53 temp21_63)
             temp21_62))))
(assert (= temp21_66 (select ARGNAME_strides_NAMEEND_VAL temp21_51)))
(assert (= var66387 temp21_66))
(assert (= temp21_70 #x0000000000000002))
(assert (= temp21_71 #x0000000000000003))
(assert (= temp21_72 #x0000000000000002))
(assert (= temp21_73 #x0000000000000003))
(assert (= temp21_68
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp21_72)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp21_73))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp21_71)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp21_70))))
(assert (= temp21_74 #x0000000000000002))
(assert (= temp21_75 #x0000000000000003))
(assert (= temp21_76 #x0000000000000003))
(assert (= temp21_69 (ite (= temp21_68 temp21_76) temp21_75 temp21_74)))
(assert (= temp21_78 #x0000000000000001))
(assert (= temp21_79 #x0000000000000005))
(assert (= temp21_80 #x0000000000000001))
(assert (= temp21_81 #x0000000000000001))
(assert (= temp21_82 #x0000000000000002))
(assert (= temp21_67
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp21_81)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp21_82))
        temp21_80
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp21_79)
             temp21_69
             (bvadd temp21_69 temp21_78)))))
(assert (= temp21_83 (select ARGNAME_strides_NAMEEND_VAL temp21_67)))
(assert (= var66390 temp21_83))
(assert (= var66392 var66379))
(assert (= var66393 (ite (= var66392 var66385) #x0000000000000001 #x0000000000000000)))
(assert (= temp21_84 #x0000000000000001))
(assert (= var66393 temp21_84))
(assert (= temp21_85 #x0000000000000001))
(assert (= var66433 (ite (= var66387 temp21_85) #x0000000000000001 #x0000000000000000)))
(assert (= temp21_86 #x0000000000000001))
(assert (= var66435 (ite (= var66390 temp21_86) #x0000000000000001 #x0000000000000000)))
(assert (= var66436 (bvand var66433 var66435)))
(assert (= temp21_87 #x0000000000000001))
(assert (= var66436 temp21_87))
(assert (= temp21_88 #x0000000000000004))
(assert (= var139334 temp21_88))
(assert (= temp21_89 #x0000000000000003))
(assert (= var139340
   (ite (= ARGNAME_padding_NAMEEND temp21_89)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp21_90 #x0000000000000001))
(assert (= var139340 temp21_90))
(assert (= temp21_91 #x0000000000000001))
(assert (= var139344 (bvshl var139334 temp21_91)))
(assert (= var139345
   (ite (= var139344 ARGNAME_explicit_paddings_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp21_92 #x0000000000000001))
(assert (= var139345 temp21_92))
(assert (= temp21_93 #x0000000000000000))
(assert (= var139377
   (ite (bvslt ARGNAME_explicit_paddings_NAMEEND_ITERATOR_VAL temp21_93)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp21_94 #x0000000000000000))
(assert (= var139377 temp21_94))
(assert (= temp21_95 #x0000000000000000))
(assert (= var139383 temp21_95))
(assert (= temp21_96 #x0000000000000000))
(assert (= var139384
   (ite (= var139383 temp21_96) #x0000000000000001 #x0000000000000000)))
(assert (= temp21_98 #x0000000000000002))
(assert (= var139391 temp21_98))
(assert (= temp21_99 #x0000000000000002))
(assert (= var139394
   (ite (= var139391 temp21_99) #x0000000000000001 #x0000000000000000)))
(assert (= temp21_100 #x0000000000000001))
(assert (= var139394 temp21_100))
(assert (= var205161 var139334))
(assert (= temp21_101 #x0000000000000004))
(assert (or false (= ARGNAME_data_format_NAMEEND_STRFMT temp21_101)))
(assert (= temp21_102 #xfffffffffffffffe))
(assert (= var205166 (bvadd var205161 temp21_102)))
(assert (= var205185 var205166))
(assert (= var205160 var205185))
(assert (= var139396 var205160))
(assert (= var270725 var139334))
(assert (= temp21_103 #x0000000000000000))
(assert (= temp21_104 #x0000000000000004))
(assert (or false
    (= ARGNAME_data_format_NAMEEND_STRFMT temp21_103)
    (= ARGNAME_data_format_NAMEEND_STRFMT temp21_104)))
(assert (= temp21_105 #xffffffffffffffff))
(assert (= var270730 (bvadd var270725 temp21_105)))
(assert (= var270748 var270730))
(assert (= var270724 var270748))
(assert (= var139399 var270724))
(assert (= temp21_106 #x0000000000000001))
(assert (= var139402 (bvshl var139396 temp21_106)))
(assert (= var139403 var139402))
(assert (= temp21_107 #x0000000000000000))
(assert (= temp21_108 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp21_107)))
(assert (= temp21_109 #x0000000000000001))
(assert (= temp21_110 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp21_109)))
(assert (= temp21_111 #x0000000000000002))
(assert (= temp21_112 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp21_111)))
(assert (= temp21_113 #x0000000000000003))
(assert (= temp21_114 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp21_113)))
(assert (= temp21_115 #x0000000000000004))
(assert (= temp21_116 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp21_115)))
(assert (= temp21_117 #x0000000000000005))
(assert (= temp21_118 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp21_117)))
(assert (= temp21_120 (select ARGNAME_explicit_paddings_NAMEEND_VAL var139403)))
(assert (= temp21_119 temp21_120))
(assert (= temp21_121 #x0000000000000000))
(assert (= var139406
   (ite (= temp21_119 temp21_121) #x0000000000000001 #x0000000000000000)))
(assert (= temp21_122 #x0000000000000001))
(assert (= var139406 temp21_122))
(assert (= temp21_123 #x0000000000000001))
(assert (= var139408 (bvor var139402 temp21_123)))
(assert (= var139409 var139408))
(assert (= temp21_125 (select ARGNAME_explicit_paddings_NAMEEND_VAL var139409)))
(assert (= temp21_124 temp21_125))
(assert (= temp21_126 #x0000000000000000))
(assert (= var139412
   (ite (= temp21_124 temp21_126) #x0000000000000001 #x0000000000000000)))
(assert (= temp21_127 #x0000000000000001))
(assert (= var139412 temp21_127))
(assert (= temp21_128 #x0000000000000001))
(assert (= var139414 (bvshl var139399 temp21_128)))
(assert (= var139415 var139414))
(assert (= temp21_130 (select ARGNAME_explicit_paddings_NAMEEND_VAL var139415)))
(assert (= temp21_129 temp21_130))
(assert (= temp21_131 #x0000000000000000))
(assert (= var139418
   (ite (= temp21_129 temp21_131) #x0000000000000001 #x0000000000000000)))
(assert (= temp21_132 #x0000000000000001))
(assert (= var139418 temp21_132))
(assert (= temp21_133 #x0000000000000001))
(assert (= var139420 (bvor var139414 temp21_133)))
(assert (= var139421 var139420))
(assert (= temp21_135 (select ARGNAME_explicit_paddings_NAMEEND_VAL var139421)))
(assert (= temp21_134 temp21_135))
(assert (= temp21_136 #x0000000000000000))
(assert (= var139424
   (ite (= temp21_134 temp21_136) #x0000000000000001 #x0000000000000000)))
(assert (= temp21_137 #x0000000000000001))
(assert (= var139424 temp21_137))
(assert (= temp21_138 #x0000000000000000))
(assert (= var139429 temp21_138))
(model-add temp21_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp21_2 () (_ BitVec 64) #x0000000000000001)
(model-add var66254 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_strides_NAMEEND_LEN
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))



























