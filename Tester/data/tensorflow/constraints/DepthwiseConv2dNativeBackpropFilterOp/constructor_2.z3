(declare-fun temp18_1 () (_ BitVec 64))
(declare-fun temp18_2 () (_ BitVec 64))
(declare-fun var66254 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_strides_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp18_3 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp18_4 () (_ BitVec 64))
(declare-fun temp18_5 () (_ BitVec 64))
(declare-fun temp18_6 () (_ BitVec 64))
(declare-fun temp18_7 () (_ BitVec 64))
(declare-fun temp18_8 () (_ BitVec 64))
(declare-fun temp18_9 () (_ BitVec 64))
(declare-fun temp18_10 () (_ BitVec 64))
(declare-fun temp18_11 () (_ BitVec 64))
(declare-fun temp18_12 () (_ BitVec 64))
(declare-fun temp18_13 () (_ BitVec 64))
(declare-fun temp18_14 () (_ BitVec 64))
(declare-fun temp18_18 () (_ BitVec 64))
(declare-fun temp18_19 () (_ BitVec 64))
(declare-fun temp18_20 () (_ BitVec 64))
(declare-fun temp18_21 () (_ BitVec 64))
(declare-fun temp18_16 () (_ BitVec 64))
(declare-fun temp18_22 () (_ BitVec 64))
(declare-fun temp18_23 () (_ BitVec 64))
(declare-fun temp18_24 () (_ BitVec 64))
(declare-fun temp18_17 () (_ BitVec 64))
(declare-fun temp18_26 () (_ BitVec 64))
(declare-fun temp18_27 () (_ BitVec 64))
(declare-fun temp18_28 () (_ BitVec 64))
(declare-fun temp18_29 () (_ BitVec 64))
(declare-fun temp18_30 () (_ BitVec 64))
(declare-fun temp18_31 () (_ BitVec 64))
(declare-fun temp18_15 () (_ BitVec 64))
(declare-fun temp18_32 () (_ BitVec 64))
(declare-fun var66375 () (_ BitVec 64))
(declare-fun var66379 () (_ BitVec 64))
(declare-fun temp18_36 () (_ BitVec 64))
(declare-fun temp18_37 () (_ BitVec 64))
(declare-fun temp18_38 () (_ BitVec 64))
(declare-fun temp18_39 () (_ BitVec 64))
(declare-fun temp18_34 () (_ BitVec 64))
(declare-fun temp18_40 () (_ BitVec 64))
(declare-fun temp18_41 () (_ BitVec 64))
(declare-fun temp18_42 () (_ BitVec 64))
(declare-fun temp18_35 () (_ BitVec 64))
(declare-fun temp18_44 () (_ BitVec 64))
(declare-fun temp18_45 () (_ BitVec 64))
(declare-fun temp18_46 () (_ BitVec 64))
(declare-fun temp18_47 () (_ BitVec 64))
(declare-fun temp18_48 () (_ BitVec 64))
(declare-fun temp18_49 () (_ BitVec 64))
(declare-fun temp18_33 () (_ BitVec 64))
(declare-fun temp18_50 () (_ BitVec 64))
(declare-fun var66383 () (_ BitVec 64))
(declare-fun var66385 () (_ BitVec 64))
(declare-fun temp18_54 () (_ BitVec 64))
(declare-fun temp18_55 () (_ BitVec 64))
(declare-fun temp18_56 () (_ BitVec 64))
(declare-fun temp18_57 () (_ BitVec 64))
(declare-fun temp18_52 () (_ BitVec 64))
(declare-fun temp18_58 () (_ BitVec 64))
(declare-fun temp18_59 () (_ BitVec 64))
(declare-fun temp18_60 () (_ BitVec 64))
(declare-fun temp18_53 () (_ BitVec 64))
(declare-fun temp18_62 () (_ BitVec 64))
(declare-fun temp18_63 () (_ BitVec 64))
(declare-fun temp18_64 () (_ BitVec 64))
(declare-fun temp18_65 () (_ BitVec 64))
(declare-fun temp18_51 () (_ BitVec 64))
(declare-fun temp18_66 () (_ BitVec 64))
(declare-fun var66387 () (_ BitVec 64))
(declare-fun temp18_70 () (_ BitVec 64))
(declare-fun temp18_71 () (_ BitVec 64))
(declare-fun temp18_72 () (_ BitVec 64))
(declare-fun temp18_73 () (_ BitVec 64))
(declare-fun temp18_68 () (_ BitVec 64))
(declare-fun temp18_74 () (_ BitVec 64))
(declare-fun temp18_75 () (_ BitVec 64))
(declare-fun temp18_76 () (_ BitVec 64))
(declare-fun temp18_69 () (_ BitVec 64))
(declare-fun temp18_78 () (_ BitVec 64))
(declare-fun temp18_79 () (_ BitVec 64))
(declare-fun temp18_80 () (_ BitVec 64))
(declare-fun temp18_81 () (_ BitVec 64))
(declare-fun temp18_82 () (_ BitVec 64))
(declare-fun temp18_67 () (_ BitVec 64))
(declare-fun temp18_83 () (_ BitVec 64))
(declare-fun var66390 () (_ BitVec 64))
(declare-fun var66392 () (_ BitVec 64))
(declare-fun var66393 () (_ BitVec 64))
(declare-fun temp18_84 () (_ BitVec 64))
(declare-fun temp18_85 () (_ BitVec 64))
(declare-fun var66433 () (_ BitVec 64))
(declare-fun temp18_86 () (_ BitVec 64))
(declare-fun var66435 () (_ BitVec 64))
(declare-fun var66436 () (_ BitVec 64))
(declare-fun temp18_87 () (_ BitVec 64))
(declare-fun temp18_88 () (_ BitVec 64))
(declare-fun var139334 () (_ BitVec 64))
(declare-fun temp18_89 () (_ BitVec 64))
(declare-fun var139340 () (_ BitVec 64))
(declare-fun temp18_90 () (_ BitVec 64))
(declare-fun temp18_91 () (_ BitVec 64))
(declare-fun var139344 () (_ BitVec 64))
(declare-fun ARGNAME_explicit_paddings_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var139345 () (_ BitVec 64))
(declare-fun temp18_92 () (_ BitVec 64))
(declare-fun temp18_93 () (_ BitVec 64))
(declare-fun ARGNAME_explicit_paddings_NAMEEND_ITERATOR_VAL () (_ BitVec 64))
(declare-fun var139377 () (_ BitVec 64))
(declare-fun temp18_94 () (_ BitVec 64))
(declare-fun temp18_95 () (_ BitVec 64))
(declare-fun var139383 () (_ BitVec 64))
(declare-fun temp18_96 () (_ BitVec 64))
(declare-fun var139384 () (_ BitVec 64))
(declare-fun temp18_98 () (_ BitVec 64))
(declare-fun var139391 () (_ BitVec 64))
(declare-fun temp18_99 () (_ BitVec 64))
(declare-fun var139394 () (_ BitVec 64))
(declare-fun temp18_100 () (_ BitVec 64))
(declare-fun var205161 () (_ BitVec 64))
(declare-fun temp18_101 () (_ BitVec 64))
(declare-fun temp18_102 () (_ BitVec 64))
(declare-fun temp18_103 () (_ BitVec 64))
(declare-fun temp18_104 () (_ BitVec 64))
(declare-fun temp18_105 () (_ BitVec 64))
(declare-fun var205185 () (_ BitVec 64))
(declare-fun var205160 () (_ BitVec 64))
(declare-fun var139396 () (_ BitVec 64))
(declare-fun var270725 () (_ BitVec 64))
(declare-fun temp18_106 () (_ BitVec 64))
(declare-fun temp18_107 () (_ BitVec 64))
(declare-fun temp18_108 () (_ BitVec 64))
(declare-fun var270733 () (_ BitVec 64))
(declare-fun var270748 () (_ BitVec 64))
(declare-fun var270724 () (_ BitVec 64))
(declare-fun var139399 () (_ BitVec 64))
(declare-fun temp18_109 () (_ BitVec 64))
(declare-fun var139402 () (_ BitVec 64))
(declare-fun var139403 () (_ BitVec 64))
(declare-fun temp18_110 () (_ BitVec 64))
(declare-fun ARGNAME_explicit_paddings_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp18_111 () (_ BitVec 64))
(declare-fun temp18_112 () (_ BitVec 64))
(declare-fun temp18_113 () (_ BitVec 64))
(declare-fun temp18_114 () (_ BitVec 64))
(declare-fun temp18_115 () (_ BitVec 64))
(declare-fun temp18_116 () (_ BitVec 64))
(declare-fun temp18_117 () (_ BitVec 64))
(declare-fun temp18_118 () (_ BitVec 64))
(declare-fun temp18_119 () (_ BitVec 64))
(declare-fun temp18_120 () (_ BitVec 64))
(declare-fun temp18_121 () (_ BitVec 64))
(declare-fun temp18_123 () (_ BitVec 64))
(declare-fun temp18_122 () (_ BitVec 64))
(declare-fun temp18_124 () (_ BitVec 64))
(declare-fun var139406 () (_ BitVec 64))
(declare-fun temp18_125 () (_ BitVec 64))
(declare-fun temp18_126 () (_ BitVec 64))
(declare-fun var139408 () (_ BitVec 64))
(declare-fun var139409 () (_ BitVec 64))
(declare-fun temp18_128 () (_ BitVec 64))
(declare-fun temp18_127 () (_ BitVec 64))
(declare-fun temp18_129 () (_ BitVec 64))
(declare-fun var139412 () (_ BitVec 64))
(declare-fun temp18_130 () (_ BitVec 64))
(declare-fun temp18_131 () (_ BitVec 64))
(declare-fun var139414 () (_ BitVec 64))
(declare-fun var139415 () (_ BitVec 64))
(declare-fun temp18_133 () (_ BitVec 64))
(declare-fun temp18_132 () (_ BitVec 64))
(declare-fun temp18_134 () (_ BitVec 64))
(declare-fun var139418 () (_ BitVec 64))
(declare-fun temp18_135 () (_ BitVec 64))
(declare-fun temp18_136 () (_ BitVec 64))
(declare-fun var139420 () (_ BitVec 64))
(declare-fun var139421 () (_ BitVec 64))
(declare-fun temp18_138 () (_ BitVec 64))
(declare-fun temp18_137 () (_ BitVec 64))
(declare-fun temp18_139 () (_ BitVec 64))
(declare-fun var139424 () (_ BitVec 64))
(declare-fun temp18_140 () (_ BitVec 64))
(declare-fun temp18_141 () (_ BitVec 64))
(declare-fun var139429 () (_ BitVec 64))
(assert (or (= ARGNAME_padding_NAMEEND #x0000000000000001)
    (= ARGNAME_padding_NAMEEND #x0000000000000002)
    (= ARGNAME_padding_NAMEEND #x0000000000000003)))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp18_1 #x0000000000000004))
(assert (= var66254
   (ite (= ARGNAME_strides_NAMEEND_LEN temp18_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp18_2 #x0000000000000001))
(assert (= var66254 temp18_2))
(assert (= temp18_3 #x0000000000000000))
(assert (= temp18_4 (select ARGNAME_strides_NAMEEND_VAL temp18_3)))
(assert (= temp18_5 #x0000000000000001))
(assert (= temp18_6 (select ARGNAME_strides_NAMEEND_VAL temp18_5)))
(assert (= temp18_7 #x0000000000000002))
(assert (= temp18_8 (select ARGNAME_strides_NAMEEND_VAL temp18_7)))
(assert (= temp18_9 #x0000000000000003))
(assert (= temp18_10 (select ARGNAME_strides_NAMEEND_VAL temp18_9)))
(assert (= temp18_11 #x0000000000000004))
(assert (= temp18_12 (select ARGNAME_strides_NAMEEND_VAL temp18_11)))
(assert (= temp18_13 #x0000000000000005))
(assert (= temp18_14 (select ARGNAME_strides_NAMEEND_VAL temp18_13)))
(assert (= temp18_18 #x0000000000000002))
(assert (= temp18_19 #x0000000000000003))
(assert (= temp18_20 #x0000000000000002))
(assert (= temp18_21 #x0000000000000003))
(assert (= temp18_16
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp18_20)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp18_21))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp18_19)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp18_18))))
(assert (= temp18_22 #x0000000000000002))
(assert (= temp18_23 #x0000000000000003))
(assert (= temp18_24 #x0000000000000003))
(assert (= temp18_17 (ite (= temp18_16 temp18_24) temp18_23 temp18_22)))
(assert (= temp18_26 #x0000000000000002))
(assert (= temp18_27 #x0000000000000001))
(assert (= temp18_28 #x0000000000000002))
(assert (= temp18_29 #x0000000000000001))
(assert (= temp18_30 #x0000000000000000))
(assert (= temp18_31 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp18_30)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp18_31))
                (bvsub temp18_17 temp18_29)
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp18_27)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp18_28))
                     temp18_17
                     (bvsub temp18_17 temp18_26)))))
  (= temp18_15 a!1)))
(assert (= temp18_32 (select ARGNAME_strides_NAMEEND_VAL temp18_15)))
(assert (= var66375 temp18_32))
(assert (= var66379 var66375))
(assert (= temp18_36 #x0000000000000002))
(assert (= temp18_37 #x0000000000000003))
(assert (= temp18_38 #x0000000000000002))
(assert (= temp18_39 #x0000000000000003))
(assert (= temp18_34
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp18_38)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp18_39))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp18_37)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp18_36))))
(assert (= temp18_40 #x0000000000000002))
(assert (= temp18_41 #x0000000000000003))
(assert (= temp18_42 #x0000000000000003))
(assert (= temp18_35 (ite (= temp18_34 temp18_42) temp18_41 temp18_40)))
(assert (= temp18_44 #x0000000000000001))
(assert (= temp18_45 #x0000000000000001))
(assert (= temp18_46 #x0000000000000001))
(assert (= temp18_47 #x0000000000000002))
(assert (= temp18_48 #x0000000000000000))
(assert (= temp18_49 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp18_48)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp18_49))
                temp18_35
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp18_46)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp18_47))
                     (bvadd temp18_35 temp18_45)
                     (bvsub temp18_35 temp18_44)))))
  (= temp18_33 a!1)))
(assert (= temp18_50 (select ARGNAME_strides_NAMEEND_VAL temp18_33)))
(assert (= var66383 temp18_50))
(assert (= var66385 var66383))
(assert (= temp18_54 #x0000000000000002))
(assert (= temp18_55 #x0000000000000003))
(assert (= temp18_56 #x0000000000000002))
(assert (= temp18_57 #x0000000000000003))
(assert (= temp18_52
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp18_56)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp18_57))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp18_55)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp18_54))))
(assert (= temp18_58 #x0000000000000002))
(assert (= temp18_59 #x0000000000000003))
(assert (= temp18_60 #x0000000000000003))
(assert (= temp18_53 (ite (= temp18_52 temp18_60) temp18_59 temp18_58)))
(assert (= temp18_62 #x0000000000000000))
(assert (= temp18_63 #x0000000000000001))
(assert (= temp18_64 #x0000000000000005))
(assert (= temp18_65 #x0000000000000004))
(assert (= temp18_51
   (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp18_65)
        temp18_53
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp18_64)
             (bvadd temp18_53 temp18_63)
             temp18_62))))
(assert (= temp18_66 (select ARGNAME_strides_NAMEEND_VAL temp18_51)))
(assert (= var66387 temp18_66))
(assert (= temp18_70 #x0000000000000002))
(assert (= temp18_71 #x0000000000000003))
(assert (= temp18_72 #x0000000000000002))
(assert (= temp18_73 #x0000000000000003))
(assert (= temp18_68
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp18_72)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp18_73))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp18_71)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp18_70))))
(assert (= temp18_74 #x0000000000000002))
(assert (= temp18_75 #x0000000000000003))
(assert (= temp18_76 #x0000000000000003))
(assert (= temp18_69 (ite (= temp18_68 temp18_76) temp18_75 temp18_74)))
(assert (= temp18_78 #x0000000000000001))
(assert (= temp18_79 #x0000000000000005))
(assert (= temp18_80 #x0000000000000001))
(assert (= temp18_81 #x0000000000000001))
(assert (= temp18_82 #x0000000000000002))
(assert (= temp18_67
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp18_81)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp18_82))
        temp18_80
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp18_79)
             temp18_69
             (bvadd temp18_69 temp18_78)))))
(assert (= temp18_83 (select ARGNAME_strides_NAMEEND_VAL temp18_67)))
(assert (= var66390 temp18_83))
(assert (= var66392 var66379))
(assert (= var66393 (ite (= var66392 var66385) #x0000000000000001 #x0000000000000000)))
(assert (= temp18_84 #x0000000000000001))
(assert (= var66393 temp18_84))
(assert (= temp18_85 #x0000000000000001))
(assert (= var66433 (ite (= var66387 temp18_85) #x0000000000000001 #x0000000000000000)))
(assert (= temp18_86 #x0000000000000001))
(assert (= var66435 (ite (= var66390 temp18_86) #x0000000000000001 #x0000000000000000)))
(assert (= var66436 (bvand var66433 var66435)))
(assert (= temp18_87 #x0000000000000001))
(assert (= var66436 temp18_87))
(assert (= temp18_88 #x0000000000000004))
(assert (= var139334 temp18_88))
(assert (= temp18_89 #x0000000000000003))
(assert (= var139340
   (ite (= ARGNAME_padding_NAMEEND temp18_89)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp18_90 #x0000000000000001))
(assert (= var139340 temp18_90))
(assert (= temp18_91 #x0000000000000001))
(assert (= var139344 (bvshl var139334 temp18_91)))
(assert (= var139345
   (ite (= var139344 ARGNAME_explicit_paddings_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp18_92 #x0000000000000001))
(assert (= var139345 temp18_92))
(assert (= temp18_93 #x0000000000000000))
(assert (= var139377
   (ite (bvslt ARGNAME_explicit_paddings_NAMEEND_ITERATOR_VAL temp18_93)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp18_94 #x0000000000000000))
(assert (= var139377 temp18_94))
(assert (= temp18_95 #x0000000000000000))
(assert (= var139383 temp18_95))
(assert (= temp18_96 #x0000000000000000))
(assert (= var139384
   (ite (= var139383 temp18_96) #x0000000000000001 #x0000000000000000)))
(assert (= temp18_98 #x0000000000000002))
(assert (= var139391 temp18_98))
(assert (= temp18_99 #x0000000000000002))
(assert (= var139394
   (ite (= var139391 temp18_99) #x0000000000000001 #x0000000000000000)))
(assert (= temp18_100 #x0000000000000001))
(assert (= var139394 temp18_100))
(assert (= var205161 var139334))
(assert (= temp18_101 #x0000000000000000))
(assert (= temp18_102 #x0000000000000001))
(assert (= temp18_103 #x0000000000000002))
(assert (= temp18_104 #x0000000000000003))
(assert (or false
    (= ARGNAME_data_format_NAMEEND_STRFMT temp18_101)
    (= ARGNAME_data_format_NAMEEND_STRFMT temp18_102)
    (= ARGNAME_data_format_NAMEEND_STRFMT temp18_103)
    (= ARGNAME_data_format_NAMEEND_STRFMT temp18_104)))
(assert (= temp18_105 #x0000000000000000))
(assert (= var205185 temp18_105))
(assert (= var205160 var205185))
(assert (= var139396 var205160))
(assert (= var270725 var139334))
(assert (= temp18_106 #x0000000000000003))
(assert (= temp18_107 #x0000000000000005))
(assert (or false
    (= ARGNAME_data_format_NAMEEND_STRFMT temp18_106)
    (= ARGNAME_data_format_NAMEEND_STRFMT temp18_107)))
(assert (= temp18_108 #xfffffffffffffffe))
(assert (= var270733 (bvadd var270725 temp18_108)))
(assert (= var270748 var270733))
(assert (= var270724 var270748))
(assert (= var139399 var270724))
(assert (= temp18_109 #x0000000000000001))
(assert (= var139402 (bvshl var139396 temp18_109)))
(assert (= var139403 var139402))
(assert (= temp18_110 #x0000000000000000))
(assert (= temp18_111 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp18_110)))
(assert (= temp18_112 #x0000000000000001))
(assert (= temp18_113 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp18_112)))
(assert (= temp18_114 #x0000000000000002))
(assert (= temp18_115 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp18_114)))
(assert (= temp18_116 #x0000000000000003))
(assert (= temp18_117 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp18_116)))
(assert (= temp18_118 #x0000000000000004))
(assert (= temp18_119 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp18_118)))
(assert (= temp18_120 #x0000000000000005))
(assert (= temp18_121 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp18_120)))
(assert (= temp18_123 (select ARGNAME_explicit_paddings_NAMEEND_VAL var139403)))
(assert (= temp18_122 temp18_123))
(assert (= temp18_124 #x0000000000000000))
(assert (= var139406
   (ite (= temp18_122 temp18_124) #x0000000000000001 #x0000000000000000)))
(assert (= temp18_125 #x0000000000000001))
(assert (= var139406 temp18_125))
(assert (= temp18_126 #x0000000000000001))
(assert (= var139408 (bvor var139402 temp18_126)))
(assert (= var139409 var139408))
(assert (= temp18_128 (select ARGNAME_explicit_paddings_NAMEEND_VAL var139409)))
(assert (= temp18_127 temp18_128))
(assert (= temp18_129 #x0000000000000000))
(assert (= var139412
   (ite (= temp18_127 temp18_129) #x0000000000000001 #x0000000000000000)))
(assert (= temp18_130 #x0000000000000001))
(assert (= var139412 temp18_130))
(assert (= temp18_131 #x0000000000000001))
(assert (= var139414 (bvshl var139399 temp18_131)))
(assert (= var139415 var139414))
(assert (= temp18_133 (select ARGNAME_explicit_paddings_NAMEEND_VAL var139415)))
(assert (= temp18_132 temp18_133))
(assert (= temp18_134 #x0000000000000000))
(assert (= var139418
   (ite (= temp18_132 temp18_134) #x0000000000000001 #x0000000000000000)))
(assert (= temp18_135 #x0000000000000001))
(assert (= var139418 temp18_135))
(assert (= temp18_136 #x0000000000000001))
(assert (= var139420 (bvor var139414 temp18_136)))
(assert (= var139421 var139420))
(assert (= temp18_138 (select ARGNAME_explicit_paddings_NAMEEND_VAL var139421)))
(assert (= temp18_137 temp18_138))
(assert (= temp18_139 #x0000000000000000))
(assert (= var139424
   (ite (= temp18_137 temp18_139) #x0000000000000001 #x0000000000000000)))
(assert (= temp18_140 #x0000000000000001))
(assert (= var139424 temp18_140))
(assert (= temp18_141 #x0000000000000000))
(assert (= var139429 temp18_141))
(model-add temp18_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp18_2 () (_ BitVec 64) #x0000000000000001)
(model-add var66254 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_strides_NAMEEND_LEN
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))



























