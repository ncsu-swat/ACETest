(declare-fun temp19_1 () (_ BitVec 64))
(declare-fun temp19_2 () (_ BitVec 64))
(declare-fun var66254 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_strides_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp19_3 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp19_4 () (_ BitVec 64))
(declare-fun temp19_5 () (_ BitVec 64))
(declare-fun temp19_6 () (_ BitVec 64))
(declare-fun temp19_7 () (_ BitVec 64))
(declare-fun temp19_8 () (_ BitVec 64))
(declare-fun temp19_9 () (_ BitVec 64))
(declare-fun temp19_10 () (_ BitVec 64))
(declare-fun temp19_11 () (_ BitVec 64))
(declare-fun temp19_12 () (_ BitVec 64))
(declare-fun temp19_13 () (_ BitVec 64))
(declare-fun temp19_14 () (_ BitVec 64))
(declare-fun temp19_18 () (_ BitVec 64))
(declare-fun temp19_19 () (_ BitVec 64))
(declare-fun temp19_20 () (_ BitVec 64))
(declare-fun temp19_21 () (_ BitVec 64))
(declare-fun temp19_16 () (_ BitVec 64))
(declare-fun temp19_22 () (_ BitVec 64))
(declare-fun temp19_23 () (_ BitVec 64))
(declare-fun temp19_24 () (_ BitVec 64))
(declare-fun temp19_17 () (_ BitVec 64))
(declare-fun temp19_26 () (_ BitVec 64))
(declare-fun temp19_27 () (_ BitVec 64))
(declare-fun temp19_28 () (_ BitVec 64))
(declare-fun temp19_29 () (_ BitVec 64))
(declare-fun temp19_30 () (_ BitVec 64))
(declare-fun temp19_31 () (_ BitVec 64))
(declare-fun temp19_15 () (_ BitVec 64))
(declare-fun temp19_32 () (_ BitVec 64))
(declare-fun var66375 () (_ BitVec 64))
(declare-fun var66379 () (_ BitVec 64))
(declare-fun temp19_36 () (_ BitVec 64))
(declare-fun temp19_37 () (_ BitVec 64))
(declare-fun temp19_38 () (_ BitVec 64))
(declare-fun temp19_39 () (_ BitVec 64))
(declare-fun temp19_34 () (_ BitVec 64))
(declare-fun temp19_40 () (_ BitVec 64))
(declare-fun temp19_41 () (_ BitVec 64))
(declare-fun temp19_42 () (_ BitVec 64))
(declare-fun temp19_35 () (_ BitVec 64))
(declare-fun temp19_44 () (_ BitVec 64))
(declare-fun temp19_45 () (_ BitVec 64))
(declare-fun temp19_46 () (_ BitVec 64))
(declare-fun temp19_47 () (_ BitVec 64))
(declare-fun temp19_48 () (_ BitVec 64))
(declare-fun temp19_49 () (_ BitVec 64))
(declare-fun temp19_33 () (_ BitVec 64))
(declare-fun temp19_50 () (_ BitVec 64))
(declare-fun var66383 () (_ BitVec 64))
(declare-fun var66385 () (_ BitVec 64))
(declare-fun temp19_54 () (_ BitVec 64))
(declare-fun temp19_55 () (_ BitVec 64))
(declare-fun temp19_56 () (_ BitVec 64))
(declare-fun temp19_57 () (_ BitVec 64))
(declare-fun temp19_52 () (_ BitVec 64))
(declare-fun temp19_58 () (_ BitVec 64))
(declare-fun temp19_59 () (_ BitVec 64))
(declare-fun temp19_60 () (_ BitVec 64))
(declare-fun temp19_53 () (_ BitVec 64))
(declare-fun temp19_62 () (_ BitVec 64))
(declare-fun temp19_63 () (_ BitVec 64))
(declare-fun temp19_64 () (_ BitVec 64))
(declare-fun temp19_65 () (_ BitVec 64))
(declare-fun temp19_51 () (_ BitVec 64))
(declare-fun temp19_66 () (_ BitVec 64))
(declare-fun var66387 () (_ BitVec 64))
(declare-fun temp19_70 () (_ BitVec 64))
(declare-fun temp19_71 () (_ BitVec 64))
(declare-fun temp19_72 () (_ BitVec 64))
(declare-fun temp19_73 () (_ BitVec 64))
(declare-fun temp19_68 () (_ BitVec 64))
(declare-fun temp19_74 () (_ BitVec 64))
(declare-fun temp19_75 () (_ BitVec 64))
(declare-fun temp19_76 () (_ BitVec 64))
(declare-fun temp19_69 () (_ BitVec 64))
(declare-fun temp19_78 () (_ BitVec 64))
(declare-fun temp19_79 () (_ BitVec 64))
(declare-fun temp19_80 () (_ BitVec 64))
(declare-fun temp19_81 () (_ BitVec 64))
(declare-fun temp19_82 () (_ BitVec 64))
(declare-fun temp19_67 () (_ BitVec 64))
(declare-fun temp19_83 () (_ BitVec 64))
(declare-fun var66390 () (_ BitVec 64))
(declare-fun var66392 () (_ BitVec 64))
(declare-fun var66393 () (_ BitVec 64))
(declare-fun temp19_84 () (_ BitVec 64))
(declare-fun temp19_85 () (_ BitVec 64))
(declare-fun var66433 () (_ BitVec 64))
(declare-fun temp19_86 () (_ BitVec 64))
(declare-fun var66435 () (_ BitVec 64))
(declare-fun var66436 () (_ BitVec 64))
(declare-fun temp19_87 () (_ BitVec 64))
(declare-fun temp19_88 () (_ BitVec 64))
(declare-fun var139334 () (_ BitVec 64))
(declare-fun temp19_89 () (_ BitVec 64))
(declare-fun var139340 () (_ BitVec 64))
(declare-fun temp19_90 () (_ BitVec 64))
(declare-fun temp19_91 () (_ BitVec 64))
(declare-fun var139344 () (_ BitVec 64))
(declare-fun ARGNAME_explicit_paddings_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var139345 () (_ BitVec 64))
(declare-fun temp19_92 () (_ BitVec 64))
(declare-fun temp19_93 () (_ BitVec 64))
(declare-fun ARGNAME_explicit_paddings_NAMEEND_ITERATOR_VAL () (_ BitVec 64))
(declare-fun var139377 () (_ BitVec 64))
(declare-fun temp19_94 () (_ BitVec 64))
(declare-fun temp19_95 () (_ BitVec 64))
(declare-fun var139383 () (_ BitVec 64))
(declare-fun temp19_96 () (_ BitVec 64))
(declare-fun var139384 () (_ BitVec 64))
(declare-fun temp19_98 () (_ BitVec 64))
(declare-fun var139391 () (_ BitVec 64))
(declare-fun temp19_99 () (_ BitVec 64))
(declare-fun var139394 () (_ BitVec 64))
(declare-fun temp19_100 () (_ BitVec 64))
(declare-fun var205161 () (_ BitVec 64))
(declare-fun temp19_101 () (_ BitVec 64))
(declare-fun temp19_102 () (_ BitVec 64))
(declare-fun temp19_103 () (_ BitVec 64))
(declare-fun temp19_104 () (_ BitVec 64))
(declare-fun temp19_105 () (_ BitVec 64))
(declare-fun var205185 () (_ BitVec 64))
(declare-fun var205160 () (_ BitVec 64))
(declare-fun var139396 () (_ BitVec 64))
(declare-fun var270725 () (_ BitVec 64))
(declare-fun temp19_106 () (_ BitVec 64))
(declare-fun temp19_107 () (_ BitVec 64))
(declare-fun temp19_108 () (_ BitVec 64))
(declare-fun var270748 () (_ BitVec 64))
(declare-fun var270724 () (_ BitVec 64))
(declare-fun var139399 () (_ BitVec 64))
(declare-fun temp19_109 () (_ BitVec 64))
(declare-fun var139402 () (_ BitVec 64))
(declare-fun var139403 () (_ BitVec 64))
(declare-fun temp19_110 () (_ BitVec 64))
(declare-fun ARGNAME_explicit_paddings_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp19_111 () (_ BitVec 64))
(declare-fun temp19_112 () (_ BitVec 64))
(declare-fun temp19_113 () (_ BitVec 64))
(declare-fun temp19_114 () (_ BitVec 64))
(declare-fun temp19_115 () (_ BitVec 64))
(declare-fun temp19_116 () (_ BitVec 64))
(declare-fun temp19_117 () (_ BitVec 64))
(declare-fun temp19_118 () (_ BitVec 64))
(declare-fun temp19_119 () (_ BitVec 64))
(declare-fun temp19_120 () (_ BitVec 64))
(declare-fun temp19_121 () (_ BitVec 64))
(declare-fun temp19_123 () (_ BitVec 64))
(declare-fun temp19_122 () (_ BitVec 64))
(declare-fun temp19_124 () (_ BitVec 64))
(declare-fun var139406 () (_ BitVec 64))
(declare-fun temp19_125 () (_ BitVec 64))
(declare-fun temp19_126 () (_ BitVec 64))
(declare-fun var139408 () (_ BitVec 64))
(declare-fun var139409 () (_ BitVec 64))
(declare-fun temp19_128 () (_ BitVec 64))
(declare-fun temp19_127 () (_ BitVec 64))
(declare-fun temp19_129 () (_ BitVec 64))
(declare-fun var139412 () (_ BitVec 64))
(declare-fun temp19_130 () (_ BitVec 64))
(declare-fun temp19_131 () (_ BitVec 64))
(declare-fun var139414 () (_ BitVec 64))
(declare-fun var139415 () (_ BitVec 64))
(declare-fun temp19_133 () (_ BitVec 64))
(declare-fun temp19_132 () (_ BitVec 64))
(declare-fun temp19_134 () (_ BitVec 64))
(declare-fun var139418 () (_ BitVec 64))
(declare-fun temp19_135 () (_ BitVec 64))
(declare-fun temp19_136 () (_ BitVec 64))
(declare-fun var139420 () (_ BitVec 64))
(declare-fun var139421 () (_ BitVec 64))
(declare-fun temp19_138 () (_ BitVec 64))
(declare-fun temp19_137 () (_ BitVec 64))
(declare-fun temp19_139 () (_ BitVec 64))
(declare-fun var139424 () (_ BitVec 64))
(declare-fun temp19_140 () (_ BitVec 64))
(declare-fun temp19_141 () (_ BitVec 64))
(declare-fun var139429 () (_ BitVec 64))
(assert (or (= ARGNAME_padding_NAMEEND #x0000000000000001)
    (= ARGNAME_padding_NAMEEND #x0000000000000002)
    (= ARGNAME_padding_NAMEEND #x0000000000000003)))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp19_1 #x0000000000000004))
(assert (= var66254
   (ite (= ARGNAME_strides_NAMEEND_LEN temp19_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp19_2 #x0000000000000001))
(assert (= var66254 temp19_2))
(assert (= temp19_3 #x0000000000000000))
(assert (= temp19_4 (select ARGNAME_strides_NAMEEND_VAL temp19_3)))
(assert (= temp19_5 #x0000000000000001))
(assert (= temp19_6 (select ARGNAME_strides_NAMEEND_VAL temp19_5)))
(assert (= temp19_7 #x0000000000000002))
(assert (= temp19_8 (select ARGNAME_strides_NAMEEND_VAL temp19_7)))
(assert (= temp19_9 #x0000000000000003))
(assert (= temp19_10 (select ARGNAME_strides_NAMEEND_VAL temp19_9)))
(assert (= temp19_11 #x0000000000000004))
(assert (= temp19_12 (select ARGNAME_strides_NAMEEND_VAL temp19_11)))
(assert (= temp19_13 #x0000000000000005))
(assert (= temp19_14 (select ARGNAME_strides_NAMEEND_VAL temp19_13)))
(assert (= temp19_18 #x0000000000000002))
(assert (= temp19_19 #x0000000000000003))
(assert (= temp19_20 #x0000000000000002))
(assert (= temp19_21 #x0000000000000003))
(assert (= temp19_16
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp19_20)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp19_21))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp19_19)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp19_18))))
(assert (= temp19_22 #x0000000000000002))
(assert (= temp19_23 #x0000000000000003))
(assert (= temp19_24 #x0000000000000003))
(assert (= temp19_17 (ite (= temp19_16 temp19_24) temp19_23 temp19_22)))
(assert (= temp19_26 #x0000000000000002))
(assert (= temp19_27 #x0000000000000001))
(assert (= temp19_28 #x0000000000000002))
(assert (= temp19_29 #x0000000000000001))
(assert (= temp19_30 #x0000000000000000))
(assert (= temp19_31 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp19_30)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp19_31))
                (bvsub temp19_17 temp19_29)
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp19_27)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp19_28))
                     temp19_17
                     (bvsub temp19_17 temp19_26)))))
  (= temp19_15 a!1)))
(assert (= temp19_32 (select ARGNAME_strides_NAMEEND_VAL temp19_15)))
(assert (= var66375 temp19_32))
(assert (= var66379 var66375))
(assert (= temp19_36 #x0000000000000002))
(assert (= temp19_37 #x0000000000000003))
(assert (= temp19_38 #x0000000000000002))
(assert (= temp19_39 #x0000000000000003))
(assert (= temp19_34
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp19_38)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp19_39))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp19_37)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp19_36))))
(assert (= temp19_40 #x0000000000000002))
(assert (= temp19_41 #x0000000000000003))
(assert (= temp19_42 #x0000000000000003))
(assert (= temp19_35 (ite (= temp19_34 temp19_42) temp19_41 temp19_40)))
(assert (= temp19_44 #x0000000000000001))
(assert (= temp19_45 #x0000000000000001))
(assert (= temp19_46 #x0000000000000001))
(assert (= temp19_47 #x0000000000000002))
(assert (= temp19_48 #x0000000000000000))
(assert (= temp19_49 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp19_48)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp19_49))
                temp19_35
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp19_46)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp19_47))
                     (bvadd temp19_35 temp19_45)
                     (bvsub temp19_35 temp19_44)))))
  (= temp19_33 a!1)))
(assert (= temp19_50 (select ARGNAME_strides_NAMEEND_VAL temp19_33)))
(assert (= var66383 temp19_50))
(assert (= var66385 var66383))
(assert (= temp19_54 #x0000000000000002))
(assert (= temp19_55 #x0000000000000003))
(assert (= temp19_56 #x0000000000000002))
(assert (= temp19_57 #x0000000000000003))
(assert (= temp19_52
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp19_56)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp19_57))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp19_55)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp19_54))))
(assert (= temp19_58 #x0000000000000002))
(assert (= temp19_59 #x0000000000000003))
(assert (= temp19_60 #x0000000000000003))
(assert (= temp19_53 (ite (= temp19_52 temp19_60) temp19_59 temp19_58)))
(assert (= temp19_62 #x0000000000000000))
(assert (= temp19_63 #x0000000000000001))
(assert (= temp19_64 #x0000000000000005))
(assert (= temp19_65 #x0000000000000004))
(assert (= temp19_51
   (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp19_65)
        temp19_53
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp19_64)
             (bvadd temp19_53 temp19_63)
             temp19_62))))
(assert (= temp19_66 (select ARGNAME_strides_NAMEEND_VAL temp19_51)))
(assert (= var66387 temp19_66))
(assert (= temp19_70 #x0000000000000002))
(assert (= temp19_71 #x0000000000000003))
(assert (= temp19_72 #x0000000000000002))
(assert (= temp19_73 #x0000000000000003))
(assert (= temp19_68
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp19_72)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp19_73))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp19_71)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp19_70))))
(assert (= temp19_74 #x0000000000000002))
(assert (= temp19_75 #x0000000000000003))
(assert (= temp19_76 #x0000000000000003))
(assert (= temp19_69 (ite (= temp19_68 temp19_76) temp19_75 temp19_74)))
(assert (= temp19_78 #x0000000000000001))
(assert (= temp19_79 #x0000000000000005))
(assert (= temp19_80 #x0000000000000001))
(assert (= temp19_81 #x0000000000000001))
(assert (= temp19_82 #x0000000000000002))
(assert (= temp19_67
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp19_81)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp19_82))
        temp19_80
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp19_79)
             temp19_69
             (bvadd temp19_69 temp19_78)))))
(assert (= temp19_83 (select ARGNAME_strides_NAMEEND_VAL temp19_67)))
(assert (= var66390 temp19_83))
(assert (= var66392 var66379))
(assert (= var66393 (ite (= var66392 var66385) #x0000000000000001 #x0000000000000000)))
(assert (= temp19_84 #x0000000000000001))
(assert (= var66393 temp19_84))
(assert (= temp19_85 #x0000000000000001))
(assert (= var66433 (ite (= var66387 temp19_85) #x0000000000000001 #x0000000000000000)))
(assert (= temp19_86 #x0000000000000001))
(assert (= var66435 (ite (= var66390 temp19_86) #x0000000000000001 #x0000000000000000)))
(assert (= var66436 (bvand var66433 var66435)))
(assert (= temp19_87 #x0000000000000001))
(assert (= var66436 temp19_87))
(assert (= temp19_88 #x0000000000000004))
(assert (= var139334 temp19_88))
(assert (= temp19_89 #x0000000000000003))
(assert (= var139340
   (ite (= ARGNAME_padding_NAMEEND temp19_89)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp19_90 #x0000000000000001))
(assert (= var139340 temp19_90))
(assert (= temp19_91 #x0000000000000001))
(assert (= var139344 (bvshl var139334 temp19_91)))
(assert (= var139345
   (ite (= var139344 ARGNAME_explicit_paddings_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp19_92 #x0000000000000001))
(assert (= var139345 temp19_92))
(assert (= temp19_93 #x0000000000000000))
(assert (= var139377
   (ite (bvslt ARGNAME_explicit_paddings_NAMEEND_ITERATOR_VAL temp19_93)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp19_94 #x0000000000000000))
(assert (= var139377 temp19_94))
(assert (= temp19_95 #x0000000000000000))
(assert (= var139383 temp19_95))
(assert (= temp19_96 #x0000000000000000))
(assert (= var139384
   (ite (= var139383 temp19_96) #x0000000000000001 #x0000000000000000)))
(assert (= temp19_98 #x0000000000000002))
(assert (= var139391 temp19_98))
(assert (= temp19_99 #x0000000000000002))
(assert (= var139394
   (ite (= var139391 temp19_99) #x0000000000000001 #x0000000000000000)))
(assert (= temp19_100 #x0000000000000001))
(assert (= var139394 temp19_100))
(assert (= var205161 var139334))
(assert (= temp19_101 #x0000000000000000))
(assert (= temp19_102 #x0000000000000001))
(assert (= temp19_103 #x0000000000000002))
(assert (= temp19_104 #x0000000000000003))
(assert (or false
    (= ARGNAME_data_format_NAMEEND_STRFMT temp19_101)
    (= ARGNAME_data_format_NAMEEND_STRFMT temp19_102)
    (= ARGNAME_data_format_NAMEEND_STRFMT temp19_103)
    (= ARGNAME_data_format_NAMEEND_STRFMT temp19_104)))
(assert (= temp19_105 #x0000000000000000))
(assert (= var205185 temp19_105))
(assert (= var205160 var205185))
(assert (= var139396 var205160))
(assert (= var270725 var139334))
(assert (= temp19_106 #x0000000000000001))
(assert (= temp19_107 #x0000000000000002))
(assert (or false
    (= ARGNAME_data_format_NAMEEND_STRFMT temp19_106)
    (= ARGNAME_data_format_NAMEEND_STRFMT temp19_107)))
(assert (= temp19_108 #x0000000000000001))
(assert (= var270748 temp19_108))
(assert (= var270724 var270748))
(assert (= var139399 var270724))
(assert (= temp19_109 #x0000000000000001))
(assert (= var139402 (bvshl var139396 temp19_109)))
(assert (= var139403 var139402))
(assert (= temp19_110 #x0000000000000000))
(assert (= temp19_111 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp19_110)))
(assert (= temp19_112 #x0000000000000001))
(assert (= temp19_113 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp19_112)))
(assert (= temp19_114 #x0000000000000002))
(assert (= temp19_115 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp19_114)))
(assert (= temp19_116 #x0000000000000003))
(assert (= temp19_117 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp19_116)))
(assert (= temp19_118 #x0000000000000004))
(assert (= temp19_119 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp19_118)))
(assert (= temp19_120 #x0000000000000005))
(assert (= temp19_121 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp19_120)))
(assert (= temp19_123 (select ARGNAME_explicit_paddings_NAMEEND_VAL var139403)))
(assert (= temp19_122 temp19_123))
(assert (= temp19_124 #x0000000000000000))
(assert (= var139406
   (ite (= temp19_122 temp19_124) #x0000000000000001 #x0000000000000000)))
(assert (= temp19_125 #x0000000000000001))
(assert (= var139406 temp19_125))
(assert (= temp19_126 #x0000000000000001))
(assert (= var139408 (bvor var139402 temp19_126)))
(assert (= var139409 var139408))
(assert (= temp19_128 (select ARGNAME_explicit_paddings_NAMEEND_VAL var139409)))
(assert (= temp19_127 temp19_128))
(assert (= temp19_129 #x0000000000000000))
(assert (= var139412
   (ite (= temp19_127 temp19_129) #x0000000000000001 #x0000000000000000)))
(assert (= temp19_130 #x0000000000000001))
(assert (= var139412 temp19_130))
(assert (= temp19_131 #x0000000000000001))
(assert (= var139414 (bvshl var139399 temp19_131)))
(assert (= var139415 var139414))
(assert (= temp19_133 (select ARGNAME_explicit_paddings_NAMEEND_VAL var139415)))
(assert (= temp19_132 temp19_133))
(assert (= temp19_134 #x0000000000000000))
(assert (= var139418
   (ite (= temp19_132 temp19_134) #x0000000000000001 #x0000000000000000)))
(assert (= temp19_135 #x0000000000000001))
(assert (= var139418 temp19_135))
(assert (= temp19_136 #x0000000000000001))
(assert (= var139420 (bvor var139414 temp19_136)))
(assert (= var139421 var139420))
(assert (= temp19_138 (select ARGNAME_explicit_paddings_NAMEEND_VAL var139421)))
(assert (= temp19_137 temp19_138))
(assert (= temp19_139 #x0000000000000000))
(assert (= var139424
   (ite (= temp19_137 temp19_139) #x0000000000000001 #x0000000000000000)))
(assert (= temp19_140 #x0000000000000001))
(assert (= var139424 temp19_140))
(assert (= temp19_141 #x0000000000000000))
(assert (= var139429 temp19_141))
(model-add temp19_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp19_2 () (_ BitVec 64) #x0000000000000001)
(model-add var66254 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_strides_NAMEEND_LEN
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))



























