(declare-fun temp2681_1 () (_ BitVec 64))
(declare-fun var135042 () (_ BitVec 64))
(declare-fun var135038 () (_ BitVec 64))
(declare-fun temp2681_2 () (_ BitVec 64))
(declare-fun var68277 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_sizes_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp2681_3 () (_ BitVec 64))
(declare-fun var68332 () (_ BitVec 64))
(declare-fun ARGNAME_filter_sizes_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var68337 () (_ BitVec 64))
(declare-fun temp2681_5 () (_ BitVec 64))
(declare-fun var68423 () (_ BitVec 64))
(declare-fun temp2681_6 () (_ BitVec 64))
(declare-fun var68424 () (_ BitVec 64))
(declare-fun temp2681_7 () (_ BitVec 64))
(declare-fun temp2681_8 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var68432 () (_ BitVec 64))
(declare-fun temp2681_9 () (_ BitVec 64))
(declare-fun temp2681_10 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var68499 () (_ BitVec 64))
(declare-fun temp2681_11 () (_ BitVec 64))
(declare-fun temp2681_12 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp2681_13 () (_ BitVec 64))
(declare-fun temp2681_14 () (_ BitVec 64))
(declare-fun temp2681_15 () (_ BitVec 64))
(declare-fun temp2681_16 () (_ BitVec 64))
(declare-fun temp2681_17 () (_ BitVec 64))
(declare-fun temp2681_18 () (_ BitVec 64))
(declare-fun temp2681_19 () (_ BitVec 64))
(declare-fun temp2681_20 () (_ BitVec 64))
(declare-fun temp2681_21 () (_ BitVec 64))
(declare-fun temp2681_22 () (_ BitVec 64))
(declare-fun temp2681_23 () (_ BitVec 64))
(declare-fun temp2681_24 () (_ BitVec 64))
(declare-fun temp2681_25 () (_ BitVec 64))
(declare-fun var68527 () (_ BitVec 64))
(declare-fun temp2681_26 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp2681_27 () (_ BitVec 64))
(declare-fun temp2681_28 () (_ BitVec 64))
(declare-fun temp2681_29 () (_ BitVec 64))
(declare-fun temp2681_30 () (_ BitVec 64))
(declare-fun temp2681_31 () (_ BitVec 64))
(declare-fun temp2681_32 () (_ BitVec 64))
(declare-fun temp2681_33 () (_ BitVec 64))
(declare-fun temp2681_34 () (_ BitVec 64))
(declare-fun temp2681_35 () (_ BitVec 64))
(declare-fun temp2681_36 () (_ BitVec 64))
(declare-fun temp2681_37 () (_ BitVec 64))
(declare-fun temp2681_38 () (_ BitVec 64))
(declare-fun temp2681_39 () (_ BitVec 64))
(declare-fun var68530 () (_ BitVec 64))
(declare-fun var68533 () (_ BitVec 64))
(declare-fun temp2681_40 () (_ BitVec 64))
(declare-fun temp2681_44 () (_ BitVec 64))
(declare-fun temp2681_45 () (_ BitVec 64))
(declare-fun temp2681_46 () (_ BitVec 64))
(declare-fun temp2681_47 () (_ BitVec 64))
(declare-fun temp2681_42 () (_ BitVec 64))
(declare-fun temp2681_48 () (_ BitVec 64))
(declare-fun temp2681_49 () (_ BitVec 64))
(declare-fun temp2681_50 () (_ BitVec 64))
(declare-fun temp2681_43 () (_ BitVec 64))
(declare-fun temp2681_52 () (_ BitVec 64))
(declare-fun temp2681_53 () (_ BitVec 64))
(declare-fun temp2681_54 () (_ BitVec 64))
(declare-fun temp2681_55 () (_ BitVec 64))
(declare-fun temp2681_56 () (_ BitVec 64))
(declare-fun temp2681_57 () (_ BitVec 64))
(declare-fun temp2681_41 () (_ BitVec 64))
(declare-fun temp2681_58 () (_ BitVec 64))
(declare-fun var68567 () (_ BitVec 64))
(declare-fun temp2681_59 () (_ BitVec 64))
(declare-fun var200952 () (_ BitVec 64))
(declare-fun var68570 () (_ BitVec 64))
(declare-fun var68573 () (_ BitVec 64))
(declare-fun var68574 () (_ BitVec 64))
(declare-fun temp2681_60 () (_ BitVec 64))
(declare-fun var68605 () (_ BitVec 64))
(declare-fun temp2681_64 () (_ BitVec 64))
(declare-fun temp2681_65 () (_ BitVec 64))
(declare-fun temp2681_66 () (_ BitVec 64))
(declare-fun temp2681_67 () (_ BitVec 64))
(declare-fun temp2681_62 () (_ BitVec 64))
(declare-fun temp2681_68 () (_ BitVec 64))
(declare-fun temp2681_69 () (_ BitVec 64))
(declare-fun temp2681_70 () (_ BitVec 64))
(declare-fun temp2681_63 () (_ BitVec 64))
(declare-fun temp2681_72 () (_ BitVec 64))
(declare-fun temp2681_73 () (_ BitVec 64))
(declare-fun temp2681_74 () (_ BitVec 64))
(declare-fun temp2681_75 () (_ BitVec 64))
(declare-fun temp2681_76 () (_ BitVec 64))
(declare-fun temp2681_77 () (_ BitVec 64))
(declare-fun temp2681_61 () (_ BitVec 64))
(declare-fun temp2681_78 () (_ BitVec 64))
(declare-fun var68607 () (_ BitVec 64))
(declare-fun temp2681_79 () (_ BitVec 64))
(declare-fun var266488 () (_ BitVec 64))
(declare-fun var68608 () (_ BitVec 64))
(declare-fun var68609 () (_ BitVec 64))
(declare-fun var68610 () (_ BitVec 64))
(declare-fun temp2681_80 () (_ BitVec 64))
(declare-fun var68641 () (_ BitVec 64))
(declare-fun temp2681_84 () (_ BitVec 64))
(declare-fun temp2681_85 () (_ BitVec 64))
(declare-fun temp2681_86 () (_ BitVec 64))
(declare-fun temp2681_87 () (_ BitVec 64))
(declare-fun temp2681_82 () (_ BitVec 64))
(declare-fun temp2681_88 () (_ BitVec 64))
(declare-fun temp2681_89 () (_ BitVec 64))
(declare-fun temp2681_90 () (_ BitVec 64))
(declare-fun temp2681_83 () (_ BitVec 64))
(declare-fun temp2681_92 () (_ BitVec 64))
(declare-fun temp2681_93 () (_ BitVec 64))
(declare-fun temp2681_94 () (_ BitVec 64))
(declare-fun temp2681_95 () (_ BitVec 64))
(declare-fun temp2681_96 () (_ BitVec 64))
(declare-fun temp2681_97 () (_ BitVec 64))
(declare-fun temp2681_81 () (_ BitVec 64))
(declare-fun temp2681_98 () (_ BitVec 64))
(declare-fun var68646 () (_ BitVec 64))
(declare-fun temp2681_99 () (_ BitVec 64))
(declare-fun var332024 () (_ BitVec 64))
(declare-fun var68647 () (_ BitVec 64))
(declare-fun var68648 () (_ BitVec 64))
(declare-fun var68649 () (_ BitVec 64))
(declare-fun temp2681_100 () (_ BitVec 64))
(declare-fun var68688 () (_ BitVec 64))
(declare-fun temp2681_104 () (_ BitVec 64))
(declare-fun temp2681_105 () (_ BitVec 64))
(declare-fun temp2681_106 () (_ BitVec 64))
(declare-fun temp2681_107 () (_ BitVec 64))
(declare-fun temp2681_102 () (_ BitVec 64))
(declare-fun temp2681_108 () (_ BitVec 64))
(declare-fun temp2681_109 () (_ BitVec 64))
(declare-fun temp2681_110 () (_ BitVec 64))
(declare-fun temp2681_103 () (_ BitVec 64))
(declare-fun temp2681_112 () (_ BitVec 64))
(declare-fun temp2681_113 () (_ BitVec 64))
(declare-fun temp2681_114 () (_ BitVec 64))
(declare-fun temp2681_115 () (_ BitVec 64))
(declare-fun temp2681_116 () (_ BitVec 64))
(declare-fun temp2681_117 () (_ BitVec 64))
(declare-fun temp2681_101 () (_ BitVec 64))
(declare-fun temp2681_118 () (_ BitVec 64))
(declare-fun var68691 () (_ BitVec 64))
(declare-fun temp2681_119 () (_ BitVec 64))
(declare-fun var397560 () (_ BitVec 64))
(declare-fun var68692 () (_ BitVec 64))
(declare-fun var68693 () (_ BitVec 64))
(declare-fun var68694 () (_ BitVec 64))
(declare-fun temp2681_120 () (_ BitVec 64))
(declare-fun var68725 () (_ BitVec 64))
(declare-fun temp2681_124 () (_ BitVec 64))
(declare-fun temp2681_125 () (_ BitVec 64))
(declare-fun temp2681_126 () (_ BitVec 64))
(declare-fun temp2681_127 () (_ BitVec 64))
(declare-fun temp2681_122 () (_ BitVec 64))
(declare-fun temp2681_128 () (_ BitVec 64))
(declare-fun temp2681_129 () (_ BitVec 64))
(declare-fun temp2681_130 () (_ BitVec 64))
(declare-fun temp2681_123 () (_ BitVec 64))
(declare-fun temp2681_132 () (_ BitVec 64))
(declare-fun temp2681_133 () (_ BitVec 64))
(declare-fun temp2681_134 () (_ BitVec 64))
(declare-fun temp2681_135 () (_ BitVec 64))
(declare-fun temp2681_136 () (_ BitVec 64))
(declare-fun temp2681_121 () (_ BitVec 64))
(declare-fun temp2681_137 () (_ BitVec 64))
(declare-fun var68727 () (_ BitVec 64))
(declare-fun temp2681_141 () (_ BitVec 64))
(declare-fun temp2681_142 () (_ BitVec 64))
(declare-fun temp2681_143 () (_ BitVec 64))
(declare-fun temp2681_144 () (_ BitVec 64))
(declare-fun temp2681_139 () (_ BitVec 64))
(declare-fun temp2681_145 () (_ BitVec 64))
(declare-fun temp2681_146 () (_ BitVec 64))
(declare-fun temp2681_147 () (_ BitVec 64))
(declare-fun temp2681_140 () (_ BitVec 64))
(declare-fun temp2681_149 () (_ BitVec 64))
(declare-fun temp2681_150 () (_ BitVec 64))
(declare-fun temp2681_151 () (_ BitVec 64))
(declare-fun temp2681_152 () (_ BitVec 64))
(declare-fun temp2681_153 () (_ BitVec 64))
(declare-fun temp2681_138 () (_ BitVec 64))
(declare-fun temp2681_154 () (_ BitVec 64))
(declare-fun var68764 () (_ BitVec 64))
(declare-fun temp2681_155 () (_ BitVec 64))
(declare-fun var463096 () (_ BitVec 64))
(declare-fun var68765 () (_ BitVec 64))
(declare-fun var68766 () (_ BitVec 64))
(declare-fun var68767 () (_ BitVec 64))
(declare-fun temp2681_156 () (_ BitVec 64))
(declare-fun var68802 () (_ BitVec 64))
(declare-fun temp2681_157 () (_ BitVec 64))
(declare-fun var68804 () (_ BitVec 64))
(declare-fun temp2681_158 () (_ BitVec 64))
(declare-fun var68805 () (_ BitVec 64))
(declare-fun temp2681_160 () (_ BitVec 64))
(declare-fun temp2681_159 () (_ BitVec 64))
(declare-fun temp2681_162 () (_ BitVec 64))
(declare-fun temp2681_161 () (_ BitVec 64))
(declare-fun temp2681_164 () (_ BitVec 64))
(declare-fun temp2681_163 () (_ BitVec 64))
(declare-fun temp2681_166 () (_ BitVec 64))
(declare-fun temp2681_165 () (_ BitVec 64))
(declare-fun temp2681_168 () (_ BitVec 64))
(declare-fun temp2681_167 () (_ BitVec 64))
(declare-fun temp2681_170 () (_ BitVec 64))
(declare-fun temp2681_169 () (_ BitVec 64))
(declare-fun temp2681_171 () (_ BitVec 64))
(declare-fun var68861 () (_ BitVec 64))
(declare-fun temp2681_172 () (_ BitVec 64))
(declare-fun temp2681_173 () (_ BitVec 64))
(declare-fun var68877 () (_ BitVec 64))
(declare-fun temp2681_174 () (_ BitVec 64))
(declare-fun var68878 () (_ BitVec 64))
(declare-fun var533367 () (_ BitVec 64))
(declare-fun var598483 () (_ BitVec 64))
(declare-fun temp2681_175 () (_ BitVec 64))
(declare-fun var598485 () (_ BitVec 64))
(declare-fun temp2681_176 () (_ BitVec 64))
(declare-fun var598503 () (_ BitVec 64))
(declare-fun temp2681_177 () (_ BitVec 64))
(declare-fun temp2681_178 () (_ BitVec 64))
(declare-fun temp2681_179 () (_ BitVec 64))
(declare-fun var598531 () (_ BitVec 64))
(declare-fun temp2681_181 () (_ BitVec 64))
(declare-fun temp2681_180 () (_ BitVec 64))
(declare-fun temp2681_182 () (_ BitVec 64))
(declare-fun var598555 () (_ BitVec 64))
(declare-fun temp2681_183 () (_ BitVec 64))
(declare-fun temp2681_184 () (_ BitVec 64))
(declare-fun var68904 () (_ BitVec 64))
(declare-fun temp2681_185 () (_ BitVec 64))
(declare-fun var68905 () (_ BitVec 64))
(declare-fun var729975 () (_ BitVec 64))
(declare-fun var795091 () (_ BitVec 64))
(declare-fun temp2681_186 () (_ BitVec 64))
(declare-fun var795093 () (_ BitVec 64))
(declare-fun temp2681_187 () (_ BitVec 64))
(declare-fun var795111 () (_ BitVec 64))
(declare-fun temp2681_188 () (_ BitVec 64))
(declare-fun temp2681_189 () (_ BitVec 64))
(declare-fun temp2681_190 () (_ BitVec 64))
(declare-fun var795139 () (_ BitVec 64))
(declare-fun temp2681_192 () (_ BitVec 64))
(declare-fun temp2681_191 () (_ BitVec 64))
(declare-fun temp2681_193 () (_ BitVec 64))
(declare-fun var795163 () (_ BitVec 64))
(declare-fun temp2681_194 () (_ BitVec 64))
(declare-fun temp2681_195 () (_ BitVec 64))
(declare-fun var68931 () (_ BitVec 64))
(declare-fun temp2681_196 () (_ BitVec 64))
(declare-fun var68932 () (_ BitVec 64))
(declare-fun var68934 () (_ BitVec 64))
(declare-fun temp2681_197 () (_ BitVec 64))
(declare-fun temp2681_198 () (_ BitVec 64))
(declare-fun var68972 () (_ BitVec 64))
(declare-fun temp2681_199 () (_ BitVec 64))
(declare-fun var68973 () (_ BitVec 64))
(declare-fun var68975 () (_ BitVec 64))
(declare-fun temp2681_200 () (_ BitVec 64))
(declare-fun temp2681_202 () (_ BitVec 64))
(declare-fun temp2681_201 () (_ BitVec 64))
(declare-fun temp2681_204 () (_ BitVec 64))
(declare-fun temp2681_203 () (_ BitVec 64))
(declare-fun temp2681_206 () (_ BitVec 64))
(declare-fun temp2681_205 () (_ BitVec 64))
(declare-fun temp2681_208 () (_ BitVec 64))
(declare-fun temp2681_207 () (_ BitVec 64))
(declare-fun temp2681_210 () (_ BitVec 64))
(declare-fun temp2681_209 () (_ BitVec 64))
(declare-fun temp2681_212 () (_ BitVec 64))
(declare-fun temp2681_211 () (_ BitVec 64))
(declare-fun temp2681_214 () (_ BitVec 64))
(declare-fun temp2681_213 () (_ BitVec 64))
(declare-fun temp2681_216 () (_ BitVec 64))
(declare-fun temp2681_215 () (_ BitVec 64))
(declare-fun temp2681_218 () (_ BitVec 64))
(declare-fun temp2681_217 () (_ BitVec 64))
(declare-fun temp2681_220 () (_ BitVec 64))
(declare-fun temp2681_219 () (_ BitVec 64))
(declare-fun temp2681_222 () (_ BitVec 64))
(declare-fun temp2681_221 () (_ BitVec 64))
(declare-fun temp2681_224 () (_ BitVec 64))
(declare-fun temp2681_223 () (_ BitVec 64))
(declare-fun temp2681_226 () (_ BitVec 64))
(declare-fun temp2681_225 () (_ BitVec 64))
(declare-fun var69012 () (_ BitVec 64))
(declare-fun var69019 () (_ BitVec 64))
(declare-fun temp2681_227 () (_ BitVec 64))
(declare-fun var987606 () (_ BitVec 64))
(declare-fun temp2681_229 () (_ BitVec 64))
(declare-fun temp2681_228 () (_ BitVec 64))
(declare-fun temp2681_230 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var69206 () (_ BitVec 64))
(declare-fun temp2681_231 () (_ BitVec 64))
(declare-fun temp2681_232 () (_ BitVec 64))
(declare-fun var1118812 () (_ BitVec 64))
(declare-fun temp2681_233 () (_ BitVec 64))
(declare-fun var1184474 () (_ BitVec 64))
(declare-fun temp2681_234 () (_ BitVec 64))
(assert (or (= ARGNAME_padding_NAMEEND #x0000000000000001)
    (= ARGNAME_padding_NAMEEND #x0000000000000002)
    (= ARGNAME_padding_NAMEEND #x0000000000000003)))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp2681_1 #x0000000000000001))
(assert (= var135042
   (ite (= ARGNAME_filter_sizes_NAMEEND_DIM temp2681_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var135038 var135042))
(assert (= var68277 var135038))
(assert (= temp2681_2 #x0000000000000001))
(assert (= var68277 temp2681_2))
(assert (= temp2681_3 #x0000000000000000))
(assert (= var68332 temp2681_3))
(assert (= var68337
   (ite (bvsgt ARGNAME_filter_sizes_NAMEEND_NUMELEMENT var68332)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2681_5 #x0000000000000004))
(assert (= var68423 temp2681_5))
(assert (= temp2681_6 #x0000000000000004))
(assert (= var68424 (ite (= var68423 temp2681_6) #x0000000000000001 #x0000000000000000)))
(assert (= temp2681_7 #x0000000000000001))
(assert (= var68424 temp2681_7))
(assert (= temp2681_8 #x0000000000000004))
(assert (= var68432
   (ite (= ARGNAME_input_NAMEEND_DIM temp2681_8)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2681_9 #x0000000000000001))
(assert (= var68432 temp2681_9))
(assert (= temp2681_10 #x0000000000000004))
(assert (= var68499
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp2681_10)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2681_11 #x0000000000000001))
(assert (= var68499 temp2681_11))
(assert (= temp2681_12 #x0000000000000000))
(assert (= temp2681_13 (select ARGNAME_input_NAMEEND_DIMSIZE temp2681_12)))
(assert (= temp2681_14 #x0000000000000001))
(assert (= temp2681_15 (select ARGNAME_input_NAMEEND_DIMSIZE temp2681_14)))
(assert (= temp2681_16 #x0000000000000002))
(assert (= temp2681_17 (select ARGNAME_input_NAMEEND_DIMSIZE temp2681_16)))
(assert (= temp2681_18 #x0000000000000003))
(assert (= temp2681_19 (select ARGNAME_input_NAMEEND_DIMSIZE temp2681_18)))
(assert (= temp2681_20 #x0000000000000004))
(assert (= temp2681_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp2681_20)))
(assert (= temp2681_22 #x0000000000000005))
(assert (= temp2681_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp2681_22)))
(assert (= temp2681_24 #x0000000000000000))
(assert (= temp2681_25 (select ARGNAME_input_NAMEEND_DIMSIZE temp2681_24)))
(assert (= var68527 temp2681_25))
(assert (= temp2681_26 #x0000000000000000))
(assert (= temp2681_27 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp2681_26)))
(assert (= temp2681_28 #x0000000000000001))
(assert (= temp2681_29 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp2681_28)))
(assert (= temp2681_30 #x0000000000000002))
(assert (= temp2681_31 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp2681_30)))
(assert (= temp2681_32 #x0000000000000003))
(assert (= temp2681_33 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp2681_32)))
(assert (= temp2681_34 #x0000000000000004))
(assert (= temp2681_35 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp2681_34)))
(assert (= temp2681_36 #x0000000000000005))
(assert (= temp2681_37 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp2681_36)))
(assert (= temp2681_38 #x0000000000000000))
(assert (= temp2681_39 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp2681_38)))
(assert (= var68530 temp2681_39))
(assert (= var68533 (ite (= var68527 var68530) #x0000000000000001 #x0000000000000000)))
(assert (= temp2681_40 #x0000000000000001))
(assert (= var68533 temp2681_40))
(assert (= temp2681_44 #x0000000000000002))
(assert (= temp2681_45 #x0000000000000003))
(assert (= temp2681_46 #x0000000000000002))
(assert (= temp2681_47 #x0000000000000003))
(assert (= temp2681_42
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_46)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_47))
        (bvsub ARGNAME_input_NAMEEND_DIM temp2681_45)
        (bvsub ARGNAME_input_NAMEEND_DIM temp2681_44))))
(assert (= temp2681_48 #x0000000000000002))
(assert (= temp2681_49 #x0000000000000003))
(assert (= temp2681_50 #x0000000000000003))
(assert (= temp2681_43 (ite (= temp2681_42 temp2681_50) temp2681_49 temp2681_48)))
(assert (= temp2681_52 #x0000000000000002))
(assert (= temp2681_53 #x0000000000000001))
(assert (= temp2681_54 #x0000000000000002))
(assert (= temp2681_55 #x0000000000000001))
(assert (= temp2681_56 #x0000000000000000))
(assert (= temp2681_57 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_56)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_57))
                (bvsub temp2681_43 temp2681_55)
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_53)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_54))
                     temp2681_43
                     (bvsub temp2681_43 temp2681_52)))))
  (= temp2681_41 a!1)))
(assert (= temp2681_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp2681_41)))
(assert (= var68567 temp2681_58))
(assert (= temp2681_59 #x000000007fffffff))
(assert (= var200952 temp2681_59))
(assert (= var68570 var200952))
(assert (= var68573 var68570))
(assert (= var68574
   (ite (bvslt var68567 var68573) #x0000000000000001 #x0000000000000000)))
(assert (= temp2681_60 #x0000000000000001))
(assert (= var68574 temp2681_60))
(assert (= var68605 var68567))
(assert (= temp2681_64 #x0000000000000002))
(assert (= temp2681_65 #x0000000000000003))
(assert (= temp2681_66 #x0000000000000002))
(assert (= temp2681_67 #x0000000000000003))
(assert (= temp2681_62
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_66)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_67))
        (bvsub ARGNAME_input_NAMEEND_DIM temp2681_65)
        (bvsub ARGNAME_input_NAMEEND_DIM temp2681_64))))
(assert (= temp2681_68 #x0000000000000002))
(assert (= temp2681_69 #x0000000000000003))
(assert (= temp2681_70 #x0000000000000003))
(assert (= temp2681_63 (ite (= temp2681_62 temp2681_70) temp2681_69 temp2681_68)))
(assert (= temp2681_72 #x0000000000000001))
(assert (= temp2681_73 #x0000000000000001))
(assert (= temp2681_74 #x0000000000000001))
(assert (= temp2681_75 #x0000000000000002))
(assert (= temp2681_76 #x0000000000000000))
(assert (= temp2681_77 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_76)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_77))
                temp2681_63
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_74)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_75))
                     (bvadd temp2681_63 temp2681_73)
                     (bvsub temp2681_63 temp2681_72)))))
  (= temp2681_61 a!1)))
(assert (= temp2681_78 (select ARGNAME_input_NAMEEND_DIMSIZE temp2681_61)))
(assert (= var68607 temp2681_78))
(assert (= temp2681_79 #x000000007fffffff))
(assert (= var266488 temp2681_79))
(assert (= var68608 var266488))
(assert (= var68609 var68608))
(assert (= var68610
   (ite (bvslt var68607 var68609) #x0000000000000001 #x0000000000000000)))
(assert (= temp2681_80 #x0000000000000001))
(assert (= var68610 temp2681_80))
(assert (= var68641 var68607))
(assert (= temp2681_84 #x0000000000000002))
(assert (= temp2681_85 #x0000000000000003))
(assert (= temp2681_86 #x0000000000000002))
(assert (= temp2681_87 #x0000000000000003))
(assert (= temp2681_82
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_86)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_87))
        (bvsub ARGNAME_out_backprop_NAMEEND_DIM temp2681_85)
        (bvsub ARGNAME_out_backprop_NAMEEND_DIM temp2681_84))))
(assert (= temp2681_88 #x0000000000000002))
(assert (= temp2681_89 #x0000000000000003))
(assert (= temp2681_90 #x0000000000000003))
(assert (= temp2681_83 (ite (= temp2681_82 temp2681_90) temp2681_89 temp2681_88)))
(assert (= temp2681_92 #x0000000000000002))
(assert (= temp2681_93 #x0000000000000001))
(assert (= temp2681_94 #x0000000000000002))
(assert (= temp2681_95 #x0000000000000001))
(assert (= temp2681_96 #x0000000000000000))
(assert (= temp2681_97 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_96)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_97))
                (bvsub temp2681_83 temp2681_95)
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_93)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_94))
                     temp2681_83
                     (bvsub temp2681_83 temp2681_92)))))
  (= temp2681_81 a!1)))
(assert (= temp2681_98 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp2681_81)))
(assert (= var68646 temp2681_98))
(assert (= temp2681_99 #x000000007fffffff))
(assert (= var332024 temp2681_99))
(assert (= var68647 var332024))
(assert (= var68648 var68647))
(assert (= var68649
   (ite (bvslt var68646 var68648) #x0000000000000001 #x0000000000000000)))
(assert (= temp2681_100 #x0000000000000001))
(assert (= var68649 temp2681_100))
(assert (= var68688 var68646))
(assert (= temp2681_104 #x0000000000000002))
(assert (= temp2681_105 #x0000000000000003))
(assert (= temp2681_106 #x0000000000000002))
(assert (= temp2681_107 #x0000000000000003))
(assert (= temp2681_102
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_106)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_107))
        (bvsub ARGNAME_out_backprop_NAMEEND_DIM temp2681_105)
        (bvsub ARGNAME_out_backprop_NAMEEND_DIM temp2681_104))))
(assert (= temp2681_108 #x0000000000000002))
(assert (= temp2681_109 #x0000000000000003))
(assert (= temp2681_110 #x0000000000000003))
(assert (= temp2681_103 (ite (= temp2681_102 temp2681_110) temp2681_109 temp2681_108)))
(assert (= temp2681_112 #x0000000000000001))
(assert (= temp2681_113 #x0000000000000001))
(assert (= temp2681_114 #x0000000000000001))
(assert (= temp2681_115 #x0000000000000002))
(assert (= temp2681_116 #x0000000000000000))
(assert (= temp2681_117 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_116)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_117))
                temp2681_103
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_114)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_115))
                     (bvadd temp2681_103 temp2681_113)
                     (bvsub temp2681_103 temp2681_112)))))
  (= temp2681_101 a!1)))
(assert (= temp2681_118 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp2681_101)))
(assert (= var68691 temp2681_118))
(assert (= temp2681_119 #x000000007fffffff))
(assert (= var397560 temp2681_119))
(assert (= var68692 var397560))
(assert (= var68693 var68692))
(assert (= var68694
   (ite (bvslt var68691 var68693) #x0000000000000001 #x0000000000000000)))
(assert (= temp2681_120 #x0000000000000001))
(assert (= var68694 temp2681_120))
(assert (= var68725 var68691))
(assert (= temp2681_124 #x0000000000000002))
(assert (= temp2681_125 #x0000000000000003))
(assert (= temp2681_126 #x0000000000000002))
(assert (= temp2681_127 #x0000000000000003))
(assert (= temp2681_122
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_126)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_127))
        (bvsub ARGNAME_input_NAMEEND_DIM temp2681_125)
        (bvsub ARGNAME_input_NAMEEND_DIM temp2681_124))))
(assert (= temp2681_128 #x0000000000000002))
(assert (= temp2681_129 #x0000000000000003))
(assert (= temp2681_130 #x0000000000000003))
(assert (= temp2681_123 (ite (= temp2681_122 temp2681_130) temp2681_129 temp2681_128)))
(assert (= temp2681_132 #x0000000000000001))
(assert (= temp2681_133 #x0000000000000005))
(assert (= temp2681_134 #x0000000000000001))
(assert (= temp2681_135 #x0000000000000001))
(assert (= temp2681_136 #x0000000000000002))
(assert (= temp2681_121
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_135)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_136))
        temp2681_134
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_133)
             temp2681_123
             (bvadd temp2681_123 temp2681_132)))))
(assert (= temp2681_137 (select ARGNAME_input_NAMEEND_DIMSIZE temp2681_121)))
(assert (= var68727 temp2681_137))
(assert (= temp2681_141 #x0000000000000002))
(assert (= temp2681_142 #x0000000000000003))
(assert (= temp2681_143 #x0000000000000002))
(assert (= temp2681_144 #x0000000000000003))
(assert (= temp2681_139
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_143)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_144))
        (bvsub ARGNAME_out_backprop_NAMEEND_DIM temp2681_142)
        (bvsub ARGNAME_out_backprop_NAMEEND_DIM temp2681_141))))
(assert (= temp2681_145 #x0000000000000002))
(assert (= temp2681_146 #x0000000000000003))
(assert (= temp2681_147 #x0000000000000003))
(assert (= temp2681_140 (ite (= temp2681_139 temp2681_147) temp2681_146 temp2681_145)))
(assert (= temp2681_149 #x0000000000000001))
(assert (= temp2681_150 #x0000000000000005))
(assert (= temp2681_151 #x0000000000000001))
(assert (= temp2681_152 #x0000000000000001))
(assert (= temp2681_153 #x0000000000000002))
(assert (= temp2681_138
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_152)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_153))
        temp2681_151
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_150)
             temp2681_140
             (bvadd temp2681_140 temp2681_149)))))
(assert (= temp2681_154 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp2681_138)))
(assert (= var68764 temp2681_154))
(assert (= temp2681_155 #x000000007fffffff))
(assert (= var463096 temp2681_155))
(assert (= var68765 var463096))
(assert (= var68766 var68765))
(assert (= var68767
   (ite (bvslt var68764 var68766) #x0000000000000001 #x0000000000000000)))
(assert (= temp2681_156 #x0000000000000001))
(assert (= var68767 temp2681_156))
(assert (= var68802 var68764))
(assert (= temp2681_157 #x0000000000000020))
(assert (= var68804 (bvshl var68764 temp2681_157)))
(assert (= temp2681_158 #x0000000000000020))
(assert (= var68805 (bvashr var68804 temp2681_158)))
(assert (= temp2681_160 #x0000000000000000))
(assert (= temp2681_159 temp2681_160))
(assert (= temp2681_162 #x0000000000000000))
(assert (= temp2681_161 temp2681_162))
(assert (= temp2681_164 #x0000000000000000))
(assert (= temp2681_163 temp2681_164))
(assert (= temp2681_166 #x0000000000000000))
(assert (= temp2681_165 temp2681_166))
(assert (= temp2681_168 #x0000000000000000))
(assert (= temp2681_167 temp2681_168))
(assert (= temp2681_170 #x0000000000000000))
(assert (= temp2681_169 temp2681_170))
(assert (= temp2681_171 #x0000000000000003))
(assert (= var68861
   (ite (= ARGNAME_padding_NAMEEND temp2681_171)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2681_172 #x0000000000000000))
(assert (= var68861 temp2681_172))
(assert (= temp2681_173 #x0000000000000020))
(assert (= var68877 (bvshl var68567 temp2681_173)))
(assert (= temp2681_174 #x0000000000000020))
(assert (= var68878 (bvashr var68877 temp2681_174)))
(assert (= var533367 var68878))
(assert (= var598483 var533367))
(assert (= temp2681_175 #x0000000000000001))
(assert (= var598485 temp2681_175))
(assert (= temp2681_176 #x0000000000000001))
(assert (= var598503
   (ite (bvslt var598485 temp2681_176) #x0000000000000001 #x0000000000000000)))
(assert (= temp2681_177 #x0000000000000000))
(assert (= var598503 temp2681_177))
(assert (= temp2681_178 #x0000000000000002))
(assert (or false (= ARGNAME_padding_NAMEEND temp2681_178)))
(assert (= temp2681_179 #xffffffffffffffff))
(assert (= var598531 (bvadd var598483 temp2681_179)))
(assert (= temp2681_181 #x0000000000000000))
(assert (= temp2681_180 temp2681_181))
(assert (= temp2681_182 #x0000000000000000))
(assert (= var598555
   (ite (bvslt temp2681_159 temp2681_182) #x0000000000000001 #x0000000000000000)))
(assert (= temp2681_183 #x0000000000000000))
(assert (= var598555 temp2681_183))
(assert (= temp2681_184 #x0000000000000020))
(assert (= var68904 (bvshl var68607 temp2681_184)))
(assert (= temp2681_185 #x0000000000000020))
(assert (= var68905 (bvashr var68904 temp2681_185)))
(assert (= var729975 var68905))
(assert (= var795091 var729975))
(assert (= temp2681_186 #x0000000000000001))
(assert (= var795093 temp2681_186))
(assert (= temp2681_187 #x0000000000000001))
(assert (= var795111
   (ite (bvslt var795093 temp2681_187) #x0000000000000001 #x0000000000000000)))
(assert (= temp2681_188 #x0000000000000000))
(assert (= var795111 temp2681_188))
(assert (= temp2681_189 #x0000000000000002))
(assert (or false (= ARGNAME_padding_NAMEEND temp2681_189)))
(assert (= temp2681_190 #xffffffffffffffff))
(assert (= var795139 (bvadd var795091 temp2681_190)))
(assert (= temp2681_192 #x0000000000000000))
(assert (= temp2681_191 temp2681_192))
(assert (= temp2681_193 #x0000000000000000))
(assert (= var795163
   (ite (bvslt temp2681_161 temp2681_193) #x0000000000000001 #x0000000000000000)))
(assert (= temp2681_194 #x0000000000000000))
(assert (= var795163 temp2681_194))
(assert (= temp2681_195 #x0000000000000020))
(assert (= var68931 (bvshl var68646 temp2681_195)))
(assert (= temp2681_196 #x0000000000000020))
(assert (= var68932 (bvashr var68931 temp2681_196)))
(assert (= var68934
   (ite (= var68932 temp2681_159) #x0000000000000001 #x0000000000000000)))
(assert (= temp2681_197 #x0000000000000001))
(assert (= var68934 temp2681_197))
(assert (= temp2681_198 #x0000000000000020))
(assert (= var68972 (bvshl var68691 temp2681_198)))
(assert (= temp2681_199 #x0000000000000020))
(assert (= var68973 (bvashr var68972 temp2681_199)))
(assert (= var68975
   (ite (= var68973 temp2681_161) #x0000000000000001 #x0000000000000000)))
(assert (= temp2681_200 #x0000000000000001))
(assert (= var68975 temp2681_200))
(assert (= temp2681_202 #x0000000000000000))
(assert (= temp2681_201 temp2681_202))
(assert (= temp2681_204 #x0000000000000000))
(assert (= temp2681_203 temp2681_204))
(assert (= temp2681_206 #x0000000000000000))
(assert (= temp2681_205 temp2681_206))
(assert (= temp2681_208 #x0000000000000000))
(assert (= temp2681_207 temp2681_208))
(assert (= temp2681_210 #x0000000000000000))
(assert (= temp2681_209 temp2681_210))
(assert (= temp2681_212 #x0000000000000000))
(assert (= temp2681_211 temp2681_212))
(assert (= temp2681_214 #x0000000000000000))
(assert (= temp2681_213 temp2681_214))
(assert (= temp2681_216 #x0000000000000000))
(assert (= temp2681_215 temp2681_216))
(assert (= temp2681_218 #x0000000000000000))
(assert (= temp2681_217 temp2681_218))
(assert (= temp2681_220 #x0000000000000000))
(assert (= temp2681_219 temp2681_220))
(assert (= temp2681_222 #x0000000000000000))
(assert (= temp2681_221 temp2681_222))
(assert (= temp2681_224 #x0000000000000000))
(assert (= temp2681_223 temp2681_224))
(assert (= temp2681_226 #x0000000000000000))
(assert (= temp2681_225 temp2681_226))
(assert (= var69012 var68527))
(assert (= var69019 var68727))
(assert (= temp2681_227 #x0000000000000002))
(assert (= var987606 temp2681_227))
(assert (= temp2681_229 #x0000000000000001))
(assert (= temp2681_228 temp2681_229))
(assert (= temp2681_230 #x0000000000000000))
(assert (= var69206
   (ite (= ARGNAME_out_backprop_NAMEEND_NUMELEMENT temp2681_230)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2681_231 #x0000000000000000))
(assert (= var69206 temp2681_231))
(assert (= temp2681_232 #x0000000000000002))
(assert (= var1118812 temp2681_232))
(assert (= temp2681_233 #x0000000000000000))
(assert (= var1184474
   (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp2681_233)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2681_234 #x0000000000000001))
(assert (= var1184474 temp2681_234))
(model-add temp2681_1 () (_ BitVec 64) #x0000000000000001)
(model-add var135042 () (_ BitVec 64) #x0000000000000001)
(model-add var135038 () (_ BitVec 64) #x0000000000000001)
(model-add temp2681_2 () (_ BitVec 64) #x0000000000000001)
(model-add var68277 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_sizes_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))




















