(declare-fun temp28_1 () (_ BitVec 64))
(declare-fun temp28_2 () (_ BitVec 64))
(declare-fun var66254 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_strides_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp28_3 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp28_4 () (_ BitVec 64))
(declare-fun temp28_5 () (_ BitVec 64))
(declare-fun temp28_6 () (_ BitVec 64))
(declare-fun temp28_7 () (_ BitVec 64))
(declare-fun temp28_8 () (_ BitVec 64))
(declare-fun temp28_9 () (_ BitVec 64))
(declare-fun temp28_10 () (_ BitVec 64))
(declare-fun temp28_11 () (_ BitVec 64))
(declare-fun temp28_12 () (_ BitVec 64))
(declare-fun temp28_13 () (_ BitVec 64))
(declare-fun temp28_14 () (_ BitVec 64))
(declare-fun temp28_18 () (_ BitVec 64))
(declare-fun temp28_19 () (_ BitVec 64))
(declare-fun temp28_20 () (_ BitVec 64))
(declare-fun temp28_21 () (_ BitVec 64))
(declare-fun temp28_16 () (_ BitVec 64))
(declare-fun temp28_22 () (_ BitVec 64))
(declare-fun temp28_23 () (_ BitVec 64))
(declare-fun temp28_24 () (_ BitVec 64))
(declare-fun temp28_17 () (_ BitVec 64))
(declare-fun temp28_26 () (_ BitVec 64))
(declare-fun temp28_27 () (_ BitVec 64))
(declare-fun temp28_28 () (_ BitVec 64))
(declare-fun temp28_29 () (_ BitVec 64))
(declare-fun temp28_30 () (_ BitVec 64))
(declare-fun temp28_31 () (_ BitVec 64))
(declare-fun temp28_15 () (_ BitVec 64))
(declare-fun temp28_32 () (_ BitVec 64))
(declare-fun var66375 () (_ BitVec 64))
(declare-fun var66379 () (_ BitVec 64))
(declare-fun temp28_36 () (_ BitVec 64))
(declare-fun temp28_37 () (_ BitVec 64))
(declare-fun temp28_38 () (_ BitVec 64))
(declare-fun temp28_39 () (_ BitVec 64))
(declare-fun temp28_34 () (_ BitVec 64))
(declare-fun temp28_40 () (_ BitVec 64))
(declare-fun temp28_41 () (_ BitVec 64))
(declare-fun temp28_42 () (_ BitVec 64))
(declare-fun temp28_35 () (_ BitVec 64))
(declare-fun temp28_44 () (_ BitVec 64))
(declare-fun temp28_45 () (_ BitVec 64))
(declare-fun temp28_46 () (_ BitVec 64))
(declare-fun temp28_47 () (_ BitVec 64))
(declare-fun temp28_48 () (_ BitVec 64))
(declare-fun temp28_49 () (_ BitVec 64))
(declare-fun temp28_33 () (_ BitVec 64))
(declare-fun temp28_50 () (_ BitVec 64))
(declare-fun var66383 () (_ BitVec 64))
(declare-fun var66385 () (_ BitVec 64))
(declare-fun temp28_54 () (_ BitVec 64))
(declare-fun temp28_55 () (_ BitVec 64))
(declare-fun temp28_56 () (_ BitVec 64))
(declare-fun temp28_57 () (_ BitVec 64))
(declare-fun temp28_52 () (_ BitVec 64))
(declare-fun temp28_58 () (_ BitVec 64))
(declare-fun temp28_59 () (_ BitVec 64))
(declare-fun temp28_60 () (_ BitVec 64))
(declare-fun temp28_53 () (_ BitVec 64))
(declare-fun temp28_62 () (_ BitVec 64))
(declare-fun temp28_63 () (_ BitVec 64))
(declare-fun temp28_64 () (_ BitVec 64))
(declare-fun temp28_65 () (_ BitVec 64))
(declare-fun temp28_51 () (_ BitVec 64))
(declare-fun temp28_66 () (_ BitVec 64))
(declare-fun var66387 () (_ BitVec 64))
(declare-fun temp28_70 () (_ BitVec 64))
(declare-fun temp28_71 () (_ BitVec 64))
(declare-fun temp28_72 () (_ BitVec 64))
(declare-fun temp28_73 () (_ BitVec 64))
(declare-fun temp28_68 () (_ BitVec 64))
(declare-fun temp28_74 () (_ BitVec 64))
(declare-fun temp28_75 () (_ BitVec 64))
(declare-fun temp28_76 () (_ BitVec 64))
(declare-fun temp28_69 () (_ BitVec 64))
(declare-fun temp28_78 () (_ BitVec 64))
(declare-fun temp28_79 () (_ BitVec 64))
(declare-fun temp28_80 () (_ BitVec 64))
(declare-fun temp28_81 () (_ BitVec 64))
(declare-fun temp28_82 () (_ BitVec 64))
(declare-fun temp28_67 () (_ BitVec 64))
(declare-fun temp28_83 () (_ BitVec 64))
(declare-fun var66390 () (_ BitVec 64))
(declare-fun var66392 () (_ BitVec 64))
(declare-fun var66393 () (_ BitVec 64))
(declare-fun temp28_84 () (_ BitVec 64))
(declare-fun temp28_85 () (_ BitVec 64))
(declare-fun var66433 () (_ BitVec 64))
(declare-fun temp28_86 () (_ BitVec 64))
(declare-fun var66435 () (_ BitVec 64))
(declare-fun var66436 () (_ BitVec 64))
(declare-fun temp28_87 () (_ BitVec 64))
(declare-fun temp28_88 () (_ BitVec 64))
(declare-fun var139334 () (_ BitVec 64))
(declare-fun temp28_89 () (_ BitVec 64))
(declare-fun var139340 () (_ BitVec 64))
(declare-fun temp28_90 () (_ BitVec 64))
(declare-fun temp28_91 () (_ BitVec 64))
(declare-fun ARGNAME_explicit_paddings_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var139432 () (_ BitVec 64))
(declare-fun temp28_92 () (_ BitVec 64))
(assert (or (= ARGNAME_padding_NAMEEND #x0000000000000001)
    (= ARGNAME_padding_NAMEEND #x0000000000000002)
    (= ARGNAME_padding_NAMEEND #x0000000000000003)))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp28_1 #x0000000000000004))
(assert (= var66254
   (ite (= ARGNAME_strides_NAMEEND_LEN temp28_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp28_2 #x0000000000000001))
(assert (= var66254 temp28_2))
(assert (= temp28_3 #x0000000000000000))
(assert (= temp28_4 (select ARGNAME_strides_NAMEEND_VAL temp28_3)))
(assert (= temp28_5 #x0000000000000001))
(assert (= temp28_6 (select ARGNAME_strides_NAMEEND_VAL temp28_5)))
(assert (= temp28_7 #x0000000000000002))
(assert (= temp28_8 (select ARGNAME_strides_NAMEEND_VAL temp28_7)))
(assert (= temp28_9 #x0000000000000003))
(assert (= temp28_10 (select ARGNAME_strides_NAMEEND_VAL temp28_9)))
(assert (= temp28_11 #x0000000000000004))
(assert (= temp28_12 (select ARGNAME_strides_NAMEEND_VAL temp28_11)))
(assert (= temp28_13 #x0000000000000005))
(assert (= temp28_14 (select ARGNAME_strides_NAMEEND_VAL temp28_13)))
(assert (= temp28_18 #x0000000000000002))
(assert (= temp28_19 #x0000000000000003))
(assert (= temp28_20 #x0000000000000002))
(assert (= temp28_21 #x0000000000000003))
(assert (= temp28_16
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp28_20)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp28_21))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp28_19)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp28_18))))
(assert (= temp28_22 #x0000000000000002))
(assert (= temp28_23 #x0000000000000003))
(assert (= temp28_24 #x0000000000000003))
(assert (= temp28_17 (ite (= temp28_16 temp28_24) temp28_23 temp28_22)))
(assert (= temp28_26 #x0000000000000002))
(assert (= temp28_27 #x0000000000000001))
(assert (= temp28_28 #x0000000000000002))
(assert (= temp28_29 #x0000000000000001))
(assert (= temp28_30 #x0000000000000000))
(assert (= temp28_31 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp28_30)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp28_31))
                (bvsub temp28_17 temp28_29)
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp28_27)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp28_28))
                     temp28_17
                     (bvsub temp28_17 temp28_26)))))
  (= temp28_15 a!1)))
(assert (= temp28_32 (select ARGNAME_strides_NAMEEND_VAL temp28_15)))
(assert (= var66375 temp28_32))
(assert (= var66379 var66375))
(assert (= temp28_36 #x0000000000000002))
(assert (= temp28_37 #x0000000000000003))
(assert (= temp28_38 #x0000000000000002))
(assert (= temp28_39 #x0000000000000003))
(assert (= temp28_34
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp28_38)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp28_39))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp28_37)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp28_36))))
(assert (= temp28_40 #x0000000000000002))
(assert (= temp28_41 #x0000000000000003))
(assert (= temp28_42 #x0000000000000003))
(assert (= temp28_35 (ite (= temp28_34 temp28_42) temp28_41 temp28_40)))
(assert (= temp28_44 #x0000000000000001))
(assert (= temp28_45 #x0000000000000001))
(assert (= temp28_46 #x0000000000000001))
(assert (= temp28_47 #x0000000000000002))
(assert (= temp28_48 #x0000000000000000))
(assert (= temp28_49 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp28_48)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp28_49))
                temp28_35
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp28_46)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp28_47))
                     (bvadd temp28_35 temp28_45)
                     (bvsub temp28_35 temp28_44)))))
  (= temp28_33 a!1)))
(assert (= temp28_50 (select ARGNAME_strides_NAMEEND_VAL temp28_33)))
(assert (= var66383 temp28_50))
(assert (= var66385 var66383))
(assert (= temp28_54 #x0000000000000002))
(assert (= temp28_55 #x0000000000000003))
(assert (= temp28_56 #x0000000000000002))
(assert (= temp28_57 #x0000000000000003))
(assert (= temp28_52
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp28_56)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp28_57))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp28_55)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp28_54))))
(assert (= temp28_58 #x0000000000000002))
(assert (= temp28_59 #x0000000000000003))
(assert (= temp28_60 #x0000000000000003))
(assert (= temp28_53 (ite (= temp28_52 temp28_60) temp28_59 temp28_58)))
(assert (= temp28_62 #x0000000000000000))
(assert (= temp28_63 #x0000000000000001))
(assert (= temp28_64 #x0000000000000005))
(assert (= temp28_65 #x0000000000000004))
(assert (= temp28_51
   (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp28_65)
        temp28_53
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp28_64)
             (bvadd temp28_53 temp28_63)
             temp28_62))))
(assert (= temp28_66 (select ARGNAME_strides_NAMEEND_VAL temp28_51)))
(assert (= var66387 temp28_66))
(assert (= temp28_70 #x0000000000000002))
(assert (= temp28_71 #x0000000000000003))
(assert (= temp28_72 #x0000000000000002))
(assert (= temp28_73 #x0000000000000003))
(assert (= temp28_68
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp28_72)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp28_73))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp28_71)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp28_70))))
(assert (= temp28_74 #x0000000000000002))
(assert (= temp28_75 #x0000000000000003))
(assert (= temp28_76 #x0000000000000003))
(assert (= temp28_69 (ite (= temp28_68 temp28_76) temp28_75 temp28_74)))
(assert (= temp28_78 #x0000000000000001))
(assert (= temp28_79 #x0000000000000005))
(assert (= temp28_80 #x0000000000000001))
(assert (= temp28_81 #x0000000000000001))
(assert (= temp28_82 #x0000000000000002))
(assert (= temp28_67
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp28_81)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp28_82))
        temp28_80
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp28_79)
             temp28_69
             (bvadd temp28_69 temp28_78)))))
(assert (= temp28_83 (select ARGNAME_strides_NAMEEND_VAL temp28_67)))
(assert (= var66390 temp28_83))
(assert (= var66392 var66379))
(assert (= var66393 (ite (= var66392 var66385) #x0000000000000001 #x0000000000000000)))
(assert (= temp28_84 #x0000000000000001))
(assert (= var66393 temp28_84))
(assert (= temp28_85 #x0000000000000001))
(assert (= var66433 (ite (= var66387 temp28_85) #x0000000000000001 #x0000000000000000)))
(assert (= temp28_86 #x0000000000000001))
(assert (= var66435 (ite (= var66390 temp28_86) #x0000000000000001 #x0000000000000000)))
(assert (= var66436 (bvand var66433 var66435)))
(assert (= temp28_87 #x0000000000000001))
(assert (= var66436 temp28_87))
(assert (= temp28_88 #x0000000000000004))
(assert (= var139334 temp28_88))
(assert (= temp28_89 #x0000000000000003))
(assert (= var139340
   (ite (= ARGNAME_padding_NAMEEND temp28_89)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp28_90 #x0000000000000000))
(assert (= var139340 temp28_90))
(assert (= temp28_91 #x0000000000000000))
(assert (= var139432
   (ite (= ARGNAME_explicit_paddings_NAMEEND_LEN temp28_91)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp28_92 #x0000000000000001))
(assert (= var139432 temp28_92))
(model-add temp28_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp28_2 () (_ BitVec 64) #x0000000000000001)
(model-add var66254 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_strides_NAMEEND_LEN
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))



























