(declare-fun temp2_1 () (_ BitVec 64))
(declare-fun temp2_2 () (_ BitVec 64))
(declare-fun var75949 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_orig_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp2_3 () (_ BitVec 64))
(declare-fun ARGNAME_orig_output_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var75972 () (_ BitVec 64))
(declare-fun temp2_4 () (_ BitVec 64))
(declare-fun temp2_5 () (_ BitVec 64))
(declare-fun ARGNAME_grad_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var75993 () (_ BitVec 64))
(declare-fun temp2_6 () (_ BitVec 64))
(declare-fun temp2_7 () (_ BitVec 64))
(declare-fun ARGNAME_orig_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp2_8 () (_ BitVec 64))
(declare-fun temp2_9 () (_ BitVec 64))
(declare-fun temp2_10 () (_ BitVec 64))
(declare-fun temp2_11 () (_ BitVec 64))
(declare-fun temp2_12 () (_ BitVec 64))
(declare-fun temp2_13 () (_ BitVec 64))
(declare-fun temp2_14 () (_ BitVec 64))
(declare-fun temp2_15 () (_ BitVec 64))
(declare-fun temp2_16 () (_ BitVec 64))
(declare-fun temp2_17 () (_ BitVec 64))
(declare-fun temp2_18 () (_ BitVec 64))
(declare-fun temp2_22 () (_ BitVec 64))
(declare-fun temp2_23 () (_ BitVec 64))
(declare-fun temp2_24 () (_ BitVec 64))
(declare-fun temp2_25 () (_ BitVec 64))
(declare-fun temp2_20 () (_ BitVec 64))
(declare-fun temp2_26 () (_ BitVec 64))
(declare-fun temp2_27 () (_ BitVec 64))
(declare-fun temp2_28 () (_ BitVec 64))
(declare-fun temp2_21 () (_ BitVec 64))
(declare-fun temp2_30 () (_ BitVec 64))
(declare-fun temp2_31 () (_ BitVec 64))
(declare-fun temp2_32 () (_ BitVec 64))
(declare-fun temp2_33 () (_ BitVec 64))
(declare-fun temp2_34 () (_ BitVec 64))
(declare-fun temp2_35 () (_ BitVec 64))
(declare-fun temp2_36 () (_ BitVec 64))
(declare-fun temp2_19 () (_ BitVec 64))
(declare-fun temp2_37 () (_ BitVec 64))
(declare-fun var76040 () (_ BitVec 64))
(declare-fun temp2_41 () (_ BitVec 64))
(declare-fun temp2_42 () (_ BitVec 64))
(declare-fun temp2_43 () (_ BitVec 64))
(declare-fun temp2_44 () (_ BitVec 64))
(declare-fun temp2_39 () (_ BitVec 64))
(declare-fun temp2_45 () (_ BitVec 64))
(declare-fun temp2_46 () (_ BitVec 64))
(declare-fun temp2_47 () (_ BitVec 64))
(declare-fun temp2_40 () (_ BitVec 64))
(declare-fun temp2_49 () (_ BitVec 64))
(declare-fun temp2_50 () (_ BitVec 64))
(declare-fun temp2_51 () (_ BitVec 64))
(declare-fun temp2_52 () (_ BitVec 64))
(declare-fun temp2_53 () (_ BitVec 64))
(declare-fun temp2_54 () (_ BitVec 64))
(declare-fun temp2_55 () (_ BitVec 64))
(declare-fun temp2_38 () (_ BitVec 64))
(declare-fun temp2_56 () (_ BitVec 64))
(declare-fun var76044 () (_ BitVec 64))
(declare-fun temp2_60 () (_ BitVec 64))
(declare-fun temp2_61 () (_ BitVec 64))
(declare-fun temp2_62 () (_ BitVec 64))
(declare-fun temp2_63 () (_ BitVec 64))
(declare-fun temp2_58 () (_ BitVec 64))
(declare-fun temp2_64 () (_ BitVec 64))
(declare-fun temp2_65 () (_ BitVec 64))
(declare-fun temp2_66 () (_ BitVec 64))
(declare-fun temp2_59 () (_ BitVec 64))
(declare-fun temp2_68 () (_ BitVec 64))
(declare-fun temp2_69 () (_ BitVec 64))
(declare-fun temp2_70 () (_ BitVec 64))
(declare-fun temp2_71 () (_ BitVec 64))
(declare-fun temp2_72 () (_ BitVec 64))
(declare-fun temp2_73 () (_ BitVec 64))
(declare-fun temp2_74 () (_ BitVec 64))
(declare-fun temp2_57 () (_ BitVec 64))
(declare-fun temp2_75 () (_ BitVec 64))
(declare-fun var76048 () (_ BitVec 64))
(declare-fun temp2_76 () (_ BitVec 64))
(declare-fun ARGNAME_ksize_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp2_77 () (_ BitVec 64))
(declare-fun temp2_78 () (_ BitVec 64))
(declare-fun temp2_79 () (_ BitVec 64))
(declare-fun temp2_80 () (_ BitVec 64))
(declare-fun temp2_81 () (_ BitVec 64))
(declare-fun temp2_82 () (_ BitVec 64))
(declare-fun temp2_83 () (_ BitVec 64))
(declare-fun temp2_84 () (_ BitVec 64))
(declare-fun temp2_85 () (_ BitVec 64))
(declare-fun temp2_86 () (_ BitVec 64))
(declare-fun temp2_87 () (_ BitVec 64))
(declare-fun temp2_91 () (_ BitVec 64))
(declare-fun temp2_92 () (_ BitVec 64))
(declare-fun temp2_93 () (_ BitVec 64))
(declare-fun temp2_94 () (_ BitVec 64))
(declare-fun ARGNAME_ksize_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp2_89 () (_ BitVec 64))
(declare-fun temp2_95 () (_ BitVec 64))
(declare-fun temp2_96 () (_ BitVec 64))
(declare-fun temp2_97 () (_ BitVec 64))
(declare-fun temp2_90 () (_ BitVec 64))
(declare-fun temp2_99 () (_ BitVec 64))
(declare-fun temp2_100 () (_ BitVec 64))
(declare-fun temp2_101 () (_ BitVec 64))
(declare-fun temp2_102 () (_ BitVec 64))
(declare-fun temp2_103 () (_ BitVec 64))
(declare-fun temp2_104 () (_ BitVec 64))
(declare-fun temp2_105 () (_ BitVec 64))
(declare-fun temp2_88 () (_ BitVec 64))
(declare-fun temp2_106 () (_ BitVec 64))
(declare-fun var76055 () (_ BitVec 64))
(declare-fun var76056 () (_ BitVec 64))
(declare-fun temp2_110 () (_ BitVec 64))
(declare-fun temp2_111 () (_ BitVec 64))
(declare-fun temp2_112 () (_ BitVec 64))
(declare-fun temp2_113 () (_ BitVec 64))
(declare-fun temp2_108 () (_ BitVec 64))
(declare-fun temp2_114 () (_ BitVec 64))
(declare-fun temp2_115 () (_ BitVec 64))
(declare-fun temp2_116 () (_ BitVec 64))
(declare-fun temp2_109 () (_ BitVec 64))
(declare-fun temp2_118 () (_ BitVec 64))
(declare-fun temp2_119 () (_ BitVec 64))
(declare-fun temp2_120 () (_ BitVec 64))
(declare-fun temp2_121 () (_ BitVec 64))
(declare-fun temp2_122 () (_ BitVec 64))
(declare-fun temp2_123 () (_ BitVec 64))
(declare-fun temp2_124 () (_ BitVec 64))
(declare-fun temp2_107 () (_ BitVec 64))
(declare-fun temp2_125 () (_ BitVec 64))
(declare-fun var76060 () (_ BitVec 64))
(declare-fun var76061 () (_ BitVec 64))
(declare-fun temp2_129 () (_ BitVec 64))
(declare-fun temp2_130 () (_ BitVec 64))
(declare-fun temp2_131 () (_ BitVec 64))
(declare-fun temp2_132 () (_ BitVec 64))
(declare-fun temp2_127 () (_ BitVec 64))
(declare-fun temp2_133 () (_ BitVec 64))
(declare-fun temp2_134 () (_ BitVec 64))
(declare-fun temp2_135 () (_ BitVec 64))
(declare-fun temp2_128 () (_ BitVec 64))
(declare-fun temp2_137 () (_ BitVec 64))
(declare-fun temp2_138 () (_ BitVec 64))
(declare-fun temp2_139 () (_ BitVec 64))
(declare-fun temp2_140 () (_ BitVec 64))
(declare-fun temp2_141 () (_ BitVec 64))
(declare-fun temp2_142 () (_ BitVec 64))
(declare-fun temp2_143 () (_ BitVec 64))
(declare-fun temp2_126 () (_ BitVec 64))
(declare-fun temp2_144 () (_ BitVec 64))
(declare-fun var76065 () (_ BitVec 64))
(declare-fun var76066 () (_ BitVec 64))
(declare-fun temp2_145 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp2_146 () (_ BitVec 64))
(declare-fun temp2_147 () (_ BitVec 64))
(declare-fun temp2_148 () (_ BitVec 64))
(declare-fun temp2_149 () (_ BitVec 64))
(declare-fun temp2_150 () (_ BitVec 64))
(declare-fun temp2_151 () (_ BitVec 64))
(declare-fun temp2_152 () (_ BitVec 64))
(declare-fun temp2_153 () (_ BitVec 64))
(declare-fun temp2_154 () (_ BitVec 64))
(declare-fun temp2_155 () (_ BitVec 64))
(declare-fun temp2_156 () (_ BitVec 64))
(declare-fun temp2_160 () (_ BitVec 64))
(declare-fun temp2_161 () (_ BitVec 64))
(declare-fun temp2_162 () (_ BitVec 64))
(declare-fun temp2_163 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp2_158 () (_ BitVec 64))
(declare-fun temp2_164 () (_ BitVec 64))
(declare-fun temp2_165 () (_ BitVec 64))
(declare-fun temp2_166 () (_ BitVec 64))
(declare-fun temp2_159 () (_ BitVec 64))
(declare-fun temp2_168 () (_ BitVec 64))
(declare-fun temp2_169 () (_ BitVec 64))
(declare-fun temp2_170 () (_ BitVec 64))
(declare-fun temp2_171 () (_ BitVec 64))
(declare-fun temp2_172 () (_ BitVec 64))
(declare-fun temp2_173 () (_ BitVec 64))
(declare-fun temp2_174 () (_ BitVec 64))
(declare-fun temp2_157 () (_ BitVec 64))
(declare-fun temp2_175 () (_ BitVec 64))
(declare-fun var76073 () (_ BitVec 64))
(declare-fun var76074 () (_ BitVec 64))
(declare-fun temp2_179 () (_ BitVec 64))
(declare-fun temp2_180 () (_ BitVec 64))
(declare-fun temp2_181 () (_ BitVec 64))
(declare-fun temp2_182 () (_ BitVec 64))
(declare-fun temp2_177 () (_ BitVec 64))
(declare-fun temp2_183 () (_ BitVec 64))
(declare-fun temp2_184 () (_ BitVec 64))
(declare-fun temp2_185 () (_ BitVec 64))
(declare-fun temp2_178 () (_ BitVec 64))
(declare-fun temp2_187 () (_ BitVec 64))
(declare-fun temp2_188 () (_ BitVec 64))
(declare-fun temp2_189 () (_ BitVec 64))
(declare-fun temp2_190 () (_ BitVec 64))
(declare-fun temp2_191 () (_ BitVec 64))
(declare-fun temp2_192 () (_ BitVec 64))
(declare-fun temp2_193 () (_ BitVec 64))
(declare-fun temp2_176 () (_ BitVec 64))
(declare-fun temp2_194 () (_ BitVec 64))
(declare-fun var76078 () (_ BitVec 64))
(declare-fun var76079 () (_ BitVec 64))
(declare-fun temp2_198 () (_ BitVec 64))
(declare-fun temp2_199 () (_ BitVec 64))
(declare-fun temp2_200 () (_ BitVec 64))
(declare-fun temp2_201 () (_ BitVec 64))
(declare-fun temp2_196 () (_ BitVec 64))
(declare-fun temp2_202 () (_ BitVec 64))
(declare-fun temp2_203 () (_ BitVec 64))
(declare-fun temp2_204 () (_ BitVec 64))
(declare-fun temp2_197 () (_ BitVec 64))
(declare-fun temp2_206 () (_ BitVec 64))
(declare-fun temp2_207 () (_ BitVec 64))
(declare-fun temp2_208 () (_ BitVec 64))
(declare-fun temp2_209 () (_ BitVec 64))
(declare-fun temp2_210 () (_ BitVec 64))
(declare-fun temp2_211 () (_ BitVec 64))
(declare-fun temp2_212 () (_ BitVec 64))
(declare-fun temp2_195 () (_ BitVec 64))
(declare-fun temp2_213 () (_ BitVec 64))
(declare-fun var76083 () (_ BitVec 64))
(declare-fun var76084 () (_ BitVec 64))
(declare-fun temp2_214 () (_ BitVec 64))
(declare-fun var207949 () (_ BitVec 64))
(declare-fun var142387 () (_ BitVec 64))
(declare-fun temp2_215 () (_ BitVec 64))
(declare-fun var142390 () (_ BitVec 64))
(declare-fun temp2_216 () (_ BitVec 64))
(declare-fun temp2_217 () (_ BitVec 64))
(declare-fun var142392 () (_ BitVec 64))
(declare-fun temp2_218 () (_ BitVec 64))
(declare-fun var273382 () (_ BitVec 64))
(declare-fun temp2_219 () (_ BitVec 64))
(declare-fun temp2_220 () (_ BitVec 64))
(declare-fun var404016 () (_ BitVec 64))
(declare-fun temp2_221 () (_ BitVec 64))
(declare-fun var142393 () (_ BitVec 64))
(declare-fun temp2_222 () (_ BitVec 64))
(declare-fun var470093 () (_ BitVec 64))
(declare-fun var142406 () (_ BitVec 64))
(declare-fun var142407 () (_ BitVec 64))
(declare-fun temp2_227 () (_ BitVec 64))
(declare-fun temp2_228 () (_ BitVec 64))
(declare-fun temp2_229 () (_ BitVec 64))
(declare-fun temp2_230 () (_ BitVec 64))
(declare-fun temp2_225 () (_ BitVec 64))
(declare-fun temp2_231 () (_ BitVec 64))
(declare-fun temp2_232 () (_ BitVec 64))
(declare-fun temp2_233 () (_ BitVec 64))
(declare-fun temp2_226 () (_ BitVec 64))
(declare-fun temp2_235 () (_ BitVec 64))
(declare-fun temp2_236 () (_ BitVec 64))
(declare-fun temp2_237 () (_ BitVec 64))
(declare-fun temp2_238 () (_ BitVec 64))
(declare-fun temp2_239 () (_ BitVec 64))
(declare-fun temp2_224 () (_ BitVec 64))
(declare-fun temp2_240 () (_ BitVec 64))
(declare-fun var76111 () (_ BitVec 64))
(declare-fun temp2_244 () (_ BitVec 64))
(declare-fun temp2_245 () (_ BitVec 64))
(declare-fun temp2_246 () (_ BitVec 64))
(declare-fun temp2_247 () (_ BitVec 64))
(declare-fun temp2_242 () (_ BitVec 64))
(declare-fun temp2_248 () (_ BitVec 64))
(declare-fun temp2_249 () (_ BitVec 64))
(declare-fun temp2_250 () (_ BitVec 64))
(declare-fun temp2_243 () (_ BitVec 64))
(declare-fun temp2_252 () (_ BitVec 64))
(declare-fun temp2_253 () (_ BitVec 64))
(declare-fun temp2_254 () (_ BitVec 64))
(declare-fun temp2_255 () (_ BitVec 64))
(declare-fun temp2_241 () (_ BitVec 64))
(declare-fun temp2_256 () (_ BitVec 64))
(declare-fun var76113 () (_ BitVec 64))
(assert (or (= ARGNAME_padding_NAMEEND #x0000000000000001)
    (= ARGNAME_padding_NAMEEND #x0000000000000002)
    (= ARGNAME_padding_NAMEEND #x0000000000000003)))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp2_1 #x0000000000000005))
(assert (= var75949
   (ite (= ARGNAME_orig_input_NAMEEND_DIM temp2_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2_2 #x0000000000000001))
(assert (= var75949 temp2_2))
(assert (= temp2_3 #x0000000000000005))
(assert (= var75972
   (ite (= ARGNAME_orig_output_NAMEEND_DIM temp2_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2_4 #x0000000000000001))
(assert (= var75972 temp2_4))
(assert (= temp2_5 #x0000000000000005))
(assert (= var75993
   (ite (= ARGNAME_grad_NAMEEND_DIM temp2_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2_6 #x0000000000000001))
(assert (= var75993 temp2_6))
(assert (= temp2_7 #x0000000000000000))
(assert (= temp2_8 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp2_7)))
(assert (= temp2_9 #x0000000000000001))
(assert (= temp2_10 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp2_9)))
(assert (= temp2_11 #x0000000000000002))
(assert (= temp2_12 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp2_11)))
(assert (= temp2_13 #x0000000000000003))
(assert (= temp2_14 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp2_13)))
(assert (= temp2_15 #x0000000000000004))
(assert (= temp2_16 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp2_15)))
(assert (= temp2_17 #x0000000000000005))
(assert (= temp2_18 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp2_17)))
(assert (= temp2_22 #x0000000000000002))
(assert (= temp2_23 #x0000000000000003))
(assert (= temp2_24 #x0000000000000002))
(assert (= temp2_25 #x0000000000000003))
(assert (= temp2_20
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_24)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2_25))
        (bvsub ARGNAME_orig_input_NAMEEND_DIM temp2_23)
        (bvsub ARGNAME_orig_input_NAMEEND_DIM temp2_22))))
(assert (= temp2_26 #x0000000000000002))
(assert (= temp2_27 #x0000000000000003))
(assert (= temp2_28 #x0000000000000003))
(assert (= temp2_21 (ite (= temp2_20 temp2_28) temp2_27 temp2_26)))
(assert (= temp2_30 #x0000000000000002))
(assert (= temp2_31 #x0000000000000004))
(assert (= temp2_32 #x0000000000000001))
(assert (= temp2_33 #x0000000000000002))
(assert (= temp2_34 #x0000000000000003))
(assert (= temp2_35 #x0000000000000000))
(assert (= temp2_36 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_35)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp2_36))
                temp2_34
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_32)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp2_33))
                     temp2_31
                     temp2_30))))
  (= temp2_19 a!1)))
(assert (= temp2_37 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp2_19)))
(assert (= var76040 temp2_37))
(assert (= temp2_41 #x0000000000000002))
(assert (= temp2_42 #x0000000000000003))
(assert (= temp2_43 #x0000000000000002))
(assert (= temp2_44 #x0000000000000003))
(assert (= temp2_39
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_43)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2_44))
        (bvsub ARGNAME_orig_input_NAMEEND_DIM temp2_42)
        (bvsub ARGNAME_orig_input_NAMEEND_DIM temp2_41))))
(assert (= temp2_45 #x0000000000000002))
(assert (= temp2_46 #x0000000000000003))
(assert (= temp2_47 #x0000000000000003))
(assert (= temp2_40 (ite (= temp2_39 temp2_47) temp2_46 temp2_45)))
(assert (= temp2_49 #x0000000000000001))
(assert (= temp2_50 #x0000000000000003))
(assert (= temp2_51 #x0000000000000001))
(assert (= temp2_52 #x0000000000000002))
(assert (= temp2_53 #x0000000000000002))
(assert (= temp2_54 #x0000000000000000))
(assert (= temp2_55 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_54)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp2_55))
                temp2_53
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_51)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp2_52))
                     temp2_50
                     temp2_49))))
  (= temp2_38 a!1)))
(assert (= temp2_56 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp2_38)))
(assert (= var76044 temp2_56))
(assert (= temp2_60 #x0000000000000002))
(assert (= temp2_61 #x0000000000000003))
(assert (= temp2_62 #x0000000000000002))
(assert (= temp2_63 #x0000000000000003))
(assert (= temp2_58
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_62)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2_63))
        (bvsub ARGNAME_orig_input_NAMEEND_DIM temp2_61)
        (bvsub ARGNAME_orig_input_NAMEEND_DIM temp2_60))))
(assert (= temp2_64 #x0000000000000002))
(assert (= temp2_65 #x0000000000000003))
(assert (= temp2_66 #x0000000000000003))
(assert (= temp2_59 (ite (= temp2_58 temp2_66) temp2_65 temp2_64)))
(assert (= temp2_68 #x0000000000000000))
(assert (= temp2_69 #x0000000000000002))
(assert (= temp2_70 #x0000000000000001))
(assert (= temp2_71 #x0000000000000002))
(assert (= temp2_72 #x0000000000000001))
(assert (= temp2_73 #x0000000000000000))
(assert (= temp2_74 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_73)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp2_74))
                temp2_72
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_70)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp2_71))
                     temp2_69
                     temp2_68))))
  (= temp2_57 a!1)))
(assert (= temp2_75 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp2_57)))
(assert (= var76048 temp2_75))
(assert (= temp2_76 #x0000000000000000))
(assert (= temp2_77 (select ARGNAME_ksize_NAMEEND_VAL temp2_76)))
(assert (= temp2_78 #x0000000000000001))
(assert (= temp2_79 (select ARGNAME_ksize_NAMEEND_VAL temp2_78)))
(assert (= temp2_80 #x0000000000000002))
(assert (= temp2_81 (select ARGNAME_ksize_NAMEEND_VAL temp2_80)))
(assert (= temp2_82 #x0000000000000003))
(assert (= temp2_83 (select ARGNAME_ksize_NAMEEND_VAL temp2_82)))
(assert (= temp2_84 #x0000000000000004))
(assert (= temp2_85 (select ARGNAME_ksize_NAMEEND_VAL temp2_84)))
(assert (= temp2_86 #x0000000000000005))
(assert (= temp2_87 (select ARGNAME_ksize_NAMEEND_VAL temp2_86)))
(assert (= temp2_91 #x0000000000000002))
(assert (= temp2_92 #x0000000000000003))
(assert (= temp2_93 #x0000000000000002))
(assert (= temp2_94 #x0000000000000003))
(assert (= temp2_89
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_93)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2_94))
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp2_92)
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp2_91))))
(assert (= temp2_95 #x0000000000000002))
(assert (= temp2_96 #x0000000000000003))
(assert (= temp2_97 #x0000000000000003))
(assert (= temp2_90 (ite (= temp2_89 temp2_97) temp2_96 temp2_95)))
(assert (= temp2_99 #x0000000000000002))
(assert (= temp2_100 #x0000000000000004))
(assert (= temp2_101 #x0000000000000001))
(assert (= temp2_102 #x0000000000000002))
(assert (= temp2_103 #x0000000000000003))
(assert (= temp2_104 #x0000000000000000))
(assert (= temp2_105 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_104)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp2_105))
                temp2_103
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_101)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp2_102))
                     temp2_100
                     temp2_99))))
  (= temp2_88 a!1)))
(assert (= temp2_106 (select ARGNAME_ksize_NAMEEND_VAL temp2_88)))
(assert (= var76055 temp2_106))
(assert (= var76056 var76055))
(assert (= temp2_110 #x0000000000000002))
(assert (= temp2_111 #x0000000000000003))
(assert (= temp2_112 #x0000000000000002))
(assert (= temp2_113 #x0000000000000003))
(assert (= temp2_108
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_112)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2_113))
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp2_111)
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp2_110))))
(assert (= temp2_114 #x0000000000000002))
(assert (= temp2_115 #x0000000000000003))
(assert (= temp2_116 #x0000000000000003))
(assert (= temp2_109 (ite (= temp2_108 temp2_116) temp2_115 temp2_114)))
(assert (= temp2_118 #x0000000000000001))
(assert (= temp2_119 #x0000000000000003))
(assert (= temp2_120 #x0000000000000001))
(assert (= temp2_121 #x0000000000000002))
(assert (= temp2_122 #x0000000000000002))
(assert (= temp2_123 #x0000000000000000))
(assert (= temp2_124 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_123)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp2_124))
                temp2_122
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_120)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp2_121))
                     temp2_119
                     temp2_118))))
  (= temp2_107 a!1)))
(assert (= temp2_125 (select ARGNAME_ksize_NAMEEND_VAL temp2_107)))
(assert (= var76060 temp2_125))
(assert (= var76061 var76060))
(assert (= temp2_129 #x0000000000000002))
(assert (= temp2_130 #x0000000000000003))
(assert (= temp2_131 #x0000000000000002))
(assert (= temp2_132 #x0000000000000003))
(assert (= temp2_127
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_131)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2_132))
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp2_130)
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp2_129))))
(assert (= temp2_133 #x0000000000000002))
(assert (= temp2_134 #x0000000000000003))
(assert (= temp2_135 #x0000000000000003))
(assert (= temp2_128 (ite (= temp2_127 temp2_135) temp2_134 temp2_133)))
(assert (= temp2_137 #x0000000000000000))
(assert (= temp2_138 #x0000000000000002))
(assert (= temp2_139 #x0000000000000001))
(assert (= temp2_140 #x0000000000000002))
(assert (= temp2_141 #x0000000000000001))
(assert (= temp2_142 #x0000000000000000))
(assert (= temp2_143 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_142)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp2_143))
                temp2_141
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_139)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp2_140))
                     temp2_138
                     temp2_137))))
  (= temp2_126 a!1)))
(assert (= temp2_144 (select ARGNAME_ksize_NAMEEND_VAL temp2_126)))
(assert (= var76065 temp2_144))
(assert (= var76066 var76065))
(assert (= temp2_145 #x0000000000000000))
(assert (= temp2_146 (select ARGNAME_strides_NAMEEND_VAL temp2_145)))
(assert (= temp2_147 #x0000000000000001))
(assert (= temp2_148 (select ARGNAME_strides_NAMEEND_VAL temp2_147)))
(assert (= temp2_149 #x0000000000000002))
(assert (= temp2_150 (select ARGNAME_strides_NAMEEND_VAL temp2_149)))
(assert (= temp2_151 #x0000000000000003))
(assert (= temp2_152 (select ARGNAME_strides_NAMEEND_VAL temp2_151)))
(assert (= temp2_153 #x0000000000000004))
(assert (= temp2_154 (select ARGNAME_strides_NAMEEND_VAL temp2_153)))
(assert (= temp2_155 #x0000000000000005))
(assert (= temp2_156 (select ARGNAME_strides_NAMEEND_VAL temp2_155)))
(assert (= temp2_160 #x0000000000000002))
(assert (= temp2_161 #x0000000000000003))
(assert (= temp2_162 #x0000000000000002))
(assert (= temp2_163 #x0000000000000003))
(assert (= temp2_158
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_162)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2_163))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp2_161)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp2_160))))
(assert (= temp2_164 #x0000000000000002))
(assert (= temp2_165 #x0000000000000003))
(assert (= temp2_166 #x0000000000000003))
(assert (= temp2_159 (ite (= temp2_158 temp2_166) temp2_165 temp2_164)))
(assert (= temp2_168 #x0000000000000002))
(assert (= temp2_169 #x0000000000000004))
(assert (= temp2_170 #x0000000000000001))
(assert (= temp2_171 #x0000000000000002))
(assert (= temp2_172 #x0000000000000003))
(assert (= temp2_173 #x0000000000000000))
(assert (= temp2_174 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_173)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp2_174))
                temp2_172
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_170)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp2_171))
                     temp2_169
                     temp2_168))))
  (= temp2_157 a!1)))
(assert (= temp2_175 (select ARGNAME_strides_NAMEEND_VAL temp2_157)))
(assert (= var76073 temp2_175))
(assert (= var76074 var76073))
(assert (= temp2_179 #x0000000000000002))
(assert (= temp2_180 #x0000000000000003))
(assert (= temp2_181 #x0000000000000002))
(assert (= temp2_182 #x0000000000000003))
(assert (= temp2_177
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_181)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2_182))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp2_180)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp2_179))))
(assert (= temp2_183 #x0000000000000002))
(assert (= temp2_184 #x0000000000000003))
(assert (= temp2_185 #x0000000000000003))
(assert (= temp2_178 (ite (= temp2_177 temp2_185) temp2_184 temp2_183)))
(assert (= temp2_187 #x0000000000000001))
(assert (= temp2_188 #x0000000000000003))
(assert (= temp2_189 #x0000000000000001))
(assert (= temp2_190 #x0000000000000002))
(assert (= temp2_191 #x0000000000000002))
(assert (= temp2_192 #x0000000000000000))
(assert (= temp2_193 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_192)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp2_193))
                temp2_191
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_189)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp2_190))
                     temp2_188
                     temp2_187))))
  (= temp2_176 a!1)))
(assert (= temp2_194 (select ARGNAME_strides_NAMEEND_VAL temp2_176)))
(assert (= var76078 temp2_194))
(assert (= var76079 var76078))
(assert (= temp2_198 #x0000000000000002))
(assert (= temp2_199 #x0000000000000003))
(assert (= temp2_200 #x0000000000000002))
(assert (= temp2_201 #x0000000000000003))
(assert (= temp2_196
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_200)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2_201))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp2_199)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp2_198))))
(assert (= temp2_202 #x0000000000000002))
(assert (= temp2_203 #x0000000000000003))
(assert (= temp2_204 #x0000000000000003))
(assert (= temp2_197 (ite (= temp2_196 temp2_204) temp2_203 temp2_202)))
(assert (= temp2_206 #x0000000000000000))
(assert (= temp2_207 #x0000000000000002))
(assert (= temp2_208 #x0000000000000001))
(assert (= temp2_209 #x0000000000000002))
(assert (= temp2_210 #x0000000000000001))
(assert (= temp2_211 #x0000000000000000))
(assert (= temp2_212 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_211)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp2_212))
                temp2_210
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_208)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp2_209))
                     temp2_207
                     temp2_206))))
  (= temp2_195 a!1)))
(assert (= temp2_213 (select ARGNAME_strides_NAMEEND_VAL temp2_195)))
(assert (= var76083 temp2_213))
(assert (= var76084 var76083))
(assert (= temp2_214 #x0000000000000003))
(assert (= var207949 temp2_214))
(assert (= var142387 var207949))
(assert (= temp2_215 #x0000000000000000))
(assert (= var142390
   (ite (= var142387 temp2_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp2_216 #x0000000000000000))
(assert (= var142390 temp2_216))
(assert (= temp2_217 #x0000000000000000))
(assert (= var142392 temp2_217))
(assert (= temp2_218 #x0000000000000003))
(assert (= var273382
   (ite (= ARGNAME_padding_NAMEEND temp2_218)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2_219 #x0000000000000000))
(assert (= var273382 temp2_219))
(assert (= temp2_220 #x0000000000000001))
(assert (= var404016 temp2_220))
(assert (= temp2_221 #x0000000000000001))
(assert (= var142393 (bvadd var142392 temp2_221)))
(assert (= temp2_222 #x0000000000000003))
(assert (= var470093 temp2_222))
(assert (= var142406 var470093))
(assert (= var142407
   (ite (bvslt var142393 var142406) #x0000000000000001 #x0000000000000000)))
(assert (= temp2_227 #x0000000000000002))
(assert (= temp2_228 #x0000000000000003))
(assert (= temp2_229 #x0000000000000002))
(assert (= temp2_230 #x0000000000000003))
(assert (= temp2_225
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_229)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2_230))
        (bvsub ARGNAME_orig_input_NAMEEND_DIM temp2_228)
        (bvsub ARGNAME_orig_input_NAMEEND_DIM temp2_227))))
(assert (= temp2_231 #x0000000000000002))
(assert (= temp2_232 #x0000000000000003))
(assert (= temp2_233 #x0000000000000003))
(assert (= temp2_226 (ite (= temp2_225 temp2_233) temp2_232 temp2_231)))
(assert (= temp2_235 #x0000000000000001))
(assert (= temp2_236 #x0000000000000005))
(assert (= temp2_237 #x0000000000000001))
(assert (= temp2_238 #x0000000000000001))
(assert (= temp2_239 #x0000000000000002))
(assert (= temp2_224
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_238)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2_239))
        temp2_237
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp2_236)
             temp2_226
             (bvadd temp2_226 temp2_235)))))
(assert (= temp2_240 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp2_224)))
(assert (= var76111 temp2_240))
(assert (= temp2_244 #x0000000000000002))
(assert (= temp2_245 #x0000000000000003))
(assert (= temp2_246 #x0000000000000002))
(assert (= temp2_247 #x0000000000000003))
(assert (= temp2_242
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_246)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2_247))
        (bvsub ARGNAME_orig_input_NAMEEND_DIM temp2_245)
        (bvsub ARGNAME_orig_input_NAMEEND_DIM temp2_244))))
(assert (= temp2_248 #x0000000000000002))
(assert (= temp2_249 #x0000000000000003))
(assert (= temp2_250 #x0000000000000003))
(assert (= temp2_243 (ite (= temp2_242 temp2_250) temp2_249 temp2_248)))
(assert (= temp2_252 #x0000000000000000))
(assert (= temp2_253 #x0000000000000001))
(assert (= temp2_254 #x0000000000000005))
(assert (= temp2_255 #x0000000000000004))
(assert (= temp2_241
   (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp2_255)
        temp2_243
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp2_254)
             (bvadd temp2_243 temp2_253)
             temp2_252))))
(assert (= temp2_256 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp2_241)))
(assert (= var76113 temp2_256))
(model-add temp2_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp2_2 () (_ BitVec 64) #x0000000000000001)
(model-add var75949 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_orig_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))

























