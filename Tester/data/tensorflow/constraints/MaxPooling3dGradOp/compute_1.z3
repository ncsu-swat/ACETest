(declare-fun temp1_1 () (_ BitVec 64))
(declare-fun temp1_2 () (_ BitVec 64))
(declare-fun var75949 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_orig_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp1_3 () (_ BitVec 64))
(declare-fun ARGNAME_orig_output_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var75972 () (_ BitVec 64))
(declare-fun temp1_4 () (_ BitVec 64))
(declare-fun temp1_5 () (_ BitVec 64))
(declare-fun ARGNAME_grad_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var75993 () (_ BitVec 64))
(declare-fun temp1_6 () (_ BitVec 64))
(declare-fun temp1_7 () (_ BitVec 64))
(declare-fun ARGNAME_orig_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1_8 () (_ BitVec 64))
(declare-fun temp1_9 () (_ BitVec 64))
(declare-fun temp1_10 () (_ BitVec 64))
(declare-fun temp1_11 () (_ BitVec 64))
(declare-fun temp1_12 () (_ BitVec 64))
(declare-fun temp1_13 () (_ BitVec 64))
(declare-fun temp1_14 () (_ BitVec 64))
(declare-fun temp1_15 () (_ BitVec 64))
(declare-fun temp1_16 () (_ BitVec 64))
(declare-fun temp1_17 () (_ BitVec 64))
(declare-fun temp1_18 () (_ BitVec 64))
(declare-fun temp1_22 () (_ BitVec 64))
(declare-fun temp1_23 () (_ BitVec 64))
(declare-fun temp1_24 () (_ BitVec 64))
(declare-fun temp1_25 () (_ BitVec 64))
(declare-fun temp1_20 () (_ BitVec 64))
(declare-fun temp1_26 () (_ BitVec 64))
(declare-fun temp1_27 () (_ BitVec 64))
(declare-fun temp1_28 () (_ BitVec 64))
(declare-fun temp1_21 () (_ BitVec 64))
(declare-fun temp1_30 () (_ BitVec 64))
(declare-fun temp1_31 () (_ BitVec 64))
(declare-fun temp1_32 () (_ BitVec 64))
(declare-fun temp1_33 () (_ BitVec 64))
(declare-fun temp1_34 () (_ BitVec 64))
(declare-fun temp1_35 () (_ BitVec 64))
(declare-fun temp1_36 () (_ BitVec 64))
(declare-fun temp1_19 () (_ BitVec 64))
(declare-fun temp1_37 () (_ BitVec 64))
(declare-fun var76040 () (_ BitVec 64))
(declare-fun temp1_41 () (_ BitVec 64))
(declare-fun temp1_42 () (_ BitVec 64))
(declare-fun temp1_43 () (_ BitVec 64))
(declare-fun temp1_44 () (_ BitVec 64))
(declare-fun temp1_39 () (_ BitVec 64))
(declare-fun temp1_45 () (_ BitVec 64))
(declare-fun temp1_46 () (_ BitVec 64))
(declare-fun temp1_47 () (_ BitVec 64))
(declare-fun temp1_40 () (_ BitVec 64))
(declare-fun temp1_49 () (_ BitVec 64))
(declare-fun temp1_50 () (_ BitVec 64))
(declare-fun temp1_51 () (_ BitVec 64))
(declare-fun temp1_52 () (_ BitVec 64))
(declare-fun temp1_53 () (_ BitVec 64))
(declare-fun temp1_54 () (_ BitVec 64))
(declare-fun temp1_55 () (_ BitVec 64))
(declare-fun temp1_38 () (_ BitVec 64))
(declare-fun temp1_56 () (_ BitVec 64))
(declare-fun var76044 () (_ BitVec 64))
(declare-fun temp1_60 () (_ BitVec 64))
(declare-fun temp1_61 () (_ BitVec 64))
(declare-fun temp1_62 () (_ BitVec 64))
(declare-fun temp1_63 () (_ BitVec 64))
(declare-fun temp1_58 () (_ BitVec 64))
(declare-fun temp1_64 () (_ BitVec 64))
(declare-fun temp1_65 () (_ BitVec 64))
(declare-fun temp1_66 () (_ BitVec 64))
(declare-fun temp1_59 () (_ BitVec 64))
(declare-fun temp1_68 () (_ BitVec 64))
(declare-fun temp1_69 () (_ BitVec 64))
(declare-fun temp1_70 () (_ BitVec 64))
(declare-fun temp1_71 () (_ BitVec 64))
(declare-fun temp1_72 () (_ BitVec 64))
(declare-fun temp1_73 () (_ BitVec 64))
(declare-fun temp1_74 () (_ BitVec 64))
(declare-fun temp1_57 () (_ BitVec 64))
(declare-fun temp1_75 () (_ BitVec 64))
(declare-fun var76048 () (_ BitVec 64))
(declare-fun temp1_76 () (_ BitVec 64))
(declare-fun ARGNAME_ksize_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1_77 () (_ BitVec 64))
(declare-fun temp1_78 () (_ BitVec 64))
(declare-fun temp1_79 () (_ BitVec 64))
(declare-fun temp1_80 () (_ BitVec 64))
(declare-fun temp1_81 () (_ BitVec 64))
(declare-fun temp1_82 () (_ BitVec 64))
(declare-fun temp1_83 () (_ BitVec 64))
(declare-fun temp1_84 () (_ BitVec 64))
(declare-fun temp1_85 () (_ BitVec 64))
(declare-fun temp1_86 () (_ BitVec 64))
(declare-fun temp1_87 () (_ BitVec 64))
(declare-fun temp1_91 () (_ BitVec 64))
(declare-fun temp1_92 () (_ BitVec 64))
(declare-fun temp1_93 () (_ BitVec 64))
(declare-fun temp1_94 () (_ BitVec 64))
(declare-fun ARGNAME_ksize_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1_89 () (_ BitVec 64))
(declare-fun temp1_95 () (_ BitVec 64))
(declare-fun temp1_96 () (_ BitVec 64))
(declare-fun temp1_97 () (_ BitVec 64))
(declare-fun temp1_90 () (_ BitVec 64))
(declare-fun temp1_99 () (_ BitVec 64))
(declare-fun temp1_100 () (_ BitVec 64))
(declare-fun temp1_101 () (_ BitVec 64))
(declare-fun temp1_102 () (_ BitVec 64))
(declare-fun temp1_103 () (_ BitVec 64))
(declare-fun temp1_104 () (_ BitVec 64))
(declare-fun temp1_105 () (_ BitVec 64))
(declare-fun temp1_88 () (_ BitVec 64))
(declare-fun temp1_106 () (_ BitVec 64))
(declare-fun var76055 () (_ BitVec 64))
(declare-fun var76056 () (_ BitVec 64))
(declare-fun temp1_110 () (_ BitVec 64))
(declare-fun temp1_111 () (_ BitVec 64))
(declare-fun temp1_112 () (_ BitVec 64))
(declare-fun temp1_113 () (_ BitVec 64))
(declare-fun temp1_108 () (_ BitVec 64))
(declare-fun temp1_114 () (_ BitVec 64))
(declare-fun temp1_115 () (_ BitVec 64))
(declare-fun temp1_116 () (_ BitVec 64))
(declare-fun temp1_109 () (_ BitVec 64))
(declare-fun temp1_118 () (_ BitVec 64))
(declare-fun temp1_119 () (_ BitVec 64))
(declare-fun temp1_120 () (_ BitVec 64))
(declare-fun temp1_121 () (_ BitVec 64))
(declare-fun temp1_122 () (_ BitVec 64))
(declare-fun temp1_123 () (_ BitVec 64))
(declare-fun temp1_124 () (_ BitVec 64))
(declare-fun temp1_107 () (_ BitVec 64))
(declare-fun temp1_125 () (_ BitVec 64))
(declare-fun var76060 () (_ BitVec 64))
(declare-fun var76061 () (_ BitVec 64))
(declare-fun temp1_129 () (_ BitVec 64))
(declare-fun temp1_130 () (_ BitVec 64))
(declare-fun temp1_131 () (_ BitVec 64))
(declare-fun temp1_132 () (_ BitVec 64))
(declare-fun temp1_127 () (_ BitVec 64))
(declare-fun temp1_133 () (_ BitVec 64))
(declare-fun temp1_134 () (_ BitVec 64))
(declare-fun temp1_135 () (_ BitVec 64))
(declare-fun temp1_128 () (_ BitVec 64))
(declare-fun temp1_137 () (_ BitVec 64))
(declare-fun temp1_138 () (_ BitVec 64))
(declare-fun temp1_139 () (_ BitVec 64))
(declare-fun temp1_140 () (_ BitVec 64))
(declare-fun temp1_141 () (_ BitVec 64))
(declare-fun temp1_142 () (_ BitVec 64))
(declare-fun temp1_143 () (_ BitVec 64))
(declare-fun temp1_126 () (_ BitVec 64))
(declare-fun temp1_144 () (_ BitVec 64))
(declare-fun var76065 () (_ BitVec 64))
(declare-fun var76066 () (_ BitVec 64))
(declare-fun temp1_145 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1_146 () (_ BitVec 64))
(declare-fun temp1_147 () (_ BitVec 64))
(declare-fun temp1_148 () (_ BitVec 64))
(declare-fun temp1_149 () (_ BitVec 64))
(declare-fun temp1_150 () (_ BitVec 64))
(declare-fun temp1_151 () (_ BitVec 64))
(declare-fun temp1_152 () (_ BitVec 64))
(declare-fun temp1_153 () (_ BitVec 64))
(declare-fun temp1_154 () (_ BitVec 64))
(declare-fun temp1_155 () (_ BitVec 64))
(declare-fun temp1_156 () (_ BitVec 64))
(declare-fun temp1_160 () (_ BitVec 64))
(declare-fun temp1_161 () (_ BitVec 64))
(declare-fun temp1_162 () (_ BitVec 64))
(declare-fun temp1_163 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1_158 () (_ BitVec 64))
(declare-fun temp1_164 () (_ BitVec 64))
(declare-fun temp1_165 () (_ BitVec 64))
(declare-fun temp1_166 () (_ BitVec 64))
(declare-fun temp1_159 () (_ BitVec 64))
(declare-fun temp1_168 () (_ BitVec 64))
(declare-fun temp1_169 () (_ BitVec 64))
(declare-fun temp1_170 () (_ BitVec 64))
(declare-fun temp1_171 () (_ BitVec 64))
(declare-fun temp1_172 () (_ BitVec 64))
(declare-fun temp1_173 () (_ BitVec 64))
(declare-fun temp1_174 () (_ BitVec 64))
(declare-fun temp1_157 () (_ BitVec 64))
(declare-fun temp1_175 () (_ BitVec 64))
(declare-fun var76073 () (_ BitVec 64))
(declare-fun var76074 () (_ BitVec 64))
(declare-fun temp1_179 () (_ BitVec 64))
(declare-fun temp1_180 () (_ BitVec 64))
(declare-fun temp1_181 () (_ BitVec 64))
(declare-fun temp1_182 () (_ BitVec 64))
(declare-fun temp1_177 () (_ BitVec 64))
(declare-fun temp1_183 () (_ BitVec 64))
(declare-fun temp1_184 () (_ BitVec 64))
(declare-fun temp1_185 () (_ BitVec 64))
(declare-fun temp1_178 () (_ BitVec 64))
(declare-fun temp1_187 () (_ BitVec 64))
(declare-fun temp1_188 () (_ BitVec 64))
(declare-fun temp1_189 () (_ BitVec 64))
(declare-fun temp1_190 () (_ BitVec 64))
(declare-fun temp1_191 () (_ BitVec 64))
(declare-fun temp1_192 () (_ BitVec 64))
(declare-fun temp1_193 () (_ BitVec 64))
(declare-fun temp1_176 () (_ BitVec 64))
(declare-fun temp1_194 () (_ BitVec 64))
(declare-fun var76078 () (_ BitVec 64))
(declare-fun var76079 () (_ BitVec 64))
(declare-fun temp1_198 () (_ BitVec 64))
(declare-fun temp1_199 () (_ BitVec 64))
(declare-fun temp1_200 () (_ BitVec 64))
(declare-fun temp1_201 () (_ BitVec 64))
(declare-fun temp1_196 () (_ BitVec 64))
(declare-fun temp1_202 () (_ BitVec 64))
(declare-fun temp1_203 () (_ BitVec 64))
(declare-fun temp1_204 () (_ BitVec 64))
(declare-fun temp1_197 () (_ BitVec 64))
(declare-fun temp1_206 () (_ BitVec 64))
(declare-fun temp1_207 () (_ BitVec 64))
(declare-fun temp1_208 () (_ BitVec 64))
(declare-fun temp1_209 () (_ BitVec 64))
(declare-fun temp1_210 () (_ BitVec 64))
(declare-fun temp1_211 () (_ BitVec 64))
(declare-fun temp1_212 () (_ BitVec 64))
(declare-fun temp1_195 () (_ BitVec 64))
(declare-fun temp1_213 () (_ BitVec 64))
(declare-fun var76083 () (_ BitVec 64))
(declare-fun var76084 () (_ BitVec 64))
(declare-fun temp1_214 () (_ BitVec 64))
(declare-fun var207949 () (_ BitVec 64))
(declare-fun var142387 () (_ BitVec 64))
(declare-fun temp1_215 () (_ BitVec 64))
(declare-fun var142390 () (_ BitVec 64))
(declare-fun temp1_216 () (_ BitVec 64))
(declare-fun temp1_217 () (_ BitVec 64))
(declare-fun var142392 () (_ BitVec 64))
(declare-fun temp1_218 () (_ BitVec 64))
(declare-fun var273382 () (_ BitVec 64))
(declare-fun temp1_219 () (_ BitVec 64))
(assert (or (= ARGNAME_padding_NAMEEND #x0000000000000001)
    (= ARGNAME_padding_NAMEEND #x0000000000000002)
    (= ARGNAME_padding_NAMEEND #x0000000000000003)))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp1_1 #x0000000000000005))
(assert (= var75949
   (ite (= ARGNAME_orig_input_NAMEEND_DIM temp1_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_2 #x0000000000000001))
(assert (= var75949 temp1_2))
(assert (= temp1_3 #x0000000000000005))
(assert (= var75972
   (ite (= ARGNAME_orig_output_NAMEEND_DIM temp1_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_4 #x0000000000000001))
(assert (= var75972 temp1_4))
(assert (= temp1_5 #x0000000000000005))
(assert (= var75993
   (ite (= ARGNAME_grad_NAMEEND_DIM temp1_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_6 #x0000000000000001))
(assert (= var75993 temp1_6))
(assert (= temp1_7 #x0000000000000000))
(assert (= temp1_8 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp1_7)))
(assert (= temp1_9 #x0000000000000001))
(assert (= temp1_10 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp1_9)))
(assert (= temp1_11 #x0000000000000002))
(assert (= temp1_12 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp1_11)))
(assert (= temp1_13 #x0000000000000003))
(assert (= temp1_14 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp1_13)))
(assert (= temp1_15 #x0000000000000004))
(assert (= temp1_16 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp1_15)))
(assert (= temp1_17 #x0000000000000005))
(assert (= temp1_18 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp1_17)))
(assert (= temp1_22 #x0000000000000002))
(assert (= temp1_23 #x0000000000000003))
(assert (= temp1_24 #x0000000000000002))
(assert (= temp1_25 #x0000000000000003))
(assert (= temp1_20
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_24)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp1_25))
        (bvsub ARGNAME_orig_input_NAMEEND_DIM temp1_23)
        (bvsub ARGNAME_orig_input_NAMEEND_DIM temp1_22))))
(assert (= temp1_26 #x0000000000000002))
(assert (= temp1_27 #x0000000000000003))
(assert (= temp1_28 #x0000000000000003))
(assert (= temp1_21 (ite (= temp1_20 temp1_28) temp1_27 temp1_26)))
(assert (= temp1_30 #x0000000000000002))
(assert (= temp1_31 #x0000000000000004))
(assert (= temp1_32 #x0000000000000001))
(assert (= temp1_33 #x0000000000000002))
(assert (= temp1_34 #x0000000000000003))
(assert (= temp1_35 #x0000000000000000))
(assert (= temp1_36 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_35)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp1_36))
                temp1_34
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_32)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp1_33))
                     temp1_31
                     temp1_30))))
  (= temp1_19 a!1)))
(assert (= temp1_37 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp1_19)))
(assert (= var76040 temp1_37))
(assert (= temp1_41 #x0000000000000002))
(assert (= temp1_42 #x0000000000000003))
(assert (= temp1_43 #x0000000000000002))
(assert (= temp1_44 #x0000000000000003))
(assert (= temp1_39
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_43)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp1_44))
        (bvsub ARGNAME_orig_input_NAMEEND_DIM temp1_42)
        (bvsub ARGNAME_orig_input_NAMEEND_DIM temp1_41))))
(assert (= temp1_45 #x0000000000000002))
(assert (= temp1_46 #x0000000000000003))
(assert (= temp1_47 #x0000000000000003))
(assert (= temp1_40 (ite (= temp1_39 temp1_47) temp1_46 temp1_45)))
(assert (= temp1_49 #x0000000000000001))
(assert (= temp1_50 #x0000000000000003))
(assert (= temp1_51 #x0000000000000001))
(assert (= temp1_52 #x0000000000000002))
(assert (= temp1_53 #x0000000000000002))
(assert (= temp1_54 #x0000000000000000))
(assert (= temp1_55 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_54)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp1_55))
                temp1_53
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_51)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp1_52))
                     temp1_50
                     temp1_49))))
  (= temp1_38 a!1)))
(assert (= temp1_56 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp1_38)))
(assert (= var76044 temp1_56))
(assert (= temp1_60 #x0000000000000002))
(assert (= temp1_61 #x0000000000000003))
(assert (= temp1_62 #x0000000000000002))
(assert (= temp1_63 #x0000000000000003))
(assert (= temp1_58
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_62)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp1_63))
        (bvsub ARGNAME_orig_input_NAMEEND_DIM temp1_61)
        (bvsub ARGNAME_orig_input_NAMEEND_DIM temp1_60))))
(assert (= temp1_64 #x0000000000000002))
(assert (= temp1_65 #x0000000000000003))
(assert (= temp1_66 #x0000000000000003))
(assert (= temp1_59 (ite (= temp1_58 temp1_66) temp1_65 temp1_64)))
(assert (= temp1_68 #x0000000000000000))
(assert (= temp1_69 #x0000000000000002))
(assert (= temp1_70 #x0000000000000001))
(assert (= temp1_71 #x0000000000000002))
(assert (= temp1_72 #x0000000000000001))
(assert (= temp1_73 #x0000000000000000))
(assert (= temp1_74 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_73)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp1_74))
                temp1_72
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_70)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp1_71))
                     temp1_69
                     temp1_68))))
  (= temp1_57 a!1)))
(assert (= temp1_75 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp1_57)))
(assert (= var76048 temp1_75))
(assert (= temp1_76 #x0000000000000000))
(assert (= temp1_77 (select ARGNAME_ksize_NAMEEND_VAL temp1_76)))
(assert (= temp1_78 #x0000000000000001))
(assert (= temp1_79 (select ARGNAME_ksize_NAMEEND_VAL temp1_78)))
(assert (= temp1_80 #x0000000000000002))
(assert (= temp1_81 (select ARGNAME_ksize_NAMEEND_VAL temp1_80)))
(assert (= temp1_82 #x0000000000000003))
(assert (= temp1_83 (select ARGNAME_ksize_NAMEEND_VAL temp1_82)))
(assert (= temp1_84 #x0000000000000004))
(assert (= temp1_85 (select ARGNAME_ksize_NAMEEND_VAL temp1_84)))
(assert (= temp1_86 #x0000000000000005))
(assert (= temp1_87 (select ARGNAME_ksize_NAMEEND_VAL temp1_86)))
(assert (= temp1_91 #x0000000000000002))
(assert (= temp1_92 #x0000000000000003))
(assert (= temp1_93 #x0000000000000002))
(assert (= temp1_94 #x0000000000000003))
(assert (= temp1_89
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_93)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp1_94))
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp1_92)
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp1_91))))
(assert (= temp1_95 #x0000000000000002))
(assert (= temp1_96 #x0000000000000003))
(assert (= temp1_97 #x0000000000000003))
(assert (= temp1_90 (ite (= temp1_89 temp1_97) temp1_96 temp1_95)))
(assert (= temp1_99 #x0000000000000002))
(assert (= temp1_100 #x0000000000000004))
(assert (= temp1_101 #x0000000000000001))
(assert (= temp1_102 #x0000000000000002))
(assert (= temp1_103 #x0000000000000003))
(assert (= temp1_104 #x0000000000000000))
(assert (= temp1_105 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_104)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp1_105))
                temp1_103
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_101)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp1_102))
                     temp1_100
                     temp1_99))))
  (= temp1_88 a!1)))
(assert (= temp1_106 (select ARGNAME_ksize_NAMEEND_VAL temp1_88)))
(assert (= var76055 temp1_106))
(assert (= var76056 var76055))
(assert (= temp1_110 #x0000000000000002))
(assert (= temp1_111 #x0000000000000003))
(assert (= temp1_112 #x0000000000000002))
(assert (= temp1_113 #x0000000000000003))
(assert (= temp1_108
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_112)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp1_113))
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp1_111)
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp1_110))))
(assert (= temp1_114 #x0000000000000002))
(assert (= temp1_115 #x0000000000000003))
(assert (= temp1_116 #x0000000000000003))
(assert (= temp1_109 (ite (= temp1_108 temp1_116) temp1_115 temp1_114)))
(assert (= temp1_118 #x0000000000000001))
(assert (= temp1_119 #x0000000000000003))
(assert (= temp1_120 #x0000000000000001))
(assert (= temp1_121 #x0000000000000002))
(assert (= temp1_122 #x0000000000000002))
(assert (= temp1_123 #x0000000000000000))
(assert (= temp1_124 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_123)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp1_124))
                temp1_122
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_120)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp1_121))
                     temp1_119
                     temp1_118))))
  (= temp1_107 a!1)))
(assert (= temp1_125 (select ARGNAME_ksize_NAMEEND_VAL temp1_107)))
(assert (= var76060 temp1_125))
(assert (= var76061 var76060))
(assert (= temp1_129 #x0000000000000002))
(assert (= temp1_130 #x0000000000000003))
(assert (= temp1_131 #x0000000000000002))
(assert (= temp1_132 #x0000000000000003))
(assert (= temp1_127
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_131)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp1_132))
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp1_130)
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp1_129))))
(assert (= temp1_133 #x0000000000000002))
(assert (= temp1_134 #x0000000000000003))
(assert (= temp1_135 #x0000000000000003))
(assert (= temp1_128 (ite (= temp1_127 temp1_135) temp1_134 temp1_133)))
(assert (= temp1_137 #x0000000000000000))
(assert (= temp1_138 #x0000000000000002))
(assert (= temp1_139 #x0000000000000001))
(assert (= temp1_140 #x0000000000000002))
(assert (= temp1_141 #x0000000000000001))
(assert (= temp1_142 #x0000000000000000))
(assert (= temp1_143 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_142)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp1_143))
                temp1_141
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_139)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp1_140))
                     temp1_138
                     temp1_137))))
  (= temp1_126 a!1)))
(assert (= temp1_144 (select ARGNAME_ksize_NAMEEND_VAL temp1_126)))
(assert (= var76065 temp1_144))
(assert (= var76066 var76065))
(assert (= temp1_145 #x0000000000000000))
(assert (= temp1_146 (select ARGNAME_strides_NAMEEND_VAL temp1_145)))
(assert (= temp1_147 #x0000000000000001))
(assert (= temp1_148 (select ARGNAME_strides_NAMEEND_VAL temp1_147)))
(assert (= temp1_149 #x0000000000000002))
(assert (= temp1_150 (select ARGNAME_strides_NAMEEND_VAL temp1_149)))
(assert (= temp1_151 #x0000000000000003))
(assert (= temp1_152 (select ARGNAME_strides_NAMEEND_VAL temp1_151)))
(assert (= temp1_153 #x0000000000000004))
(assert (= temp1_154 (select ARGNAME_strides_NAMEEND_VAL temp1_153)))
(assert (= temp1_155 #x0000000000000005))
(assert (= temp1_156 (select ARGNAME_strides_NAMEEND_VAL temp1_155)))
(assert (= temp1_160 #x0000000000000002))
(assert (= temp1_161 #x0000000000000003))
(assert (= temp1_162 #x0000000000000002))
(assert (= temp1_163 #x0000000000000003))
(assert (= temp1_158
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_162)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp1_163))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp1_161)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp1_160))))
(assert (= temp1_164 #x0000000000000002))
(assert (= temp1_165 #x0000000000000003))
(assert (= temp1_166 #x0000000000000003))
(assert (= temp1_159 (ite (= temp1_158 temp1_166) temp1_165 temp1_164)))
(assert (= temp1_168 #x0000000000000002))
(assert (= temp1_169 #x0000000000000004))
(assert (= temp1_170 #x0000000000000001))
(assert (= temp1_171 #x0000000000000002))
(assert (= temp1_172 #x0000000000000003))
(assert (= temp1_173 #x0000000000000000))
(assert (= temp1_174 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_173)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp1_174))
                temp1_172
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_170)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp1_171))
                     temp1_169
                     temp1_168))))
  (= temp1_157 a!1)))
(assert (= temp1_175 (select ARGNAME_strides_NAMEEND_VAL temp1_157)))
(assert (= var76073 temp1_175))
(assert (= var76074 var76073))
(assert (= temp1_179 #x0000000000000002))
(assert (= temp1_180 #x0000000000000003))
(assert (= temp1_181 #x0000000000000002))
(assert (= temp1_182 #x0000000000000003))
(assert (= temp1_177
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_181)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp1_182))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp1_180)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp1_179))))
(assert (= temp1_183 #x0000000000000002))
(assert (= temp1_184 #x0000000000000003))
(assert (= temp1_185 #x0000000000000003))
(assert (= temp1_178 (ite (= temp1_177 temp1_185) temp1_184 temp1_183)))
(assert (= temp1_187 #x0000000000000001))
(assert (= temp1_188 #x0000000000000003))
(assert (= temp1_189 #x0000000000000001))
(assert (= temp1_190 #x0000000000000002))
(assert (= temp1_191 #x0000000000000002))
(assert (= temp1_192 #x0000000000000000))
(assert (= temp1_193 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_192)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp1_193))
                temp1_191
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_189)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp1_190))
                     temp1_188
                     temp1_187))))
  (= temp1_176 a!1)))
(assert (= temp1_194 (select ARGNAME_strides_NAMEEND_VAL temp1_176)))
(assert (= var76078 temp1_194))
(assert (= var76079 var76078))
(assert (= temp1_198 #x0000000000000002))
(assert (= temp1_199 #x0000000000000003))
(assert (= temp1_200 #x0000000000000002))
(assert (= temp1_201 #x0000000000000003))
(assert (= temp1_196
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_200)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp1_201))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp1_199)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp1_198))))
(assert (= temp1_202 #x0000000000000002))
(assert (= temp1_203 #x0000000000000003))
(assert (= temp1_204 #x0000000000000003))
(assert (= temp1_197 (ite (= temp1_196 temp1_204) temp1_203 temp1_202)))
(assert (= temp1_206 #x0000000000000000))
(assert (= temp1_207 #x0000000000000002))
(assert (= temp1_208 #x0000000000000001))
(assert (= temp1_209 #x0000000000000002))
(assert (= temp1_210 #x0000000000000001))
(assert (= temp1_211 #x0000000000000000))
(assert (= temp1_212 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_211)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp1_212))
                temp1_210
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_208)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp1_209))
                     temp1_207
                     temp1_206))))
  (= temp1_195 a!1)))
(assert (= temp1_213 (select ARGNAME_strides_NAMEEND_VAL temp1_195)))
(assert (= var76083 temp1_213))
(assert (= var76084 var76083))
(assert (= temp1_214 #x0000000000000003))
(assert (= var207949 temp1_214))
(assert (= var142387 var207949))
(assert (= temp1_215 #x0000000000000000))
(assert (= var142390
   (ite (= var142387 temp1_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp1_216 #x0000000000000000))
(assert (= var142390 temp1_216))
(assert (= temp1_217 #x0000000000000000))
(assert (= var142392 temp1_217))
(assert (= temp1_218 #x0000000000000003))
(assert (= var273382
   (ite (= ARGNAME_padding_NAMEEND temp1_218)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_219 #x0000000000000001))
(assert (= var273382 temp1_219))
(model-add temp1_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp1_2 () (_ BitVec 64) #x0000000000000001)
(model-add var75949 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_orig_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))

























