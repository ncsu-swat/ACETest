(declare-fun temp0_1 () (_ BitVec 64))
(declare-fun var133084 () (_ BitVec 64))
(declare-fun var133078 () (_ BitVec 64))
(declare-fun temp0_2 () (_ BitVec 64))
(declare-fun var68107 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun extend_10795 () (_ BitVec 64))
(declare-fun temp0_3 () (_ BitVec 64))
(declare-fun ARGNAME_overlap_threshold_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var198620 () (_ BitVec 64))
(declare-fun var198614 () (_ BitVec 64))
(declare-fun var68144 () (_ BitVec 64))
(declare-fun temp0_4 () (_ BitVec 64))
(declare-fun temp0_5 () (_ BitVec 64))
(declare-fun ARGNAME_score_threshold_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var329692 () (_ BitVec 64))
(declare-fun var329686 () (_ BitVec 64))
(declare-fun var68187 () (_ BitVec 64))
(declare-fun temp0_6 () (_ BitVec 64))
(declare-fun temp0_8 () (_ BitVec 64))
(declare-fun temp0_7 () (_ BitVec 64))
(declare-fun temp0_9 () (_ BitVec 64))
(declare-fun ARGNAME_overlaps_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var461499 () (_ BitVec 64))
(declare-fun temp0_10 () (_ BitVec 64))
(declare-fun temp0_11 () (_ BitVec 64))
(declare-fun var460294 () (_ BitVec 64))
(declare-fun temp0_12 () (_ BitVec 64))
(declare-fun temp0_13 () (_ BitVec 64))
(declare-fun ARGNAME_overlaps_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp0_14 () (_ BitVec 64))
(declare-fun temp0_15 () (_ BitVec 64))
(declare-fun temp0_16 () (_ BitVec 64))
(declare-fun temp0_17 () (_ BitVec 64))
(declare-fun temp0_18 () (_ BitVec 64))
(declare-fun temp0_19 () (_ BitVec 64))
(declare-fun temp0_20 () (_ BitVec 64))
(declare-fun temp0_21 () (_ BitVec 64))
(declare-fun temp0_22 () (_ BitVec 64))
(declare-fun temp0_23 () (_ BitVec 64))
(declare-fun temp0_24 () (_ BitVec 64))
(declare-fun temp0_25 () (_ BitVec 64))
(declare-fun temp0_26 () (_ BitVec 64))
(declare-fun temp0_27 () (_ BitVec 64))
(declare-fun temp0_28 () (_ BitVec 64))
(declare-fun temp0_29 () (_ BitVec 64))
(declare-fun temp0_30 () (_ BitVec 64))
(declare-fun temp0_31 () (_ BitVec 64))
(declare-fun temp0_32 () (_ BitVec 64))
(declare-fun var461534 () (_ BitVec 64))
(declare-fun var461535 () (_ BitVec 64))
(declare-fun temp0_33 () (_ BitVec 64))
(declare-fun var460298 () (_ BitVec 64))
(declare-fun temp0_34 () (_ BitVec 64))
(declare-fun temp0_35 () (_ BitVec 64))
(declare-fun temp0_36 () (_ BitVec 64))
(declare-fun var461537 () (_ BitVec 64))
(declare-fun var461538 () (_ BitVec 64))
(declare-fun var461539 () (_ BitVec 64))
(declare-fun var461540 () (_ BitVec 64))
(declare-fun temp0_37 () (_ BitVec 64))
(declare-fun var68234 () (_ BitVec 64))
(declare-fun var527117 () (_ BitVec 64))
(declare-fun temp0_38 () (_ BitVec 64))
(declare-fun ARGNAME_scores_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var527126 () (_ BitVec 64))
(declare-fun temp0_39 () (_ BitVec 64))
(declare-fun temp0_40 () (_ BitVec 64))
(declare-fun var525830 () (_ BitVec 64))
(declare-fun temp0_41 () (_ BitVec 64))
(declare-fun temp0_42 () (_ BitVec 64))
(declare-fun ARGNAME_scores_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp0_43 () (_ BitVec 64))
(declare-fun temp0_44 () (_ BitVec 64))
(declare-fun temp0_45 () (_ BitVec 64))
(declare-fun temp0_46 () (_ BitVec 64))
(declare-fun temp0_47 () (_ BitVec 64))
(declare-fun temp0_48 () (_ BitVec 64))
(declare-fun temp0_49 () (_ BitVec 64))
(declare-fun temp0_50 () (_ BitVec 64))
(declare-fun temp0_51 () (_ BitVec 64))
(declare-fun temp0_52 () (_ BitVec 64))
(declare-fun temp0_53 () (_ BitVec 64))
(declare-fun temp0_54 () (_ BitVec 64))
(declare-fun temp0_55 () (_ BitVec 64))
(declare-fun temp0_56 () (_ BitVec 64))
(declare-fun temp0_57 () (_ BitVec 64))
(declare-fun temp0_58 () (_ BitVec 64))
(declare-fun temp0_59 () (_ BitVec 64))
(declare-fun temp0_60 () (_ BitVec 64))
(declare-fun temp0_61 () (_ BitVec 64))
(declare-fun var527166 () (_ BitVec 64))
(declare-fun var527167 () (_ BitVec 64))
(declare-fun var527168 () (_ BitVec 64))
(declare-fun temp0_62 () (_ BitVec 64))
(declare-fun var1313662 () (_ BitVec 64))
(declare-fun temp0_63 () (_ BitVec 64))
(declare-fun var1313668 () (_ BitVec 64))
(declare-fun temp0_64 () (_ BitVec 64))
(declare-fun var1313669 () (_ BitVec 64))
(declare-fun temp0_65 () (_ BitVec 64))
(declare-fun ARGNAME_max_output_size_NAMEEND () (_ BitVec 64))
(declare-fun var1313723 () (_ BitVec 64))
(declare-fun temp0_66 () (_ BitVec 64))
(assert (= temp0_1 #x0000000000000000))
(assert (= var133084
   (ite (= extend_10795 temp0_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var133078 var133084))
(assert (= var68107 var133078))
(assert (= temp0_2 #x0000000000000001))
(assert (= var68107 temp0_2))
(assert (= temp0_3 #x0000000000000000))
(assert (= var198620
   (ite (= ARGNAME_overlap_threshold_NAMEEND_DIM temp0_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var198614 var198620))
(assert (= var68144 var198614))
(assert (= temp0_4 #x0000000000000001))
(assert (= var68144 temp0_4))
(assert (= temp0_5 #x0000000000000000))
(assert (= var329692
   (ite (= ARGNAME_score_threshold_NAMEEND_DIM temp0_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var329686 var329692))
(assert (= var68187 var329686))
(assert (= temp0_6 #x0000000000000001))
(assert (= var68187 temp0_6))
(assert (= temp0_8 #x0000000000000000))
(assert (= temp0_7 temp0_8))
(assert (= temp0_9 #x0000000000000002))
(assert (= var461499
   (ite (= ARGNAME_overlaps_NAMEEND_DIM temp0_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_10 #x0000000000000001))
(assert (= var461499 temp0_10))
(assert (= temp0_11 #x0000000000000000))
(assert (= var460294 temp0_11))
(assert (= temp0_12 #x0000000000000000))
(assert (= temp0_13 temp0_12))
(assert (= temp0_14 (select ARGNAME_overlaps_NAMEEND_DIMSIZE temp0_13)))
(assert (= temp0_15 #x0000000000000001))
(assert (= temp0_16 temp0_15))
(assert (= temp0_17 (select ARGNAME_overlaps_NAMEEND_DIMSIZE temp0_16)))
(assert (= temp0_18 #x0000000000000002))
(assert (= temp0_19 temp0_18))
(assert (= temp0_20 (select ARGNAME_overlaps_NAMEEND_DIMSIZE temp0_19)))
(assert (= temp0_21 #x0000000000000003))
(assert (= temp0_22 temp0_21))
(assert (= temp0_23 (select ARGNAME_overlaps_NAMEEND_DIMSIZE temp0_22)))
(assert (= temp0_24 #x0000000000000004))
(assert (= temp0_25 temp0_24))
(assert (= temp0_26 (select ARGNAME_overlaps_NAMEEND_DIMSIZE temp0_25)))
(assert (= temp0_27 #x0000000000000005))
(assert (= temp0_28 temp0_27))
(assert (= temp0_29 (select ARGNAME_overlaps_NAMEEND_DIMSIZE temp0_28)))
(assert (= temp0_30 #x0000000000000000))
(assert (= temp0_31
   (ite (bvslt var460294 temp0_30)
        (bvadd ARGNAME_overlaps_NAMEEND_DIM var460294)
        var460294)))
(assert (= temp0_32 (select ARGNAME_overlaps_NAMEEND_DIMSIZE temp0_31)))
(assert (= var461534 temp0_32))
(assert (= var461535 var461534))
(assert (= temp0_33 #x0000000000000001))
(assert (= var460298 temp0_33))
(assert (= temp0_34 #x0000000000000000))
(assert (= temp0_35
   (ite (bvslt var460298 temp0_34)
        (bvadd ARGNAME_overlaps_NAMEEND_DIM var460298)
        var460298)))
(assert (= temp0_36 (select ARGNAME_overlaps_NAMEEND_DIMSIZE temp0_35)))
(assert (= var461537 temp0_36))
(assert (= var461538 var461535))
(assert (= var461539 var461538))
(assert (= var461540
   (ite (= var461537 var461539) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_37 #x0000000000000001))
(assert (= var461540 temp0_37))
(assert (= var68234 var461535))
(assert (= var527117 var68234))
(assert (= temp0_38 #x0000000000000001))
(assert (= var527126
   (ite (= ARGNAME_scores_NAMEEND_DIM temp0_38)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_39 #x0000000000000001))
(assert (= var527126 temp0_39))
(assert (= temp0_40 #x0000000000000000))
(assert (= var525830 temp0_40))
(assert (= temp0_41 #x0000000000000000))
(assert (= temp0_42 temp0_41))
(assert (= temp0_43 (select ARGNAME_scores_NAMEEND_DIMSIZE temp0_42)))
(assert (= temp0_44 #x0000000000000001))
(assert (= temp0_45 temp0_44))
(assert (= temp0_46 (select ARGNAME_scores_NAMEEND_DIMSIZE temp0_45)))
(assert (= temp0_47 #x0000000000000002))
(assert (= temp0_48 temp0_47))
(assert (= temp0_49 (select ARGNAME_scores_NAMEEND_DIMSIZE temp0_48)))
(assert (= temp0_50 #x0000000000000003))
(assert (= temp0_51 temp0_50))
(assert (= temp0_52 (select ARGNAME_scores_NAMEEND_DIMSIZE temp0_51)))
(assert (= temp0_53 #x0000000000000004))
(assert (= temp0_54 temp0_53))
(assert (= temp0_55 (select ARGNAME_scores_NAMEEND_DIMSIZE temp0_54)))
(assert (= temp0_56 #x0000000000000005))
(assert (= temp0_57 temp0_56))
(assert (= temp0_58 (select ARGNAME_scores_NAMEEND_DIMSIZE temp0_57)))
(assert (= temp0_59 #x0000000000000000))
(assert (= temp0_60
   (ite (bvslt var525830 temp0_59)
        (bvadd ARGNAME_scores_NAMEEND_DIM var525830)
        var525830)))
(assert (= temp0_61 (select ARGNAME_scores_NAMEEND_DIMSIZE temp0_60)))
(assert (= var527166 temp0_61))
(assert (= var527167 var527117))
(assert (= var527168
   (ite (= var527166 var527167) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_62 #x0000000000000001))
(assert (= var527168 temp0_62))
(assert (= var1313662 var68234))
(assert (= temp0_63 #x0000000000000000))
(assert (= var1313668 temp0_63))
(assert (= temp0_64 #x0000000000000000))
(assert (= var1313669 temp0_64))
(assert (= temp0_65 #xffffffffffffffff))
(assert (= var1313723
   (ite (bvsgt ARGNAME_max_output_size_NAMEEND temp0_65)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_66 #x0000000000000001))
(assert (= var1313723 temp0_66))
(model-add temp0_1 () (_ BitVec 64) #x0000000000000000)
(model-add var133084 () (_ BitVec 64) #x0000000000000001)
(model-add var133078 () (_ BitVec 64) #x0000000000000001)
(model-add temp0_2 () (_ BitVec 64) #x0000000000000001)
(model-add var68107 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add extend_10795
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000000 (bvnot #x0000000000000000)))











