(declare-fun temp0_1 () (_ BitVec 64))
(declare-fun var132371 () (_ BitVec 64))
(declare-fun var132365 () (_ BitVec 64))
(declare-fun temp0_2 () (_ BitVec 64))
(declare-fun var67391 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun extend_7430 () (_ BitVec 64))
(declare-fun temp0_3 () (_ BitVec 64))
(declare-fun ARGNAME_overlap_threshold_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var197907 () (_ BitVec 64))
(declare-fun var197901 () (_ BitVec 64))
(declare-fun var67428 () (_ BitVec 64))
(declare-fun temp0_4 () (_ BitVec 64))
(declare-fun temp0_5 () (_ BitVec 64))
(declare-fun ARGNAME_score_threshold_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var328979 () (_ BitVec 64))
(declare-fun var328973 () (_ BitVec 64))
(declare-fun var67471 () (_ BitVec 64))
(declare-fun temp0_6 () (_ BitVec 64))
(declare-fun temp0_8 () (_ BitVec 64))
(declare-fun temp0_7 () (_ BitVec 64))
(declare-fun temp0_9 () (_ BitVec 64))
(declare-fun ARGNAME_overlaps_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var460784 () (_ BitVec 64))
(declare-fun temp0_10 () (_ BitVec 64))
(declare-fun temp0_11 () (_ BitVec 64))
(declare-fun ARGNAME_overlaps_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp0_12 () (_ BitVec 64))
(declare-fun temp0_13 () (_ BitVec 64))
(declare-fun temp0_14 () (_ BitVec 64))
(declare-fun temp0_15 () (_ BitVec 64))
(declare-fun temp0_16 () (_ BitVec 64))
(declare-fun temp0_17 () (_ BitVec 64))
(declare-fun temp0_18 () (_ BitVec 64))
(declare-fun temp0_19 () (_ BitVec 64))
(declare-fun temp0_20 () (_ BitVec 64))
(declare-fun temp0_21 () (_ BitVec 64))
(declare-fun temp0_22 () (_ BitVec 64))
(declare-fun temp0_23 () (_ BitVec 64))
(declare-fun temp0_24 () (_ BitVec 64))
(declare-fun var460819 () (_ BitVec 64))
(declare-fun var460820 () (_ BitVec 64))
(declare-fun temp0_25 () (_ BitVec 64))
(declare-fun temp0_26 () (_ BitVec 64))
(declare-fun var460822 () (_ BitVec 64))
(declare-fun var460823 () (_ BitVec 64))
(declare-fun var460824 () (_ BitVec 64))
(declare-fun var460825 () (_ BitVec 64))
(declare-fun temp0_27 () (_ BitVec 64))
(declare-fun var67518 () (_ BitVec 64))
(declare-fun var526402 () (_ BitVec 64))
(declare-fun temp0_28 () (_ BitVec 64))
(declare-fun ARGNAME_scores_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var526411 () (_ BitVec 64))
(declare-fun temp0_29 () (_ BitVec 64))
(declare-fun temp0_30 () (_ BitVec 64))
(declare-fun ARGNAME_scores_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp0_31 () (_ BitVec 64))
(declare-fun temp0_32 () (_ BitVec 64))
(declare-fun temp0_33 () (_ BitVec 64))
(declare-fun temp0_34 () (_ BitVec 64))
(declare-fun temp0_35 () (_ BitVec 64))
(declare-fun temp0_36 () (_ BitVec 64))
(declare-fun temp0_37 () (_ BitVec 64))
(declare-fun temp0_38 () (_ BitVec 64))
(declare-fun temp0_39 () (_ BitVec 64))
(declare-fun temp0_40 () (_ BitVec 64))
(declare-fun temp0_41 () (_ BitVec 64))
(declare-fun temp0_42 () (_ BitVec 64))
(declare-fun temp0_43 () (_ BitVec 64))
(declare-fun var526451 () (_ BitVec 64))
(declare-fun var526452 () (_ BitVec 64))
(declare-fun var526453 () (_ BitVec 64))
(declare-fun temp0_44 () (_ BitVec 64))
(declare-fun var1050803 () (_ BitVec 64))
(declare-fun temp0_45 () (_ BitVec 64))
(declare-fun var1050809 () (_ BitVec 64))
(declare-fun temp0_46 () (_ BitVec 64))
(declare-fun var1050810 () (_ BitVec 64))
(declare-fun temp0_47 () (_ BitVec 64))
(declare-fun ARGNAME_max_output_size_NAMEEND () (_ BitVec 64))
(declare-fun var1050864 () (_ BitVec 64))
(declare-fun temp0_48 () (_ BitVec 64))
(assert (= temp0_1 #x0000000000000000))
(assert (= var132371
   (ite (= extend_7430 temp0_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var132365 var132371))
(assert (= var67391 var132365))
(assert (= temp0_2 #x0000000000000001))
(assert (= var67391 temp0_2))
(assert (= temp0_3 #x0000000000000000))
(assert (= var197907
   (ite (= ARGNAME_overlap_threshold_NAMEEND_DIM temp0_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var197901 var197907))
(assert (= var67428 var197901))
(assert (= temp0_4 #x0000000000000001))
(assert (= var67428 temp0_4))
(assert (= temp0_5 #x0000000000000000))
(assert (= var328979
   (ite (= ARGNAME_score_threshold_NAMEEND_DIM temp0_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var328973 var328979))
(assert (= var67471 var328973))
(assert (= temp0_6 #x0000000000000001))
(assert (= var67471 temp0_6))
(assert (= temp0_8 #x0000000000000000))
(assert (= temp0_7 temp0_8))
(assert (= temp0_9 #x0000000000000002))
(assert (= var460784
   (ite (= ARGNAME_overlaps_NAMEEND_DIM temp0_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_10 #x0000000000000001))
(assert (= var460784 temp0_10))
(assert (= temp0_11 #x0000000000000000))
(assert (= temp0_12 (select ARGNAME_overlaps_NAMEEND_DIMSIZE temp0_11)))
(assert (= temp0_13 #x0000000000000001))
(assert (= temp0_14 (select ARGNAME_overlaps_NAMEEND_DIMSIZE temp0_13)))
(assert (= temp0_15 #x0000000000000002))
(assert (= temp0_16 (select ARGNAME_overlaps_NAMEEND_DIMSIZE temp0_15)))
(assert (= temp0_17 #x0000000000000003))
(assert (= temp0_18 (select ARGNAME_overlaps_NAMEEND_DIMSIZE temp0_17)))
(assert (= temp0_19 #x0000000000000004))
(assert (= temp0_20 (select ARGNAME_overlaps_NAMEEND_DIMSIZE temp0_19)))
(assert (= temp0_21 #x0000000000000005))
(assert (= temp0_22 (select ARGNAME_overlaps_NAMEEND_DIMSIZE temp0_21)))
(assert (= temp0_23 #x0000000000000000))
(assert (= temp0_24 (select ARGNAME_overlaps_NAMEEND_DIMSIZE temp0_23)))
(assert (= var460819 temp0_24))
(assert (= var460820 var460819))
(assert (= temp0_25 #x0000000000000001))
(assert (= temp0_26 (select ARGNAME_overlaps_NAMEEND_DIMSIZE temp0_25)))
(assert (= var460822 temp0_26))
(assert (= var460823 var460820))
(assert (= var460824 var460823))
(assert (= var460825
   (ite (= var460822 var460824) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_27 #x0000000000000001))
(assert (= var460825 temp0_27))
(assert (= var67518 var460820))
(assert (= var526402 var67518))
(assert (= temp0_28 #x0000000000000001))
(assert (= var526411
   (ite (= ARGNAME_scores_NAMEEND_DIM temp0_28)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_29 #x0000000000000001))
(assert (= var526411 temp0_29))
(assert (= temp0_30 #x0000000000000000))
(assert (= temp0_31 (select ARGNAME_scores_NAMEEND_DIMSIZE temp0_30)))
(assert (= temp0_32 #x0000000000000001))
(assert (= temp0_33 (select ARGNAME_scores_NAMEEND_DIMSIZE temp0_32)))
(assert (= temp0_34 #x0000000000000002))
(assert (= temp0_35 (select ARGNAME_scores_NAMEEND_DIMSIZE temp0_34)))
(assert (= temp0_36 #x0000000000000003))
(assert (= temp0_37 (select ARGNAME_scores_NAMEEND_DIMSIZE temp0_36)))
(assert (= temp0_38 #x0000000000000004))
(assert (= temp0_39 (select ARGNAME_scores_NAMEEND_DIMSIZE temp0_38)))
(assert (= temp0_40 #x0000000000000005))
(assert (= temp0_41 (select ARGNAME_scores_NAMEEND_DIMSIZE temp0_40)))
(assert (= temp0_42 #x0000000000000000))
(assert (= temp0_43 (select ARGNAME_scores_NAMEEND_DIMSIZE temp0_42)))
(assert (= var526451 temp0_43))
(assert (= var526452 var526402))
(assert (= var526453
   (ite (= var526451 var526452) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_44 #x0000000000000001))
(assert (= var526453 temp0_44))
(assert (= var1050803 var67518))
(assert (= temp0_45 #x0000000000000000))
(assert (= var1050809 temp0_45))
(assert (= temp0_46 #x0000000000000000))
(assert (= var1050810 temp0_46))
(assert (= temp0_47 #xffffffffffffffff))
(assert (= var1050864
   (ite (bvsgt ARGNAME_max_output_size_NAMEEND temp0_47)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_48 #x0000000000000001))
(assert (= var1050864 temp0_48))
(model-add temp0_1 () (_ BitVec 64) #x0000000000000000)
(model-add var132371 () (_ BitVec 64) #x0000000000000001)
(model-add var132365 () (_ BitVec 64) #x0000000000000001)
(model-add temp0_2 () (_ BitVec 64) #x0000000000000001)
(model-add var67391 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add extend_7430
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000000 (bvnot #x0000000000000000)))
















