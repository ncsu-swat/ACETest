(declare-fun temp12_1 () (_ BitVec 64))
(declare-fun var131862 () (_ BitVec 64))
(declare-fun var131856 () (_ BitVec 64))
(declare-fun temp12_2 () (_ BitVec 64))
(declare-fun var66806 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun extend_1221 () (_ BitVec 64))
(declare-fun temp12_3 () (_ BitVec 64))
(declare-fun var198235 () (_ BitVec 64))
(declare-fun var198231 () (_ BitVec 64))
(declare-fun var66809 () (_ BitVec 64))
(declare-fun temp12_4 () (_ BitVec 64))
(declare-fun temp12_5 () (_ BitVec 64))
(declare-fun extend_1220
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp12_6 () (_ BitVec 64))
(declare-fun temp12_7 () (_ BitVec 64))
(declare-fun temp12_8 () (_ BitVec 64))
(declare-fun temp12_9 () (_ BitVec 64))
(declare-fun temp12_10 () (_ BitVec 64))
(declare-fun temp12_11 () (_ BitVec 64))
(declare-fun temp12_12 () (_ BitVec 64))
(declare-fun temp12_13 () (_ BitVec 64))
(declare-fun temp12_14 () (_ BitVec 64))
(declare-fun temp12_15 () (_ BitVec 64))
(declare-fun temp12_16 () (_ BitVec 64))
(declare-fun temp12_17 () (_ BitVec 64))
(declare-fun temp12_18 () (_ BitVec 64))
(declare-fun var66815 () (_ BitVec 64))
(declare-fun temp12_19 () (_ BitVec 64))
(declare-fun var66818 () (_ BitVec 64))
(declare-fun temp12_20 () (_ BitVec 64))
(declare-fun temp12_21 () (_ BitVec 64))
(declare-fun extend_1224 () (_ BitVec 64))
(declare-fun var262934 () (_ BitVec 64))
(declare-fun var262928 () (_ BitVec 64))
(declare-fun var66854 () (_ BitVec 64))
(declare-fun temp12_22 () (_ BitVec 64))
(declare-fun temp12_23 () (_ BitVec 64))
(declare-fun var329307 () (_ BitVec 64))
(declare-fun var329303 () (_ BitVec 64))
(declare-fun var66857 () (_ BitVec 64))
(declare-fun temp12_24 () (_ BitVec 64))
(declare-fun temp12_25 () (_ BitVec 64))
(declare-fun extend_1223
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp12_26 () (_ BitVec 64))
(declare-fun temp12_27 () (_ BitVec 64))
(declare-fun temp12_28 () (_ BitVec 64))
(declare-fun temp12_29 () (_ BitVec 64))
(declare-fun temp12_30 () (_ BitVec 64))
(declare-fun temp12_31 () (_ BitVec 64))
(declare-fun temp12_32 () (_ BitVec 64))
(declare-fun temp12_33 () (_ BitVec 64))
(declare-fun temp12_34 () (_ BitVec 64))
(declare-fun temp12_35 () (_ BitVec 64))
(declare-fun temp12_36 () (_ BitVec 64))
(declare-fun temp12_37 () (_ BitVec 64))
(declare-fun temp12_38 () (_ BitVec 64))
(declare-fun var66861 () (_ BitVec 64))
(declare-fun temp12_39 () (_ BitVec 64))
(declare-fun var66862 () (_ BitVec 64))
(declare-fun temp12_40 () (_ BitVec 64))
(declare-fun temp12_41 () (_ BitVec 64))
(declare-fun extend_1227 () (_ BitVec 64))
(declare-fun var394006 () (_ BitVec 64))
(declare-fun var394000 () (_ BitVec 64))
(declare-fun var66896 () (_ BitVec 64))
(declare-fun temp12_42 () (_ BitVec 64))
(declare-fun temp12_43 () (_ BitVec 64))
(declare-fun ARGNAME_delta_NAMEEND () (_ BitVec 64))
(declare-fun var66961 () (_ BitVec 64))
(declare-fun temp12_44 () (_ BitVec 64))
(declare-fun temp12_45 () (_ BitVec 64))
(declare-fun var66981 () (_ BitVec 64))
(declare-fun temp12_46 () (_ BitVec 64))
(declare-fun ARGNAME_start_NAMEEND () (_ BitVec 64))
(declare-fun ARGNAME_limit_NAMEEND () (_ BitVec 64))
(declare-fun var66983 () (_ BitVec 64))
(declare-fun temp12_47 () (_ BitVec 64))
(declare-fun var67027 () (_ BitVec 64))
(assert (= temp12_1 #x0000000000000000))
(assert (= var131862
   (ite (= extend_1221 temp12_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var131856 var131862))
(assert (= var66806 var131856))
(assert (= temp12_2 #x0000000000000000))
(assert (= var66806 temp12_2))
(assert (= temp12_3 #x0000000000000001))
(assert (= var198235
   (ite (= extend_1221 temp12_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var198231 var198235))
(assert (= var66809 var198231))
(assert (= temp12_4 #x0000000000000001))
(assert (= var66809 temp12_4))
(assert (= temp12_5 #x0000000000000000))
(assert (= temp12_6 (select extend_1220 temp12_5)))
(assert (= temp12_7 #x0000000000000001))
(assert (= temp12_8 (select extend_1220 temp12_7)))
(assert (= temp12_9 #x0000000000000002))
(assert (= temp12_10 (select extend_1220 temp12_9)))
(assert (= temp12_11 #x0000000000000003))
(assert (= temp12_12 (select extend_1220 temp12_11)))
(assert (= temp12_13 #x0000000000000004))
(assert (= temp12_14 (select extend_1220 temp12_13)))
(assert (= temp12_15 #x0000000000000005))
(assert (= temp12_16 (select extend_1220 temp12_15)))
(assert (= temp12_17 #x0000000000000000))
(assert (= temp12_18 (select extend_1220 temp12_17)))
(assert (= var66815 temp12_18))
(assert (= temp12_19 #x0000000000000001))
(assert (= var66818 (ite (= var66815 temp12_19) #x0000000000000001 #x0000000000000000)))
(assert (= temp12_20 #x0000000000000001))
(assert (= var66818 temp12_20))
(assert (= temp12_21 #x0000000000000000))
(assert (= var262934
   (ite (= extend_1224 temp12_21)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var262928 var262934))
(assert (= var66854 var262928))
(assert (= temp12_22 #x0000000000000000))
(assert (= var66854 temp12_22))
(assert (= temp12_23 #x0000000000000001))
(assert (= var329307
   (ite (= extend_1224 temp12_23)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var329303 var329307))
(assert (= var66857 var329303))
(assert (= temp12_24 #x0000000000000001))
(assert (= var66857 temp12_24))
(assert (= temp12_25 #x0000000000000000))
(assert (= temp12_26 (select extend_1223 temp12_25)))
(assert (= temp12_27 #x0000000000000001))
(assert (= temp12_28 (select extend_1223 temp12_27)))
(assert (= temp12_29 #x0000000000000002))
(assert (= temp12_30 (select extend_1223 temp12_29)))
(assert (= temp12_31 #x0000000000000003))
(assert (= temp12_32 (select extend_1223 temp12_31)))
(assert (= temp12_33 #x0000000000000004))
(assert (= temp12_34 (select extend_1223 temp12_33)))
(assert (= temp12_35 #x0000000000000005))
(assert (= temp12_36 (select extend_1223 temp12_35)))
(assert (= temp12_37 #x0000000000000000))
(assert (= temp12_38 (select extend_1223 temp12_37)))
(assert (= var66861 temp12_38))
(assert (= temp12_39 #x0000000000000001))
(assert (= var66862 (ite (= var66861 temp12_39) #x0000000000000001 #x0000000000000000)))
(assert (= temp12_40 #x0000000000000001))
(assert (= var66862 temp12_40))
(assert (= temp12_41 #x0000000000000000))
(assert (= var394006
   (ite (= extend_1227 temp12_41)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var394000 var394006))
(assert (= var66896 var394000))
(assert (= temp12_42 #x0000000000000001))
(assert (= var66896 temp12_42))
(assert (= temp12_43 #x0000000000000000))
(assert (= var66961
   (ite (= ARGNAME_delta_NAMEEND temp12_43)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp12_44 #x0000000000000000))
(assert (= var66961 temp12_44))
(assert (= temp12_45 #x0000000000000000))
(assert (= var66981
   (ite (bvsgt ARGNAME_delta_NAMEEND temp12_45)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp12_46 #x0000000000000001))
(assert (= var66981 temp12_46))
(assert (= var66983
   (ite (bvslt ARGNAME_limit_NAMEEND ARGNAME_start_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp12_47 #x0000000000000000))
(assert (= var66983 temp12_47))
(assert (= var67027
   (bvsub ARGNAME_limit_NAMEEND ARGNAME_start_NAMEEND)))
(model-add temp12_1 () (_ BitVec 64) #x0000000000000000)
(model-add var131862 () (_ BitVec 64) #x0000000000000000)
(model-add var131856 () (_ BitVec 64) #x0000000000000000)
(model-add temp12_2 () (_ BitVec 64) #x0000000000000000)
(model-add var66806 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add extend_1221
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000000 (bvnot #x0000000000000000)))





















