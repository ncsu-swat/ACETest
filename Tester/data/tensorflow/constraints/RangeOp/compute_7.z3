(declare-fun temp6_1 () (_ BitVec 64))
(declare-fun var131862 () (_ BitVec 64))
(declare-fun var131856 () (_ BitVec 64))
(declare-fun temp6_2 () (_ BitVec 64))
(declare-fun var66806 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun extend_1194 () (_ BitVec 64))
(declare-fun temp6_3 () (_ BitVec 64))
(declare-fun extend_1197 () (_ BitVec 64))
(declare-fun var197398 () (_ BitVec 64))
(declare-fun var197392 () (_ BitVec 64))
(declare-fun var66854 () (_ BitVec 64))
(declare-fun temp6_4 () (_ BitVec 64))
(declare-fun temp6_5 () (_ BitVec 64))
(declare-fun var263771 () (_ BitVec 64))
(declare-fun var263767 () (_ BitVec 64))
(declare-fun var66857 () (_ BitVec 64))
(declare-fun temp6_6 () (_ BitVec 64))
(declare-fun temp6_7 () (_ BitVec 64))
(declare-fun extend_1196
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp6_8 () (_ BitVec 64))
(declare-fun temp6_9 () (_ BitVec 64))
(declare-fun temp6_10 () (_ BitVec 64))
(declare-fun temp6_11 () (_ BitVec 64))
(declare-fun temp6_12 () (_ BitVec 64))
(declare-fun temp6_13 () (_ BitVec 64))
(declare-fun temp6_14 () (_ BitVec 64))
(declare-fun temp6_15 () (_ BitVec 64))
(declare-fun temp6_16 () (_ BitVec 64))
(declare-fun temp6_17 () (_ BitVec 64))
(declare-fun temp6_18 () (_ BitVec 64))
(declare-fun temp6_19 () (_ BitVec 64))
(declare-fun temp6_20 () (_ BitVec 64))
(declare-fun var66861 () (_ BitVec 64))
(declare-fun temp6_21 () (_ BitVec 64))
(declare-fun var66862 () (_ BitVec 64))
(declare-fun temp6_22 () (_ BitVec 64))
(declare-fun temp6_23 () (_ BitVec 64))
(declare-fun extend_1200 () (_ BitVec 64))
(declare-fun var328470 () (_ BitVec 64))
(declare-fun var328464 () (_ BitVec 64))
(declare-fun var66896 () (_ BitVec 64))
(declare-fun temp6_24 () (_ BitVec 64))
(declare-fun temp6_25 () (_ BitVec 64))
(declare-fun var394843 () (_ BitVec 64))
(declare-fun var394839 () (_ BitVec 64))
(declare-fun var66899 () (_ BitVec 64))
(declare-fun temp6_26 () (_ BitVec 64))
(declare-fun temp6_27 () (_ BitVec 64))
(declare-fun extend_1199
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp6_28 () (_ BitVec 64))
(declare-fun temp6_29 () (_ BitVec 64))
(declare-fun temp6_30 () (_ BitVec 64))
(declare-fun temp6_31 () (_ BitVec 64))
(declare-fun temp6_32 () (_ BitVec 64))
(declare-fun temp6_33 () (_ BitVec 64))
(declare-fun temp6_34 () (_ BitVec 64))
(declare-fun temp6_35 () (_ BitVec 64))
(declare-fun temp6_36 () (_ BitVec 64))
(declare-fun temp6_37 () (_ BitVec 64))
(declare-fun temp6_38 () (_ BitVec 64))
(declare-fun temp6_39 () (_ BitVec 64))
(declare-fun temp6_40 () (_ BitVec 64))
(declare-fun var66903 () (_ BitVec 64))
(declare-fun temp6_41 () (_ BitVec 64))
(declare-fun var66904 () (_ BitVec 64))
(declare-fun temp6_42 () (_ BitVec 64))
(declare-fun temp6_43 () (_ BitVec 64))
(declare-fun ARGNAME_delta_NAMEEND () (_ BitVec 64))
(declare-fun var66961 () (_ BitVec 64))
(declare-fun temp6_44 () (_ BitVec 64))
(declare-fun temp6_45 () (_ BitVec 64))
(declare-fun var66981 () (_ BitVec 64))
(declare-fun temp6_46 () (_ BitVec 64))
(declare-fun ARGNAME_start_NAMEEND () (_ BitVec 64))
(declare-fun ARGNAME_limit_NAMEEND () (_ BitVec 64))
(declare-fun var66983 () (_ BitVec 64))
(declare-fun temp6_47 () (_ BitVec 64))
(declare-fun var67027 () (_ BitVec 64))
(assert (= temp6_1 #x0000000000000000))
(assert (= var131862
   (ite (= extend_1194 temp6_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var131856 var131862))
(assert (= var66806 var131856))
(assert (= temp6_2 #x0000000000000001))
(assert (= var66806 temp6_2))
(assert (= temp6_3 #x0000000000000000))
(assert (= var197398
   (ite (= extend_1197 temp6_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var197392 var197398))
(assert (= var66854 var197392))
(assert (= temp6_4 #x0000000000000000))
(assert (= var66854 temp6_4))
(assert (= temp6_5 #x0000000000000001))
(assert (= var263771
   (ite (= extend_1197 temp6_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var263767 var263771))
(assert (= var66857 var263767))
(assert (= temp6_6 #x0000000000000001))
(assert (= var66857 temp6_6))
(assert (= temp6_7 #x0000000000000000))
(assert (= temp6_8 (select extend_1196 temp6_7)))
(assert (= temp6_9 #x0000000000000001))
(assert (= temp6_10 (select extend_1196 temp6_9)))
(assert (= temp6_11 #x0000000000000002))
(assert (= temp6_12 (select extend_1196 temp6_11)))
(assert (= temp6_13 #x0000000000000003))
(assert (= temp6_14 (select extend_1196 temp6_13)))
(assert (= temp6_15 #x0000000000000004))
(assert (= temp6_16 (select extend_1196 temp6_15)))
(assert (= temp6_17 #x0000000000000005))
(assert (= temp6_18 (select extend_1196 temp6_17)))
(assert (= temp6_19 #x0000000000000000))
(assert (= temp6_20 (select extend_1196 temp6_19)))
(assert (= var66861 temp6_20))
(assert (= temp6_21 #x0000000000000001))
(assert (= var66862 (ite (= var66861 temp6_21) #x0000000000000001 #x0000000000000000)))
(assert (= temp6_22 #x0000000000000001))
(assert (= var66862 temp6_22))
(assert (= temp6_23 #x0000000000000000))
(assert (= var328470
   (ite (= extend_1200 temp6_23)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var328464 var328470))
(assert (= var66896 var328464))
(assert (= temp6_24 #x0000000000000000))
(assert (= var66896 temp6_24))
(assert (= temp6_25 #x0000000000000001))
(assert (= var394843
   (ite (= extend_1200 temp6_25)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var394839 var394843))
(assert (= var66899 var394839))
(assert (= temp6_26 #x0000000000000001))
(assert (= var66899 temp6_26))
(assert (= temp6_27 #x0000000000000000))
(assert (= temp6_28 (select extend_1199 temp6_27)))
(assert (= temp6_29 #x0000000000000001))
(assert (= temp6_30 (select extend_1199 temp6_29)))
(assert (= temp6_31 #x0000000000000002))
(assert (= temp6_32 (select extend_1199 temp6_31)))
(assert (= temp6_33 #x0000000000000003))
(assert (= temp6_34 (select extend_1199 temp6_33)))
(assert (= temp6_35 #x0000000000000004))
(assert (= temp6_36 (select extend_1199 temp6_35)))
(assert (= temp6_37 #x0000000000000005))
(assert (= temp6_38 (select extend_1199 temp6_37)))
(assert (= temp6_39 #x0000000000000000))
(assert (= temp6_40 (select extend_1199 temp6_39)))
(assert (= var66903 temp6_40))
(assert (= temp6_41 #x0000000000000001))
(assert (= var66904 (ite (= var66903 temp6_41) #x0000000000000001 #x0000000000000000)))
(assert (= temp6_42 #x0000000000000001))
(assert (= var66904 temp6_42))
(assert (= temp6_43 #x0000000000000000))
(assert (= var66961
   (ite (= ARGNAME_delta_NAMEEND temp6_43)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6_44 #x0000000000000000))
(assert (= var66961 temp6_44))
(assert (= temp6_45 #x0000000000000000))
(assert (= var66981
   (ite (bvsgt ARGNAME_delta_NAMEEND temp6_45)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6_46 #x0000000000000001))
(assert (= var66981 temp6_46))
(assert (= var66983
   (ite (bvslt ARGNAME_limit_NAMEEND ARGNAME_start_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6_47 #x0000000000000000))
(assert (= var66983 temp6_47))
(assert (= var67027
   (bvsub ARGNAME_limit_NAMEEND ARGNAME_start_NAMEEND)))
(model-add temp6_1 () (_ BitVec 64) #x0000000000000000)
(model-add var131862 () (_ BitVec 64) #x0000000000000001)
(model-add var131856 () (_ BitVec 64) #x0000000000000001)
(model-add temp6_2 () (_ BitVec 64) #x0000000000000001)
(model-add var66806 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add extend_1194
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000000 (bvnot #x0000000000000000)))





















