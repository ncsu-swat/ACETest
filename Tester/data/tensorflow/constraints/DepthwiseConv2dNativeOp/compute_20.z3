(declare-fun temp222_1 () (_ BitVec 64))
(declare-fun temp222_2 () (_ BitVec 64))
(declare-fun var68233 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp222_3 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var68277 () (_ BitVec 64))
(declare-fun temp222_4 () (_ BitVec 64))
(declare-fun temp222_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp222_6 () (_ BitVec 64))
(declare-fun temp222_7 () (_ BitVec 64))
(declare-fun temp222_8 () (_ BitVec 64))
(declare-fun temp222_9 () (_ BitVec 64))
(declare-fun temp222_10 () (_ BitVec 64))
(declare-fun temp222_11 () (_ BitVec 64))
(declare-fun temp222_12 () (_ BitVec 64))
(declare-fun temp222_13 () (_ BitVec 64))
(declare-fun temp222_14 () (_ BitVec 64))
(declare-fun temp222_15 () (_ BitVec 64))
(declare-fun temp222_16 () (_ BitVec 64))
(declare-fun temp222_20 () (_ BitVec 64))
(declare-fun temp222_21 () (_ BitVec 64))
(declare-fun temp222_22 () (_ BitVec 64))
(declare-fun temp222_23 () (_ BitVec 64))
(declare-fun temp222_18 () (_ BitVec 64))
(declare-fun temp222_24 () (_ BitVec 64))
(declare-fun temp222_25 () (_ BitVec 64))
(declare-fun temp222_26 () (_ BitVec 64))
(declare-fun temp222_19 () (_ BitVec 64))
(declare-fun temp222_28 () (_ BitVec 64))
(declare-fun temp222_29 () (_ BitVec 64))
(declare-fun temp222_30 () (_ BitVec 64))
(declare-fun temp222_31 () (_ BitVec 64))
(declare-fun temp222_32 () (_ BitVec 64))
(declare-fun temp222_17 () (_ BitVec 64))
(declare-fun temp222_33 () (_ BitVec 64))
(declare-fun var68312 () (_ BitVec 64))
(declare-fun temp222_34 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp222_35 () (_ BitVec 64))
(declare-fun temp222_36 () (_ BitVec 64))
(declare-fun temp222_37 () (_ BitVec 64))
(declare-fun temp222_38 () (_ BitVec 64))
(declare-fun temp222_39 () (_ BitVec 64))
(declare-fun temp222_40 () (_ BitVec 64))
(declare-fun temp222_41 () (_ BitVec 64))
(declare-fun temp222_42 () (_ BitVec 64))
(declare-fun temp222_43 () (_ BitVec 64))
(declare-fun temp222_44 () (_ BitVec 64))
(declare-fun temp222_45 () (_ BitVec 64))
(declare-fun temp222_46 () (_ BitVec 64))
(declare-fun temp222_47 () (_ BitVec 64))
(declare-fun var68315 () (_ BitVec 64))
(declare-fun var68318 () (_ BitVec 64))
(declare-fun temp222_48 () (_ BitVec 64))
(declare-fun temp222_49 () (_ BitVec 64))
(declare-fun temp222_50 () (_ BitVec 64))
(declare-fun var68342 () (_ BitVec 64))
(declare-fun var68343 () (_ BitVec 64))
(declare-fun temp222_51 () (_ BitVec 64))
(declare-fun var68344 () (_ BitVec 64))
(declare-fun temp222_52 () (_ BitVec 64))
(declare-fun var68345 () (_ BitVec 64))
(declare-fun var68346 () (_ BitVec 64))
(declare-fun var68347 () (_ BitVec 64))
(declare-fun temp222_56 () (_ BitVec 64))
(declare-fun temp222_57 () (_ BitVec 64))
(declare-fun temp222_58 () (_ BitVec 64))
(declare-fun temp222_59 () (_ BitVec 64))
(declare-fun temp222_54 () (_ BitVec 64))
(declare-fun temp222_60 () (_ BitVec 64))
(declare-fun temp222_61 () (_ BitVec 64))
(declare-fun temp222_62 () (_ BitVec 64))
(declare-fun temp222_55 () (_ BitVec 64))
(declare-fun temp222_64 () (_ BitVec 64))
(declare-fun temp222_65 () (_ BitVec 64))
(declare-fun temp222_66 () (_ BitVec 64))
(declare-fun temp222_67 () (_ BitVec 64))
(declare-fun temp222_68 () (_ BitVec 64))
(declare-fun temp222_69 () (_ BitVec 64))
(declare-fun temp222_53 () (_ BitVec 64))
(declare-fun temp222_70 () (_ BitVec 64))
(declare-fun var68349 () (_ BitVec 64))
(declare-fun temp222_71 () (_ BitVec 64))
(declare-fun var134606 () (_ BitVec 64))
(declare-fun var68350 () (_ BitVec 64))
(declare-fun var68353 () (_ BitVec 64))
(declare-fun var68354 () (_ BitVec 64))
(declare-fun temp222_72 () (_ BitVec 64))
(declare-fun var68374 () (_ BitVec 64))
(declare-fun temp222_73 () (_ BitVec 64))
(declare-fun temp222_74 () (_ BitVec 64))
(declare-fun var68375 () (_ BitVec 64))
(declare-fun var68376 () (_ BitVec 64))
(declare-fun temp222_78 () (_ BitVec 64))
(declare-fun temp222_79 () (_ BitVec 64))
(declare-fun temp222_80 () (_ BitVec 64))
(declare-fun temp222_81 () (_ BitVec 64))
(declare-fun temp222_76 () (_ BitVec 64))
(declare-fun temp222_82 () (_ BitVec 64))
(declare-fun temp222_83 () (_ BitVec 64))
(declare-fun temp222_84 () (_ BitVec 64))
(declare-fun temp222_77 () (_ BitVec 64))
(declare-fun temp222_86 () (_ BitVec 64))
(declare-fun temp222_87 () (_ BitVec 64))
(declare-fun temp222_88 () (_ BitVec 64))
(declare-fun temp222_89 () (_ BitVec 64))
(declare-fun temp222_90 () (_ BitVec 64))
(declare-fun temp222_91 () (_ BitVec 64))
(declare-fun temp222_75 () (_ BitVec 64))
(declare-fun temp222_92 () (_ BitVec 64))
(declare-fun var68378 () (_ BitVec 64))
(declare-fun temp222_93 () (_ BitVec 64))
(declare-fun var200142 () (_ BitVec 64))
(declare-fun var68379 () (_ BitVec 64))
(declare-fun var68380 () (_ BitVec 64))
(declare-fun var68381 () (_ BitVec 64))
(declare-fun temp222_94 () (_ BitVec 64))
(declare-fun var68401 () (_ BitVec 64))
(declare-fun temp222_95 () (_ BitVec 64))
(declare-fun temp222_96 () (_ BitVec 64))
(declare-fun var68402 () (_ BitVec 64))
(declare-fun var68403 () (_ BitVec 64))
(declare-fun temp222_97 () (_ BitVec 64))
(declare-fun temp222_98 () (_ BitVec 64))
(declare-fun var68404 () (_ BitVec 64))
(declare-fun var68405 () (_ BitVec 64))
(declare-fun temp222_100 () (_ BitVec 64))
(declare-fun temp222_99 () (_ BitVec 64))
(declare-fun temp222_102 () (_ BitVec 64))
(declare-fun temp222_101 () (_ BitVec 64))
(declare-fun temp222_104 () (_ BitVec 64))
(declare-fun temp222_103 () (_ BitVec 64))
(declare-fun temp222_106 () (_ BitVec 64))
(declare-fun temp222_105 () (_ BitVec 64))
(declare-fun temp222_108 () (_ BitVec 64))
(declare-fun temp222_107 () (_ BitVec 64))
(declare-fun temp222_110 () (_ BitVec 64))
(declare-fun temp222_109 () (_ BitVec 64))
(declare-fun temp222_111 () (_ BitVec 64))
(declare-fun var68426 () (_ BitVec 64))
(declare-fun temp222_112 () (_ BitVec 64))
(declare-fun temp222_113 () (_ BitVec 64))
(declare-fun var68439 () (_ BitVec 64))
(declare-fun temp222_114 () (_ BitVec 64))
(declare-fun var68440 () (_ BitVec 64))
(declare-fun temp222_115 () (_ BitVec 64))
(declare-fun var68441 () (_ BitVec 64))
(declare-fun temp222_116 () (_ BitVec 64))
(declare-fun var68442 () (_ BitVec 64))
(declare-fun var269051 () (_ BitVec 64))
(declare-fun var269052 () (_ BitVec 64))
(declare-fun var334158 () (_ BitVec 64))
(declare-fun var334159 () (_ BitVec 64))
(declare-fun temp222_117 () (_ BitVec 64))
(declare-fun var334160 () (_ BitVec 64))
(declare-fun temp222_118 () (_ BitVec 64))
(declare-fun var334178 () (_ BitVec 64))
(declare-fun temp222_119 () (_ BitVec 64))
(declare-fun temp222_120 () (_ BitVec 64))
(declare-fun var334183 () (_ BitVec 64))
(declare-fun var334184 () (_ BitVec 64))
(declare-fun temp222_121 () (_ BitVec 64))
(declare-fun var334185 () (_ BitVec 64))
(declare-fun temp222_122 () (_ BitVec 64))
(declare-fun var334186 () (_ BitVec 64))
(declare-fun temp222_123 () (_ BitVec 64))
(declare-fun temp222_124 () (_ BitVec 64))
(declare-fun var334205 () (_ BitVec 64))
(declare-fun temp222_126 () (_ BitVec 64))
(declare-fun temp222_125 () (_ BitVec 64))
(declare-fun var334216 () (_ BitVec 64))
(declare-fun temp222_127 () (_ BitVec 64))
(declare-fun var334231 () (_ BitVec 64))
(declare-fun temp222_128 () (_ BitVec 64))
(declare-fun temp222_129 () (_ BitVec 64))
(declare-fun var68467 () (_ BitVec 64))
(declare-fun temp222_130 () (_ BitVec 64))
(declare-fun var68468 () (_ BitVec 64))
(declare-fun temp222_131 () (_ BitVec 64))
(declare-fun var68469 () (_ BitVec 64))
(declare-fun temp222_132 () (_ BitVec 64))
(declare-fun var68470 () (_ BitVec 64))
(declare-fun var465659 () (_ BitVec 64))
(declare-fun var465660 () (_ BitVec 64))
(declare-fun var530766 () (_ BitVec 64))
(declare-fun var530767 () (_ BitVec 64))
(declare-fun temp222_133 () (_ BitVec 64))
(declare-fun var530768 () (_ BitVec 64))
(declare-fun temp222_134 () (_ BitVec 64))
(declare-fun var530786 () (_ BitVec 64))
(declare-fun temp222_135 () (_ BitVec 64))
(declare-fun temp222_136 () (_ BitVec 64))
(declare-fun var530791 () (_ BitVec 64))
(declare-fun var530792 () (_ BitVec 64))
(declare-fun temp222_137 () (_ BitVec 64))
(declare-fun var530793 () (_ BitVec 64))
(declare-fun temp222_138 () (_ BitVec 64))
(declare-fun var530794 () (_ BitVec 64))
(declare-fun temp222_139 () (_ BitVec 64))
(declare-fun temp222_140 () (_ BitVec 64))
(declare-fun var530813 () (_ BitVec 64))
(declare-fun temp222_142 () (_ BitVec 64))
(declare-fun temp222_141 () (_ BitVec 64))
(declare-fun var530824 () (_ BitVec 64))
(declare-fun temp222_143 () (_ BitVec 64))
(declare-fun var530839 () (_ BitVec 64))
(declare-fun temp222_144 () (_ BitVec 64))
(declare-fun temp222_145 () (_ BitVec 64))
(declare-fun var68492 () (_ BitVec 64))
(declare-fun temp222_146 () (_ BitVec 64))
(declare-fun var68493 () (_ BitVec 64))
(declare-fun temp222_147 () (_ BitVec 64))
(declare-fun var68496 () (_ BitVec 64))
(declare-fun temp222_148 () (_ BitVec 64))
(declare-fun var68497 () (_ BitVec 64))
(declare-fun temp222_149 () (_ BitVec 64))
(declare-fun temp222_148_DIM () (_ BitVec 64))
(declare-fun temp222_150 () (_ BitVec 64))
(declare-fun temp222_148_DIMSIZE () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp222_151 () (_ BitVec 64))
(declare-fun temp222_152 () (_ BitVec 64))
(declare-fun temp222_153 () (_ BitVec 64))
(declare-fun temp222_154 () (_ BitVec 64))
(declare-fun temp222_155 () (_ BitVec 64))
(declare-fun temp222_156 () (_ BitVec 64))
(declare-fun temp222_157 () (_ BitVec 64))
(declare-fun temp222_158 () (_ BitVec 64))
(declare-fun temp222_159 () (_ BitVec 64))
(declare-fun temp222_160 () (_ BitVec 64))
(declare-fun temp222_161 () (_ BitVec 64))
(declare-fun temp222_166 () (_ BitVec 64))
(declare-fun temp222_167 () (_ BitVec 64))
(declare-fun temp222_162 () (_ BitVec 64))
(declare-fun temp222_168 () (_ BitVec 64))
(declare-fun temp222_169 () (_ BitVec 64))
(declare-fun temp222_163 () (_ BitVec 64))
(declare-fun temp222_170 () (_ BitVec 64))
(declare-fun temp222_171 () (_ BitVec 64))
(declare-fun temp222_164 () (_ BitVec 64))
(declare-fun temp222_172 () (_ BitVec 64))
(declare-fun temp222_173 () (_ BitVec 64))
(declare-fun temp222_165 () (_ BitVec 64))
(declare-fun temp222_174 () (_ BitVec 64))
(declare-fun var68494 () (_ BitVec 64))
(declare-fun var68491 () (_ BitVec 64))
(declare-fun temp222_175 () (_ BitVec 64))
(declare-fun var68495 () (_ BitVec 64))
(declare-fun temp222_176 () (_ BitVec 64))
(declare-fun temp222_177 () (_ BitVec 64))
(declare-fun var658964 () (_ BitVec 64))
(declare-fun temp222_179 () (_ BitVec 64))
(declare-fun temp222_178 () (_ BitVec 64))
(declare-fun temp222_181 () (_ BitVec 64))
(declare-fun temp222_180 () (_ BitVec 64))
(declare-fun temp222_183 () (_ BitVec 64))
(declare-fun temp222_182 () (_ BitVec 64))
(declare-fun temp222_185 () (_ BitVec 64))
(declare-fun temp222_184 () (_ BitVec 64))
(declare-fun temp222_187 () (_ BitVec 64))
(declare-fun temp222_186 () (_ BitVec 64))
(declare-fun temp222_189 () (_ BitVec 64))
(declare-fun temp222_188 () (_ BitVec 64))
(declare-fun temp222_191 () (_ BitVec 64))
(declare-fun temp222_190 () (_ BitVec 64))
(declare-fun temp222_193 () (_ BitVec 64))
(declare-fun temp222_192 () (_ BitVec 64))
(declare-fun temp222_195 () (_ BitVec 64))
(declare-fun temp222_194 () (_ BitVec 64))
(declare-fun temp222_197 () (_ BitVec 64))
(declare-fun temp222_196 () (_ BitVec 64))
(declare-fun temp222_199 () (_ BitVec 64))
(declare-fun temp222_198 () (_ BitVec 64))
(declare-fun temp222_201 () (_ BitVec 64))
(declare-fun temp222_200 () (_ BitVec 64))
(declare-fun temp222_203 () (_ BitVec 64))
(declare-fun temp222_202 () (_ BitVec 64))
(declare-fun var68638 () (_ BitVec 64))
(declare-fun temp222_204 () (_ BitVec 64))
(declare-fun var855732 () (_ BitVec 64))
(declare-fun temp222_205 () (_ BitVec 64))
(assert (or (= ARGNAME_padding_NAMEEND #x0000000000000001)
    (= ARGNAME_padding_NAMEEND #x0000000000000002)
    (= ARGNAME_padding_NAMEEND #x0000000000000003)))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp222_1 #x0000000000000004))
(assert (= var68233
   (ite (= ARGNAME_input_NAMEEND_DIM temp222_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp222_2 #x0000000000000001))
(assert (= var68233 temp222_2))
(assert (= temp222_3 #x0000000000000004))
(assert (= var68277
   (ite (= ARGNAME_filter_NAMEEND_DIM temp222_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp222_4 #x0000000000000001))
(assert (= var68277 temp222_4))
(assert (= temp222_5 #x0000000000000000))
(assert (= temp222_6 (select ARGNAME_input_NAMEEND_DIMSIZE temp222_5)))
(assert (= temp222_7 #x0000000000000001))
(assert (= temp222_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp222_7)))
(assert (= temp222_9 #x0000000000000002))
(assert (= temp222_10 (select ARGNAME_input_NAMEEND_DIMSIZE temp222_9)))
(assert (= temp222_11 #x0000000000000003))
(assert (= temp222_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp222_11)))
(assert (= temp222_13 #x0000000000000004))
(assert (= temp222_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp222_13)))
(assert (= temp222_15 #x0000000000000005))
(assert (= temp222_16 (select ARGNAME_input_NAMEEND_DIMSIZE temp222_15)))
(assert (= temp222_20 #x0000000000000002))
(assert (= temp222_21 #x0000000000000003))
(assert (= temp222_22 #x0000000000000002))
(assert (= temp222_23 #x0000000000000003))
(assert (= temp222_18
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp222_22)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp222_23))
        (bvsub ARGNAME_input_NAMEEND_DIM temp222_21)
        (bvsub ARGNAME_input_NAMEEND_DIM temp222_20))))
(assert (= temp222_24 #x0000000000000002))
(assert (= temp222_25 #x0000000000000003))
(assert (= temp222_26 #x0000000000000003))
(assert (= temp222_19 (ite (= temp222_18 temp222_26) temp222_25 temp222_24)))
(assert (= temp222_28 #x0000000000000001))
(assert (= temp222_29 #x0000000000000005))
(assert (= temp222_30 #x0000000000000001))
(assert (= temp222_31 #x0000000000000001))
(assert (= temp222_32 #x0000000000000002))
(assert (= temp222_17
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp222_31)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp222_32))
        temp222_30
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp222_29)
             temp222_19
             (bvadd temp222_19 temp222_28)))))
(assert (= temp222_33 (select ARGNAME_input_NAMEEND_DIMSIZE temp222_17)))
(assert (= var68312 temp222_33))
(assert (= temp222_34 #x0000000000000000))
(assert (= temp222_35 (select ARGNAME_filter_NAMEEND_DIMSIZE temp222_34)))
(assert (= temp222_36 #x0000000000000001))
(assert (= temp222_37 (select ARGNAME_filter_NAMEEND_DIMSIZE temp222_36)))
(assert (= temp222_38 #x0000000000000002))
(assert (= temp222_39 (select ARGNAME_filter_NAMEEND_DIMSIZE temp222_38)))
(assert (= temp222_40 #x0000000000000003))
(assert (= temp222_41 (select ARGNAME_filter_NAMEEND_DIMSIZE temp222_40)))
(assert (= temp222_42 #x0000000000000004))
(assert (= temp222_43 (select ARGNAME_filter_NAMEEND_DIMSIZE temp222_42)))
(assert (= temp222_44 #x0000000000000005))
(assert (= temp222_45 (select ARGNAME_filter_NAMEEND_DIMSIZE temp222_44)))
(assert (= temp222_46 #x0000000000000002))
(assert (= temp222_47 (select ARGNAME_filter_NAMEEND_DIMSIZE temp222_46)))
(assert (= var68315 temp222_47))
(assert (= var68318 (ite (= var68312 var68315) #x0000000000000001 #x0000000000000000)))
(assert (= temp222_48 #x0000000000000001))
(assert (= var68318 temp222_48))
(assert (= temp222_49 #x0000000000000003))
(assert (= temp222_50 (select ARGNAME_filter_NAMEEND_DIMSIZE temp222_49)))
(assert (= var68342 temp222_50))
(assert (= var68343 var68342))
(assert (= temp222_51 #x0000000000000020))
(assert (= var68344 (bvshl var68342 temp222_51)))
(assert (= temp222_52 #x0000000000000020))
(assert (= var68345 (bvashr var68344 temp222_52)))
(assert (= var68346 (bvmul var68345 var68312)))
(assert (= var68347 var68346))
(assert (= temp222_56 #x0000000000000002))
(assert (= temp222_57 #x0000000000000003))
(assert (= temp222_58 #x0000000000000002))
(assert (= temp222_59 #x0000000000000003))
(assert (= temp222_54
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp222_58)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp222_59))
        (bvsub ARGNAME_input_NAMEEND_DIM temp222_57)
        (bvsub ARGNAME_input_NAMEEND_DIM temp222_56))))
(assert (= temp222_60 #x0000000000000002))
(assert (= temp222_61 #x0000000000000003))
(assert (= temp222_62 #x0000000000000003))
(assert (= temp222_55 (ite (= temp222_54 temp222_62) temp222_61 temp222_60)))
(assert (= temp222_64 #x0000000000000002))
(assert (= temp222_65 #x0000000000000001))
(assert (= temp222_66 #x0000000000000002))
(assert (= temp222_67 #x0000000000000001))
(assert (= temp222_68 #x0000000000000000))
(assert (= temp222_69 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp222_68)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp222_69))
                (bvsub temp222_55 temp222_67)
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp222_65)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp222_66))
                     temp222_55
                     (bvsub temp222_55 temp222_64)))))
  (= temp222_53 a!1)))
(assert (= temp222_70 (select ARGNAME_input_NAMEEND_DIMSIZE temp222_53)))
(assert (= var68349 temp222_70))
(assert (= temp222_71 #x000000007fffffff))
(assert (= var134606 temp222_71))
(assert (= var68350 var134606))
(assert (= var68353 var68350))
(assert (= var68354
   (ite (bvslt var68349 var68353) #x0000000000000001 #x0000000000000000)))
(assert (= temp222_72 #x0000000000000001))
(assert (= var68354 temp222_72))
(assert (= var68374 var68349))
(assert (= temp222_73 #x0000000000000000))
(assert (= temp222_74 (select ARGNAME_filter_NAMEEND_DIMSIZE temp222_73)))
(assert (= var68375 temp222_74))
(assert (= var68376 var68375))
(assert (= temp222_78 #x0000000000000002))
(assert (= temp222_79 #x0000000000000003))
(assert (= temp222_80 #x0000000000000002))
(assert (= temp222_81 #x0000000000000003))
(assert (= temp222_76
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp222_80)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp222_81))
        (bvsub ARGNAME_input_NAMEEND_DIM temp222_79)
        (bvsub ARGNAME_input_NAMEEND_DIM temp222_78))))
(assert (= temp222_82 #x0000000000000002))
(assert (= temp222_83 #x0000000000000003))
(assert (= temp222_84 #x0000000000000003))
(assert (= temp222_77 (ite (= temp222_76 temp222_84) temp222_83 temp222_82)))
(assert (= temp222_86 #x0000000000000001))
(assert (= temp222_87 #x0000000000000001))
(assert (= temp222_88 #x0000000000000001))
(assert (= temp222_89 #x0000000000000002))
(assert (= temp222_90 #x0000000000000000))
(assert (= temp222_91 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp222_90)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp222_91))
                temp222_77
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp222_88)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp222_89))
                     (bvadd temp222_77 temp222_87)
                     (bvsub temp222_77 temp222_86)))))
  (= temp222_75 a!1)))
(assert (= temp222_92 (select ARGNAME_input_NAMEEND_DIMSIZE temp222_75)))
(assert (= var68378 temp222_92))
(assert (= temp222_93 #x000000007fffffff))
(assert (= var200142 temp222_93))
(assert (= var68379 var200142))
(assert (= var68380 var68379))
(assert (= var68381
   (ite (bvslt var68378 var68380) #x0000000000000001 #x0000000000000000)))
(assert (= temp222_94 #x0000000000000001))
(assert (= var68381 temp222_94))
(assert (= var68401 var68378))
(assert (= temp222_95 #x0000000000000001))
(assert (= temp222_96 (select ARGNAME_filter_NAMEEND_DIMSIZE temp222_95)))
(assert (= var68402 temp222_96))
(assert (= var68403 var68402))
(assert (= temp222_97 #x0000000000000000))
(assert (= temp222_98 (select ARGNAME_input_NAMEEND_DIMSIZE temp222_97)))
(assert (= var68404 temp222_98))
(assert (= var68405 var68404))
(assert (= temp222_100 #x0000000000000000))
(assert (= temp222_99 temp222_100))
(assert (= temp222_102 #x0000000000000000))
(assert (= temp222_101 temp222_102))
(assert (= temp222_104 #x0000000000000000))
(assert (= temp222_103 temp222_104))
(assert (= temp222_106 #x0000000000000000))
(assert (= temp222_105 temp222_106))
(assert (= temp222_108 #x0000000000000000))
(assert (= temp222_107 temp222_108))
(assert (= temp222_110 #x0000000000000000))
(assert (= temp222_109 temp222_110))
(assert (= temp222_111 #x0000000000000003))
(assert (= var68426
   (ite (= ARGNAME_padding_NAMEEND temp222_111)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp222_112 #x0000000000000000))
(assert (= var68426 temp222_112))
(assert (= temp222_113 #x0000000000000020))
(assert (= var68439 (bvshl var68349 temp222_113)))
(assert (= temp222_114 #x0000000000000020))
(assert (= var68440 (bvashr var68439 temp222_114)))
(assert (= temp222_115 #x0000000000000020))
(assert (= var68441 (bvshl var68375 temp222_115)))
(assert (= temp222_116 #x0000000000000020))
(assert (= var68442 (bvashr var68441 temp222_116)))
(assert (= var269051 var68440))
(assert (= var269052 var68442))
(assert (= var334158 var269051))
(assert (= var334159 var269052))
(assert (= temp222_117 #x0000000000000001))
(assert (= var334160 temp222_117))
(assert (= temp222_118 #x0000000000000001))
(assert (= var334178
   (ite (bvslt var334160 temp222_118) #x0000000000000001 #x0000000000000000)))
(assert (= temp222_119 #x0000000000000000))
(assert (= var334178 temp222_119))
(assert (= temp222_120 #xffffffffffffffff))
(assert (= var334183 (bvadd var334159 temp222_120)))
(assert (= var334184 (bvmul var334183 var334160)))
(assert (= temp222_121 #x0000000000000001))
(assert (= var334185 (bvadd var334184 temp222_121)))
(assert (= temp222_122 #xffffffffffffffff))
(assert (= var334186 (bvxor var334184 temp222_122)))
(assert (= temp222_123 #x0000000000000002))
(assert (or false (= ARGNAME_padding_NAMEEND temp222_123)))
(assert (= temp222_124 #xffffffffffffffff))
(assert (= var334205 (bvadd var334158 temp222_124)))
(assert (= temp222_126 #x0000000000000000))
(assert (= temp222_125 temp222_126))
(assert (= var334216 (bvsub var334185 var334158)))
(assert (= temp222_127 #x0000000000000000))
(assert (= var334231
   (ite (bvslt temp222_99 temp222_127) #x0000000000000001 #x0000000000000000)))
(assert (= temp222_128 #x0000000000000000))
(assert (= var334231 temp222_128))
(assert (= temp222_129 #x0000000000000020))
(assert (= var68467 (bvshl var68378 temp222_129)))
(assert (= temp222_130 #x0000000000000020))
(assert (= var68468 (bvashr var68467 temp222_130)))
(assert (= temp222_131 #x0000000000000020))
(assert (= var68469 (bvshl var68402 temp222_131)))
(assert (= temp222_132 #x0000000000000020))
(assert (= var68470 (bvashr var68469 temp222_132)))
(assert (= var465659 var68468))
(assert (= var465660 var68470))
(assert (= var530766 var465659))
(assert (= var530767 var465660))
(assert (= temp222_133 #x0000000000000001))
(assert (= var530768 temp222_133))
(assert (= temp222_134 #x0000000000000001))
(assert (= var530786
   (ite (bvslt var530768 temp222_134) #x0000000000000001 #x0000000000000000)))
(assert (= temp222_135 #x0000000000000000))
(assert (= var530786 temp222_135))
(assert (= temp222_136 #xffffffffffffffff))
(assert (= var530791 (bvadd var530767 temp222_136)))
(assert (= var530792 (bvmul var530791 var530768)))
(assert (= temp222_137 #x0000000000000001))
(assert (= var530793 (bvadd var530792 temp222_137)))
(assert (= temp222_138 #xffffffffffffffff))
(assert (= var530794 (bvxor var530792 temp222_138)))
(assert (= temp222_139 #x0000000000000002))
(assert (or false (= ARGNAME_padding_NAMEEND temp222_139)))
(assert (= temp222_140 #xffffffffffffffff))
(assert (= var530813 (bvadd var530766 temp222_140)))
(assert (= temp222_142 #x0000000000000000))
(assert (= temp222_141 temp222_142))
(assert (= var530824 (bvsub var530793 var530766)))
(assert (= temp222_143 #x0000000000000000))
(assert (= var530839
   (ite (bvslt temp222_101 temp222_143) #x0000000000000001 #x0000000000000000)))
(assert (= temp222_144 #x0000000000000000))
(assert (= var530839 temp222_144))
(assert (= temp222_145 #x0000000000000020))
(assert (= var68492 (bvshl var68404 temp222_145)))
(assert (= temp222_146 #x0000000000000020))
(assert (= var68493 (bvashr var68492 temp222_146)))
(assert (= temp222_147 #x0000000000000020))
(assert (= var68496 (bvshl var68346 temp222_147)))
(assert (= temp222_148 #x0000000000000020))
(assert (= var68497 (bvashr var68496 temp222_148)))
(assert (= temp222_149 #x0000000000000004))
(assert (= temp222_148_DIM temp222_149))
(assert (= temp222_150 #x0000000000000000))
(assert (= temp222_151 (select temp222_148_DIMSIZE temp222_150)))
(assert (= temp222_152 #x0000000000000001))
(assert (= temp222_153 (select temp222_148_DIMSIZE temp222_152)))
(assert (= temp222_154 #x0000000000000002))
(assert (= temp222_155 (select temp222_148_DIMSIZE temp222_154)))
(assert (= temp222_156 #x0000000000000003))
(assert (= temp222_157 (select temp222_148_DIMSIZE temp222_156)))
(assert (= temp222_158 #x0000000000000004))
(assert (= temp222_159 (select temp222_148_DIMSIZE temp222_158)))
(assert (= temp222_160 #x0000000000000005))
(assert (= temp222_161 (select temp222_148_DIMSIZE temp222_160)))
(assert (= temp222_166 #x0000000000000000))
(assert (= temp222_167 (select temp222_148_DIMSIZE temp222_166)))
(assert (= temp222_162 temp222_167))
(assert (= temp222_168 #x0000000000000001))
(assert (= temp222_169 (select temp222_148_DIMSIZE temp222_168)))
(assert (= temp222_163 temp222_169))
(assert (= temp222_170 #x0000000000000002))
(assert (= temp222_171 (select temp222_148_DIMSIZE temp222_170)))
(assert (= temp222_164 temp222_171))
(assert (= temp222_172 #x0000000000000003))
(assert (= temp222_173 (select temp222_148_DIMSIZE temp222_172)))
(assert (= temp222_165 temp222_173))
(assert (= temp222_162 var68493))
(assert (= temp222_174 #x0000000000000000))
(assert (= temp222_163 (ite (= var68491 temp222_174) var68494 var68497)))
(assert (= temp222_175 #x0000000000000000))
(assert (= temp222_164 (ite (= var68491 temp222_175) var68495 var68494)))
(assert (= temp222_176 #x0000000000000000))
(assert (= temp222_165 (ite (= var68491 temp222_176) var68497 var68495)))
(assert (= temp222_177 #x0000000000000002))
(assert (= var658964 temp222_177))
(assert (= temp222_179 #x0000000000000000))
(assert (= temp222_178 temp222_179))
(assert (= temp222_181 #x0000000000000000))
(assert (= temp222_180 temp222_181))
(assert (= temp222_183 #x0000000000000000))
(assert (= temp222_182 temp222_183))
(assert (= temp222_185 #x0000000000000000))
(assert (= temp222_184 temp222_185))
(assert (= temp222_187 #x0000000000000000))
(assert (= temp222_186 temp222_187))
(assert (= temp222_189 #x0000000000000000))
(assert (= temp222_188 temp222_189))
(assert (= temp222_191 #x0000000000000000))
(assert (= temp222_190 temp222_191))
(assert (= temp222_193 #x0000000000000000))
(assert (= temp222_192 temp222_193))
(assert (= temp222_195 #x0000000000000000))
(assert (= temp222_194 temp222_195))
(assert (= temp222_197 #x0000000000000000))
(assert (= temp222_196 temp222_197))
(assert (= temp222_199 #x0000000000000000))
(assert (= temp222_198 temp222_199))
(assert (= temp222_201 #x0000000000000000))
(assert (= temp222_200 temp222_201))
(assert (= temp222_203 #x0000000000000000))
(assert (= temp222_202 temp222_203))
(assert (= var68638 var68312))
(assert (= temp222_204 #x0000000000000000))
(assert (= var855732
   (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp222_204)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp222_205 #x0000000000000001))
(assert (= var855732 temp222_205))
(model-add temp222_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp222_2 () (_ BitVec 64) #x0000000000000001)
(model-add var68233 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))


























