(declare-fun temp250_1 () (_ BitVec 64))
(declare-fun temp250_2 () (_ BitVec 64))
(declare-fun var66204 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_strides_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp250_3 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp250_4 () (_ BitVec 64))
(declare-fun temp250_5 () (_ BitVec 64))
(declare-fun temp250_6 () (_ BitVec 64))
(declare-fun temp250_7 () (_ BitVec 64))
(declare-fun temp250_8 () (_ BitVec 64))
(declare-fun temp250_9 () (_ BitVec 64))
(declare-fun temp250_10 () (_ BitVec 64))
(declare-fun temp250_11 () (_ BitVec 64))
(declare-fun temp250_12 () (_ BitVec 64))
(declare-fun temp250_13 () (_ BitVec 64))
(declare-fun temp250_14 () (_ BitVec 64))
(declare-fun temp250_18 () (_ BitVec 64))
(declare-fun temp250_19 () (_ BitVec 64))
(declare-fun temp250_20 () (_ BitVec 64))
(declare-fun temp250_21 () (_ BitVec 64))
(declare-fun temp250_16 () (_ BitVec 64))
(declare-fun temp250_22 () (_ BitVec 64))
(declare-fun temp250_23 () (_ BitVec 64))
(declare-fun temp250_24 () (_ BitVec 64))
(declare-fun temp250_17 () (_ BitVec 64))
(declare-fun temp250_26 () (_ BitVec 64))
(declare-fun temp250_27 () (_ BitVec 64))
(declare-fun temp250_28 () (_ BitVec 64))
(declare-fun temp250_29 () (_ BitVec 64))
(declare-fun temp250_30 () (_ BitVec 64))
(declare-fun temp250_31 () (_ BitVec 64))
(declare-fun temp250_15 () (_ BitVec 64))
(declare-fun temp250_32 () (_ BitVec 64))
(declare-fun var66234 () (_ BitVec 64))
(declare-fun var66238 () (_ BitVec 64))
(declare-fun temp250_36 () (_ BitVec 64))
(declare-fun temp250_37 () (_ BitVec 64))
(declare-fun temp250_38 () (_ BitVec 64))
(declare-fun temp250_39 () (_ BitVec 64))
(declare-fun temp250_34 () (_ BitVec 64))
(declare-fun temp250_40 () (_ BitVec 64))
(declare-fun temp250_41 () (_ BitVec 64))
(declare-fun temp250_42 () (_ BitVec 64))
(declare-fun temp250_35 () (_ BitVec 64))
(declare-fun temp250_44 () (_ BitVec 64))
(declare-fun temp250_45 () (_ BitVec 64))
(declare-fun temp250_46 () (_ BitVec 64))
(declare-fun temp250_47 () (_ BitVec 64))
(declare-fun temp250_48 () (_ BitVec 64))
(declare-fun temp250_49 () (_ BitVec 64))
(declare-fun temp250_33 () (_ BitVec 64))
(declare-fun temp250_50 () (_ BitVec 64))
(declare-fun var66242 () (_ BitVec 64))
(declare-fun var66244 () (_ BitVec 64))
(declare-fun temp250_54 () (_ BitVec 64))
(declare-fun temp250_55 () (_ BitVec 64))
(declare-fun temp250_56 () (_ BitVec 64))
(declare-fun temp250_57 () (_ BitVec 64))
(declare-fun temp250_52 () (_ BitVec 64))
(declare-fun temp250_58 () (_ BitVec 64))
(declare-fun temp250_59 () (_ BitVec 64))
(declare-fun temp250_60 () (_ BitVec 64))
(declare-fun temp250_53 () (_ BitVec 64))
(declare-fun temp250_62 () (_ BitVec 64))
(declare-fun temp250_63 () (_ BitVec 64))
(declare-fun temp250_64 () (_ BitVec 64))
(declare-fun temp250_65 () (_ BitVec 64))
(declare-fun temp250_51 () (_ BitVec 64))
(declare-fun temp250_66 () (_ BitVec 64))
(declare-fun var66246 () (_ BitVec 64))
(declare-fun temp250_70 () (_ BitVec 64))
(declare-fun temp250_71 () (_ BitVec 64))
(declare-fun temp250_72 () (_ BitVec 64))
(declare-fun temp250_73 () (_ BitVec 64))
(declare-fun temp250_68 () (_ BitVec 64))
(declare-fun temp250_74 () (_ BitVec 64))
(declare-fun temp250_75 () (_ BitVec 64))
(declare-fun temp250_76 () (_ BitVec 64))
(declare-fun temp250_69 () (_ BitVec 64))
(declare-fun temp250_78 () (_ BitVec 64))
(declare-fun temp250_79 () (_ BitVec 64))
(declare-fun temp250_80 () (_ BitVec 64))
(declare-fun temp250_81 () (_ BitVec 64))
(declare-fun temp250_82 () (_ BitVec 64))
(declare-fun temp250_67 () (_ BitVec 64))
(declare-fun temp250_83 () (_ BitVec 64))
(declare-fun var66249 () (_ BitVec 64))
(declare-fun var66251 () (_ BitVec 64))
(declare-fun var66252 () (_ BitVec 64))
(declare-fun temp250_84 () (_ BitVec 64))
(declare-fun temp250_85 () (_ BitVec 64))
(declare-fun var66292 () (_ BitVec 64))
(declare-fun temp250_86 () (_ BitVec 64))
(declare-fun var66294 () (_ BitVec 64))
(declare-fun var66295 () (_ BitVec 64))
(declare-fun temp250_87 () (_ BitVec 64))
(declare-fun temp250_88 () (_ BitVec 64))
(declare-fun var137212 () (_ BitVec 64))
(declare-fun temp250_89 () (_ BitVec 64))
(declare-fun var137218 () (_ BitVec 64))
(declare-fun temp250_90 () (_ BitVec 64))
(declare-fun temp250_91 () (_ BitVec 64))
(declare-fun var137222 () (_ BitVec 64))
(declare-fun ARGNAME_explicit_paddings_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var137223 () (_ BitVec 64))
(declare-fun temp250_92 () (_ BitVec 64))
(declare-fun temp250_93 () (_ BitVec 64))
(declare-fun ARGNAME_explicit_paddings_NAMEEND_ITERATOR_VAL () (_ BitVec 64))
(declare-fun var137255 () (_ BitVec 64))
(declare-fun temp250_94 () (_ BitVec 64))
(declare-fun temp250_95 () (_ BitVec 64))
(declare-fun var137261 () (_ BitVec 64))
(declare-fun temp250_96 () (_ BitVec 64))
(declare-fun var137262 () (_ BitVec 64))
(declare-fun temp250_98 () (_ BitVec 64))
(declare-fun var137269 () (_ BitVec 64))
(declare-fun temp250_99 () (_ BitVec 64))
(declare-fun var137272 () (_ BitVec 64))
(declare-fun temp250_100 () (_ BitVec 64))
(declare-fun var201584 () (_ BitVec 64))
(declare-fun temp250_101 () (_ BitVec 64))
(declare-fun temp250_102 () (_ BitVec 64))
(declare-fun var201593 () (_ BitVec 64))
(declare-fun var201608 () (_ BitVec 64))
(declare-fun var201583 () (_ BitVec 64))
(declare-fun var137274 () (_ BitVec 64))
(declare-fun var267171 () (_ BitVec 64))
(declare-fun temp250_103 () (_ BitVec 64))
(declare-fun temp250_104 () (_ BitVec 64))
(declare-fun temp250_105 () (_ BitVec 64))
(declare-fun var267179 () (_ BitVec 64))
(declare-fun var267194 () (_ BitVec 64))
(declare-fun var267170 () (_ BitVec 64))
(declare-fun var137275 () (_ BitVec 64))
(declare-fun temp250_106 () (_ BitVec 64))
(declare-fun var137276 () (_ BitVec 64))
(declare-fun var137277 () (_ BitVec 64))
(declare-fun temp250_107 () (_ BitVec 64))
(declare-fun ARGNAME_explicit_paddings_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp250_108 () (_ BitVec 64))
(declare-fun temp250_109 () (_ BitVec 64))
(declare-fun temp250_110 () (_ BitVec 64))
(declare-fun temp250_111 () (_ BitVec 64))
(declare-fun temp250_112 () (_ BitVec 64))
(declare-fun temp250_113 () (_ BitVec 64))
(declare-fun temp250_114 () (_ BitVec 64))
(declare-fun temp250_115 () (_ BitVec 64))
(declare-fun temp250_116 () (_ BitVec 64))
(declare-fun temp250_117 () (_ BitVec 64))
(declare-fun temp250_118 () (_ BitVec 64))
(declare-fun temp250_120 () (_ BitVec 64))
(declare-fun temp250_119 () (_ BitVec 64))
(declare-fun temp250_121 () (_ BitVec 64))
(declare-fun var137280 () (_ BitVec 64))
(declare-fun temp250_122 () (_ BitVec 64))
(declare-fun temp250_123 () (_ BitVec 64))
(declare-fun var137282 () (_ BitVec 64))
(declare-fun var137283 () (_ BitVec 64))
(declare-fun temp250_125 () (_ BitVec 64))
(declare-fun temp250_124 () (_ BitVec 64))
(declare-fun temp250_126 () (_ BitVec 64))
(declare-fun var137286 () (_ BitVec 64))
(declare-fun temp250_127 () (_ BitVec 64))
(declare-fun temp250_128 () (_ BitVec 64))
(declare-fun var137288 () (_ BitVec 64))
(declare-fun var137289 () (_ BitVec 64))
(declare-fun temp250_130 () (_ BitVec 64))
(declare-fun temp250_129 () (_ BitVec 64))
(declare-fun temp250_131 () (_ BitVec 64))
(declare-fun var137292 () (_ BitVec 64))
(declare-fun temp250_132 () (_ BitVec 64))
(declare-fun temp250_133 () (_ BitVec 64))
(declare-fun var137294 () (_ BitVec 64))
(declare-fun var137295 () (_ BitVec 64))
(declare-fun temp250_135 () (_ BitVec 64))
(declare-fun temp250_134 () (_ BitVec 64))
(declare-fun temp250_136 () (_ BitVec 64))
(declare-fun var137298 () (_ BitVec 64))
(declare-fun temp250_137 () (_ BitVec 64))
(declare-fun temp250_138 () (_ BitVec 64))
(declare-fun var137303 () (_ BitVec 64))
(assert (or (= ARGNAME_padding_NAMEEND #x0000000000000001)
    (= ARGNAME_padding_NAMEEND #x0000000000000002)
    (= ARGNAME_padding_NAMEEND #x0000000000000003)))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp250_1 #x0000000000000004))
(assert (= var66204
   (ite (= ARGNAME_strides_NAMEEND_LEN temp250_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp250_2 #x0000000000000001))
(assert (= var66204 temp250_2))
(assert (= temp250_3 #x0000000000000000))
(assert (= temp250_4 (select ARGNAME_strides_NAMEEND_VAL temp250_3)))
(assert (= temp250_5 #x0000000000000001))
(assert (= temp250_6 (select ARGNAME_strides_NAMEEND_VAL temp250_5)))
(assert (= temp250_7 #x0000000000000002))
(assert (= temp250_8 (select ARGNAME_strides_NAMEEND_VAL temp250_7)))
(assert (= temp250_9 #x0000000000000003))
(assert (= temp250_10 (select ARGNAME_strides_NAMEEND_VAL temp250_9)))
(assert (= temp250_11 #x0000000000000004))
(assert (= temp250_12 (select ARGNAME_strides_NAMEEND_VAL temp250_11)))
(assert (= temp250_13 #x0000000000000005))
(assert (= temp250_14 (select ARGNAME_strides_NAMEEND_VAL temp250_13)))
(assert (= temp250_18 #x0000000000000002))
(assert (= temp250_19 #x0000000000000003))
(assert (= temp250_20 #x0000000000000002))
(assert (= temp250_21 #x0000000000000003))
(assert (= temp250_16
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp250_20)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp250_21))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp250_19)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp250_18))))
(assert (= temp250_22 #x0000000000000002))
(assert (= temp250_23 #x0000000000000003))
(assert (= temp250_24 #x0000000000000003))
(assert (= temp250_17 (ite (= temp250_16 temp250_24) temp250_23 temp250_22)))
(assert (= temp250_26 #x0000000000000002))
(assert (= temp250_27 #x0000000000000001))
(assert (= temp250_28 #x0000000000000002))
(assert (= temp250_29 #x0000000000000001))
(assert (= temp250_30 #x0000000000000000))
(assert (= temp250_31 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp250_30)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp250_31))
                (bvsub temp250_17 temp250_29)
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp250_27)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp250_28))
                     temp250_17
                     (bvsub temp250_17 temp250_26)))))
  (= temp250_15 a!1)))
(assert (= temp250_32 (select ARGNAME_strides_NAMEEND_VAL temp250_15)))
(assert (= var66234 temp250_32))
(assert (= var66238 var66234))
(assert (= temp250_36 #x0000000000000002))
(assert (= temp250_37 #x0000000000000003))
(assert (= temp250_38 #x0000000000000002))
(assert (= temp250_39 #x0000000000000003))
(assert (= temp250_34
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp250_38)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp250_39))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp250_37)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp250_36))))
(assert (= temp250_40 #x0000000000000002))
(assert (= temp250_41 #x0000000000000003))
(assert (= temp250_42 #x0000000000000003))
(assert (= temp250_35 (ite (= temp250_34 temp250_42) temp250_41 temp250_40)))
(assert (= temp250_44 #x0000000000000001))
(assert (= temp250_45 #x0000000000000001))
(assert (= temp250_46 #x0000000000000001))
(assert (= temp250_47 #x0000000000000002))
(assert (= temp250_48 #x0000000000000000))
(assert (= temp250_49 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp250_48)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp250_49))
                temp250_35
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp250_46)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp250_47))
                     (bvadd temp250_35 temp250_45)
                     (bvsub temp250_35 temp250_44)))))
  (= temp250_33 a!1)))
(assert (= temp250_50 (select ARGNAME_strides_NAMEEND_VAL temp250_33)))
(assert (= var66242 temp250_50))
(assert (= var66244 var66242))
(assert (= temp250_54 #x0000000000000002))
(assert (= temp250_55 #x0000000000000003))
(assert (= temp250_56 #x0000000000000002))
(assert (= temp250_57 #x0000000000000003))
(assert (= temp250_52
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp250_56)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp250_57))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp250_55)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp250_54))))
(assert (= temp250_58 #x0000000000000002))
(assert (= temp250_59 #x0000000000000003))
(assert (= temp250_60 #x0000000000000003))
(assert (= temp250_53 (ite (= temp250_52 temp250_60) temp250_59 temp250_58)))
(assert (= temp250_62 #x0000000000000000))
(assert (= temp250_63 #x0000000000000001))
(assert (= temp250_64 #x0000000000000005))
(assert (= temp250_65 #x0000000000000004))
(assert (= temp250_51
   (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp250_65)
        temp250_53
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp250_64)
             (bvadd temp250_53 temp250_63)
             temp250_62))))
(assert (= temp250_66 (select ARGNAME_strides_NAMEEND_VAL temp250_51)))
(assert (= var66246 temp250_66))
(assert (= temp250_70 #x0000000000000002))
(assert (= temp250_71 #x0000000000000003))
(assert (= temp250_72 #x0000000000000002))
(assert (= temp250_73 #x0000000000000003))
(assert (= temp250_68
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp250_72)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp250_73))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp250_71)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp250_70))))
(assert (= temp250_74 #x0000000000000002))
(assert (= temp250_75 #x0000000000000003))
(assert (= temp250_76 #x0000000000000003))
(assert (= temp250_69 (ite (= temp250_68 temp250_76) temp250_75 temp250_74)))
(assert (= temp250_78 #x0000000000000001))
(assert (= temp250_79 #x0000000000000005))
(assert (= temp250_80 #x0000000000000001))
(assert (= temp250_81 #x0000000000000001))
(assert (= temp250_82 #x0000000000000002))
(assert (= temp250_67
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp250_81)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp250_82))
        temp250_80
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp250_79)
             temp250_69
             (bvadd temp250_69 temp250_78)))))
(assert (= temp250_83 (select ARGNAME_strides_NAMEEND_VAL temp250_67)))
(assert (= var66249 temp250_83))
(assert (= var66251 var66238))
(assert (= var66252 (ite (= var66251 var66244) #x0000000000000001 #x0000000000000000)))
(assert (= temp250_84 #x0000000000000001))
(assert (= var66252 temp250_84))
(assert (= temp250_85 #x0000000000000001))
(assert (= var66292 (ite (= var66246 temp250_85) #x0000000000000001 #x0000000000000000)))
(assert (= temp250_86 #x0000000000000001))
(assert (= var66294 (ite (= var66249 temp250_86) #x0000000000000001 #x0000000000000000)))
(assert (= var66295 (bvand var66292 var66294)))
(assert (= temp250_87 #x0000000000000001))
(assert (= var66295 temp250_87))
(assert (= temp250_88 #x0000000000000004))
(assert (= var137212 temp250_88))
(assert (= temp250_89 #x0000000000000003))
(assert (= var137218
   (ite (= ARGNAME_padding_NAMEEND temp250_89)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp250_90 #x0000000000000001))
(assert (= var137218 temp250_90))
(assert (= temp250_91 #x0000000000000001))
(assert (= var137222 (bvshl var137212 temp250_91)))
(assert (= var137223
   (ite (= var137222 ARGNAME_explicit_paddings_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp250_92 #x0000000000000001))
(assert (= var137223 temp250_92))
(assert (= temp250_93 #x0000000000000000))
(assert (= var137255
   (ite (bvslt ARGNAME_explicit_paddings_NAMEEND_ITERATOR_VAL temp250_93)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp250_94 #x0000000000000000))
(assert (= var137255 temp250_94))
(assert (= temp250_95 #x0000000000000000))
(assert (= var137261 temp250_95))
(assert (= temp250_96 #x0000000000000000))
(assert (= var137262
   (ite (= var137261 temp250_96) #x0000000000000001 #x0000000000000000)))
(assert (= temp250_98 #x0000000000000002))
(assert (= var137269 temp250_98))
(assert (= temp250_99 #x0000000000000002))
(assert (= var137272
   (ite (= var137269 temp250_99) #x0000000000000001 #x0000000000000000)))
(assert (= temp250_100 #x0000000000000001))
(assert (= var137272 temp250_100))
(assert (= var201584 var137212))
(assert (= temp250_101 #x0000000000000005))
(assert (or false (= ARGNAME_data_format_NAMEEND_STRFMT temp250_101)))
(assert (= temp250_102 #xffffffffffffffff))
(assert (= var201593 (bvadd var201584 temp250_102)))
(assert (= var201608 var201593))
(assert (= var201583 var201608))
(assert (= var137274 var201583))
(assert (= var267171 var137212))
(assert (= temp250_103 #x0000000000000003))
(assert (= temp250_104 #x0000000000000005))
(assert (or false
    (= ARGNAME_data_format_NAMEEND_STRFMT temp250_103)
    (= ARGNAME_data_format_NAMEEND_STRFMT temp250_104)))
(assert (= temp250_105 #xfffffffffffffffe))
(assert (= var267179 (bvadd var267171 temp250_105)))
(assert (= var267194 var267179))
(assert (= var267170 var267194))
(assert (= var137275 var267170))
(assert (= temp250_106 #x0000000000000001))
(assert (= var137276 (bvshl var137274 temp250_106)))
(assert (= var137277 var137276))
(assert (= temp250_107 #x0000000000000000))
(assert (= temp250_108 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp250_107)))
(assert (= temp250_109 #x0000000000000001))
(assert (= temp250_110 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp250_109)))
(assert (= temp250_111 #x0000000000000002))
(assert (= temp250_112 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp250_111)))
(assert (= temp250_113 #x0000000000000003))
(assert (= temp250_114 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp250_113)))
(assert (= temp250_115 #x0000000000000004))
(assert (= temp250_116 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp250_115)))
(assert (= temp250_117 #x0000000000000005))
(assert (= temp250_118 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp250_117)))
(assert (= temp250_120 (select ARGNAME_explicit_paddings_NAMEEND_VAL var137277)))
(assert (= temp250_119 temp250_120))
(assert (= temp250_121 #x0000000000000000))
(assert (= var137280
   (ite (= temp250_119 temp250_121) #x0000000000000001 #x0000000000000000)))
(assert (= temp250_122 #x0000000000000001))
(assert (= var137280 temp250_122))
(assert (= temp250_123 #x0000000000000001))
(assert (= var137282 (bvor var137276 temp250_123)))
(assert (= var137283 var137282))
(assert (= temp250_125 (select ARGNAME_explicit_paddings_NAMEEND_VAL var137283)))
(assert (= temp250_124 temp250_125))
(assert (= temp250_126 #x0000000000000000))
(assert (= var137286
   (ite (= temp250_124 temp250_126) #x0000000000000001 #x0000000000000000)))
(assert (= temp250_127 #x0000000000000001))
(assert (= var137286 temp250_127))
(assert (= temp250_128 #x0000000000000001))
(assert (= var137288 (bvshl var137275 temp250_128)))
(assert (= var137289 var137288))
(assert (= temp250_130 (select ARGNAME_explicit_paddings_NAMEEND_VAL var137289)))
(assert (= temp250_129 temp250_130))
(assert (= temp250_131 #x0000000000000000))
(assert (= var137292
   (ite (= temp250_129 temp250_131) #x0000000000000001 #x0000000000000000)))
(assert (= temp250_132 #x0000000000000001))
(assert (= var137292 temp250_132))
(assert (= temp250_133 #x0000000000000001))
(assert (= var137294 (bvor var137288 temp250_133)))
(assert (= var137295 var137294))
(assert (= temp250_135 (select ARGNAME_explicit_paddings_NAMEEND_VAL var137295)))
(assert (= temp250_134 temp250_135))
(assert (= temp250_136 #x0000000000000000))
(assert (= var137298
   (ite (= temp250_134 temp250_136) #x0000000000000001 #x0000000000000000)))
(assert (= temp250_137 #x0000000000000001))
(assert (= var137298 temp250_137))
(assert (= temp250_138 #x0000000000000000))
(assert (= var137303 temp250_138))
(model-add temp250_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp250_2 () (_ BitVec 64) #x0000000000000001)
(model-add var66204 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_strides_NAMEEND_LEN
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))


























