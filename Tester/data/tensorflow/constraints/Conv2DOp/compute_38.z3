(declare-fun temp1261_1 () (_ BitVec 64))
(declare-fun temp1261_2 () (_ BitVec 64))
(declare-fun var140453 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp1261_3 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var140473 () (_ BitVec 64))
(declare-fun temp1261_4 () (_ BitVec 64))
(declare-fun temp1261_5 () (_ BitVec 64))
(declare-fun var140485 () (_ BitVec 64))
(declare-fun temp1261_6 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1261_7 () (_ BitVec 64))
(declare-fun temp1261_8 () (_ BitVec 64))
(declare-fun temp1261_9 () (_ BitVec 64))
(declare-fun temp1261_10 () (_ BitVec 64))
(declare-fun temp1261_11 () (_ BitVec 64))
(declare-fun temp1261_12 () (_ BitVec 64))
(declare-fun temp1261_13 () (_ BitVec 64))
(declare-fun temp1261_14 () (_ BitVec 64))
(declare-fun temp1261_15 () (_ BitVec 64))
(declare-fun temp1261_16 () (_ BitVec 64))
(declare-fun temp1261_17 () (_ BitVec 64))
(declare-fun temp1261_18 () (_ BitVec 64))
(declare-fun var140488 () (_ BitVec 64))
(declare-fun temp1261_19 () (_ BitVec 64))
(declare-fun var206678 () (_ BitVec 64))
(declare-fun var140491 () (_ BitVec 64))
(declare-fun var140494 () (_ BitVec 64))
(declare-fun var140495 () (_ BitVec 64))
(declare-fun temp1261_21 () (_ BitVec 64))
(declare-fun var140484 () (_ BitVec 64))
(declare-fun temp1261_22 () (_ BitVec 64))
(declare-fun var140486 () (_ BitVec 64))
(declare-fun temp1261_24 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1261_25 () (_ BitVec 64))
(declare-fun temp1261_26 () (_ BitVec 64))
(declare-fun temp1261_27 () (_ BitVec 64))
(declare-fun temp1261_28 () (_ BitVec 64))
(declare-fun temp1261_29 () (_ BitVec 64))
(declare-fun temp1261_30 () (_ BitVec 64))
(declare-fun temp1261_31 () (_ BitVec 64))
(declare-fun temp1261_32 () (_ BitVec 64))
(declare-fun temp1261_33 () (_ BitVec 64))
(declare-fun temp1261_34 () (_ BitVec 64))
(declare-fun temp1261_35 () (_ BitVec 64))
(declare-fun temp1261_39 () (_ BitVec 64))
(declare-fun temp1261_40 () (_ BitVec 64))
(declare-fun temp1261_41 () (_ BitVec 64))
(declare-fun temp1261_42 () (_ BitVec 64))
(declare-fun temp1261_37 () (_ BitVec 64))
(declare-fun temp1261_43 () (_ BitVec 64))
(declare-fun temp1261_44 () (_ BitVec 64))
(declare-fun temp1261_45 () (_ BitVec 64))
(declare-fun temp1261_38 () (_ BitVec 64))
(declare-fun temp1261_47 () (_ BitVec 64))
(declare-fun temp1261_48 () (_ BitVec 64))
(declare-fun temp1261_49 () (_ BitVec 64))
(declare-fun temp1261_50 () (_ BitVec 64))
(declare-fun temp1261_51 () (_ BitVec 64))
(declare-fun temp1261_36 () (_ BitVec 64))
(declare-fun temp1261_52 () (_ BitVec 64))
(declare-fun var140502 () (_ BitVec 64))
(declare-fun temp1261_53 () (_ BitVec 64))
(declare-fun temp1261_54 () (_ BitVec 64))
(declare-fun var140505 () (_ BitVec 64))
(declare-fun temp1261_55 () (_ BitVec 64))
(declare-fun var272214 () (_ BitVec 64))
(declare-fun var140506 () (_ BitVec 64))
(declare-fun var140507 () (_ BitVec 64))
(declare-fun var140508 () (_ BitVec 64))
(declare-fun temp1261_56 () (_ BitVec 64))
(declare-fun temp1261_57 () (_ BitVec 64))
(declare-fun var337750 () (_ BitVec 64))
(declare-fun var140513 () (_ BitVec 64))
(declare-fun var140514 () (_ BitVec 64))
(declare-fun var140515 () (_ BitVec 64))
(declare-fun temp1261_58 () (_ BitVec 64))
(declare-fun var140520 () (_ BitVec 64))
(declare-fun var140521 () (_ BitVec 64))
(declare-fun temp1261_59 () (_ BitVec 64))
(declare-fun var140522 () (_ BitVec 64))
(declare-fun temp1261_60 () (_ BitVec 64))
(declare-fun var140529 () (_ BitVec 64))
(declare-fun temp1261_61 () (_ BitVec 64))
(declare-fun var140530 () (_ BitVec 64))
(declare-fun temp1261_62 () (_ BitVec 64))
(declare-fun temp1261_63 () (_ BitVec 64))
(declare-fun temp1261_64 () (_ BitVec 64))
(declare-fun var140538 () (_ BitVec 64))
(declare-fun var140539 () (_ BitVec 64))
(declare-fun temp1261_68 () (_ BitVec 64))
(declare-fun temp1261_69 () (_ BitVec 64))
(declare-fun temp1261_70 () (_ BitVec 64))
(declare-fun temp1261_71 () (_ BitVec 64))
(declare-fun temp1261_66 () (_ BitVec 64))
(declare-fun temp1261_72 () (_ BitVec 64))
(declare-fun temp1261_73 () (_ BitVec 64))
(declare-fun temp1261_74 () (_ BitVec 64))
(declare-fun temp1261_67 () (_ BitVec 64))
(declare-fun temp1261_76 () (_ BitVec 64))
(declare-fun temp1261_77 () (_ BitVec 64))
(declare-fun temp1261_78 () (_ BitVec 64))
(declare-fun temp1261_79 () (_ BitVec 64))
(declare-fun temp1261_80 () (_ BitVec 64))
(declare-fun temp1261_81 () (_ BitVec 64))
(declare-fun temp1261_65 () (_ BitVec 64))
(declare-fun temp1261_82 () (_ BitVec 64))
(declare-fun var140541 () (_ BitVec 64))
(declare-fun temp1261_83 () (_ BitVec 64))
(declare-fun var403286 () (_ BitVec 64))
(declare-fun var140542 () (_ BitVec 64))
(declare-fun var140543 () (_ BitVec 64))
(declare-fun var140544 () (_ BitVec 64))
(declare-fun temp1261_84 () (_ BitVec 64))
(declare-fun var140549 () (_ BitVec 64))
(declare-fun temp1261_85 () (_ BitVec 64))
(declare-fun temp1261_86 () (_ BitVec 64))
(declare-fun var140550 () (_ BitVec 64))
(declare-fun var140551 () (_ BitVec 64))
(declare-fun temp1261_90 () (_ BitVec 64))
(declare-fun temp1261_91 () (_ BitVec 64))
(declare-fun temp1261_92 () (_ BitVec 64))
(declare-fun temp1261_93 () (_ BitVec 64))
(declare-fun temp1261_88 () (_ BitVec 64))
(declare-fun temp1261_94 () (_ BitVec 64))
(declare-fun temp1261_95 () (_ BitVec 64))
(declare-fun temp1261_96 () (_ BitVec 64))
(declare-fun temp1261_89 () (_ BitVec 64))
(declare-fun temp1261_98 () (_ BitVec 64))
(declare-fun temp1261_99 () (_ BitVec 64))
(declare-fun temp1261_100 () (_ BitVec 64))
(declare-fun temp1261_101 () (_ BitVec 64))
(declare-fun temp1261_102 () (_ BitVec 64))
(declare-fun temp1261_103 () (_ BitVec 64))
(declare-fun temp1261_87 () (_ BitVec 64))
(declare-fun temp1261_104 () (_ BitVec 64))
(declare-fun var140553 () (_ BitVec 64))
(declare-fun temp1261_105 () (_ BitVec 64))
(declare-fun var468822 () (_ BitVec 64))
(declare-fun var140554 () (_ BitVec 64))
(declare-fun var140555 () (_ BitVec 64))
(declare-fun var140556 () (_ BitVec 64))
(declare-fun temp1261_106 () (_ BitVec 64))
(declare-fun var140561 () (_ BitVec 64))
(declare-fun temp1261_107 () (_ BitVec 64))
(declare-fun temp1261_108 () (_ BitVec 64))
(declare-fun var140562 () (_ BitVec 64))
(declare-fun var140563 () (_ BitVec 64))
(declare-fun temp1261_112 () (_ BitVec 64))
(declare-fun temp1261_113 () (_ BitVec 64))
(declare-fun temp1261_114 () (_ BitVec 64))
(declare-fun temp1261_115 () (_ BitVec 64))
(declare-fun temp1261_110 () (_ BitVec 64))
(declare-fun temp1261_116 () (_ BitVec 64))
(declare-fun temp1261_117 () (_ BitVec 64))
(declare-fun temp1261_118 () (_ BitVec 64))
(declare-fun temp1261_111 () (_ BitVec 64))
(declare-fun temp1261_120 () (_ BitVec 64))
(declare-fun temp1261_121 () (_ BitVec 64))
(declare-fun temp1261_122 () (_ BitVec 64))
(declare-fun temp1261_123 () (_ BitVec 64))
(declare-fun temp1261_109 () (_ BitVec 64))
(declare-fun temp1261_124 () (_ BitVec 64))
(declare-fun var140565 () (_ BitVec 64))
(declare-fun temp1261_125 () (_ BitVec 64))
(declare-fun var534358 () (_ BitVec 64))
(declare-fun var140566 () (_ BitVec 64))
(declare-fun var140567 () (_ BitVec 64))
(declare-fun var140568 () (_ BitVec 64))
(declare-fun temp1261_126 () (_ BitVec 64))
(declare-fun var140573 () (_ BitVec 64))
(declare-fun temp1261_127 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1261_128 () (_ BitVec 64))
(declare-fun temp1261_129 () (_ BitVec 64))
(declare-fun temp1261_130 () (_ BitVec 64))
(declare-fun temp1261_131 () (_ BitVec 64))
(declare-fun temp1261_132 () (_ BitVec 64))
(declare-fun temp1261_133 () (_ BitVec 64))
(declare-fun temp1261_134 () (_ BitVec 64))
(declare-fun temp1261_135 () (_ BitVec 64))
(declare-fun temp1261_136 () (_ BitVec 64))
(declare-fun temp1261_137 () (_ BitVec 64))
(declare-fun temp1261_138 () (_ BitVec 64))
(declare-fun temp1261_142 () (_ BitVec 64))
(declare-fun temp1261_143 () (_ BitVec 64))
(declare-fun temp1261_144 () (_ BitVec 64))
(declare-fun temp1261_145 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1261_140 () (_ BitVec 64))
(declare-fun temp1261_146 () (_ BitVec 64))
(declare-fun temp1261_147 () (_ BitVec 64))
(declare-fun temp1261_148 () (_ BitVec 64))
(declare-fun temp1261_141 () (_ BitVec 64))
(declare-fun temp1261_150 () (_ BitVec 64))
(declare-fun temp1261_151 () (_ BitVec 64))
(declare-fun temp1261_152 () (_ BitVec 64))
(declare-fun temp1261_153 () (_ BitVec 64))
(declare-fun temp1261_154 () (_ BitVec 64))
(declare-fun temp1261_155 () (_ BitVec 64))
(declare-fun temp1261_139 () (_ BitVec 64))
(declare-fun temp1261_156 () (_ BitVec 64))
(declare-fun var140576 () (_ BitVec 64))
(declare-fun temp1261_160 () (_ BitVec 64))
(declare-fun temp1261_161 () (_ BitVec 64))
(declare-fun temp1261_162 () (_ BitVec 64))
(declare-fun temp1261_163 () (_ BitVec 64))
(declare-fun temp1261_158 () (_ BitVec 64))
(declare-fun temp1261_164 () (_ BitVec 64))
(declare-fun temp1261_165 () (_ BitVec 64))
(declare-fun temp1261_166 () (_ BitVec 64))
(declare-fun temp1261_159 () (_ BitVec 64))
(declare-fun temp1261_168 () (_ BitVec 64))
(declare-fun temp1261_169 () (_ BitVec 64))
(declare-fun temp1261_170 () (_ BitVec 64))
(declare-fun temp1261_171 () (_ BitVec 64))
(declare-fun temp1261_172 () (_ BitVec 64))
(declare-fun temp1261_173 () (_ BitVec 64))
(declare-fun temp1261_157 () (_ BitVec 64))
(declare-fun temp1261_174 () (_ BitVec 64))
(declare-fun var140578 () (_ BitVec 64))
(declare-fun temp1261_175 () (_ BitVec 64))
(declare-fun ARGNAME_dilations_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1261_176 () (_ BitVec 64))
(declare-fun temp1261_177 () (_ BitVec 64))
(declare-fun temp1261_178 () (_ BitVec 64))
(declare-fun temp1261_179 () (_ BitVec 64))
(declare-fun temp1261_180 () (_ BitVec 64))
(declare-fun temp1261_181 () (_ BitVec 64))
(declare-fun temp1261_182 () (_ BitVec 64))
(declare-fun temp1261_183 () (_ BitVec 64))
(declare-fun temp1261_184 () (_ BitVec 64))
(declare-fun temp1261_185 () (_ BitVec 64))
(declare-fun temp1261_186 () (_ BitVec 64))
(declare-fun temp1261_190 () (_ BitVec 64))
(declare-fun temp1261_191 () (_ BitVec 64))
(declare-fun temp1261_192 () (_ BitVec 64))
(declare-fun temp1261_193 () (_ BitVec 64))
(declare-fun ARGNAME_dilations_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1261_188 () (_ BitVec 64))
(declare-fun temp1261_194 () (_ BitVec 64))
(declare-fun temp1261_195 () (_ BitVec 64))
(declare-fun temp1261_196 () (_ BitVec 64))
(declare-fun temp1261_189 () (_ BitVec 64))
(declare-fun temp1261_198 () (_ BitVec 64))
(declare-fun temp1261_199 () (_ BitVec 64))
(declare-fun temp1261_200 () (_ BitVec 64))
(declare-fun temp1261_201 () (_ BitVec 64))
(declare-fun temp1261_202 () (_ BitVec 64))
(declare-fun temp1261_203 () (_ BitVec 64))
(declare-fun temp1261_187 () (_ BitVec 64))
(declare-fun temp1261_204 () (_ BitVec 64))
(declare-fun var140581 () (_ BitVec 64))
(declare-fun temp1261_208 () (_ BitVec 64))
(declare-fun temp1261_209 () (_ BitVec 64))
(declare-fun temp1261_210 () (_ BitVec 64))
(declare-fun temp1261_211 () (_ BitVec 64))
(declare-fun temp1261_206 () (_ BitVec 64))
(declare-fun temp1261_212 () (_ BitVec 64))
(declare-fun temp1261_213 () (_ BitVec 64))
(declare-fun temp1261_214 () (_ BitVec 64))
(declare-fun temp1261_207 () (_ BitVec 64))
(declare-fun temp1261_216 () (_ BitVec 64))
(declare-fun temp1261_217 () (_ BitVec 64))
(declare-fun temp1261_218 () (_ BitVec 64))
(declare-fun temp1261_219 () (_ BitVec 64))
(declare-fun temp1261_220 () (_ BitVec 64))
(declare-fun temp1261_221 () (_ BitVec 64))
(declare-fun temp1261_205 () (_ BitVec 64))
(declare-fun temp1261_222 () (_ BitVec 64))
(declare-fun var140583 () (_ BitVec 64))
(declare-fun temp1261_223 () (_ BitVec 64))
(declare-fun var140594 () (_ BitVec 64))
(declare-fun temp1261_224 () (_ BitVec 64))
(declare-fun temp1261_226 () (_ BitVec 64))
(declare-fun temp1261_225 () (_ BitVec 64))
(declare-fun temp1261_228 () (_ BitVec 64))
(declare-fun temp1261_227 () (_ BitVec 64))
(declare-fun temp1261_229 () (_ BitVec 64))
(declare-fun var140611 () (_ BitVec 64))
(declare-fun temp1261_230 () (_ BitVec 64))
(declare-fun var140612 () (_ BitVec 64))
(declare-fun temp1261_231 () (_ BitVec 64))
(declare-fun var140613 () (_ BitVec 64))
(declare-fun temp1261_232 () (_ BitVec 64))
(declare-fun var140614 () (_ BitVec 64))
(declare-fun var140615 () (_ BitVec 64))
(declare-fun var140616 () (_ BitVec 64))
(declare-fun var602431 () (_ BitVec 64))
(declare-fun var602432 () (_ BitVec 64))
(declare-fun var602433 () (_ BitVec 64))
(declare-fun var602434 () (_ BitVec 64))
(declare-fun temp1261_233 () (_ BitVec 64))
(declare-fun var602443 () (_ BitVec 64))
(declare-fun temp1261_234 () (_ BitVec 64))
(declare-fun temp1261_235 () (_ BitVec 64))
(declare-fun var602449 () (_ BitVec 64))
(declare-fun temp1261_236 () (_ BitVec 64))
(declare-fun temp1261_237 () (_ BitVec 64))
(declare-fun var602454 () (_ BitVec 64))
(declare-fun var602455 () (_ BitVec 64))
(declare-fun temp1261_238 () (_ BitVec 64))
(declare-fun var602456 () (_ BitVec 64))
(declare-fun temp1261_239 () (_ BitVec 64))
(declare-fun var602457 () (_ BitVec 64))
(declare-fun temp1261_240 () (_ BitVec 64))
(declare-fun var602459 () (_ BitVec 64))
(declare-fun var602460 () (_ BitVec 64))
(declare-fun var602461 () (_ BitVec 64))
(declare-fun temp1261_242 () (_ BitVec 64))
(declare-fun temp1261_241 () (_ BitVec 64))
(declare-fun temp1261_244 () (_ BitVec 64))
(declare-fun temp1261_243 () (_ BitVec 64))
(declare-fun var602499 () (_ BitVec 64))
(declare-fun temp1261_245 () (_ BitVec 64))
(declare-fun var602500 () (_ BitVec 64))
(declare-fun temp1261_246 () (_ BitVec 64))
(declare-fun temp1261_247 () (_ BitVec 64))
(declare-fun var140624 () (_ BitVec 64))
(declare-fun temp1261_248 () (_ BitVec 64))
(declare-fun var140625 () (_ BitVec 64))
(declare-fun temp1261_249 () (_ BitVec 64))
(declare-fun var140626 () (_ BitVec 64))
(declare-fun temp1261_250 () (_ BitVec 64))
(declare-fun var140627 () (_ BitVec 64))
(declare-fun var140628 () (_ BitVec 64))
(declare-fun var140629 () (_ BitVec 64))
(declare-fun var667967 () (_ BitVec 64))
(declare-fun var667968 () (_ BitVec 64))
(declare-fun var667969 () (_ BitVec 64))
(declare-fun var667970 () (_ BitVec 64))
(declare-fun temp1261_251 () (_ BitVec 64))
(declare-fun var667979 () (_ BitVec 64))
(declare-fun temp1261_252 () (_ BitVec 64))
(declare-fun temp1261_253 () (_ BitVec 64))
(declare-fun var667985 () (_ BitVec 64))
(declare-fun temp1261_254 () (_ BitVec 64))
(declare-fun temp1261_255 () (_ BitVec 64))
(declare-fun var667990 () (_ BitVec 64))
(declare-fun var667991 () (_ BitVec 64))
(declare-fun temp1261_256 () (_ BitVec 64))
(declare-fun var667992 () (_ BitVec 64))
(declare-fun temp1261_257 () (_ BitVec 64))
(declare-fun var667993 () (_ BitVec 64))
(declare-fun temp1261_258 () (_ BitVec 64))
(declare-fun var667995 () (_ BitVec 64))
(declare-fun var667996 () (_ BitVec 64))
(declare-fun var667997 () (_ BitVec 64))
(declare-fun temp1261_260 () (_ BitVec 64))
(declare-fun temp1261_259 () (_ BitVec 64))
(declare-fun temp1261_262 () (_ BitVec 64))
(declare-fun temp1261_261 () (_ BitVec 64))
(declare-fun var668035 () (_ BitVec 64))
(declare-fun temp1261_263 () (_ BitVec 64))
(declare-fun var668036 () (_ BitVec 64))
(declare-fun temp1261_264 () (_ BitVec 64))
(declare-fun var140659 () (_ BitVec 64))
(declare-fun var140662 () (_ BitVec 64))
(declare-fun var74642 () (_ BitVec 64))
(declare-fun var74643 () (_ BitVec 64))
(declare-fun var74645 () (_ BitVec 64))
(declare-fun var74647 () (_ BitVec 64))
(declare-fun var74649 () (_ BitVec 64))
(declare-fun var74650 () (_ BitVec 64))
(declare-fun temp1261_265 () (_ BitVec 64))
(declare-fun var730553 () (_ BitVec 64))
(declare-fun var74701 () (_ BitVec 64))
(declare-fun var74706 () (_ BitVec 64))
(declare-fun var74711 () (_ BitVec 64))
(declare-fun var74716 () (_ BitVec 64))
(declare-fun var74721 () (_ BitVec 64))
(declare-fun var74726 () (_ BitVec 64))
(declare-fun var74731 () (_ BitVec 64))
(declare-fun var74736 () (_ BitVec 64))
(declare-fun var74741 () (_ BitVec 64))
(declare-fun var74746 () (_ BitVec 64))
(declare-fun var74750 () (_ BitVec 64))
(declare-fun var74848 () (_ BitVec 64))
(declare-fun var74850 () (_ BitVec 64))
(declare-fun var74852 () (_ BitVec 64))
(declare-fun var74854 () (_ BitVec 64))
(declare-fun var861685 () (_ BitVec 64))
(declare-fun var861686 () (_ BitVec 64))
(declare-fun var861687 () (_ BitVec 64))
(declare-fun var861688 () (_ BitVec 64))
(declare-fun temp1261_266 () (_ BitVec 64))
(declare-fun var927574 () (_ BitVec 64))
(declare-fun var861771 () (_ BitVec 64))
(declare-fun var861772 () (_ BitVec 64))
(declare-fun temp1261_267 () (_ BitVec 64))
(declare-fun var861792 () (_ BitVec 64))
(declare-fun temp1261_268 () (_ BitVec 64))
(declare-fun var861793 () (_ BitVec 64))
(declare-fun var861800 () (_ BitVec 64))
(declare-fun temp1261_270 () (_ BitVec 64))
(declare-fun var861803 () (_ BitVec 64))
(declare-fun temp1261_271 () (_ BitVec 64))
(assert (or (= ARGNAME_padding_NAMEEND #x0000000000000001)
    (= ARGNAME_padding_NAMEEND #x0000000000000002)
    (= ARGNAME_padding_NAMEEND #x0000000000000003)))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp1261_1 #x0000000000000004))
(assert (= var140453
   (ite (= ARGNAME_input_NAMEEND_DIM temp1261_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1261_2 #x0000000000000001))
(assert (= var140453 temp1261_2))
(assert (= temp1261_3 #x0000000000000004))
(assert (= var140473
   (ite (= ARGNAME_filter_NAMEEND_DIM temp1261_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1261_4 #x0000000000000001))
(assert (= var140473 temp1261_4))
(assert (= temp1261_5 #x0000000000000000))
(assert (= var140485 temp1261_5))
(assert (= temp1261_6 #x0000000000000000))
(assert (= temp1261_7 (select ARGNAME_filter_NAMEEND_DIMSIZE temp1261_6)))
(assert (= temp1261_8 #x0000000000000001))
(assert (= temp1261_9 (select ARGNAME_filter_NAMEEND_DIMSIZE temp1261_8)))
(assert (= temp1261_10 #x0000000000000002))
(assert (= temp1261_11 (select ARGNAME_filter_NAMEEND_DIMSIZE temp1261_10)))
(assert (= temp1261_12 #x0000000000000003))
(assert (= temp1261_13 (select ARGNAME_filter_NAMEEND_DIMSIZE temp1261_12)))
(assert (= temp1261_14 #x0000000000000004))
(assert (= temp1261_15 (select ARGNAME_filter_NAMEEND_DIMSIZE temp1261_14)))
(assert (= temp1261_16 #x0000000000000005))
(assert (= temp1261_17 (select ARGNAME_filter_NAMEEND_DIMSIZE temp1261_16)))
(assert (= temp1261_18 (select ARGNAME_filter_NAMEEND_DIMSIZE var140485)))
(assert (= var140488 temp1261_18))
(assert (= temp1261_19 #x000000007fffffff))
(assert (= var206678 temp1261_19))
(assert (= var140491 var206678))
(assert (= var140494 var140491))
(assert (= var140495
   (ite (bvslt var140488 var140494) #x0000000000000001 #x0000000000000000)))
(assert (= temp1261_21 #x0000000000000001))
(assert (= var140484 (bvadd var140485 temp1261_21)))
(assert (= temp1261_22 #x0000000000000003))
(assert (= var140486
   (ite (= var140484 temp1261_22) #x0000000000000001 #x0000000000000000)))
(assert (= temp1261_24 #x0000000000000000))
(assert (= temp1261_25 (select ARGNAME_input_NAMEEND_DIMSIZE temp1261_24)))
(assert (= temp1261_26 #x0000000000000001))
(assert (= temp1261_27 (select ARGNAME_input_NAMEEND_DIMSIZE temp1261_26)))
(assert (= temp1261_28 #x0000000000000002))
(assert (= temp1261_29 (select ARGNAME_input_NAMEEND_DIMSIZE temp1261_28)))
(assert (= temp1261_30 #x0000000000000003))
(assert (= temp1261_31 (select ARGNAME_input_NAMEEND_DIMSIZE temp1261_30)))
(assert (= temp1261_32 #x0000000000000004))
(assert (= temp1261_33 (select ARGNAME_input_NAMEEND_DIMSIZE temp1261_32)))
(assert (= temp1261_34 #x0000000000000005))
(assert (= temp1261_35 (select ARGNAME_input_NAMEEND_DIMSIZE temp1261_34)))
(assert (= temp1261_39 #x0000000000000002))
(assert (= temp1261_40 #x0000000000000003))
(assert (= temp1261_41 #x0000000000000002))
(assert (= temp1261_42 #x0000000000000003))
(assert (= temp1261_37
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_41)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_42))
        (bvsub ARGNAME_input_NAMEEND_DIM temp1261_40)
        (bvsub ARGNAME_input_NAMEEND_DIM temp1261_39))))
(assert (= temp1261_43 #x0000000000000002))
(assert (= temp1261_44 #x0000000000000003))
(assert (= temp1261_45 #x0000000000000003))
(assert (= temp1261_38 (ite (= temp1261_37 temp1261_45) temp1261_44 temp1261_43)))
(assert (= temp1261_47 #x0000000000000001))
(assert (= temp1261_48 #x0000000000000005))
(assert (= temp1261_49 #x0000000000000001))
(assert (= temp1261_50 #x0000000000000001))
(assert (= temp1261_51 #x0000000000000002))
(assert (= temp1261_36
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_50)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_51))
        temp1261_49
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_48)
             temp1261_38
             (bvadd temp1261_38 temp1261_47)))))
(assert (= temp1261_52 (select ARGNAME_input_NAMEEND_DIMSIZE temp1261_36)))
(assert (= var140502 temp1261_52))
(assert (= temp1261_53 #x0000000000000002))
(assert (= temp1261_54 (select ARGNAME_filter_NAMEEND_DIMSIZE temp1261_53)))
(assert (= var140505 temp1261_54))
(assert (= temp1261_55 #x000000007fffffff))
(assert (= var272214 temp1261_55))
(assert (= var140506 var272214))
(assert (= var140507 var140506))
(assert (= var140508
   (ite (bvslt var140502 var140507) #x0000000000000001 #x0000000000000000)))
(assert (= temp1261_56 #x0000000000000001))
(assert (= var140508 temp1261_56))
(assert (= temp1261_57 #x000000007fffffff))
(assert (= var337750 temp1261_57))
(assert (= var140513 var337750))
(assert (= var140514 var140513))
(assert (= var140515
   (ite (bvslt var140505 var140514) #x0000000000000001 #x0000000000000000)))
(assert (= temp1261_58 #x0000000000000001))
(assert (= var140515 temp1261_58))
(assert (= var140520 var140502))
(assert (= var140521 var140505))
(assert (= temp1261_59 #x0000000000000000))
(assert (= var140522
   (ite (bvsgt var140521 temp1261_59) #x0000000000000001 #x0000000000000000)))
(assert (= temp1261_60 #x0000000000000001))
(assert (= var140522 temp1261_60))
(assert (= var140529 (bvsmod var140520 var140521)))
(assert (= temp1261_61 #x0000000000000000))
(assert (= var140530
   (ite (= var140529 temp1261_61) #x0000000000000001 #x0000000000000000)))
(assert (= temp1261_62 #x0000000000000001))
(assert (= var140530 temp1261_62))
(assert (= temp1261_63 #x0000000000000003))
(assert (= temp1261_64 (select ARGNAME_filter_NAMEEND_DIMSIZE temp1261_63)))
(assert (= var140538 temp1261_64))
(assert (= var140539 var140538))
(assert (= temp1261_68 #x0000000000000002))
(assert (= temp1261_69 #x0000000000000003))
(assert (= temp1261_70 #x0000000000000002))
(assert (= temp1261_71 #x0000000000000003))
(assert (= temp1261_66
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_70)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_71))
        (bvsub ARGNAME_input_NAMEEND_DIM temp1261_69)
        (bvsub ARGNAME_input_NAMEEND_DIM temp1261_68))))
(assert (= temp1261_72 #x0000000000000002))
(assert (= temp1261_73 #x0000000000000003))
(assert (= temp1261_74 #x0000000000000003))
(assert (= temp1261_67 (ite (= temp1261_66 temp1261_74) temp1261_73 temp1261_72)))
(assert (= temp1261_76 #x0000000000000002))
(assert (= temp1261_77 #x0000000000000001))
(assert (= temp1261_78 #x0000000000000002))
(assert (= temp1261_79 #x0000000000000001))
(assert (= temp1261_80 #x0000000000000000))
(assert (= temp1261_81 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_80)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_81))
                (bvsub temp1261_67 temp1261_79)
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_77)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_78))
                     temp1261_67
                     (bvsub temp1261_67 temp1261_76)))))
  (= temp1261_65 a!1)))
(assert (= temp1261_82 (select ARGNAME_input_NAMEEND_DIMSIZE temp1261_65)))
(assert (= var140541 temp1261_82))
(assert (= temp1261_83 #x000000007fffffff))
(assert (= var403286 temp1261_83))
(assert (= var140542 var403286))
(assert (= var140543 var140542))
(assert (= var140544
   (ite (bvslt var140541 var140543) #x0000000000000001 #x0000000000000000)))
(assert (= temp1261_84 #x0000000000000001))
(assert (= var140544 temp1261_84))
(assert (= var140549 var140541))
(assert (= temp1261_85 #x0000000000000000))
(assert (= temp1261_86 (select ARGNAME_filter_NAMEEND_DIMSIZE temp1261_85)))
(assert (= var140550 temp1261_86))
(assert (= var140551 var140550))
(assert (= temp1261_90 #x0000000000000002))
(assert (= temp1261_91 #x0000000000000003))
(assert (= temp1261_92 #x0000000000000002))
(assert (= temp1261_93 #x0000000000000003))
(assert (= temp1261_88
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_92)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_93))
        (bvsub ARGNAME_input_NAMEEND_DIM temp1261_91)
        (bvsub ARGNAME_input_NAMEEND_DIM temp1261_90))))
(assert (= temp1261_94 #x0000000000000002))
(assert (= temp1261_95 #x0000000000000003))
(assert (= temp1261_96 #x0000000000000003))
(assert (= temp1261_89 (ite (= temp1261_88 temp1261_96) temp1261_95 temp1261_94)))
(assert (= temp1261_98 #x0000000000000001))
(assert (= temp1261_99 #x0000000000000001))
(assert (= temp1261_100 #x0000000000000001))
(assert (= temp1261_101 #x0000000000000002))
(assert (= temp1261_102 #x0000000000000000))
(assert (= temp1261_103 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_102)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_103))
                temp1261_89
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_100)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_101))
                     (bvadd temp1261_89 temp1261_99)
                     (bvsub temp1261_89 temp1261_98)))))
  (= temp1261_87 a!1)))
(assert (= temp1261_104 (select ARGNAME_input_NAMEEND_DIMSIZE temp1261_87)))
(assert (= var140553 temp1261_104))
(assert (= temp1261_105 #x000000007fffffff))
(assert (= var468822 temp1261_105))
(assert (= var140554 var468822))
(assert (= var140555 var140554))
(assert (= var140556
   (ite (bvslt var140553 var140555) #x0000000000000001 #x0000000000000000)))
(assert (= temp1261_106 #x0000000000000001))
(assert (= var140556 temp1261_106))
(assert (= var140561 var140553))
(assert (= temp1261_107 #x0000000000000001))
(assert (= temp1261_108 (select ARGNAME_filter_NAMEEND_DIMSIZE temp1261_107)))
(assert (= var140562 temp1261_108))
(assert (= var140563 var140562))
(assert (= temp1261_112 #x0000000000000002))
(assert (= temp1261_113 #x0000000000000003))
(assert (= temp1261_114 #x0000000000000002))
(assert (= temp1261_115 #x0000000000000003))
(assert (= temp1261_110
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_114)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_115))
        (bvsub ARGNAME_input_NAMEEND_DIM temp1261_113)
        (bvsub ARGNAME_input_NAMEEND_DIM temp1261_112))))
(assert (= temp1261_116 #x0000000000000002))
(assert (= temp1261_117 #x0000000000000003))
(assert (= temp1261_118 #x0000000000000003))
(assert (= temp1261_111 (ite (= temp1261_110 temp1261_118) temp1261_117 temp1261_116)))
(assert (= temp1261_120 #x0000000000000000))
(assert (= temp1261_121 #x0000000000000001))
(assert (= temp1261_122 #x0000000000000005))
(assert (= temp1261_123 #x0000000000000004))
(assert (= temp1261_109
   (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_123)
        temp1261_111
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_122)
             (bvadd temp1261_111 temp1261_121)
             temp1261_120))))
(assert (= temp1261_124 (select ARGNAME_input_NAMEEND_DIMSIZE temp1261_109)))
(assert (= var140565 temp1261_124))
(assert (= temp1261_125 #x000000007fffffff))
(assert (= var534358 temp1261_125))
(assert (= var140566 var534358))
(assert (= var140567 var140566))
(assert (= var140568
   (ite (bvslt var140565 var140567) #x0000000000000001 #x0000000000000000)))
(assert (= temp1261_126 #x0000000000000001))
(assert (= var140568 temp1261_126))
(assert (= var140573 var140565))
(assert (= temp1261_127 #x0000000000000000))
(assert (= temp1261_128 (select ARGNAME_strides_NAMEEND_VAL temp1261_127)))
(assert (= temp1261_129 #x0000000000000001))
(assert (= temp1261_130 (select ARGNAME_strides_NAMEEND_VAL temp1261_129)))
(assert (= temp1261_131 #x0000000000000002))
(assert (= temp1261_132 (select ARGNAME_strides_NAMEEND_VAL temp1261_131)))
(assert (= temp1261_133 #x0000000000000003))
(assert (= temp1261_134 (select ARGNAME_strides_NAMEEND_VAL temp1261_133)))
(assert (= temp1261_135 #x0000000000000004))
(assert (= temp1261_136 (select ARGNAME_strides_NAMEEND_VAL temp1261_135)))
(assert (= temp1261_137 #x0000000000000005))
(assert (= temp1261_138 (select ARGNAME_strides_NAMEEND_VAL temp1261_137)))
(assert (= temp1261_142 #x0000000000000002))
(assert (= temp1261_143 #x0000000000000003))
(assert (= temp1261_144 #x0000000000000002))
(assert (= temp1261_145 #x0000000000000003))
(assert (= temp1261_140
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_144)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_145))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp1261_143)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp1261_142))))
(assert (= temp1261_146 #x0000000000000002))
(assert (= temp1261_147 #x0000000000000003))
(assert (= temp1261_148 #x0000000000000003))
(assert (= temp1261_141 (ite (= temp1261_140 temp1261_148) temp1261_147 temp1261_146)))
(assert (= temp1261_150 #x0000000000000002))
(assert (= temp1261_151 #x0000000000000001))
(assert (= temp1261_152 #x0000000000000002))
(assert (= temp1261_153 #x0000000000000001))
(assert (= temp1261_154 #x0000000000000000))
(assert (= temp1261_155 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_154)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_155))
                (bvsub temp1261_141 temp1261_153)
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_151)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_152))
                     temp1261_141
                     (bvsub temp1261_141 temp1261_150)))))
  (= temp1261_139 a!1)))
(assert (= temp1261_156 (select ARGNAME_strides_NAMEEND_VAL temp1261_139)))
(assert (= var140576 temp1261_156))
(assert (= temp1261_160 #x0000000000000002))
(assert (= temp1261_161 #x0000000000000003))
(assert (= temp1261_162 #x0000000000000002))
(assert (= temp1261_163 #x0000000000000003))
(assert (= temp1261_158
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_162)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_163))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp1261_161)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp1261_160))))
(assert (= temp1261_164 #x0000000000000002))
(assert (= temp1261_165 #x0000000000000003))
(assert (= temp1261_166 #x0000000000000003))
(assert (= temp1261_159 (ite (= temp1261_158 temp1261_166) temp1261_165 temp1261_164)))
(assert (= temp1261_168 #x0000000000000001))
(assert (= temp1261_169 #x0000000000000001))
(assert (= temp1261_170 #x0000000000000001))
(assert (= temp1261_171 #x0000000000000002))
(assert (= temp1261_172 #x0000000000000000))
(assert (= temp1261_173 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_172)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_173))
                temp1261_159
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_170)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_171))
                     (bvadd temp1261_159 temp1261_169)
                     (bvsub temp1261_159 temp1261_168)))))
  (= temp1261_157 a!1)))
(assert (= temp1261_174 (select ARGNAME_strides_NAMEEND_VAL temp1261_157)))
(assert (= var140578 temp1261_174))
(assert (= temp1261_175 #x0000000000000000))
(assert (= temp1261_176 (select ARGNAME_dilations_NAMEEND_VAL temp1261_175)))
(assert (= temp1261_177 #x0000000000000001))
(assert (= temp1261_178 (select ARGNAME_dilations_NAMEEND_VAL temp1261_177)))
(assert (= temp1261_179 #x0000000000000002))
(assert (= temp1261_180 (select ARGNAME_dilations_NAMEEND_VAL temp1261_179)))
(assert (= temp1261_181 #x0000000000000003))
(assert (= temp1261_182 (select ARGNAME_dilations_NAMEEND_VAL temp1261_181)))
(assert (= temp1261_183 #x0000000000000004))
(assert (= temp1261_184 (select ARGNAME_dilations_NAMEEND_VAL temp1261_183)))
(assert (= temp1261_185 #x0000000000000005))
(assert (= temp1261_186 (select ARGNAME_dilations_NAMEEND_VAL temp1261_185)))
(assert (= temp1261_190 #x0000000000000002))
(assert (= temp1261_191 #x0000000000000003))
(assert (= temp1261_192 #x0000000000000002))
(assert (= temp1261_193 #x0000000000000003))
(assert (= temp1261_188
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_192)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_193))
        (bvsub ARGNAME_dilations_NAMEEND_LEN temp1261_191)
        (bvsub ARGNAME_dilations_NAMEEND_LEN temp1261_190))))
(assert (= temp1261_194 #x0000000000000002))
(assert (= temp1261_195 #x0000000000000003))
(assert (= temp1261_196 #x0000000000000003))
(assert (= temp1261_189 (ite (= temp1261_188 temp1261_196) temp1261_195 temp1261_194)))
(assert (= temp1261_198 #x0000000000000002))
(assert (= temp1261_199 #x0000000000000001))
(assert (= temp1261_200 #x0000000000000002))
(assert (= temp1261_201 #x0000000000000001))
(assert (= temp1261_202 #x0000000000000000))
(assert (= temp1261_203 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_202)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_203))
                (bvsub temp1261_189 temp1261_201)
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_199)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_200))
                     temp1261_189
                     (bvsub temp1261_189 temp1261_198)))))
  (= temp1261_187 a!1)))
(assert (= temp1261_204 (select ARGNAME_dilations_NAMEEND_VAL temp1261_187)))
(assert (= var140581 temp1261_204))
(assert (= temp1261_208 #x0000000000000002))
(assert (= temp1261_209 #x0000000000000003))
(assert (= temp1261_210 #x0000000000000002))
(assert (= temp1261_211 #x0000000000000003))
(assert (= temp1261_206
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_210)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_211))
        (bvsub ARGNAME_dilations_NAMEEND_LEN temp1261_209)
        (bvsub ARGNAME_dilations_NAMEEND_LEN temp1261_208))))
(assert (= temp1261_212 #x0000000000000002))
(assert (= temp1261_213 #x0000000000000003))
(assert (= temp1261_214 #x0000000000000003))
(assert (= temp1261_207 (ite (= temp1261_206 temp1261_214) temp1261_213 temp1261_212)))
(assert (= temp1261_216 #x0000000000000001))
(assert (= temp1261_217 #x0000000000000001))
(assert (= temp1261_218 #x0000000000000001))
(assert (= temp1261_219 #x0000000000000002))
(assert (= temp1261_220 #x0000000000000000))
(assert (= temp1261_221 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_220)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_221))
                temp1261_207
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_218)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp1261_219))
                     (bvadd temp1261_207 temp1261_217)
                     (bvsub temp1261_207 temp1261_216)))))
  (= temp1261_205 a!1)))
(assert (= temp1261_222 (select ARGNAME_dilations_NAMEEND_VAL temp1261_205)))
(assert (= var140583 temp1261_222))
(assert (= temp1261_223 #x0000000000000003))
(assert (= var140594
   (ite (= ARGNAME_padding_NAMEEND temp1261_223)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1261_224 #x0000000000000000))
(assert (= var140594 temp1261_224))
(assert (= temp1261_226 #x0000000000000000))
(assert (= temp1261_225 temp1261_226))
(assert (= temp1261_228 #x0000000000000000))
(assert (= temp1261_227 temp1261_228))
(assert (= temp1261_229 #x0000000000000020))
(assert (= var140611 (bvshl var140541 temp1261_229)))
(assert (= temp1261_230 #x0000000000000020))
(assert (= var140612 (bvashr var140611 temp1261_230)))
(assert (= temp1261_231 #x0000000000000020))
(assert (= var140613 (bvshl var140550 temp1261_231)))
(assert (= temp1261_232 #x0000000000000020))
(assert (= var140614 (bvashr var140613 temp1261_232)))
(assert (= var140615 var140581))
(assert (= var140616 var140576))
(assert (= var602431 var140612))
(assert (= var602432 var140614))
(assert (= var602433 var140615))
(assert (= var602434 var140616))
(assert (= temp1261_233 #x0000000000000001))
(assert (= var602443
   (ite (bvslt var602434 temp1261_233) #x0000000000000001 #x0000000000000000)))
(assert (= temp1261_234 #x0000000000000000))
(assert (= var602443 temp1261_234))
(assert (= temp1261_235 #x0000000000000001))
(assert (= var602449
   (ite (bvslt var602433 temp1261_235) #x0000000000000001 #x0000000000000000)))
(assert (= temp1261_236 #x0000000000000000))
(assert (= var602449 temp1261_236))
(assert (= temp1261_237 #xffffffffffffffff))
(assert (= var602454 (bvadd var602432 temp1261_237)))
(assert (= var602455 (bvmul var602454 var602433)))
(assert (= temp1261_238 #x0000000000000001))
(assert (= var602456 (bvadd var602455 temp1261_238)))
(assert (= temp1261_239 #xffffffffffffffff))
(assert (= var602457 (bvxor var602455 temp1261_239)))
(assert (= temp1261_240 #x0000000000000001))
(assert (or false (= ARGNAME_padding_NAMEEND temp1261_240)))
(assert (= var602459 (bvadd var602434 var602431)))
(assert (= var602460 (bvadd var602459 var602457)))
(assert (= var602461 (bvsdiv var602460 var602434)))
(assert (= temp1261_242 #x0000000000000000))
(assert (= temp1261_241 temp1261_242))
(assert (= temp1261_244 #x0000000000000000))
(assert (= temp1261_243 temp1261_244))
(assert (= var602499 var602461))
(assert (= temp1261_245 #x0000000000000000))
(assert (= var602500
   (ite (bvslt var602499 temp1261_245) #x0000000000000001 #x0000000000000000)))
(assert (= temp1261_246 #x0000000000000000))
(assert (= var602500 temp1261_246))
(assert (= temp1261_247 #x0000000000000020))
(assert (= var140624 (bvshl var140553 temp1261_247)))
(assert (= temp1261_248 #x0000000000000020))
(assert (= var140625 (bvashr var140624 temp1261_248)))
(assert (= temp1261_249 #x0000000000000020))
(assert (= var140626 (bvshl var140562 temp1261_249)))
(assert (= temp1261_250 #x0000000000000020))
(assert (= var140627 (bvashr var140626 temp1261_250)))
(assert (= var140628 var140583))
(assert (= var140629 var140578))
(assert (= var667967 var140625))
(assert (= var667968 var140627))
(assert (= var667969 var140628))
(assert (= var667970 var140629))
(assert (= temp1261_251 #x0000000000000001))
(assert (= var667979
   (ite (bvslt var667970 temp1261_251) #x0000000000000001 #x0000000000000000)))
(assert (= temp1261_252 #x0000000000000000))
(assert (= var667979 temp1261_252))
(assert (= temp1261_253 #x0000000000000001))
(assert (= var667985
   (ite (bvslt var667969 temp1261_253) #x0000000000000001 #x0000000000000000)))
(assert (= temp1261_254 #x0000000000000000))
(assert (= var667985 temp1261_254))
(assert (= temp1261_255 #xffffffffffffffff))
(assert (= var667990 (bvadd var667968 temp1261_255)))
(assert (= var667991 (bvmul var667990 var667969)))
(assert (= temp1261_256 #x0000000000000001))
(assert (= var667992 (bvadd var667991 temp1261_256)))
(assert (= temp1261_257 #xffffffffffffffff))
(assert (= var667993 (bvxor var667991 temp1261_257)))
(assert (= temp1261_258 #x0000000000000001))
(assert (or false (= ARGNAME_padding_NAMEEND temp1261_258)))
(assert (= var667995 (bvadd var667970 var667967)))
(assert (= var667996 (bvadd var667995 var667993)))
(assert (= var667997 (bvsdiv var667996 var667970)))
(assert (= temp1261_260 #x0000000000000000))
(assert (= temp1261_259 temp1261_260))
(assert (= temp1261_262 #x0000000000000000))
(assert (= temp1261_261 temp1261_262))
(assert (= var668035 var667997))
(assert (= temp1261_263 #x0000000000000000))
(assert (= var668036
   (ite (bvslt var668035 temp1261_263) #x0000000000000001 #x0000000000000000)))
(assert (= temp1261_264 #x0000000000000000))
(assert (= var668036 temp1261_264))
(assert (= var140659 var602461))
(assert (= var140662 var667997))
(assert (= var74642 var140573))
(assert (= var74643 var74642))
(assert (= var74645 var140659))
(assert (= var74647 var140662))
(assert (= var74649 var140539))
(assert (= var74650 var74649))
(assert (= temp1261_265 #x0000000000000002))
(assert (= var730553 temp1261_265))
(assert (= var74701 var140520))
(assert (= var74706 var140521))
(assert (= var74711 var140561))
(assert (= var74716 var140563))
(assert (= var74721 var140549))
(assert (= var74726 var140551))
(assert (= var74731 var140576))
(assert (= var74736 var140578))
(assert (= var74741 var140581))
(assert (= var74746 var140583))
(assert (= var74750 var140539))
(assert (= var74848 var140581))
(assert (= var74850 var140583))
(assert (= var74852 var140576))
(assert (= var74854 var140578))
(assert (= var861685 var74848))
(assert (= var861686 var74850))
(assert (= var861687 var74852))
(assert (= var861688 var74854))
(assert (= temp1261_266 #x000000007fffffff))
(assert (= var927574 temp1261_266))
(assert (= var861771 var927574))
(assert (= var861772 var861771))
(assert (= temp1261_267 #x0000000000000000))
(assert (= var861792 temp1261_267))
(assert (= temp1261_268 #x0000000000000000))
(assert (= var861793
   (ite (= var861792 temp1261_268) #x0000000000000001 #x0000000000000000)))
(assert (= var861800 var861792))
(assert (= temp1261_270 #x0000000000000002))
(assert (= var861803
   (ite (= var861800 temp1261_270) #x0000000000000001 #x0000000000000000)))
(assert (= temp1261_271 #x0000000000000000))
(assert (= var861803 temp1261_271))
(model-add temp1261_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp1261_2 () (_ BitVec 64) #x0000000000000001)
(model-add var140453 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))




































