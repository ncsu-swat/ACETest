(declare-fun temp9589_1 () (_ BitVec 64))
(declare-fun var405370 () (_ BitVec 64))
(declare-fun temp9589_2 () (_ BitVec 64))
(declare-fun temp9589_3 () (_ BitVec 64))
(declare-fun var602599 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp9584_8 () (_ BitVec 64))
(declare-fun temp9589_5 () (_ BitVec 64))
(declare-fun temp9589_4 () (_ BitVec 64))
(declare-fun temp9589_6 () (_ BitVec 64))
(declare-fun var405371 () (_ BitVec 64))
(declare-fun temp9589_7 () (_ BitVec 64))
(declare-fun var77025 () (_ BitVec 64))
(declare-fun var864286 () (_ BitVec 64))
(declare-fun temp9589_8 () (_ BitVec 64))
(declare-fun var928229 () (_ BitVec 64))
(declare-fun var987104 () (_ BitVec 64))
(declare-fun var987103 () (_ BitVec 64))
(declare-fun var928242 () (_ BitVec 64))
(declare-fun temp9589_9 () (_ BitVec 64))
(declare-fun var1052640 () (_ BitVec 64))
(declare-fun var1052639 () (_ BitVec 64))
(declare-fun var928246 () (_ BitVec 64))
(declare-fun temp9589_10 () (_ BitVec 64))
(declare-fun var928256 () (_ BitVec 64))
(declare-fun temp9589_11 () (_ BitVec 64))
(declare-fun var77080 () (_ BitVec 64))
(declare-fun temp9589_12 () (_ BitVec 64))
(declare-fun temp9589_13 () (_ BitVec 64))
(declare-fun var77208 () (_ BitVec 64))
(declare-fun var77212 () (_ BitVec 64))
(declare-fun temp9589_14 () (_ BitVec 64))
(declare-fun var77215 () (_ BitVec 64))
(declare-fun temp9589_15 () (_ BitVec 64))
(declare-fun var77003 () (_ BitVec 64))
(declare-fun temp9589_17 () (_ BitVec 64))
(declare-fun var77238 () (_ BitVec 64))
(declare-fun temp9589_18 () (_ BitVec 64))
(declare-fun var77239 () (_ BitVec 64))
(declare-fun temp9589_19 () (_ BitVec 64))
(declare-fun temp9589_21 () (_ BitVec 64))
(declare-fun temp9589_20 () (_ BitVec 64))
(assert (= temp9589_1 #x0000000000000000))
(assert (= var405370 temp9589_1))
(assert (= temp9589_2 #x0000000000000000))
(assert (= var602599
   (ite (= temp9584_8 temp9589_2) #x0000000000000001 #x0000000000000000)))
(assert (= temp9589_3 #x0000000000000001))
(assert (= var602599 temp9589_3))
(assert (= temp9589_5 #x0000000000000001))
(assert (= temp9589_4 temp9589_5))
(assert (= temp9589_6 #x0000000000000001))
(assert (= var405371 (bvadd var405370 temp9589_6)))
(assert (= temp9589_7 #x0000000000000000))
(assert (= var77025 temp9589_7))
(assert (= var864286 var77025))
(assert (= temp9589_8 #x0000000000000000))
(assert (= var928229 temp9589_8))
(assert (= var987104 var928229))
(assert (= var987103 var987104))
(assert (= var928242 var987103))
(assert (= temp9589_9 #x0000000000000000))
(assert (= var1052640 temp9589_9))
(assert (= var1052639 var1052640))
(assert (= var928246 var1052639))
(assert (= temp9589_10 #x0000000000000001))
(assert (= var928256 (bvadd var928229 temp9589_10)))
(assert (= temp9589_11 #x0000000000000000))
(assert (= var77080
   (ite (= var77025 temp9589_11) #x0000000000000001 #x0000000000000000)))
(assert (= temp9589_12 #x0000000000000001))
(assert (= var77080 temp9589_12))
(assert (= temp9589_13 #x0000000000000000))
(assert (= var77208 temp9589_13))
(assert (= var77212 var77208))
(assert (= temp9589_14 #x0000000000000000))
(assert (= var77215
   (ite (= var77212 temp9589_14) #x0000000000000001 #x0000000000000000)))
(assert (= temp9589_15 #x0000000000000001))
(assert (= var77003 (bvadd var77025 temp9589_15)))
(assert (= temp9589_17 #x0000000000000014))
(assert (= var77238 temp9589_17))
(assert (= temp9589_18 #x0000000000000014))
(assert (= var77239
   (ite (= var77238 temp9589_18) #x0000000000000001 #x0000000000000000)))
(assert (= temp9589_19 #x0000000000000001))
(assert (= var77239 temp9589_19))
(assert (= temp9589_21 #x0000000000000001))
(assert (= temp9589_20 temp9589_21))
(model-add temp9589_1 () (_ BitVec 64) #x0000000000000000)
(model-add var405370 () (_ BitVec 64) #x0000000000000000)
(model-add temp9589_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp9589_3 () (_ BitVec 64) #x0000000000000001)
(model-add var602599 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add temp9584_8
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000000 (bvnot #x0000000000000000)))

