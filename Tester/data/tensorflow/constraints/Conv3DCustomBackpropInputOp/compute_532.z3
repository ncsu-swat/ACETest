(declare-fun temp808_1 () (_ BitVec 64))
(declare-fun temp808_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp808_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp808_4 () (_ BitVec 64))
(declare-fun temp808_5 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp808_6 () (_ BitVec 64))
(declare-fun temp808_7 () (_ BitVec 64))
(declare-fun temp808_8 () (_ BitVec 64))
(declare-fun temp808_9 () (_ BitVec 64))
(declare-fun temp808_10 () (_ BitVec 64))
(declare-fun temp808_11 () (_ BitVec 64))
(declare-fun temp808_12 () (_ BitVec 64))
(declare-fun temp808_13 () (_ BitVec 64))
(declare-fun temp808_14 () (_ BitVec 64))
(declare-fun temp808_15 () (_ BitVec 64))
(declare-fun temp808_16 () (_ BitVec 64))
(declare-fun temp808_17 () (_ BitVec 64))
(declare-fun temp808_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp808_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp808_20 () (_ BitVec 64))
(declare-fun temp808_21 () (_ BitVec 64))
(declare-fun temp808_22 () (_ BitVec 64))
(declare-fun temp808_23 () (_ BitVec 64))
(declare-fun temp808_24 () (_ BitVec 64))
(declare-fun temp808_25 () (_ BitVec 64))
(declare-fun temp808_26 () (_ BitVec 64))
(declare-fun temp808_27 () (_ BitVec 64))
(declare-fun temp808_28 () (_ BitVec 64))
(declare-fun temp808_29 () (_ BitVec 64))
(declare-fun temp808_30 () (_ BitVec 64))
(declare-fun temp808_31 () (_ BitVec 64))
(declare-fun temp808_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp808_33 () (_ BitVec 64))
(declare-fun temp808_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp808_35 () (_ BitVec 64))
(declare-fun temp808_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp808_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp808_38 () (_ BitVec 64))
(declare-fun temp808_39 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp808_40 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp808_41 () (_ BitVec 64))
(declare-fun temp808_42 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp808_43 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp808_44 () (_ BitVec 64))
(declare-fun temp808_46 () (_ BitVec 64))
(declare-fun temp808_45 () (_ BitVec 64))
(declare-fun temp808_48 () (_ BitVec 64))
(declare-fun temp808_47 () (_ BitVec 64))
(declare-fun temp808_50 () (_ BitVec 64))
(declare-fun temp808_49 () (_ BitVec 64))
(declare-fun temp808_51 () (_ BitVec 64))
(declare-fun var795723 () (_ BitVec 64))
(declare-fun var795702 () (_ BitVec 64))
(declare-fun var664608 () (_ BitVec 64))
(declare-fun temp808_52 () (_ BitVec 64))
(declare-fun temp808_53 () (_ BitVec 64))
(declare-fun var861259 () (_ BitVec 64))
(declare-fun var861238 () (_ BitVec 64))
(declare-fun var664611 () (_ BitVec 64))
(declare-fun temp808_54 () (_ BitVec 64))
(declare-fun temp808_56 () (_ BitVec 64))
(declare-fun temp808_55 () (_ BitVec 64))
(declare-fun temp808_58 () (_ BitVec 64))
(declare-fun temp808_57 () (_ BitVec 64))
(declare-fun temp808_60 () (_ BitVec 64))
(declare-fun temp808_59 () (_ BitVec 64))
(declare-fun temp808_61 () (_ BitVec 64))
(declare-fun var992306 () (_ BitVec 64))
(declare-fun temp808_62 () (_ BitVec 64))
(declare-fun var992307 () (_ BitVec 64))
(declare-fun var992308 () (_ BitVec 64))
(declare-fun var992304 () (_ BitVec 64))
(declare-fun var599004 () (_ BitVec 64))
(declare-fun temp808_63 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp808_64 () (_ BitVec 64))
(declare-fun var1057843 () (_ BitVec 64))
(declare-fun var1057844 () (_ BitVec 64))
(declare-fun var1057840 () (_ BitVec 64))
(declare-fun var599011 () (_ BitVec 64))
(declare-fun temp808_65 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp808_66 () (_ BitVec 64))
(declare-fun var1123379 () (_ BitVec 64))
(declare-fun var1123380 () (_ BitVec 64))
(declare-fun var1123376 () (_ BitVec 64))
(declare-fun var599016 () (_ BitVec 64))
(declare-fun var78095 () (_ BitVec 64))
(declare-fun temp808_67 () (_ BitVec 64))
(declare-fun temp808_68 () (_ BitVec 64))
(declare-fun var78184 () (_ BitVec 64))
(declare-fun temp808_70 () (_ BitVec 64))
(declare-fun temp808_69 () (_ BitVec 64))
(declare-fun temp808_72 () (_ BitVec 64))
(declare-fun temp808_71 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp808_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_filter_NAMEEND_DIM temp808_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp808_2 #x0000000000000001))
(assert (= var77740 temp808_2))
(assert (= temp808_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp808_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp808_4 #x0000000000000001))
(assert (= var77770 temp808_4))
(assert (= temp808_5 #x0000000000000000))
(assert (= temp808_6 (select ARGNAME_filter_NAMEEND_DIMSIZE temp808_5)))
(assert (= temp808_7 #x0000000000000001))
(assert (= temp808_8 (select ARGNAME_filter_NAMEEND_DIMSIZE temp808_7)))
(assert (= temp808_9 #x0000000000000002))
(assert (= temp808_10 (select ARGNAME_filter_NAMEEND_DIMSIZE temp808_9)))
(assert (= temp808_11 #x0000000000000003))
(assert (= temp808_12 (select ARGNAME_filter_NAMEEND_DIMSIZE temp808_11)))
(assert (= temp808_13 #x0000000000000004))
(assert (= temp808_14 (select ARGNAME_filter_NAMEEND_DIMSIZE temp808_13)))
(assert (= temp808_15 #x0000000000000005))
(assert (= temp808_16 (select ARGNAME_filter_NAMEEND_DIMSIZE temp808_15)))
(assert (= temp808_17 #x0000000000000003))
(assert (= temp808_18 (select ARGNAME_filter_NAMEEND_DIMSIZE temp808_17)))
(assert (= var77799 temp808_18))
(assert (= temp808_19 #x0000000000000000))
(assert (= temp808_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp808_19)))
(assert (= temp808_21 #x0000000000000001))
(assert (= temp808_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp808_21)))
(assert (= temp808_23 #x0000000000000002))
(assert (= temp808_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp808_23)))
(assert (= temp808_25 #x0000000000000003))
(assert (= temp808_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp808_25)))
(assert (= temp808_27 #x0000000000000004))
(assert (= temp808_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp808_27)))
(assert (= temp808_29 #x0000000000000005))
(assert (= temp808_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp808_29)))
(assert (= temp808_31 #x0000000000000004))
(assert (= temp808_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp808_31)))
(assert (= var77832 temp808_32))
(assert (= temp808_33 #x0000000000000004))
(assert (= temp808_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp808_33)))
(assert (= var77833 temp808_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp808_35 #x0000000000000001))
(assert (= var77834 temp808_35))
(assert (= temp808_36 #x0000000000000001))
(assert (= var275510 temp808_36))
(assert (= temp808_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp808_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp808_38 #x0000000000000000))
(assert (= var275528 temp808_38))
(assert (= temp808_39 #x0000000000000001))
(assert (= var406582 temp808_39))
(assert (= temp808_40 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp808_40) #x0000000000000001 #x0000000000000000)))
(assert (= temp808_41 #x0000000000000000))
(assert (= var406600 temp808_41))
(assert (= temp808_42 #x0000000000000001))
(assert (= var537654 temp808_42))
(assert (= temp808_43 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp808_43) #x0000000000000001 #x0000000000000000)))
(assert (= temp808_44 #x0000000000000000))
(assert (= var537672 temp808_44))
(assert (= temp808_46 #x00000000000000ff))
(assert (= temp808_45 temp808_46))
(assert (= temp808_48 #x00000000000000ff))
(assert (= temp808_47 temp808_48))
(assert (= temp808_50 #x00000000000000ff))
(assert (= temp808_49 temp808_50))
(assert (= temp808_51 #x0000000000000000))
(assert (= var795723 temp808_51))
(assert (= var795702 var795723))
(assert (= var664608 var795702))
(assert (= temp808_52 #x0000000000000000))
(assert (= var664608 temp808_52))
(assert (= temp808_53 #x0000000000000000))
(assert (= var861259 temp808_53))
(assert (= var861238 var861259))
(assert (= var664611 var861238))
(assert (= temp808_54 #x0000000000000000))
(assert (= var664611 temp808_54))
(assert (= temp808_56 #x0000000000000000))
(assert (= temp808_55 temp808_56))
(assert (= temp808_58 #x0000000000000000))
(assert (= temp808_57 temp808_58))
(assert (= temp808_60 #x0000000000000000))
(assert (= temp808_59 temp808_60))
(assert (= temp808_61 #x0000000000008000))
(assert (= var992306 temp808_61))
(assert (= temp808_62 #x0000000000000001))
(assert (= var992307
   (ite (bvslt temp808_59 temp808_62) #x0000000000000001 #x0000000000000000)))
(assert (= var992308 (ite (= var992307 #x0000000000000001) var992306 temp808_59)))
(assert (= var992304 var992308))
(assert (= var599004 var992304))
(assert (= temp808_63 #x0000000000040000))
(assert (= var1057842 temp808_63))
(assert (= temp808_64 #x0000000000000001))
(assert (= var1057843
   (ite (bvslt temp808_57 temp808_64) #x0000000000000001 #x0000000000000000)))
(assert (= var1057844 (ite (= var1057843 #x0000000000000001) var1057842 temp808_57)))
(assert (= var1057840 var1057844))
(assert (= var599011 var1057840))
(assert (= temp808_65 #x0000000000200000))
(assert (= var1123378 temp808_65))
(assert (= temp808_66 #x0000000000000001))
(assert (= var1123379
   (ite (bvslt temp808_55 temp808_66) #x0000000000000001 #x0000000000000000)))
(assert (= var1123380 (ite (= var1123379 #x0000000000000001) var1123378 temp808_55)))
(assert (= var1123376 var1123380))
(assert (= var599016 var1123376))
(assert (= var78095 var599016))
(assert (= temp808_67 #x0000000000000003))
(assert (= temp808_68 #x0000000000000001))
(assert (= var78184 temp808_68))
(assert (= temp808_70 #x0000000000000001))
(assert (= temp808_69 temp808_70))
(assert (= temp808_72 #x0000000000000001))
(assert (= temp808_71 temp808_72))
(model-add temp808_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp808_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


