(declare-fun temp78032_1 () (_ BitVec 64))
(declare-fun temp78032_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp78032_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp78032_4 () (_ BitVec 64))
(declare-fun temp78032_5 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp78032_6 () (_ BitVec 64))
(declare-fun temp78032_7 () (_ BitVec 64))
(declare-fun temp78032_8 () (_ BitVec 64))
(declare-fun temp78032_9 () (_ BitVec 64))
(declare-fun temp78032_10 () (_ BitVec 64))
(declare-fun temp78032_11 () (_ BitVec 64))
(declare-fun temp78032_12 () (_ BitVec 64))
(declare-fun temp78032_13 () (_ BitVec 64))
(declare-fun temp78032_14 () (_ BitVec 64))
(declare-fun temp78032_15 () (_ BitVec 64))
(declare-fun temp78032_16 () (_ BitVec 64))
(declare-fun temp78032_17 () (_ BitVec 64))
(declare-fun temp78032_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp78032_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp78032_20 () (_ BitVec 64))
(declare-fun temp78032_21 () (_ BitVec 64))
(declare-fun temp78032_22 () (_ BitVec 64))
(declare-fun temp78032_23 () (_ BitVec 64))
(declare-fun temp78032_24 () (_ BitVec 64))
(declare-fun temp78032_25 () (_ BitVec 64))
(declare-fun temp78032_26 () (_ BitVec 64))
(declare-fun temp78032_27 () (_ BitVec 64))
(declare-fun temp78032_28 () (_ BitVec 64))
(declare-fun temp78032_29 () (_ BitVec 64))
(declare-fun temp78032_30 () (_ BitVec 64))
(declare-fun temp78032_31 () (_ BitVec 64))
(declare-fun temp78032_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp78032_33 () (_ BitVec 64))
(declare-fun temp78032_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp78032_35 () (_ BitVec 64))
(declare-fun temp78032_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp78032_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp78032_38 () (_ BitVec 64))
(declare-fun temp78032_40 () (_ BitVec 64))
(declare-fun temp78032_39 () (_ BitVec 64))
(declare-fun temp78032_41 () (_ BitVec 64))
(declare-fun var472118 () (_ BitVec 64))
(declare-fun temp78032_42 () (_ BitVec 64))
(declare-fun var472136 () (_ BitVec 64))
(declare-fun temp78032_43 () (_ BitVec 64))
(declare-fun temp78032_44 () (_ BitVec 64))
(declare-fun var603190 () (_ BitVec 64))
(declare-fun temp78032_45 () (_ BitVec 64))
(declare-fun var603208 () (_ BitVec 64))
(declare-fun temp78032_46 () (_ BitVec 64))
(declare-fun temp78032_48 () (_ BitVec 64))
(declare-fun temp78032_47 () (_ BitVec 64))
(declare-fun temp78032_50 () (_ BitVec 64))
(declare-fun temp78032_49 () (_ BitVec 64))
(declare-fun temp78032_52 () (_ BitVec 64))
(declare-fun temp78032_51 () (_ BitVec 64))
(declare-fun temp78032_53 () (_ BitVec 64))
(declare-fun var795723 () (_ BitVec 64))
(declare-fun var795702 () (_ BitVec 64))
(declare-fun var730134 () (_ BitVec 64))
(declare-fun temp78032_54 () (_ BitVec 64))
(declare-fun temp78032_55 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp78032_56 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp78032_57 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp78032_58 () (_ BitVec 64))
(declare-fun var78184 () (_ BitVec 64))
(declare-fun temp78032_60 () (_ BitVec 64))
(declare-fun temp78032_59 () (_ BitVec 64))
(declare-fun temp78032_62 () (_ BitVec 64))
(declare-fun temp78032_61 () (_ BitVec 64))
(declare-fun temp78032_63 () (_ BitVec 64))
(declare-fun var78544 () (_ BitVec 64))
(declare-fun temp78032_64 () (_ BitVec 64))
(declare-fun var78545 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp78032_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_filter_NAMEEND_DIM temp78032_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp78032_2 #x0000000000000001))
(assert (= var77740 temp78032_2))
(assert (= temp78032_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp78032_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp78032_4 #x0000000000000001))
(assert (= var77770 temp78032_4))
(assert (= temp78032_5 #x0000000000000000))
(assert (= temp78032_6 (select ARGNAME_filter_NAMEEND_DIMSIZE temp78032_5)))
(assert (= temp78032_7 #x0000000000000001))
(assert (= temp78032_8 (select ARGNAME_filter_NAMEEND_DIMSIZE temp78032_7)))
(assert (= temp78032_9 #x0000000000000002))
(assert (= temp78032_10 (select ARGNAME_filter_NAMEEND_DIMSIZE temp78032_9)))
(assert (= temp78032_11 #x0000000000000003))
(assert (= temp78032_12 (select ARGNAME_filter_NAMEEND_DIMSIZE temp78032_11)))
(assert (= temp78032_13 #x0000000000000004))
(assert (= temp78032_14 (select ARGNAME_filter_NAMEEND_DIMSIZE temp78032_13)))
(assert (= temp78032_15 #x0000000000000005))
(assert (= temp78032_16 (select ARGNAME_filter_NAMEEND_DIMSIZE temp78032_15)))
(assert (= temp78032_17 #x0000000000000003))
(assert (= temp78032_18 (select ARGNAME_filter_NAMEEND_DIMSIZE temp78032_17)))
(assert (= var77799 temp78032_18))
(assert (= temp78032_19 #x0000000000000000))
(assert (= temp78032_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp78032_19)))
(assert (= temp78032_21 #x0000000000000001))
(assert (= temp78032_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp78032_21)))
(assert (= temp78032_23 #x0000000000000002))
(assert (= temp78032_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp78032_23)))
(assert (= temp78032_25 #x0000000000000003))
(assert (= temp78032_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp78032_25)))
(assert (= temp78032_27 #x0000000000000004))
(assert (= temp78032_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp78032_27)))
(assert (= temp78032_29 #x0000000000000005))
(assert (= temp78032_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp78032_29)))
(assert (= temp78032_31 #x0000000000000004))
(assert (= temp78032_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp78032_31)))
(assert (= var77832 temp78032_32))
(assert (= temp78032_33 #x0000000000000004))
(assert (= temp78032_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp78032_33)))
(assert (= var77833 temp78032_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp78032_35 #x0000000000000001))
(assert (= var77834 temp78032_35))
(assert (= temp78032_36 #x0000000000000001))
(assert (= var275510 temp78032_36))
(assert (= temp78032_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp78032_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp78032_38 #x0000000000000000))
(assert (= var275528 temp78032_38))
(assert (= temp78032_40 #x0000000000000000))
(assert (= temp78032_39 temp78032_40))
(assert (= temp78032_41 #x0000000000000001))
(assert (= var472118 temp78032_41))
(assert (= temp78032_42 #x0000000000000001))
(assert (= var472136
   (ite (bvslt var472118 temp78032_42) #x0000000000000001 #x0000000000000000)))
(assert (= temp78032_43 #x0000000000000000))
(assert (= var472136 temp78032_43))
(assert (= temp78032_44 #x0000000000000001))
(assert (= var603190 temp78032_44))
(assert (= temp78032_45 #x0000000000000001))
(assert (= var603208
   (ite (bvslt var603190 temp78032_45) #x0000000000000001 #x0000000000000000)))
(assert (= temp78032_46 #x0000000000000000))
(assert (= var603208 temp78032_46))
(assert (= temp78032_48 #x00000000000000ff))
(assert (= temp78032_47 temp78032_48))
(assert (= temp78032_50 #x00000000000000ff))
(assert (= temp78032_49 temp78032_50))
(assert (= temp78032_52 #x00000000000000ff))
(assert (= temp78032_51 temp78032_52))
(assert (= temp78032_53 #x0000000000000000))
(assert (= var795723 temp78032_53))
(assert (= var795702 var795723))
(assert (= var730134 var795702))
(assert (= temp78032_54 #x0000000000000000))
(assert (= var730134 temp78032_54))
(assert (= temp78032_55 #x0000000000008000))
(assert (= var1057842 temp78032_55))
(assert (= temp78032_56 #x0000000000040000))
(assert (= var1123378 temp78032_56))
(assert (= temp78032_57 #x0000000000200000))
(assert (= var1188914 temp78032_57))
(assert (= temp78032_58 #x0000000000000001))
(assert (= var78184 temp78032_58))
(assert (= temp78032_60 #x0000000000000001))
(assert (= temp78032_59 temp78032_60))
(assert (= temp78032_62 #x0000000000000001))
(assert (= temp78032_61 temp78032_62))
(assert (= temp78032_63 #x0000000000000000))
(assert (= var78544 temp78032_63))
(assert (= temp78032_64 #x0000000000000001))
(assert (= var78545 (bvadd var78544 temp78032_64)))
(model-add temp78032_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp78032_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


