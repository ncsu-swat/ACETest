(declare-fun temp10406_1 () (_ BitVec 64))
(declare-fun temp10406_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp10406_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp10406_4 () (_ BitVec 64))
(declare-fun temp10406_5 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10406_6 () (_ BitVec 64))
(declare-fun temp10406_7 () (_ BitVec 64))
(declare-fun temp10406_8 () (_ BitVec 64))
(declare-fun temp10406_9 () (_ BitVec 64))
(declare-fun temp10406_10 () (_ BitVec 64))
(declare-fun temp10406_11 () (_ BitVec 64))
(declare-fun temp10406_12 () (_ BitVec 64))
(declare-fun temp10406_13 () (_ BitVec 64))
(declare-fun temp10406_14 () (_ BitVec 64))
(declare-fun temp10406_15 () (_ BitVec 64))
(declare-fun temp10406_16 () (_ BitVec 64))
(declare-fun temp10406_17 () (_ BitVec 64))
(declare-fun temp10406_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp10406_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10406_20 () (_ BitVec 64))
(declare-fun temp10406_21 () (_ BitVec 64))
(declare-fun temp10406_22 () (_ BitVec 64))
(declare-fun temp10406_23 () (_ BitVec 64))
(declare-fun temp10406_24 () (_ BitVec 64))
(declare-fun temp10406_25 () (_ BitVec 64))
(declare-fun temp10406_26 () (_ BitVec 64))
(declare-fun temp10406_27 () (_ BitVec 64))
(declare-fun temp10406_28 () (_ BitVec 64))
(declare-fun temp10406_29 () (_ BitVec 64))
(declare-fun temp10406_30 () (_ BitVec 64))
(declare-fun temp10406_31 () (_ BitVec 64))
(declare-fun temp10406_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp10406_33 () (_ BitVec 64))
(declare-fun temp10406_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp10406_35 () (_ BitVec 64))
(declare-fun temp10406_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp10406_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp10406_38 () (_ BitVec 64))
(declare-fun temp10406_39 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp10406_40 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp10406_41 () (_ BitVec 64))
(declare-fun temp10406_43 () (_ BitVec 64))
(declare-fun temp10406_42 () (_ BitVec 64))
(declare-fun temp10406_45 () (_ BitVec 64))
(declare-fun temp10406_44 () (_ BitVec 64))
(declare-fun temp10406_46 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp10406_47 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp10406_48 () (_ BitVec 64))
(declare-fun temp10406_50 () (_ BitVec 64))
(declare-fun temp10406_49 () (_ BitVec 64))
(declare-fun temp10406_52 () (_ BitVec 64))
(declare-fun temp10406_51 () (_ BitVec 64))
(declare-fun temp10406_54 () (_ BitVec 64))
(declare-fun temp10406_53 () (_ BitVec 64))
(declare-fun temp10406_55 () (_ BitVec 64))
(declare-fun var795723 () (_ BitVec 64))
(declare-fun var795702 () (_ BitVec 64))
(declare-fun var664608 () (_ BitVec 64))
(declare-fun temp10406_56 () (_ BitVec 64))
(declare-fun temp10406_58 () (_ BitVec 64))
(declare-fun temp10406_57 () (_ BitVec 64))
(declare-fun temp10406_60 () (_ BitVec 64))
(declare-fun temp10406_59 () (_ BitVec 64))
(declare-fun temp10406_62 () (_ BitVec 64))
(declare-fun temp10406_61 () (_ BitVec 64))
(declare-fun temp10406_63 () (_ BitVec 64))
(declare-fun var992306 () (_ BitVec 64))
(declare-fun temp10406_64 () (_ BitVec 64))
(declare-fun var992307 () (_ BitVec 64))
(declare-fun var992308 () (_ BitVec 64))
(declare-fun var992304 () (_ BitVec 64))
(declare-fun var599004 () (_ BitVec 64))
(declare-fun temp10406_65 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp10406_66 () (_ BitVec 64))
(declare-fun var1057843 () (_ BitVec 64))
(declare-fun var1057844 () (_ BitVec 64))
(declare-fun var1057840 () (_ BitVec 64))
(declare-fun var599011 () (_ BitVec 64))
(declare-fun temp10406_67 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp10406_68 () (_ BitVec 64))
(declare-fun var1123379 () (_ BitVec 64))
(declare-fun var1123380 () (_ BitVec 64))
(declare-fun var1123376 () (_ BitVec 64))
(declare-fun var599016 () (_ BitVec 64))
(declare-fun var78095 () (_ BitVec 64))
(declare-fun temp10406_69 () (_ BitVec 64))
(declare-fun temp10406_70 () (_ BitVec 64))
(declare-fun var78096 () (_ BitVec 64))
(declare-fun var78179 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp10406_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_filter_NAMEEND_DIM temp10406_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10406_2 #x0000000000000001))
(assert (= var77740 temp10406_2))
(assert (= temp10406_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp10406_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10406_4 #x0000000000000001))
(assert (= var77770 temp10406_4))
(assert (= temp10406_5 #x0000000000000000))
(assert (= temp10406_6 (select ARGNAME_filter_NAMEEND_DIMSIZE temp10406_5)))
(assert (= temp10406_7 #x0000000000000001))
(assert (= temp10406_8 (select ARGNAME_filter_NAMEEND_DIMSIZE temp10406_7)))
(assert (= temp10406_9 #x0000000000000002))
(assert (= temp10406_10 (select ARGNAME_filter_NAMEEND_DIMSIZE temp10406_9)))
(assert (= temp10406_11 #x0000000000000003))
(assert (= temp10406_12 (select ARGNAME_filter_NAMEEND_DIMSIZE temp10406_11)))
(assert (= temp10406_13 #x0000000000000004))
(assert (= temp10406_14 (select ARGNAME_filter_NAMEEND_DIMSIZE temp10406_13)))
(assert (= temp10406_15 #x0000000000000005))
(assert (= temp10406_16 (select ARGNAME_filter_NAMEEND_DIMSIZE temp10406_15)))
(assert (= temp10406_17 #x0000000000000003))
(assert (= temp10406_18 (select ARGNAME_filter_NAMEEND_DIMSIZE temp10406_17)))
(assert (= var77799 temp10406_18))
(assert (= temp10406_19 #x0000000000000000))
(assert (= temp10406_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp10406_19)))
(assert (= temp10406_21 #x0000000000000001))
(assert (= temp10406_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp10406_21)))
(assert (= temp10406_23 #x0000000000000002))
(assert (= temp10406_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp10406_23)))
(assert (= temp10406_25 #x0000000000000003))
(assert (= temp10406_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp10406_25)))
(assert (= temp10406_27 #x0000000000000004))
(assert (= temp10406_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp10406_27)))
(assert (= temp10406_29 #x0000000000000005))
(assert (= temp10406_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp10406_29)))
(assert (= temp10406_31 #x0000000000000004))
(assert (= temp10406_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp10406_31)))
(assert (= var77832 temp10406_32))
(assert (= temp10406_33 #x0000000000000004))
(assert (= temp10406_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp10406_33)))
(assert (= var77833 temp10406_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp10406_35 #x0000000000000001))
(assert (= var77834 temp10406_35))
(assert (= temp10406_36 #x0000000000000001))
(assert (= var275510 temp10406_36))
(assert (= temp10406_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp10406_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp10406_38 #x0000000000000000))
(assert (= var275528 temp10406_38))
(assert (= temp10406_39 #x0000000000000001))
(assert (= var406582 temp10406_39))
(assert (= temp10406_40 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp10406_40) #x0000000000000001 #x0000000000000000)))
(assert (= temp10406_41 #x0000000000000000))
(assert (= var406600 temp10406_41))
(assert (= temp10406_43 #x0000000000000000))
(assert (= temp10406_42 temp10406_43))
(assert (= temp10406_45 #x0000000000000000))
(assert (= temp10406_44 temp10406_45))
(assert (= temp10406_46 #x0000000000000001))
(assert (= var537654 temp10406_46))
(assert (= temp10406_47 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp10406_47) #x0000000000000001 #x0000000000000000)))
(assert (= temp10406_48 #x0000000000000000))
(assert (= var537672 temp10406_48))
(assert (= temp10406_50 #x00000000000000ff))
(assert (= temp10406_49 temp10406_50))
(assert (= temp10406_52 #x00000000000000ff))
(assert (= temp10406_51 temp10406_52))
(assert (= temp10406_54 #x00000000000000ff))
(assert (= temp10406_53 temp10406_54))
(assert (= temp10406_55 #x0000000000000000))
(assert (= var795723 temp10406_55))
(assert (= var795702 var795723))
(assert (= var664608 var795702))
(assert (= temp10406_56 #x0000000000000000))
(assert (= var664608 temp10406_56))
(assert (= temp10406_58 #x0000000000000000))
(assert (= temp10406_57 temp10406_58))
(assert (= temp10406_60 #x0000000000000000))
(assert (= temp10406_59 temp10406_60))
(assert (= temp10406_62 #x0000000000000000))
(assert (= temp10406_61 temp10406_62))
(assert (= temp10406_63 #x0000000000008000))
(assert (= var992306 temp10406_63))
(assert (= temp10406_64 #x0000000000000001))
(assert (= var992307
   (ite (bvslt temp10406_61 temp10406_64) #x0000000000000001 #x0000000000000000)))
(assert (= var992308 (ite (= var992307 #x0000000000000001) var992306 temp10406_61)))
(assert (= var992304 var992308))
(assert (= var599004 var992304))
(assert (= temp10406_65 #x0000000000040000))
(assert (= var1057842 temp10406_65))
(assert (= temp10406_66 #x0000000000000001))
(assert (= var1057843
   (ite (bvslt temp10406_59 temp10406_66) #x0000000000000001 #x0000000000000000)))
(assert (= var1057844 (ite (= var1057843 #x0000000000000001) var1057842 temp10406_59)))
(assert (= var1057840 var1057844))
(assert (= var599011 var1057840))
(assert (= temp10406_67 #x0000000000200000))
(assert (= var1123378 temp10406_67))
(assert (= temp10406_68 #x0000000000000001))
(assert (= var1123379
   (ite (bvslt temp10406_57 temp10406_68) #x0000000000000001 #x0000000000000000)))
(assert (= var1123380 (ite (= var1123379 #x0000000000000001) var1123378 temp10406_57)))
(assert (= var1123376 var1123380))
(assert (= var599016 var1123376))
(assert (= var78095 var599016))
(assert (= temp10406_69 #x0000000000000003))
(assert (= temp10406_70 #xffffffffffffffff))
(assert (= var78179 (bvadd var78096 temp10406_70)))
(model-add temp10406_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp10406_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


