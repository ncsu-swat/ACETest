(declare-fun temp125058_1 () (_ BitVec 64))
(declare-fun temp125058_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp125058_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp125058_4 () (_ BitVec 64))
(declare-fun temp125058_5 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp125058_6 () (_ BitVec 64))
(declare-fun temp125058_7 () (_ BitVec 64))
(declare-fun temp125058_8 () (_ BitVec 64))
(declare-fun temp125058_9 () (_ BitVec 64))
(declare-fun temp125058_10 () (_ BitVec 64))
(declare-fun temp125058_11 () (_ BitVec 64))
(declare-fun temp125058_12 () (_ BitVec 64))
(declare-fun temp125058_13 () (_ BitVec 64))
(declare-fun temp125058_14 () (_ BitVec 64))
(declare-fun temp125058_15 () (_ BitVec 64))
(declare-fun temp125058_16 () (_ BitVec 64))
(declare-fun temp125058_17 () (_ BitVec 64))
(declare-fun temp125058_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp125058_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp125058_20 () (_ BitVec 64))
(declare-fun temp125058_21 () (_ BitVec 64))
(declare-fun temp125058_22 () (_ BitVec 64))
(declare-fun temp125058_23 () (_ BitVec 64))
(declare-fun temp125058_24 () (_ BitVec 64))
(declare-fun temp125058_25 () (_ BitVec 64))
(declare-fun temp125058_26 () (_ BitVec 64))
(declare-fun temp125058_27 () (_ BitVec 64))
(declare-fun temp125058_28 () (_ BitVec 64))
(declare-fun temp125058_29 () (_ BitVec 64))
(declare-fun temp125058_30 () (_ BitVec 64))
(declare-fun temp125058_31 () (_ BitVec 64))
(declare-fun temp125058_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp125058_33 () (_ BitVec 64))
(declare-fun temp125058_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp125058_35 () (_ BitVec 64))
(declare-fun temp125058_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp125058_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp125058_38 () (_ BitVec 64))
(declare-fun temp125058_39 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp125058_40 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp125058_41 () (_ BitVec 64))
(declare-fun temp125058_43 () (_ BitVec 64))
(declare-fun temp125058_42 () (_ BitVec 64))
(declare-fun temp125058_44 () (_ BitVec 64))
(declare-fun var603190 () (_ BitVec 64))
(declare-fun temp125058_45 () (_ BitVec 64))
(declare-fun var603208 () (_ BitVec 64))
(declare-fun temp125058_46 () (_ BitVec 64))
(declare-fun temp125058_48 () (_ BitVec 64))
(declare-fun temp125058_47 () (_ BitVec 64))
(declare-fun temp125058_50 () (_ BitVec 64))
(declare-fun temp125058_49 () (_ BitVec 64))
(declare-fun temp125058_52 () (_ BitVec 64))
(declare-fun temp125058_51 () (_ BitVec 64))
(declare-fun temp125058_54 () (_ BitVec 64))
(declare-fun temp125058_53 () (_ BitVec 64))
(declare-fun temp125058_56 () (_ BitVec 64))
(declare-fun temp125058_55 () (_ BitVec 64))
(declare-fun temp125058_57 () (_ BitVec 64))
(declare-fun var795723 () (_ BitVec 64))
(declare-fun var795702 () (_ BitVec 64))
(declare-fun var730134 () (_ BitVec 64))
(declare-fun temp125058_58 () (_ BitVec 64))
(declare-fun temp125058_60 () (_ BitVec 64))
(declare-fun temp125058_59 () (_ BitVec 64))
(declare-fun temp125058_62 () (_ BitVec 64))
(declare-fun temp125058_61 () (_ BitVec 64))
(declare-fun temp125058_64 () (_ BitVec 64))
(declare-fun temp125058_63 () (_ BitVec 64))
(declare-fun temp125058_65 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp125058_66 () (_ BitVec 64))
(declare-fun var1057843 () (_ BitVec 64))
(declare-fun var1057844 () (_ BitVec 64))
(declare-fun var1057840 () (_ BitVec 64))
(declare-fun var664540 () (_ BitVec 64))
(declare-fun temp125058_67 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp125058_68 () (_ BitVec 64))
(declare-fun var1123379 () (_ BitVec 64))
(declare-fun var1123380 () (_ BitVec 64))
(declare-fun var1123376 () (_ BitVec 64))
(declare-fun var664547 () (_ BitVec 64))
(declare-fun temp125058_69 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp125058_70 () (_ BitVec 64))
(declare-fun var1188915 () (_ BitVec 64))
(declare-fun var1188916 () (_ BitVec 64))
(declare-fun var1188912 () (_ BitVec 64))
(declare-fun var664552 () (_ BitVec 64))
(declare-fun var78095 () (_ BitVec 64))
(declare-fun temp125058_71 () (_ BitVec 64))
(declare-fun temp125058_72 () (_ BitVec 64))
(declare-fun var78096 () (_ BitVec 64))
(declare-fun var78179 () (_ BitVec 64))
(declare-fun temp125058_74 () (_ BitVec 64))
(declare-fun temp125058_73 () (_ BitVec 64))
(declare-fun temp125058_76 () (_ BitVec 64))
(declare-fun temp125058_75 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp125058_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_filter_NAMEEND_DIM temp125058_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp125058_2 #x0000000000000001))
(assert (= var77740 temp125058_2))
(assert (= temp125058_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp125058_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp125058_4 #x0000000000000001))
(assert (= var77770 temp125058_4))
(assert (= temp125058_5 #x0000000000000000))
(assert (= temp125058_6 (select ARGNAME_filter_NAMEEND_DIMSIZE temp125058_5)))
(assert (= temp125058_7 #x0000000000000001))
(assert (= temp125058_8 (select ARGNAME_filter_NAMEEND_DIMSIZE temp125058_7)))
(assert (= temp125058_9 #x0000000000000002))
(assert (= temp125058_10 (select ARGNAME_filter_NAMEEND_DIMSIZE temp125058_9)))
(assert (= temp125058_11 #x0000000000000003))
(assert (= temp125058_12 (select ARGNAME_filter_NAMEEND_DIMSIZE temp125058_11)))
(assert (= temp125058_13 #x0000000000000004))
(assert (= temp125058_14 (select ARGNAME_filter_NAMEEND_DIMSIZE temp125058_13)))
(assert (= temp125058_15 #x0000000000000005))
(assert (= temp125058_16 (select ARGNAME_filter_NAMEEND_DIMSIZE temp125058_15)))
(assert (= temp125058_17 #x0000000000000003))
(assert (= temp125058_18 (select ARGNAME_filter_NAMEEND_DIMSIZE temp125058_17)))
(assert (= var77799 temp125058_18))
(assert (= temp125058_19 #x0000000000000000))
(assert (= temp125058_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp125058_19)))
(assert (= temp125058_21 #x0000000000000001))
(assert (= temp125058_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp125058_21)))
(assert (= temp125058_23 #x0000000000000002))
(assert (= temp125058_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp125058_23)))
(assert (= temp125058_25 #x0000000000000003))
(assert (= temp125058_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp125058_25)))
(assert (= temp125058_27 #x0000000000000004))
(assert (= temp125058_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp125058_27)))
(assert (= temp125058_29 #x0000000000000005))
(assert (= temp125058_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp125058_29)))
(assert (= temp125058_31 #x0000000000000004))
(assert (= temp125058_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp125058_31)))
(assert (= var77832 temp125058_32))
(assert (= temp125058_33 #x0000000000000004))
(assert (= temp125058_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp125058_33)))
(assert (= var77833 temp125058_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp125058_35 #x0000000000000001))
(assert (= var77834 temp125058_35))
(assert (= temp125058_36 #x0000000000000001))
(assert (= var275510 temp125058_36))
(assert (= temp125058_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp125058_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp125058_38 #x0000000000000000))
(assert (= var275528 temp125058_38))
(assert (= temp125058_39 #x0000000000000001))
(assert (= var406582 temp125058_39))
(assert (= temp125058_40 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp125058_40) #x0000000000000001 #x0000000000000000)))
(assert (= temp125058_41 #x0000000000000000))
(assert (= var406600 temp125058_41))
(assert (= temp125058_43 #x0000000000000000))
(assert (= temp125058_42 temp125058_43))
(assert (= temp125058_44 #x0000000000000001))
(assert (= var603190 temp125058_44))
(assert (= temp125058_45 #x0000000000000001))
(assert (= var603208
   (ite (bvslt var603190 temp125058_45) #x0000000000000001 #x0000000000000000)))
(assert (= temp125058_46 #x0000000000000000))
(assert (= var603208 temp125058_46))
(assert (= temp125058_48 #x0000000000000000))
(assert (= temp125058_47 temp125058_48))
(assert (= temp125058_50 #x0000000000000000))
(assert (= temp125058_49 temp125058_50))
(assert (= temp125058_52 #x00000000000000ff))
(assert (= temp125058_51 temp125058_52))
(assert (= temp125058_54 #x00000000000000ff))
(assert (= temp125058_53 temp125058_54))
(assert (= temp125058_56 #x00000000000000ff))
(assert (= temp125058_55 temp125058_56))
(assert (= temp125058_57 #x0000000000000000))
(assert (= var795723 temp125058_57))
(assert (= var795702 var795723))
(assert (= var730134 var795702))
(assert (= temp125058_58 #x0000000000000000))
(assert (= var730134 temp125058_58))
(assert (= temp125058_60 #x0000000000000000))
(assert (= temp125058_59 temp125058_60))
(assert (= temp125058_62 #x0000000000000000))
(assert (= temp125058_61 temp125058_62))
(assert (= temp125058_64 #x0000000000000000))
(assert (= temp125058_63 temp125058_64))
(assert (= temp125058_65 #x0000000000008000))
(assert (= var1057842 temp125058_65))
(assert (= temp125058_66 #x0000000000000001))
(assert (= var1057843
   (ite (bvslt temp125058_63 temp125058_66)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1057844 (ite (= var1057843 #x0000000000000001) var1057842 temp125058_63)))
(assert (= var1057840 var1057844))
(assert (= var664540 var1057840))
(assert (= temp125058_67 #x0000000000040000))
(assert (= var1123378 temp125058_67))
(assert (= temp125058_68 #x0000000000000001))
(assert (= var1123379
   (ite (bvslt temp125058_61 temp125058_68)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1123380 (ite (= var1123379 #x0000000000000001) var1123378 temp125058_61)))
(assert (= var1123376 var1123380))
(assert (= var664547 var1123376))
(assert (= temp125058_69 #x0000000000200000))
(assert (= var1188914 temp125058_69))
(assert (= temp125058_70 #x0000000000000001))
(assert (= var1188915
   (ite (bvslt temp125058_59 temp125058_70)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1188916 (ite (= var1188915 #x0000000000000001) var1188914 temp125058_59)))
(assert (= var1188912 var1188916))
(assert (= var664552 var1188912))
(assert (= var78095 var664552))
(assert (= temp125058_71 #x0000000000000003))
(assert (= temp125058_72 #xffffffffffffffff))
(assert (= var78179 (bvadd var78096 temp125058_72)))
(assert (= temp125058_74 #x0000000000000001))
(assert (= temp125058_73 temp125058_74))
(assert (= temp125058_76 #x0000000000000001))
(assert (= temp125058_75 temp125058_76))
(model-add temp125058_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp125058_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


