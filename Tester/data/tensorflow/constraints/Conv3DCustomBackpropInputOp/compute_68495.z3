(declare-fun temp102744_1 () (_ BitVec 64))
(declare-fun temp102744_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp102744_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp102744_4 () (_ BitVec 64))
(declare-fun temp102744_5 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp102744_6 () (_ BitVec 64))
(declare-fun temp102744_7 () (_ BitVec 64))
(declare-fun temp102744_8 () (_ BitVec 64))
(declare-fun temp102744_9 () (_ BitVec 64))
(declare-fun temp102744_10 () (_ BitVec 64))
(declare-fun temp102744_11 () (_ BitVec 64))
(declare-fun temp102744_12 () (_ BitVec 64))
(declare-fun temp102744_13 () (_ BitVec 64))
(declare-fun temp102744_14 () (_ BitVec 64))
(declare-fun temp102744_15 () (_ BitVec 64))
(declare-fun temp102744_16 () (_ BitVec 64))
(declare-fun temp102744_17 () (_ BitVec 64))
(declare-fun temp102744_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp102744_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp102744_20 () (_ BitVec 64))
(declare-fun temp102744_21 () (_ BitVec 64))
(declare-fun temp102744_22 () (_ BitVec 64))
(declare-fun temp102744_23 () (_ BitVec 64))
(declare-fun temp102744_24 () (_ BitVec 64))
(declare-fun temp102744_25 () (_ BitVec 64))
(declare-fun temp102744_26 () (_ BitVec 64))
(declare-fun temp102744_27 () (_ BitVec 64))
(declare-fun temp102744_28 () (_ BitVec 64))
(declare-fun temp102744_29 () (_ BitVec 64))
(declare-fun temp102744_30 () (_ BitVec 64))
(declare-fun temp102744_31 () (_ BitVec 64))
(declare-fun temp102744_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp102744_33 () (_ BitVec 64))
(declare-fun temp102744_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp102744_35 () (_ BitVec 64))
(declare-fun temp102744_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp102744_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp102744_38 () (_ BitVec 64))
(declare-fun temp102744_40 () (_ BitVec 64))
(declare-fun temp102744_39 () (_ BitVec 64))
(declare-fun temp102744_41 () (_ BitVec 64))
(declare-fun var472118 () (_ BitVec 64))
(declare-fun temp102744_42 () (_ BitVec 64))
(declare-fun var472136 () (_ BitVec 64))
(declare-fun temp102744_43 () (_ BitVec 64))
(declare-fun temp102744_45 () (_ BitVec 64))
(declare-fun temp102744_44 () (_ BitVec 64))
(declare-fun temp102744_46 () (_ BitVec 64))
(declare-fun var668726 () (_ BitVec 64))
(declare-fun temp102744_47 () (_ BitVec 64))
(declare-fun var668744 () (_ BitVec 64))
(declare-fun temp102744_48 () (_ BitVec 64))
(declare-fun temp102744_50 () (_ BitVec 64))
(declare-fun temp102744_49 () (_ BitVec 64))
(declare-fun temp102744_52 () (_ BitVec 64))
(declare-fun temp102744_51 () (_ BitVec 64))
(declare-fun temp102744_54 () (_ BitVec 64))
(declare-fun temp102744_53 () (_ BitVec 64))
(declare-fun temp102744_56 () (_ BitVec 64))
(declare-fun temp102744_55 () (_ BitVec 64))
(declare-fun temp102744_57 () (_ BitVec 64))
(declare-fun var992331 () (_ BitVec 64))
(declare-fun var992310 () (_ BitVec 64))
(declare-fun var861216 () (_ BitVec 64))
(declare-fun temp102744_58 () (_ BitVec 64))
(declare-fun temp102744_60 () (_ BitVec 64))
(declare-fun temp102744_59 () (_ BitVec 64))
(declare-fun temp102744_62 () (_ BitVec 64))
(declare-fun temp102744_61 () (_ BitVec 64))
(declare-fun temp102744_64 () (_ BitVec 64))
(declare-fun temp102744_63 () (_ BitVec 64))
(declare-fun temp102744_65 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp102744_66 () (_ BitVec 64))
(declare-fun var1188915 () (_ BitVec 64))
(declare-fun var1188916 () (_ BitVec 64))
(declare-fun var1188912 () (_ BitVec 64))
(declare-fun var795612 () (_ BitVec 64))
(declare-fun temp102744_67 () (_ BitVec 64))
(declare-fun var1254450 () (_ BitVec 64))
(declare-fun temp102744_68 () (_ BitVec 64))
(declare-fun var1254451 () (_ BitVec 64))
(declare-fun var1254452 () (_ BitVec 64))
(declare-fun var1254448 () (_ BitVec 64))
(declare-fun var795619 () (_ BitVec 64))
(declare-fun temp102744_69 () (_ BitVec 64))
(declare-fun var1319986 () (_ BitVec 64))
(declare-fun temp102744_70 () (_ BitVec 64))
(declare-fun var1319987 () (_ BitVec 64))
(declare-fun var1319988 () (_ BitVec 64))
(declare-fun var1319984 () (_ BitVec 64))
(declare-fun var795624 () (_ BitVec 64))
(declare-fun var78095 () (_ BitVec 64))
(declare-fun temp102744_71 () (_ BitVec 64))
(declare-fun temp102744_72 () (_ BitVec 64))
(declare-fun var78184 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp102744_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_filter_NAMEEND_DIM temp102744_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp102744_2 #x0000000000000001))
(assert (= var77740 temp102744_2))
(assert (= temp102744_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp102744_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp102744_4 #x0000000000000001))
(assert (= var77770 temp102744_4))
(assert (= temp102744_5 #x0000000000000000))
(assert (= temp102744_6 (select ARGNAME_filter_NAMEEND_DIMSIZE temp102744_5)))
(assert (= temp102744_7 #x0000000000000001))
(assert (= temp102744_8 (select ARGNAME_filter_NAMEEND_DIMSIZE temp102744_7)))
(assert (= temp102744_9 #x0000000000000002))
(assert (= temp102744_10 (select ARGNAME_filter_NAMEEND_DIMSIZE temp102744_9)))
(assert (= temp102744_11 #x0000000000000003))
(assert (= temp102744_12 (select ARGNAME_filter_NAMEEND_DIMSIZE temp102744_11)))
(assert (= temp102744_13 #x0000000000000004))
(assert (= temp102744_14 (select ARGNAME_filter_NAMEEND_DIMSIZE temp102744_13)))
(assert (= temp102744_15 #x0000000000000005))
(assert (= temp102744_16 (select ARGNAME_filter_NAMEEND_DIMSIZE temp102744_15)))
(assert (= temp102744_17 #x0000000000000003))
(assert (= temp102744_18 (select ARGNAME_filter_NAMEEND_DIMSIZE temp102744_17)))
(assert (= var77799 temp102744_18))
(assert (= temp102744_19 #x0000000000000000))
(assert (= temp102744_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp102744_19)))
(assert (= temp102744_21 #x0000000000000001))
(assert (= temp102744_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp102744_21)))
(assert (= temp102744_23 #x0000000000000002))
(assert (= temp102744_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp102744_23)))
(assert (= temp102744_25 #x0000000000000003))
(assert (= temp102744_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp102744_25)))
(assert (= temp102744_27 #x0000000000000004))
(assert (= temp102744_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp102744_27)))
(assert (= temp102744_29 #x0000000000000005))
(assert (= temp102744_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp102744_29)))
(assert (= temp102744_31 #x0000000000000004))
(assert (= temp102744_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp102744_31)))
(assert (= var77832 temp102744_32))
(assert (= temp102744_33 #x0000000000000004))
(assert (= temp102744_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp102744_33)))
(assert (= var77833 temp102744_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp102744_35 #x0000000000000001))
(assert (= var77834 temp102744_35))
(assert (= temp102744_36 #x0000000000000001))
(assert (= var275510 temp102744_36))
(assert (= temp102744_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp102744_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp102744_38 #x0000000000000000))
(assert (= var275528 temp102744_38))
(assert (= temp102744_40 #x0000000000000000))
(assert (= temp102744_39 temp102744_40))
(assert (= temp102744_41 #x0000000000000001))
(assert (= var472118 temp102744_41))
(assert (= temp102744_42 #x0000000000000001))
(assert (= var472136
   (ite (bvslt var472118 temp102744_42) #x0000000000000001 #x0000000000000000)))
(assert (= temp102744_43 #x0000000000000000))
(assert (= var472136 temp102744_43))
(assert (= temp102744_45 #x0000000000000000))
(assert (= temp102744_44 temp102744_45))
(assert (= temp102744_46 #x0000000000000001))
(assert (= var668726 temp102744_46))
(assert (= temp102744_47 #x0000000000000001))
(assert (= var668744
   (ite (bvslt var668726 temp102744_47) #x0000000000000001 #x0000000000000000)))
(assert (= temp102744_48 #x0000000000000000))
(assert (= var668744 temp102744_48))
(assert (= temp102744_50 #x0000000000000000))
(assert (= temp102744_49 temp102744_50))
(assert (= temp102744_52 #x00000000000000ff))
(assert (= temp102744_51 temp102744_52))
(assert (= temp102744_54 #x00000000000000ff))
(assert (= temp102744_53 temp102744_54))
(assert (= temp102744_56 #x00000000000000ff))
(assert (= temp102744_55 temp102744_56))
(assert (= temp102744_57 #x0000000000000000))
(assert (= var992331 temp102744_57))
(assert (= var992310 var992331))
(assert (= var861216 var992310))
(assert (= temp102744_58 #x0000000000000000))
(assert (= var861216 temp102744_58))
(assert (= temp102744_60 #x0000000000000000))
(assert (= temp102744_59 temp102744_60))
(assert (= temp102744_62 #x0000000000000000))
(assert (= temp102744_61 temp102744_62))
(assert (= temp102744_64 #x0000000000000000))
(assert (= temp102744_63 temp102744_64))
(assert (= temp102744_65 #x0000000000008000))
(assert (= var1188914 temp102744_65))
(assert (= temp102744_66 #x0000000000000001))
(assert (= var1188915
   (ite (bvslt temp102744_63 temp102744_66)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1188916 (ite (= var1188915 #x0000000000000001) var1188914 temp102744_63)))
(assert (= var1188912 var1188916))
(assert (= var795612 var1188912))
(assert (= temp102744_67 #x0000000000040000))
(assert (= var1254450 temp102744_67))
(assert (= temp102744_68 #x0000000000000001))
(assert (= var1254451
   (ite (bvslt temp102744_61 temp102744_68)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1254452 (ite (= var1254451 #x0000000000000001) var1254450 temp102744_61)))
(assert (= var1254448 var1254452))
(assert (= var795619 var1254448))
(assert (= temp102744_69 #x0000000000200000))
(assert (= var1319986 temp102744_69))
(assert (= temp102744_70 #x0000000000000001))
(assert (= var1319987
   (ite (bvslt temp102744_59 temp102744_70)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1319988 (ite (= var1319987 #x0000000000000001) var1319986 temp102744_59)))
(assert (= var1319984 var1319988))
(assert (= var795624 var1319984))
(assert (= var78095 var795624))
(assert (= temp102744_71 #x0000000000000003))
(assert (= temp102744_72 #x0000000000000001))
(assert (= var78184 temp102744_72))
(model-add temp102744_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp102744_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))




