(declare-fun temp136648_1 () (_ BitVec 64))
(declare-fun temp136648_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_1_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp136648_3 () (_ BitVec 64))
(declare-fun ARGNAME_input_2_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp136648_4 () (_ BitVec 64))
(declare-fun temp136648_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_1_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp136648_6 () (_ BitVec 64))
(declare-fun temp136648_7 () (_ BitVec 64))
(declare-fun temp136648_8 () (_ BitVec 64))
(declare-fun temp136648_9 () (_ BitVec 64))
(declare-fun temp136648_10 () (_ BitVec 64))
(declare-fun temp136648_11 () (_ BitVec 64))
(declare-fun temp136648_12 () (_ BitVec 64))
(declare-fun temp136648_13 () (_ BitVec 64))
(declare-fun temp136648_14 () (_ BitVec 64))
(declare-fun temp136648_15 () (_ BitVec 64))
(declare-fun temp136648_16 () (_ BitVec 64))
(declare-fun temp136648_17 () (_ BitVec 64))
(declare-fun temp136648_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp136648_19 () (_ BitVec 64))
(declare-fun ARGNAME_input_2_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp136648_20 () (_ BitVec 64))
(declare-fun temp136648_21 () (_ BitVec 64))
(declare-fun temp136648_22 () (_ BitVec 64))
(declare-fun temp136648_23 () (_ BitVec 64))
(declare-fun temp136648_24 () (_ BitVec 64))
(declare-fun temp136648_25 () (_ BitVec 64))
(declare-fun temp136648_26 () (_ BitVec 64))
(declare-fun temp136648_27 () (_ BitVec 64))
(declare-fun temp136648_28 () (_ BitVec 64))
(declare-fun temp136648_29 () (_ BitVec 64))
(declare-fun temp136648_30 () (_ BitVec 64))
(declare-fun temp136648_31 () (_ BitVec 64))
(declare-fun temp136648_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp136648_33 () (_ BitVec 64))
(declare-fun temp136648_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp136648_35 () (_ BitVec 64))
(declare-fun temp136648_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp136648_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp136648_38 () (_ BitVec 64))
(declare-fun temp136648_40 () (_ BitVec 64))
(declare-fun temp136648_39 () (_ BitVec 64))
(declare-fun temp136648_42 () (_ BitVec 64))
(declare-fun temp136648_41 () (_ BitVec 64))
(declare-fun temp136648_43 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp136648_44 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp136648_45 () (_ BitVec 64))
(declare-fun temp136648_47 () (_ BitVec 64))
(declare-fun temp136648_46 () (_ BitVec 64))
(declare-fun temp136648_49 () (_ BitVec 64))
(declare-fun temp136648_48 () (_ BitVec 64))
(declare-fun temp136648_50 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp136648_51 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp136648_52 () (_ BitVec 64))
(declare-fun temp136648_54 () (_ BitVec 64))
(declare-fun temp136648_53 () (_ BitVec 64))
(declare-fun temp136648_56 () (_ BitVec 64))
(declare-fun temp136648_55 () (_ BitVec 64))
(declare-fun temp136648_58 () (_ BitVec 64))
(declare-fun temp136648_57 () (_ BitVec 64))
(declare-fun temp136648_60 () (_ BitVec 64))
(declare-fun temp136648_59 () (_ BitVec 64))
(declare-fun temp136648_62 () (_ BitVec 64))
(declare-fun temp136648_61 () (_ BitVec 64))
(declare-fun temp136648_64 () (_ BitVec 64))
(declare-fun temp136648_63 () (_ BitVec 64))
(declare-fun temp136648_65 () (_ BitVec 64))
(declare-fun var861234 () (_ BitVec 64))
(declare-fun temp136648_66 () (_ BitVec 64))
(declare-fun var861235 () (_ BitVec 64))
(declare-fun var861236 () (_ BitVec 64))
(declare-fun var861232 () (_ BitVec 64))
(declare-fun var599004 () (_ BitVec 64))
(declare-fun temp136648_67 () (_ BitVec 64))
(declare-fun var926770 () (_ BitVec 64))
(declare-fun temp136648_68 () (_ BitVec 64))
(declare-fun var926771 () (_ BitVec 64))
(declare-fun var926772 () (_ BitVec 64))
(declare-fun var926768 () (_ BitVec 64))
(declare-fun var599011 () (_ BitVec 64))
(declare-fun temp136648_69 () (_ BitVec 64))
(declare-fun var992306 () (_ BitVec 64))
(declare-fun temp136648_70 () (_ BitVec 64))
(declare-fun var992307 () (_ BitVec 64))
(declare-fun var992308 () (_ BitVec 64))
(declare-fun var992304 () (_ BitVec 64))
(declare-fun var599016 () (_ BitVec 64))
(declare-fun var78095 () (_ BitVec 64))
(declare-fun temp136648_71 () (_ BitVec 64))
(declare-fun temp136648_72 () (_ BitVec 64))
(declare-fun var78096 () (_ BitVec 64))
(declare-fun var78179 () (_ BitVec 64))
(declare-fun temp136648_74 () (_ BitVec 64))
(declare-fun temp136648_73 () (_ BitVec 64))
(declare-fun temp136648_76 () (_ BitVec 64))
(declare-fun temp136648_75 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp136648_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_input_1_NAMEEND_DIM temp136648_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp136648_2 #x0000000000000001))
(assert (= var77740 temp136648_2))
(assert (= temp136648_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_input_2_NAMEEND_DIM temp136648_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp136648_4 #x0000000000000001))
(assert (= var77770 temp136648_4))
(assert (= temp136648_5 #x0000000000000000))
(assert (= temp136648_6 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp136648_5)))
(assert (= temp136648_7 #x0000000000000001))
(assert (= temp136648_8 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp136648_7)))
(assert (= temp136648_9 #x0000000000000002))
(assert (= temp136648_10 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp136648_9)))
(assert (= temp136648_11 #x0000000000000003))
(assert (= temp136648_12 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp136648_11)))
(assert (= temp136648_13 #x0000000000000004))
(assert (= temp136648_14 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp136648_13)))
(assert (= temp136648_15 #x0000000000000005))
(assert (= temp136648_16 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp136648_15)))
(assert (= temp136648_17 #x0000000000000003))
(assert (= temp136648_18 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp136648_17)))
(assert (= var77799 temp136648_18))
(assert (= temp136648_19 #x0000000000000000))
(assert (= temp136648_20 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp136648_19)))
(assert (= temp136648_21 #x0000000000000001))
(assert (= temp136648_22 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp136648_21)))
(assert (= temp136648_23 #x0000000000000002))
(assert (= temp136648_24 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp136648_23)))
(assert (= temp136648_25 #x0000000000000003))
(assert (= temp136648_26 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp136648_25)))
(assert (= temp136648_27 #x0000000000000004))
(assert (= temp136648_28 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp136648_27)))
(assert (= temp136648_29 #x0000000000000005))
(assert (= temp136648_30 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp136648_29)))
(assert (= temp136648_31 #x0000000000000004))
(assert (= temp136648_32 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp136648_31)))
(assert (= var77832 temp136648_32))
(assert (= temp136648_33 #x0000000000000004))
(assert (= temp136648_34 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp136648_33)))
(assert (= var77833 temp136648_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp136648_35 #x0000000000000001))
(assert (= var77834 temp136648_35))
(assert (= temp136648_36 #x0000000000000001))
(assert (= var275510 temp136648_36))
(assert (= temp136648_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp136648_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp136648_38 #x0000000000000000))
(assert (= var275528 temp136648_38))
(assert (= temp136648_40 #x0000000000000000))
(assert (= temp136648_39 temp136648_40))
(assert (= temp136648_42 #x0000000000000000))
(assert (= temp136648_41 temp136648_42))
(assert (= temp136648_43 #x0000000000000001))
(assert (= var406582 temp136648_43))
(assert (= temp136648_44 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp136648_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp136648_45 #x0000000000000000))
(assert (= var406600 temp136648_45))
(assert (= temp136648_47 #x0000000000000000))
(assert (= temp136648_46 temp136648_47))
(assert (= temp136648_49 #x0000000000000000))
(assert (= temp136648_48 temp136648_49))
(assert (= temp136648_50 #x0000000000000001))
(assert (= var537654 temp136648_50))
(assert (= temp136648_51 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp136648_51) #x0000000000000001 #x0000000000000000)))
(assert (= temp136648_52 #x0000000000000000))
(assert (= var537672 temp136648_52))
(assert (= temp136648_54 #x00000000000000ff))
(assert (= temp136648_53 temp136648_54))
(assert (= temp136648_56 #x00000000000000ff))
(assert (= temp136648_55 temp136648_56))
(assert (= temp136648_58 #x00000000000000ff))
(assert (= temp136648_57 temp136648_58))
(assert (= temp136648_60 #x0000000000000000))
(assert (= temp136648_59 temp136648_60))
(assert (= temp136648_62 #x0000000000000000))
(assert (= temp136648_61 temp136648_62))
(assert (= temp136648_64 #x0000000000000000))
(assert (= temp136648_63 temp136648_64))
(assert (= temp136648_65 #x0000000000008000))
(assert (= var861234 temp136648_65))
(assert (= temp136648_66 #x0000000000000001))
(assert (= var861235
   (ite (bvslt temp136648_63 temp136648_66)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var861236 (ite (= var861235 #x0000000000000001) var861234 temp136648_63)))
(assert (= var861232 var861236))
(assert (= var599004 var861232))
(assert (= temp136648_67 #x0000000000040000))
(assert (= var926770 temp136648_67))
(assert (= temp136648_68 #x0000000000000001))
(assert (= var926771
   (ite (bvslt temp136648_61 temp136648_68)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var926772 (ite (= var926771 #x0000000000000001) var926770 temp136648_61)))
(assert (= var926768 var926772))
(assert (= var599011 var926768))
(assert (= temp136648_69 #x0000000000200000))
(assert (= var992306 temp136648_69))
(assert (= temp136648_70 #x0000000000000001))
(assert (= var992307
   (ite (bvslt temp136648_59 temp136648_70)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var992308 (ite (= var992307 #x0000000000000001) var992306 temp136648_59)))
(assert (= var992304 var992308))
(assert (= var599016 var992304))
(assert (= var78095 var599016))
(assert (= temp136648_71 #x0000000000000003))
(assert (= temp136648_72 #xffffffffffffffff))
(assert (= var78179 (bvadd var78096 temp136648_72)))
(assert (= temp136648_74 #x0000000000000001))
(assert (= temp136648_73 temp136648_74))
(assert (= temp136648_76 #x0000000000000001))
(assert (= temp136648_75 temp136648_76))
(model-add temp136648_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp136648_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_1_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))

