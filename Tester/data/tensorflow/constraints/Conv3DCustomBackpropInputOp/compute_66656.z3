(declare-fun temp100015_1 () (_ BitVec 64))
(declare-fun temp100015_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp100015_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp100015_4 () (_ BitVec 64))
(declare-fun temp100015_5 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp100015_6 () (_ BitVec 64))
(declare-fun temp100015_7 () (_ BitVec 64))
(declare-fun temp100015_8 () (_ BitVec 64))
(declare-fun temp100015_9 () (_ BitVec 64))
(declare-fun temp100015_10 () (_ BitVec 64))
(declare-fun temp100015_11 () (_ BitVec 64))
(declare-fun temp100015_12 () (_ BitVec 64))
(declare-fun temp100015_13 () (_ BitVec 64))
(declare-fun temp100015_14 () (_ BitVec 64))
(declare-fun temp100015_15 () (_ BitVec 64))
(declare-fun temp100015_16 () (_ BitVec 64))
(declare-fun temp100015_17 () (_ BitVec 64))
(declare-fun temp100015_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp100015_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp100015_20 () (_ BitVec 64))
(declare-fun temp100015_21 () (_ BitVec 64))
(declare-fun temp100015_22 () (_ BitVec 64))
(declare-fun temp100015_23 () (_ BitVec 64))
(declare-fun temp100015_24 () (_ BitVec 64))
(declare-fun temp100015_25 () (_ BitVec 64))
(declare-fun temp100015_26 () (_ BitVec 64))
(declare-fun temp100015_27 () (_ BitVec 64))
(declare-fun temp100015_28 () (_ BitVec 64))
(declare-fun temp100015_29 () (_ BitVec 64))
(declare-fun temp100015_30 () (_ BitVec 64))
(declare-fun temp100015_31 () (_ BitVec 64))
(declare-fun temp100015_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp100015_33 () (_ BitVec 64))
(declare-fun temp100015_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp100015_35 () (_ BitVec 64))
(declare-fun temp100015_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp100015_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp100015_38 () (_ BitVec 64))
(declare-fun temp100015_40 () (_ BitVec 64))
(declare-fun temp100015_39 () (_ BitVec 64))
(declare-fun temp100015_41 () (_ BitVec 64))
(declare-fun var472118 () (_ BitVec 64))
(declare-fun temp100015_42 () (_ BitVec 64))
(declare-fun var472136 () (_ BitVec 64))
(declare-fun temp100015_43 () (_ BitVec 64))
(declare-fun temp100015_45 () (_ BitVec 64))
(declare-fun temp100015_44 () (_ BitVec 64))
(declare-fun temp100015_46 () (_ BitVec 64))
(declare-fun var668726 () (_ BitVec 64))
(declare-fun temp100015_47 () (_ BitVec 64))
(declare-fun var668744 () (_ BitVec 64))
(declare-fun temp100015_48 () (_ BitVec 64))
(declare-fun temp100015_50 () (_ BitVec 64))
(declare-fun temp100015_49 () (_ BitVec 64))
(declare-fun temp100015_52 () (_ BitVec 64))
(declare-fun temp100015_51 () (_ BitVec 64))
(declare-fun temp100015_54 () (_ BitVec 64))
(declare-fun temp100015_53 () (_ BitVec 64))
(declare-fun temp100015_56 () (_ BitVec 64))
(declare-fun temp100015_55 () (_ BitVec 64))
(declare-fun temp100015_58 () (_ BitVec 64))
(declare-fun temp100015_57 () (_ BitVec 64))
(declare-fun temp100015_59 () (_ BitVec 64))
(declare-fun var861259 () (_ BitVec 64))
(declare-fun var861238 () (_ BitVec 64))
(declare-fun var795670 () (_ BitVec 64))
(declare-fun temp100015_60 () (_ BitVec 64))
(declare-fun temp100015_61 () (_ BitVec 64))
(declare-fun var926795 () (_ BitVec 64))
(declare-fun var926774 () (_ BitVec 64))
(declare-fun var795680 () (_ BitVec 64))
(declare-fun temp100015_62 () (_ BitVec 64))
(declare-fun temp100015_64 () (_ BitVec 64))
(declare-fun temp100015_63 () (_ BitVec 64))
(declare-fun temp100015_66 () (_ BitVec 64))
(declare-fun temp100015_65 () (_ BitVec 64))
(declare-fun temp100015_68 () (_ BitVec 64))
(declare-fun temp100015_67 () (_ BitVec 64))
(declare-fun temp100015_69 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp100015_70 () (_ BitVec 64))
(declare-fun var1123379 () (_ BitVec 64))
(declare-fun var1123380 () (_ BitVec 64))
(declare-fun var1123376 () (_ BitVec 64))
(declare-fun var730076 () (_ BitVec 64))
(declare-fun temp100015_71 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp100015_72 () (_ BitVec 64))
(declare-fun var1188915 () (_ BitVec 64))
(declare-fun var1188916 () (_ BitVec 64))
(declare-fun var1188912 () (_ BitVec 64))
(declare-fun var730083 () (_ BitVec 64))
(declare-fun temp100015_73 () (_ BitVec 64))
(declare-fun var1254450 () (_ BitVec 64))
(declare-fun temp100015_74 () (_ BitVec 64))
(declare-fun var1254451 () (_ BitVec 64))
(declare-fun var1254452 () (_ BitVec 64))
(declare-fun var1254448 () (_ BitVec 64))
(declare-fun var730088 () (_ BitVec 64))
(declare-fun var78095 () (_ BitVec 64))
(declare-fun temp100015_75 () (_ BitVec 64))
(declare-fun temp100015_76 () (_ BitVec 64))
(declare-fun var78096 () (_ BitVec 64))
(declare-fun var78179 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp100015_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_filter_NAMEEND_DIM temp100015_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp100015_2 #x0000000000000001))
(assert (= var77740 temp100015_2))
(assert (= temp100015_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp100015_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp100015_4 #x0000000000000001))
(assert (= var77770 temp100015_4))
(assert (= temp100015_5 #x0000000000000000))
(assert (= temp100015_6 (select ARGNAME_filter_NAMEEND_DIMSIZE temp100015_5)))
(assert (= temp100015_7 #x0000000000000001))
(assert (= temp100015_8 (select ARGNAME_filter_NAMEEND_DIMSIZE temp100015_7)))
(assert (= temp100015_9 #x0000000000000002))
(assert (= temp100015_10 (select ARGNAME_filter_NAMEEND_DIMSIZE temp100015_9)))
(assert (= temp100015_11 #x0000000000000003))
(assert (= temp100015_12 (select ARGNAME_filter_NAMEEND_DIMSIZE temp100015_11)))
(assert (= temp100015_13 #x0000000000000004))
(assert (= temp100015_14 (select ARGNAME_filter_NAMEEND_DIMSIZE temp100015_13)))
(assert (= temp100015_15 #x0000000000000005))
(assert (= temp100015_16 (select ARGNAME_filter_NAMEEND_DIMSIZE temp100015_15)))
(assert (= temp100015_17 #x0000000000000003))
(assert (= temp100015_18 (select ARGNAME_filter_NAMEEND_DIMSIZE temp100015_17)))
(assert (= var77799 temp100015_18))
(assert (= temp100015_19 #x0000000000000000))
(assert (= temp100015_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp100015_19)))
(assert (= temp100015_21 #x0000000000000001))
(assert (= temp100015_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp100015_21)))
(assert (= temp100015_23 #x0000000000000002))
(assert (= temp100015_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp100015_23)))
(assert (= temp100015_25 #x0000000000000003))
(assert (= temp100015_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp100015_25)))
(assert (= temp100015_27 #x0000000000000004))
(assert (= temp100015_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp100015_27)))
(assert (= temp100015_29 #x0000000000000005))
(assert (= temp100015_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp100015_29)))
(assert (= temp100015_31 #x0000000000000004))
(assert (= temp100015_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp100015_31)))
(assert (= var77832 temp100015_32))
(assert (= temp100015_33 #x0000000000000004))
(assert (= temp100015_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp100015_33)))
(assert (= var77833 temp100015_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp100015_35 #x0000000000000001))
(assert (= var77834 temp100015_35))
(assert (= temp100015_36 #x0000000000000001))
(assert (= var275510 temp100015_36))
(assert (= temp100015_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp100015_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp100015_38 #x0000000000000000))
(assert (= var275528 temp100015_38))
(assert (= temp100015_40 #x0000000000000000))
(assert (= temp100015_39 temp100015_40))
(assert (= temp100015_41 #x0000000000000001))
(assert (= var472118 temp100015_41))
(assert (= temp100015_42 #x0000000000000001))
(assert (= var472136
   (ite (bvslt var472118 temp100015_42) #x0000000000000001 #x0000000000000000)))
(assert (= temp100015_43 #x0000000000000000))
(assert (= var472136 temp100015_43))
(assert (= temp100015_45 #x0000000000000000))
(assert (= temp100015_44 temp100015_45))
(assert (= temp100015_46 #x0000000000000001))
(assert (= var668726 temp100015_46))
(assert (= temp100015_47 #x0000000000000001))
(assert (= var668744
   (ite (bvslt var668726 temp100015_47) #x0000000000000001 #x0000000000000000)))
(assert (= temp100015_48 #x0000000000000000))
(assert (= var668744 temp100015_48))
(assert (= temp100015_50 #x0000000000000000))
(assert (= temp100015_49 temp100015_50))
(assert (= temp100015_52 #x0000000000000000))
(assert (= temp100015_51 temp100015_52))
(assert (= temp100015_54 #x00000000000000ff))
(assert (= temp100015_53 temp100015_54))
(assert (= temp100015_56 #x00000000000000ff))
(assert (= temp100015_55 temp100015_56))
(assert (= temp100015_58 #x00000000000000ff))
(assert (= temp100015_57 temp100015_58))
(assert (= temp100015_59 #x0000000000000000))
(assert (= var861259 temp100015_59))
(assert (= var861238 var861259))
(assert (= var795670 var861238))
(assert (= temp100015_60 #x0000000000000000))
(assert (= var795670 temp100015_60))
(assert (= temp100015_61 #x0000000000000000))
(assert (= var926795 temp100015_61))
(assert (= var926774 var926795))
(assert (= var795680 var926774))
(assert (= temp100015_62 #x0000000000000000))
(assert (= var795680 temp100015_62))
(assert (= temp100015_64 #x0000000000000000))
(assert (= temp100015_63 temp100015_64))
(assert (= temp100015_66 #x0000000000000000))
(assert (= temp100015_65 temp100015_66))
(assert (= temp100015_68 #x0000000000000000))
(assert (= temp100015_67 temp100015_68))
(assert (= temp100015_69 #x0000000000008000))
(assert (= var1123378 temp100015_69))
(assert (= temp100015_70 #x0000000000000001))
(assert (= var1123379
   (ite (bvslt temp100015_67 temp100015_70)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1123380 (ite (= var1123379 #x0000000000000001) var1123378 temp100015_67)))
(assert (= var1123376 var1123380))
(assert (= var730076 var1123376))
(assert (= temp100015_71 #x0000000000040000))
(assert (= var1188914 temp100015_71))
(assert (= temp100015_72 #x0000000000000001))
(assert (= var1188915
   (ite (bvslt temp100015_65 temp100015_72)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1188916 (ite (= var1188915 #x0000000000000001) var1188914 temp100015_65)))
(assert (= var1188912 var1188916))
(assert (= var730083 var1188912))
(assert (= temp100015_73 #x0000000000200000))
(assert (= var1254450 temp100015_73))
(assert (= temp100015_74 #x0000000000000001))
(assert (= var1254451
   (ite (bvslt temp100015_63 temp100015_74)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1254452 (ite (= var1254451 #x0000000000000001) var1254450 temp100015_63)))
(assert (= var1254448 var1254452))
(assert (= var730088 var1254448))
(assert (= var78095 var730088))
(assert (= temp100015_75 #x0000000000000003))
(assert (= temp100015_76 #xffffffffffffffff))
(assert (= var78179 (bvadd var78096 temp100015_76)))
(model-add temp100015_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp100015_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


