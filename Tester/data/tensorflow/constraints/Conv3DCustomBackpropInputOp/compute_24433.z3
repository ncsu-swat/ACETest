(declare-fun temp36642_1 () (_ BitVec 64))
(declare-fun temp36642_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp36642_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp36642_4 () (_ BitVec 64))
(declare-fun temp36642_5 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp36642_6 () (_ BitVec 64))
(declare-fun temp36642_7 () (_ BitVec 64))
(declare-fun temp36642_8 () (_ BitVec 64))
(declare-fun temp36642_9 () (_ BitVec 64))
(declare-fun temp36642_10 () (_ BitVec 64))
(declare-fun temp36642_11 () (_ BitVec 64))
(declare-fun temp36642_12 () (_ BitVec 64))
(declare-fun temp36642_13 () (_ BitVec 64))
(declare-fun temp36642_14 () (_ BitVec 64))
(declare-fun temp36642_15 () (_ BitVec 64))
(declare-fun temp36642_16 () (_ BitVec 64))
(declare-fun temp36642_17 () (_ BitVec 64))
(declare-fun temp36642_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp36642_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp36642_20 () (_ BitVec 64))
(declare-fun temp36642_21 () (_ BitVec 64))
(declare-fun temp36642_22 () (_ BitVec 64))
(declare-fun temp36642_23 () (_ BitVec 64))
(declare-fun temp36642_24 () (_ BitVec 64))
(declare-fun temp36642_25 () (_ BitVec 64))
(declare-fun temp36642_26 () (_ BitVec 64))
(declare-fun temp36642_27 () (_ BitVec 64))
(declare-fun temp36642_28 () (_ BitVec 64))
(declare-fun temp36642_29 () (_ BitVec 64))
(declare-fun temp36642_30 () (_ BitVec 64))
(declare-fun temp36642_31 () (_ BitVec 64))
(declare-fun temp36642_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp36642_33 () (_ BitVec 64))
(declare-fun temp36642_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp36642_35 () (_ BitVec 64))
(declare-fun temp36642_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp36642_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp36642_38 () (_ BitVec 64))
(declare-fun temp36642_40 () (_ BitVec 64))
(declare-fun temp36642_39 () (_ BitVec 64))
(declare-fun temp36642_42 () (_ BitVec 64))
(declare-fun temp36642_41 () (_ BitVec 64))
(declare-fun temp36642_43 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp36642_44 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp36642_45 () (_ BitVec 64))
(declare-fun temp36642_47 () (_ BitVec 64))
(declare-fun temp36642_46 () (_ BitVec 64))
(declare-fun temp36642_49 () (_ BitVec 64))
(declare-fun temp36642_48 () (_ BitVec 64))
(declare-fun temp36642_50 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp36642_51 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp36642_52 () (_ BitVec 64))
(declare-fun temp36642_54 () (_ BitVec 64))
(declare-fun temp36642_53 () (_ BitVec 64))
(declare-fun temp36642_56 () (_ BitVec 64))
(declare-fun temp36642_55 () (_ BitVec 64))
(declare-fun temp36642_58 () (_ BitVec 64))
(declare-fun temp36642_57 () (_ BitVec 64))
(declare-fun temp36642_59 () (_ BitVec 64))
(declare-fun var795723 () (_ BitVec 64))
(declare-fun var795702 () (_ BitVec 64))
(declare-fun var664608 () (_ BitVec 64))
(declare-fun temp36642_60 () (_ BitVec 64))
(declare-fun temp36642_61 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp36642_62 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp36642_63 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp36642_64 () (_ BitVec 64))
(declare-fun var78184 () (_ BitVec 64))
(declare-fun temp36642_66 () (_ BitVec 64))
(declare-fun temp36642_65 () (_ BitVec 64))
(declare-fun temp36642_68 () (_ BitVec 64))
(declare-fun temp36642_67 () (_ BitVec 64))
(declare-fun temp36642_69 () (_ BitVec 64))
(declare-fun var78544 () (_ BitVec 64))
(declare-fun temp36642_70 () (_ BitVec 64))
(declare-fun var78545 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp36642_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_filter_NAMEEND_DIM temp36642_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp36642_2 #x0000000000000001))
(assert (= var77740 temp36642_2))
(assert (= temp36642_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp36642_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp36642_4 #x0000000000000001))
(assert (= var77770 temp36642_4))
(assert (= temp36642_5 #x0000000000000000))
(assert (= temp36642_6 (select ARGNAME_filter_NAMEEND_DIMSIZE temp36642_5)))
(assert (= temp36642_7 #x0000000000000001))
(assert (= temp36642_8 (select ARGNAME_filter_NAMEEND_DIMSIZE temp36642_7)))
(assert (= temp36642_9 #x0000000000000002))
(assert (= temp36642_10 (select ARGNAME_filter_NAMEEND_DIMSIZE temp36642_9)))
(assert (= temp36642_11 #x0000000000000003))
(assert (= temp36642_12 (select ARGNAME_filter_NAMEEND_DIMSIZE temp36642_11)))
(assert (= temp36642_13 #x0000000000000004))
(assert (= temp36642_14 (select ARGNAME_filter_NAMEEND_DIMSIZE temp36642_13)))
(assert (= temp36642_15 #x0000000000000005))
(assert (= temp36642_16 (select ARGNAME_filter_NAMEEND_DIMSIZE temp36642_15)))
(assert (= temp36642_17 #x0000000000000003))
(assert (= temp36642_18 (select ARGNAME_filter_NAMEEND_DIMSIZE temp36642_17)))
(assert (= var77799 temp36642_18))
(assert (= temp36642_19 #x0000000000000000))
(assert (= temp36642_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp36642_19)))
(assert (= temp36642_21 #x0000000000000001))
(assert (= temp36642_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp36642_21)))
(assert (= temp36642_23 #x0000000000000002))
(assert (= temp36642_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp36642_23)))
(assert (= temp36642_25 #x0000000000000003))
(assert (= temp36642_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp36642_25)))
(assert (= temp36642_27 #x0000000000000004))
(assert (= temp36642_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp36642_27)))
(assert (= temp36642_29 #x0000000000000005))
(assert (= temp36642_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp36642_29)))
(assert (= temp36642_31 #x0000000000000004))
(assert (= temp36642_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp36642_31)))
(assert (= var77832 temp36642_32))
(assert (= temp36642_33 #x0000000000000004))
(assert (= temp36642_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp36642_33)))
(assert (= var77833 temp36642_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp36642_35 #x0000000000000001))
(assert (= var77834 temp36642_35))
(assert (= temp36642_36 #x0000000000000001))
(assert (= var275510 temp36642_36))
(assert (= temp36642_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp36642_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp36642_38 #x0000000000000000))
(assert (= var275528 temp36642_38))
(assert (= temp36642_40 #x0000000000000000))
(assert (= temp36642_39 temp36642_40))
(assert (= temp36642_42 #x0000000000000000))
(assert (= temp36642_41 temp36642_42))
(assert (= temp36642_43 #x0000000000000001))
(assert (= var406582 temp36642_43))
(assert (= temp36642_44 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp36642_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp36642_45 #x0000000000000000))
(assert (= var406600 temp36642_45))
(assert (= temp36642_47 #x0000000000000000))
(assert (= temp36642_46 temp36642_47))
(assert (= temp36642_49 #x0000000000000000))
(assert (= temp36642_48 temp36642_49))
(assert (= temp36642_50 #x0000000000000001))
(assert (= var537654 temp36642_50))
(assert (= temp36642_51 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp36642_51) #x0000000000000001 #x0000000000000000)))
(assert (= temp36642_52 #x0000000000000000))
(assert (= var537672 temp36642_52))
(assert (= temp36642_54 #x00000000000000ff))
(assert (= temp36642_53 temp36642_54))
(assert (= temp36642_56 #x00000000000000ff))
(assert (= temp36642_55 temp36642_56))
(assert (= temp36642_58 #x00000000000000ff))
(assert (= temp36642_57 temp36642_58))
(assert (= temp36642_59 #x0000000000000000))
(assert (= var795723 temp36642_59))
(assert (= var795702 var795723))
(assert (= var664608 var795702))
(assert (= temp36642_60 #x0000000000000000))
(assert (= var664608 temp36642_60))
(assert (= temp36642_61 #x0000000000008000))
(assert (= var1057842 temp36642_61))
(assert (= temp36642_62 #x0000000000040000))
(assert (= var1123378 temp36642_62))
(assert (= temp36642_63 #x0000000000200000))
(assert (= var1188914 temp36642_63))
(assert (= temp36642_64 #x0000000000000001))
(assert (= var78184 temp36642_64))
(assert (= temp36642_66 #x0000000000000001))
(assert (= temp36642_65 temp36642_66))
(assert (= temp36642_68 #x0000000000000001))
(assert (= temp36642_67 temp36642_68))
(assert (= temp36642_69 #x0000000000000000))
(assert (= var78544 temp36642_69))
(assert (= temp36642_70 #x0000000000000001))
(assert (= var78545 (bvadd var78544 temp36642_70)))
(model-add temp36642_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp36642_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


