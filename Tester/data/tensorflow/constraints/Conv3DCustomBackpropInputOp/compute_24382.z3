(declare-fun temp36591_1 () (_ BitVec 64))
(declare-fun temp36591_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp36591_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp36591_4 () (_ BitVec 64))
(declare-fun temp36591_5 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp36591_6 () (_ BitVec 64))
(declare-fun temp36591_7 () (_ BitVec 64))
(declare-fun temp36591_8 () (_ BitVec 64))
(declare-fun temp36591_9 () (_ BitVec 64))
(declare-fun temp36591_10 () (_ BitVec 64))
(declare-fun temp36591_11 () (_ BitVec 64))
(declare-fun temp36591_12 () (_ BitVec 64))
(declare-fun temp36591_13 () (_ BitVec 64))
(declare-fun temp36591_14 () (_ BitVec 64))
(declare-fun temp36591_15 () (_ BitVec 64))
(declare-fun temp36591_16 () (_ BitVec 64))
(declare-fun temp36591_17 () (_ BitVec 64))
(declare-fun temp36591_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp36591_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp36591_20 () (_ BitVec 64))
(declare-fun temp36591_21 () (_ BitVec 64))
(declare-fun temp36591_22 () (_ BitVec 64))
(declare-fun temp36591_23 () (_ BitVec 64))
(declare-fun temp36591_24 () (_ BitVec 64))
(declare-fun temp36591_25 () (_ BitVec 64))
(declare-fun temp36591_26 () (_ BitVec 64))
(declare-fun temp36591_27 () (_ BitVec 64))
(declare-fun temp36591_28 () (_ BitVec 64))
(declare-fun temp36591_29 () (_ BitVec 64))
(declare-fun temp36591_30 () (_ BitVec 64))
(declare-fun temp36591_31 () (_ BitVec 64))
(declare-fun temp36591_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp36591_33 () (_ BitVec 64))
(declare-fun temp36591_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp36591_35 () (_ BitVec 64))
(declare-fun temp36591_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp36591_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp36591_38 () (_ BitVec 64))
(declare-fun temp36591_40 () (_ BitVec 64))
(declare-fun temp36591_39 () (_ BitVec 64))
(declare-fun temp36591_42 () (_ BitVec 64))
(declare-fun temp36591_41 () (_ BitVec 64))
(declare-fun temp36591_43 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp36591_44 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp36591_45 () (_ BitVec 64))
(declare-fun temp36591_47 () (_ BitVec 64))
(declare-fun temp36591_46 () (_ BitVec 64))
(declare-fun temp36591_49 () (_ BitVec 64))
(declare-fun temp36591_48 () (_ BitVec 64))
(declare-fun temp36591_50 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp36591_51 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp36591_52 () (_ BitVec 64))
(declare-fun temp36591_54 () (_ BitVec 64))
(declare-fun temp36591_53 () (_ BitVec 64))
(declare-fun temp36591_56 () (_ BitVec 64))
(declare-fun temp36591_55 () (_ BitVec 64))
(declare-fun temp36591_58 () (_ BitVec 64))
(declare-fun temp36591_57 () (_ BitVec 64))
(declare-fun temp36591_59 () (_ BitVec 64))
(declare-fun var795723 () (_ BitVec 64))
(declare-fun var795702 () (_ BitVec 64))
(declare-fun var664608 () (_ BitVec 64))
(declare-fun temp36591_60 () (_ BitVec 64))
(declare-fun temp36591_61 () (_ BitVec 64))
(declare-fun var861259 () (_ BitVec 64))
(declare-fun var861238 () (_ BitVec 64))
(declare-fun var664611 () (_ BitVec 64))
(declare-fun temp36591_62 () (_ BitVec 64))
(declare-fun temp36591_63 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp36591_64 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp36591_65 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp36591_66 () (_ BitVec 64))
(declare-fun var78184 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp36591_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_filter_NAMEEND_DIM temp36591_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp36591_2 #x0000000000000001))
(assert (= var77740 temp36591_2))
(assert (= temp36591_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp36591_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp36591_4 #x0000000000000001))
(assert (= var77770 temp36591_4))
(assert (= temp36591_5 #x0000000000000000))
(assert (= temp36591_6 (select ARGNAME_filter_NAMEEND_DIMSIZE temp36591_5)))
(assert (= temp36591_7 #x0000000000000001))
(assert (= temp36591_8 (select ARGNAME_filter_NAMEEND_DIMSIZE temp36591_7)))
(assert (= temp36591_9 #x0000000000000002))
(assert (= temp36591_10 (select ARGNAME_filter_NAMEEND_DIMSIZE temp36591_9)))
(assert (= temp36591_11 #x0000000000000003))
(assert (= temp36591_12 (select ARGNAME_filter_NAMEEND_DIMSIZE temp36591_11)))
(assert (= temp36591_13 #x0000000000000004))
(assert (= temp36591_14 (select ARGNAME_filter_NAMEEND_DIMSIZE temp36591_13)))
(assert (= temp36591_15 #x0000000000000005))
(assert (= temp36591_16 (select ARGNAME_filter_NAMEEND_DIMSIZE temp36591_15)))
(assert (= temp36591_17 #x0000000000000003))
(assert (= temp36591_18 (select ARGNAME_filter_NAMEEND_DIMSIZE temp36591_17)))
(assert (= var77799 temp36591_18))
(assert (= temp36591_19 #x0000000000000000))
(assert (= temp36591_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp36591_19)))
(assert (= temp36591_21 #x0000000000000001))
(assert (= temp36591_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp36591_21)))
(assert (= temp36591_23 #x0000000000000002))
(assert (= temp36591_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp36591_23)))
(assert (= temp36591_25 #x0000000000000003))
(assert (= temp36591_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp36591_25)))
(assert (= temp36591_27 #x0000000000000004))
(assert (= temp36591_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp36591_27)))
(assert (= temp36591_29 #x0000000000000005))
(assert (= temp36591_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp36591_29)))
(assert (= temp36591_31 #x0000000000000004))
(assert (= temp36591_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp36591_31)))
(assert (= var77832 temp36591_32))
(assert (= temp36591_33 #x0000000000000004))
(assert (= temp36591_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp36591_33)))
(assert (= var77833 temp36591_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp36591_35 #x0000000000000001))
(assert (= var77834 temp36591_35))
(assert (= temp36591_36 #x0000000000000001))
(assert (= var275510 temp36591_36))
(assert (= temp36591_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp36591_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp36591_38 #x0000000000000000))
(assert (= var275528 temp36591_38))
(assert (= temp36591_40 #x0000000000000000))
(assert (= temp36591_39 temp36591_40))
(assert (= temp36591_42 #x0000000000000000))
(assert (= temp36591_41 temp36591_42))
(assert (= temp36591_43 #x0000000000000001))
(assert (= var406582 temp36591_43))
(assert (= temp36591_44 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp36591_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp36591_45 #x0000000000000000))
(assert (= var406600 temp36591_45))
(assert (= temp36591_47 #x0000000000000000))
(assert (= temp36591_46 temp36591_47))
(assert (= temp36591_49 #x0000000000000000))
(assert (= temp36591_48 temp36591_49))
(assert (= temp36591_50 #x0000000000000001))
(assert (= var537654 temp36591_50))
(assert (= temp36591_51 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp36591_51) #x0000000000000001 #x0000000000000000)))
(assert (= temp36591_52 #x0000000000000000))
(assert (= var537672 temp36591_52))
(assert (= temp36591_54 #x00000000000000ff))
(assert (= temp36591_53 temp36591_54))
(assert (= temp36591_56 #x00000000000000ff))
(assert (= temp36591_55 temp36591_56))
(assert (= temp36591_58 #x00000000000000ff))
(assert (= temp36591_57 temp36591_58))
(assert (= temp36591_59 #x0000000000000000))
(assert (= var795723 temp36591_59))
(assert (= var795702 var795723))
(assert (= var664608 var795702))
(assert (= temp36591_60 #x0000000000000000))
(assert (= var664608 temp36591_60))
(assert (= temp36591_61 #x0000000000000000))
(assert (= var861259 temp36591_61))
(assert (= var861238 var861259))
(assert (= var664611 var861238))
(assert (= temp36591_62 #x0000000000000000))
(assert (= var664611 temp36591_62))
(assert (= temp36591_63 #x0000000000008000))
(assert (= var1057842 temp36591_63))
(assert (= temp36591_64 #x0000000000040000))
(assert (= var1123378 temp36591_64))
(assert (= temp36591_65 #x0000000000200000))
(assert (= var1188914 temp36591_65))
(assert (= temp36591_66 #x0000000000000001))
(assert (= var78184 temp36591_66))
(model-add temp36591_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp36591_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


