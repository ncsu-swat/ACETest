(declare-fun temp58068_1 () (_ BitVec 64))
(declare-fun temp58068_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp58068_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp58068_4 () (_ BitVec 64))
(declare-fun temp58068_5 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp58068_6 () (_ BitVec 64))
(declare-fun temp58068_7 () (_ BitVec 64))
(declare-fun temp58068_8 () (_ BitVec 64))
(declare-fun temp58068_9 () (_ BitVec 64))
(declare-fun temp58068_10 () (_ BitVec 64))
(declare-fun temp58068_11 () (_ BitVec 64))
(declare-fun temp58068_12 () (_ BitVec 64))
(declare-fun temp58068_13 () (_ BitVec 64))
(declare-fun temp58068_14 () (_ BitVec 64))
(declare-fun temp58068_15 () (_ BitVec 64))
(declare-fun temp58068_16 () (_ BitVec 64))
(declare-fun temp58068_17 () (_ BitVec 64))
(declare-fun temp58068_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp58068_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp58068_20 () (_ BitVec 64))
(declare-fun temp58068_21 () (_ BitVec 64))
(declare-fun temp58068_22 () (_ BitVec 64))
(declare-fun temp58068_23 () (_ BitVec 64))
(declare-fun temp58068_24 () (_ BitVec 64))
(declare-fun temp58068_25 () (_ BitVec 64))
(declare-fun temp58068_26 () (_ BitVec 64))
(declare-fun temp58068_27 () (_ BitVec 64))
(declare-fun temp58068_28 () (_ BitVec 64))
(declare-fun temp58068_29 () (_ BitVec 64))
(declare-fun temp58068_30 () (_ BitVec 64))
(declare-fun temp58068_31 () (_ BitVec 64))
(declare-fun temp58068_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp58068_33 () (_ BitVec 64))
(declare-fun temp58068_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp58068_35 () (_ BitVec 64))
(declare-fun temp58068_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp58068_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp58068_38 () (_ BitVec 64))
(declare-fun temp58068_39 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp58068_40 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp58068_41 () (_ BitVec 64))
(declare-fun temp58068_42 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp58068_43 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp58068_44 () (_ BitVec 64))
(declare-fun temp58068_46 () (_ BitVec 64))
(declare-fun temp58068_45 () (_ BitVec 64))
(declare-fun temp58068_48 () (_ BitVec 64))
(declare-fun temp58068_47 () (_ BitVec 64))
(declare-fun temp58068_50 () (_ BitVec 64))
(declare-fun temp58068_49 () (_ BitVec 64))
(declare-fun temp58068_52 () (_ BitVec 64))
(declare-fun temp58068_51 () (_ BitVec 64))
(declare-fun temp58068_53 () (_ BitVec 64))
(declare-fun var795723 () (_ BitVec 64))
(declare-fun var795702 () (_ BitVec 64))
(declare-fun var730134 () (_ BitVec 64))
(declare-fun temp58068_54 () (_ BitVec 64))
(declare-fun temp58068_56 () (_ BitVec 64))
(declare-fun temp58068_55 () (_ BitVec 64))
(declare-fun temp58068_58 () (_ BitVec 64))
(declare-fun temp58068_57 () (_ BitVec 64))
(declare-fun temp58068_60 () (_ BitVec 64))
(declare-fun temp58068_59 () (_ BitVec 64))
(declare-fun temp58068_61 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp58068_62 () (_ BitVec 64))
(declare-fun var1057843 () (_ BitVec 64))
(declare-fun var1057844 () (_ BitVec 64))
(declare-fun var1057840 () (_ BitVec 64))
(declare-fun var664540 () (_ BitVec 64))
(declare-fun temp58068_63 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp58068_64 () (_ BitVec 64))
(declare-fun var1123379 () (_ BitVec 64))
(declare-fun var1123380 () (_ BitVec 64))
(declare-fun var1123376 () (_ BitVec 64))
(declare-fun var664547 () (_ BitVec 64))
(declare-fun temp58068_65 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp58068_66 () (_ BitVec 64))
(declare-fun var1188915 () (_ BitVec 64))
(declare-fun var1188916 () (_ BitVec 64))
(declare-fun var1188912 () (_ BitVec 64))
(declare-fun var664552 () (_ BitVec 64))
(declare-fun var78095 () (_ BitVec 64))
(declare-fun temp58068_67 () (_ BitVec 64))
(declare-fun temp58068_68 () (_ BitVec 64))
(declare-fun var78096 () (_ BitVec 64))
(declare-fun var78179 () (_ BitVec 64))
(declare-fun temp58068_70 () (_ BitVec 64))
(declare-fun temp58068_69 () (_ BitVec 64))
(declare-fun temp58068_72 () (_ BitVec 64))
(declare-fun temp58068_71 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp58068_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_filter_NAMEEND_DIM temp58068_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp58068_2 #x0000000000000001))
(assert (= var77740 temp58068_2))
(assert (= temp58068_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp58068_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp58068_4 #x0000000000000001))
(assert (= var77770 temp58068_4))
(assert (= temp58068_5 #x0000000000000000))
(assert (= temp58068_6 (select ARGNAME_filter_NAMEEND_DIMSIZE temp58068_5)))
(assert (= temp58068_7 #x0000000000000001))
(assert (= temp58068_8 (select ARGNAME_filter_NAMEEND_DIMSIZE temp58068_7)))
(assert (= temp58068_9 #x0000000000000002))
(assert (= temp58068_10 (select ARGNAME_filter_NAMEEND_DIMSIZE temp58068_9)))
(assert (= temp58068_11 #x0000000000000003))
(assert (= temp58068_12 (select ARGNAME_filter_NAMEEND_DIMSIZE temp58068_11)))
(assert (= temp58068_13 #x0000000000000004))
(assert (= temp58068_14 (select ARGNAME_filter_NAMEEND_DIMSIZE temp58068_13)))
(assert (= temp58068_15 #x0000000000000005))
(assert (= temp58068_16 (select ARGNAME_filter_NAMEEND_DIMSIZE temp58068_15)))
(assert (= temp58068_17 #x0000000000000003))
(assert (= temp58068_18 (select ARGNAME_filter_NAMEEND_DIMSIZE temp58068_17)))
(assert (= var77799 temp58068_18))
(assert (= temp58068_19 #x0000000000000000))
(assert (= temp58068_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp58068_19)))
(assert (= temp58068_21 #x0000000000000001))
(assert (= temp58068_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp58068_21)))
(assert (= temp58068_23 #x0000000000000002))
(assert (= temp58068_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp58068_23)))
(assert (= temp58068_25 #x0000000000000003))
(assert (= temp58068_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp58068_25)))
(assert (= temp58068_27 #x0000000000000004))
(assert (= temp58068_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp58068_27)))
(assert (= temp58068_29 #x0000000000000005))
(assert (= temp58068_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp58068_29)))
(assert (= temp58068_31 #x0000000000000004))
(assert (= temp58068_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp58068_31)))
(assert (= var77832 temp58068_32))
(assert (= temp58068_33 #x0000000000000004))
(assert (= temp58068_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp58068_33)))
(assert (= var77833 temp58068_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp58068_35 #x0000000000000001))
(assert (= var77834 temp58068_35))
(assert (= temp58068_36 #x0000000000000001))
(assert (= var275510 temp58068_36))
(assert (= temp58068_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp58068_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp58068_38 #x0000000000000000))
(assert (= var275528 temp58068_38))
(assert (= temp58068_39 #x0000000000000001))
(assert (= var406582 temp58068_39))
(assert (= temp58068_40 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp58068_40) #x0000000000000001 #x0000000000000000)))
(assert (= temp58068_41 #x0000000000000000))
(assert (= var406600 temp58068_41))
(assert (= temp58068_42 #x0000000000000001))
(assert (= var537654 temp58068_42))
(assert (= temp58068_43 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp58068_43) #x0000000000000001 #x0000000000000000)))
(assert (= temp58068_44 #x0000000000000000))
(assert (= var537672 temp58068_44))
(assert (= temp58068_46 #x0000000000000000))
(assert (= temp58068_45 temp58068_46))
(assert (= temp58068_48 #x00000000000000ff))
(assert (= temp58068_47 temp58068_48))
(assert (= temp58068_50 #x00000000000000ff))
(assert (= temp58068_49 temp58068_50))
(assert (= temp58068_52 #x00000000000000ff))
(assert (= temp58068_51 temp58068_52))
(assert (= temp58068_53 #x0000000000000000))
(assert (= var795723 temp58068_53))
(assert (= var795702 var795723))
(assert (= var730134 var795702))
(assert (= temp58068_54 #x0000000000000000))
(assert (= var730134 temp58068_54))
(assert (= temp58068_56 #x0000000000000000))
(assert (= temp58068_55 temp58068_56))
(assert (= temp58068_58 #x0000000000000000))
(assert (= temp58068_57 temp58068_58))
(assert (= temp58068_60 #x0000000000000000))
(assert (= temp58068_59 temp58068_60))
(assert (= temp58068_61 #x0000000000008000))
(assert (= var1057842 temp58068_61))
(assert (= temp58068_62 #x0000000000000001))
(assert (= var1057843
   (ite (bvslt temp58068_59 temp58068_62) #x0000000000000001 #x0000000000000000)))
(assert (= var1057844 (ite (= var1057843 #x0000000000000001) var1057842 temp58068_59)))
(assert (= var1057840 var1057844))
(assert (= var664540 var1057840))
(assert (= temp58068_63 #x0000000000040000))
(assert (= var1123378 temp58068_63))
(assert (= temp58068_64 #x0000000000000001))
(assert (= var1123379
   (ite (bvslt temp58068_57 temp58068_64) #x0000000000000001 #x0000000000000000)))
(assert (= var1123380 (ite (= var1123379 #x0000000000000001) var1123378 temp58068_57)))
(assert (= var1123376 var1123380))
(assert (= var664547 var1123376))
(assert (= temp58068_65 #x0000000000200000))
(assert (= var1188914 temp58068_65))
(assert (= temp58068_66 #x0000000000000001))
(assert (= var1188915
   (ite (bvslt temp58068_55 temp58068_66) #x0000000000000001 #x0000000000000000)))
(assert (= var1188916 (ite (= var1188915 #x0000000000000001) var1188914 temp58068_55)))
(assert (= var1188912 var1188916))
(assert (= var664552 var1188912))
(assert (= var78095 var664552))
(assert (= temp58068_67 #x0000000000000003))
(assert (= temp58068_68 #xffffffffffffffff))
(assert (= var78179 (bvadd var78096 temp58068_68)))
(assert (= temp58068_70 #x0000000000000001))
(assert (= temp58068_69 temp58068_70))
(assert (= temp58068_72 #x0000000000000001))
(assert (= temp58068_71 temp58068_72))
(model-add temp58068_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp58068_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


