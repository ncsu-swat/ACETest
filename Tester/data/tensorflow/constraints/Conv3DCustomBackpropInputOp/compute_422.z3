(declare-fun temp642_1 () (_ BitVec 64))
(declare-fun temp642_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp642_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp642_4 () (_ BitVec 64))
(declare-fun temp642_5 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp642_6 () (_ BitVec 64))
(declare-fun temp642_7 () (_ BitVec 64))
(declare-fun temp642_8 () (_ BitVec 64))
(declare-fun temp642_9 () (_ BitVec 64))
(declare-fun temp642_10 () (_ BitVec 64))
(declare-fun temp642_11 () (_ BitVec 64))
(declare-fun temp642_12 () (_ BitVec 64))
(declare-fun temp642_13 () (_ BitVec 64))
(declare-fun temp642_14 () (_ BitVec 64))
(declare-fun temp642_15 () (_ BitVec 64))
(declare-fun temp642_16 () (_ BitVec 64))
(declare-fun temp642_17 () (_ BitVec 64))
(declare-fun temp642_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp642_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp642_20 () (_ BitVec 64))
(declare-fun temp642_21 () (_ BitVec 64))
(declare-fun temp642_22 () (_ BitVec 64))
(declare-fun temp642_23 () (_ BitVec 64))
(declare-fun temp642_24 () (_ BitVec 64))
(declare-fun temp642_25 () (_ BitVec 64))
(declare-fun temp642_26 () (_ BitVec 64))
(declare-fun temp642_27 () (_ BitVec 64))
(declare-fun temp642_28 () (_ BitVec 64))
(declare-fun temp642_29 () (_ BitVec 64))
(declare-fun temp642_30 () (_ BitVec 64))
(declare-fun temp642_31 () (_ BitVec 64))
(declare-fun temp642_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp642_33 () (_ BitVec 64))
(declare-fun temp642_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp642_35 () (_ BitVec 64))
(declare-fun temp642_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp642_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp642_38 () (_ BitVec 64))
(declare-fun temp642_39 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp642_40 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp642_41 () (_ BitVec 64))
(declare-fun temp642_42 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp642_43 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp642_44 () (_ BitVec 64))
(declare-fun temp642_46 () (_ BitVec 64))
(declare-fun temp642_45 () (_ BitVec 64))
(declare-fun temp642_48 () (_ BitVec 64))
(declare-fun temp642_47 () (_ BitVec 64))
(declare-fun temp642_50 () (_ BitVec 64))
(declare-fun temp642_49 () (_ BitVec 64))
(declare-fun temp642_51 () (_ BitVec 64))
(declare-fun var730187 () (_ BitVec 64))
(declare-fun var730166 () (_ BitVec 64))
(declare-fun var664598 () (_ BitVec 64))
(declare-fun temp642_52 () (_ BitVec 64))
(declare-fun temp642_53 () (_ BitVec 64))
(declare-fun var795723 () (_ BitVec 64))
(declare-fun var795702 () (_ BitVec 64))
(declare-fun var664608 () (_ BitVec 64))
(declare-fun temp642_54 () (_ BitVec 64))
(declare-fun temp642_55 () (_ BitVec 64))
(declare-fun var861259 () (_ BitVec 64))
(declare-fun var861238 () (_ BitVec 64))
(declare-fun var664611 () (_ BitVec 64))
(declare-fun temp642_56 () (_ BitVec 64))
(declare-fun temp642_57 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp642_58 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp642_59 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp642_61 () (_ BitVec 64))
(declare-fun temp642_60 () (_ BitVec 64))
(declare-fun temp642_63 () (_ BitVec 64))
(declare-fun temp642_62 () (_ BitVec 64))
(declare-fun temp642_64 () (_ BitVec 64))
(declare-fun var78544 () (_ BitVec 64))
(declare-fun temp642_65 () (_ BitVec 64))
(declare-fun var78545 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp642_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_filter_NAMEEND_DIM temp642_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_2 #x0000000000000001))
(assert (= var77740 temp642_2))
(assert (= temp642_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp642_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp642_4 #x0000000000000001))
(assert (= var77770 temp642_4))
(assert (= temp642_5 #x0000000000000000))
(assert (= temp642_6 (select ARGNAME_filter_NAMEEND_DIMSIZE temp642_5)))
(assert (= temp642_7 #x0000000000000001))
(assert (= temp642_8 (select ARGNAME_filter_NAMEEND_DIMSIZE temp642_7)))
(assert (= temp642_9 #x0000000000000002))
(assert (= temp642_10 (select ARGNAME_filter_NAMEEND_DIMSIZE temp642_9)))
(assert (= temp642_11 #x0000000000000003))
(assert (= temp642_12 (select ARGNAME_filter_NAMEEND_DIMSIZE temp642_11)))
(assert (= temp642_13 #x0000000000000004))
(assert (= temp642_14 (select ARGNAME_filter_NAMEEND_DIMSIZE temp642_13)))
(assert (= temp642_15 #x0000000000000005))
(assert (= temp642_16 (select ARGNAME_filter_NAMEEND_DIMSIZE temp642_15)))
(assert (= temp642_17 #x0000000000000003))
(assert (= temp642_18 (select ARGNAME_filter_NAMEEND_DIMSIZE temp642_17)))
(assert (= var77799 temp642_18))
(assert (= temp642_19 #x0000000000000000))
(assert (= temp642_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp642_19)))
(assert (= temp642_21 #x0000000000000001))
(assert (= temp642_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp642_21)))
(assert (= temp642_23 #x0000000000000002))
(assert (= temp642_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp642_23)))
(assert (= temp642_25 #x0000000000000003))
(assert (= temp642_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp642_25)))
(assert (= temp642_27 #x0000000000000004))
(assert (= temp642_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp642_27)))
(assert (= temp642_29 #x0000000000000005))
(assert (= temp642_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp642_29)))
(assert (= temp642_31 #x0000000000000004))
(assert (= temp642_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp642_31)))
(assert (= var77832 temp642_32))
(assert (= temp642_33 #x0000000000000004))
(assert (= temp642_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp642_33)))
(assert (= var77833 temp642_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp642_35 #x0000000000000001))
(assert (= var77834 temp642_35))
(assert (= temp642_36 #x0000000000000001))
(assert (= var275510 temp642_36))
(assert (= temp642_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp642_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp642_38 #x0000000000000000))
(assert (= var275528 temp642_38))
(assert (= temp642_39 #x0000000000000001))
(assert (= var406582 temp642_39))
(assert (= temp642_40 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp642_40) #x0000000000000001 #x0000000000000000)))
(assert (= temp642_41 #x0000000000000000))
(assert (= var406600 temp642_41))
(assert (= temp642_42 #x0000000000000001))
(assert (= var537654 temp642_42))
(assert (= temp642_43 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp642_43) #x0000000000000001 #x0000000000000000)))
(assert (= temp642_44 #x0000000000000000))
(assert (= var537672 temp642_44))
(assert (= temp642_46 #x00000000000000ff))
(assert (= temp642_45 temp642_46))
(assert (= temp642_48 #x00000000000000ff))
(assert (= temp642_47 temp642_48))
(assert (= temp642_50 #x00000000000000ff))
(assert (= temp642_49 temp642_50))
(assert (= temp642_51 #x0000000000000000))
(assert (= var730187 temp642_51))
(assert (= var730166 var730187))
(assert (= var664598 var730166))
(assert (= temp642_52 #x0000000000000000))
(assert (= var664598 temp642_52))
(assert (= temp642_53 #x0000000000000000))
(assert (= var795723 temp642_53))
(assert (= var795702 var795723))
(assert (= var664608 var795702))
(assert (= temp642_54 #x0000000000000000))
(assert (= var664608 temp642_54))
(assert (= temp642_55 #x0000000000000000))
(assert (= var861259 temp642_55))
(assert (= var861238 var861259))
(assert (= var664611 var861238))
(assert (= temp642_56 #x0000000000000000))
(assert (= var664611 temp642_56))
(assert (= temp642_57 #x0000000000008000))
(assert (= var1057842 temp642_57))
(assert (= temp642_58 #x0000000000040000))
(assert (= var1123378 temp642_58))
(assert (= temp642_59 #x0000000000200000))
(assert (= var1188914 temp642_59))
(assert (= temp642_61 #x0000000000000001))
(assert (= temp642_60 temp642_61))
(assert (= temp642_63 #x0000000000000001))
(assert (= temp642_62 temp642_63))
(assert (= temp642_64 #x0000000000000000))
(assert (= var78544 temp642_64))
(assert (= temp642_65 #x0000000000000001))
(assert (= var78545 (bvadd var78544 temp642_65)))
(model-add temp642_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp642_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


