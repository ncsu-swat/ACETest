(declare-fun temp6661_1 () (_ BitVec 64))
(declare-fun temp6661_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_1_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp6661_3 () (_ BitVec 64))
(declare-fun ARGNAME_input_2_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp6661_4 () (_ BitVec 64))
(declare-fun temp6661_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_1_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp6661_6 () (_ BitVec 64))
(declare-fun temp6661_7 () (_ BitVec 64))
(declare-fun temp6661_8 () (_ BitVec 64))
(declare-fun temp6661_9 () (_ BitVec 64))
(declare-fun temp6661_10 () (_ BitVec 64))
(declare-fun temp6661_11 () (_ BitVec 64))
(declare-fun temp6661_12 () (_ BitVec 64))
(declare-fun temp6661_13 () (_ BitVec 64))
(declare-fun temp6661_14 () (_ BitVec 64))
(declare-fun temp6661_15 () (_ BitVec 64))
(declare-fun temp6661_16 () (_ BitVec 64))
(declare-fun temp6661_17 () (_ BitVec 64))
(declare-fun temp6661_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp6661_19 () (_ BitVec 64))
(declare-fun ARGNAME_input_2_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp6661_20 () (_ BitVec 64))
(declare-fun temp6661_21 () (_ BitVec 64))
(declare-fun temp6661_22 () (_ BitVec 64))
(declare-fun temp6661_23 () (_ BitVec 64))
(declare-fun temp6661_24 () (_ BitVec 64))
(declare-fun temp6661_25 () (_ BitVec 64))
(declare-fun temp6661_26 () (_ BitVec 64))
(declare-fun temp6661_27 () (_ BitVec 64))
(declare-fun temp6661_28 () (_ BitVec 64))
(declare-fun temp6661_29 () (_ BitVec 64))
(declare-fun temp6661_30 () (_ BitVec 64))
(declare-fun temp6661_31 () (_ BitVec 64))
(declare-fun temp6661_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp6661_33 () (_ BitVec 64))
(declare-fun temp6661_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp6661_35 () (_ BitVec 64))
(declare-fun temp6661_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp6661_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp6661_38 () (_ BitVec 64))
(declare-fun temp6661_40 () (_ BitVec 64))
(declare-fun temp6661_39 () (_ BitVec 64))
(declare-fun temp6661_42 () (_ BitVec 64))
(declare-fun temp6661_41 () (_ BitVec 64))
(declare-fun temp6661_43 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp6661_44 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp6661_45 () (_ BitVec 64))
(declare-fun temp6661_47 () (_ BitVec 64))
(declare-fun temp6661_46 () (_ BitVec 64))
(declare-fun temp6661_49 () (_ BitVec 64))
(declare-fun temp6661_48 () (_ BitVec 64))
(declare-fun temp6661_50 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp6661_51 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp6661_52 () (_ BitVec 64))
(declare-fun temp6661_54 () (_ BitVec 64))
(declare-fun temp6661_53 () (_ BitVec 64))
(declare-fun temp6661_56 () (_ BitVec 64))
(declare-fun temp6661_55 () (_ BitVec 64))
(declare-fun temp6661_58 () (_ BitVec 64))
(declare-fun temp6661_57 () (_ BitVec 64))
(declare-fun temp6661_59 () (_ BitVec 64))
(declare-fun var730187 () (_ BitVec 64))
(declare-fun var730166 () (_ BitVec 64))
(declare-fun var664598 () (_ BitVec 64))
(declare-fun temp6661_60 () (_ BitVec 64))
(declare-fun temp6661_61 () (_ BitVec 64))
(declare-fun var795723 () (_ BitVec 64))
(declare-fun var795702 () (_ BitVec 64))
(declare-fun var664608 () (_ BitVec 64))
(declare-fun temp6661_62 () (_ BitVec 64))
(declare-fun temp6661_64 () (_ BitVec 64))
(declare-fun temp6661_63 () (_ BitVec 64))
(declare-fun temp6661_66 () (_ BitVec 64))
(declare-fun temp6661_65 () (_ BitVec 64))
(declare-fun temp6661_68 () (_ BitVec 64))
(declare-fun temp6661_67 () (_ BitVec 64))
(declare-fun temp6661_69 () (_ BitVec 64))
(declare-fun var992306 () (_ BitVec 64))
(declare-fun temp6661_70 () (_ BitVec 64))
(declare-fun var992307 () (_ BitVec 64))
(declare-fun var992308 () (_ BitVec 64))
(declare-fun var992304 () (_ BitVec 64))
(declare-fun var599004 () (_ BitVec 64))
(declare-fun temp6661_71 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp6661_72 () (_ BitVec 64))
(declare-fun var1057843 () (_ BitVec 64))
(declare-fun var1057844 () (_ BitVec 64))
(declare-fun var1057840 () (_ BitVec 64))
(declare-fun var599011 () (_ BitVec 64))
(declare-fun temp6661_73 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp6661_74 () (_ BitVec 64))
(declare-fun var1123379 () (_ BitVec 64))
(declare-fun var1123380 () (_ BitVec 64))
(declare-fun var1123376 () (_ BitVec 64))
(declare-fun var599016 () (_ BitVec 64))
(declare-fun var78095 () (_ BitVec 64))
(declare-fun temp6661_75 () (_ BitVec 64))
(declare-fun temp6661_76 () (_ BitVec 64))
(declare-fun var78096 () (_ BitVec 64))
(declare-fun var78179 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp6661_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_input_1_NAMEEND_DIM temp6661_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6661_2 #x0000000000000001))
(assert (= var77740 temp6661_2))
(assert (= temp6661_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_input_2_NAMEEND_DIM temp6661_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6661_4 #x0000000000000001))
(assert (= var77770 temp6661_4))
(assert (= temp6661_5 #x0000000000000000))
(assert (= temp6661_6 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp6661_5)))
(assert (= temp6661_7 #x0000000000000001))
(assert (= temp6661_8 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp6661_7)))
(assert (= temp6661_9 #x0000000000000002))
(assert (= temp6661_10 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp6661_9)))
(assert (= temp6661_11 #x0000000000000003))
(assert (= temp6661_12 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp6661_11)))
(assert (= temp6661_13 #x0000000000000004))
(assert (= temp6661_14 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp6661_13)))
(assert (= temp6661_15 #x0000000000000005))
(assert (= temp6661_16 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp6661_15)))
(assert (= temp6661_17 #x0000000000000003))
(assert (= temp6661_18 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp6661_17)))
(assert (= var77799 temp6661_18))
(assert (= temp6661_19 #x0000000000000000))
(assert (= temp6661_20 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp6661_19)))
(assert (= temp6661_21 #x0000000000000001))
(assert (= temp6661_22 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp6661_21)))
(assert (= temp6661_23 #x0000000000000002))
(assert (= temp6661_24 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp6661_23)))
(assert (= temp6661_25 #x0000000000000003))
(assert (= temp6661_26 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp6661_25)))
(assert (= temp6661_27 #x0000000000000004))
(assert (= temp6661_28 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp6661_27)))
(assert (= temp6661_29 #x0000000000000005))
(assert (= temp6661_30 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp6661_29)))
(assert (= temp6661_31 #x0000000000000004))
(assert (= temp6661_32 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp6661_31)))
(assert (= var77832 temp6661_32))
(assert (= temp6661_33 #x0000000000000004))
(assert (= temp6661_34 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp6661_33)))
(assert (= var77833 temp6661_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp6661_35 #x0000000000000001))
(assert (= var77834 temp6661_35))
(assert (= temp6661_36 #x0000000000000001))
(assert (= var275510 temp6661_36))
(assert (= temp6661_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp6661_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp6661_38 #x0000000000000000))
(assert (= var275528 temp6661_38))
(assert (= temp6661_40 #x0000000000000000))
(assert (= temp6661_39 temp6661_40))
(assert (= temp6661_42 #x0000000000000000))
(assert (= temp6661_41 temp6661_42))
(assert (= temp6661_43 #x0000000000000001))
(assert (= var406582 temp6661_43))
(assert (= temp6661_44 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp6661_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp6661_45 #x0000000000000000))
(assert (= var406600 temp6661_45))
(assert (= temp6661_47 #x0000000000000000))
(assert (= temp6661_46 temp6661_47))
(assert (= temp6661_49 #x0000000000000000))
(assert (= temp6661_48 temp6661_49))
(assert (= temp6661_50 #x0000000000000001))
(assert (= var537654 temp6661_50))
(assert (= temp6661_51 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp6661_51) #x0000000000000001 #x0000000000000000)))
(assert (= temp6661_52 #x0000000000000000))
(assert (= var537672 temp6661_52))
(assert (= temp6661_54 #x00000000000000ff))
(assert (= temp6661_53 temp6661_54))
(assert (= temp6661_56 #x00000000000000ff))
(assert (= temp6661_55 temp6661_56))
(assert (= temp6661_58 #x00000000000000ff))
(assert (= temp6661_57 temp6661_58))
(assert (= temp6661_59 #x0000000000000000))
(assert (= var730187 temp6661_59))
(assert (= var730166 var730187))
(assert (= var664598 var730166))
(assert (= temp6661_60 #x0000000000000000))
(assert (= var664598 temp6661_60))
(assert (= temp6661_61 #x0000000000000000))
(assert (= var795723 temp6661_61))
(assert (= var795702 var795723))
(assert (= var664608 var795702))
(assert (= temp6661_62 #x0000000000000000))
(assert (= var664608 temp6661_62))
(assert (= temp6661_64 #x0000000000000000))
(assert (= temp6661_63 temp6661_64))
(assert (= temp6661_66 #x0000000000000000))
(assert (= temp6661_65 temp6661_66))
(assert (= temp6661_68 #x0000000000000000))
(assert (= temp6661_67 temp6661_68))
(assert (= temp6661_69 #x0000000000008000))
(assert (= var992306 temp6661_69))
(assert (= temp6661_70 #x0000000000000001))
(assert (= var992307
   (ite (bvslt temp6661_67 temp6661_70) #x0000000000000001 #x0000000000000000)))
(assert (= var992308 (ite (= var992307 #x0000000000000001) var992306 temp6661_67)))
(assert (= var992304 var992308))
(assert (= var599004 var992304))
(assert (= temp6661_71 #x0000000000040000))
(assert (= var1057842 temp6661_71))
(assert (= temp6661_72 #x0000000000000001))
(assert (= var1057843
   (ite (bvslt temp6661_65 temp6661_72) #x0000000000000001 #x0000000000000000)))
(assert (= var1057844 (ite (= var1057843 #x0000000000000001) var1057842 temp6661_65)))
(assert (= var1057840 var1057844))
(assert (= var599011 var1057840))
(assert (= temp6661_73 #x0000000000200000))
(assert (= var1123378 temp6661_73))
(assert (= temp6661_74 #x0000000000000001))
(assert (= var1123379
   (ite (bvslt temp6661_63 temp6661_74) #x0000000000000001 #x0000000000000000)))
(assert (= var1123380 (ite (= var1123379 #x0000000000000001) var1123378 temp6661_63)))
(assert (= var1123376 var1123380))
(assert (= var599016 var1123376))
(assert (= var78095 var599016))
(assert (= temp6661_75 #x0000000000000003))
(assert (= temp6661_76 #xffffffffffffffff))
(assert (= var78179 (bvadd var78096 temp6661_76)))
(model-add temp6661_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp6661_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_1_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))

