(declare-fun temp110288_1 () (_ BitVec 64))
(declare-fun temp110288_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp110288_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp110288_4 () (_ BitVec 64))
(declare-fun temp110288_5 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp110288_6 () (_ BitVec 64))
(declare-fun temp110288_7 () (_ BitVec 64))
(declare-fun temp110288_8 () (_ BitVec 64))
(declare-fun temp110288_9 () (_ BitVec 64))
(declare-fun temp110288_10 () (_ BitVec 64))
(declare-fun temp110288_11 () (_ BitVec 64))
(declare-fun temp110288_12 () (_ BitVec 64))
(declare-fun temp110288_13 () (_ BitVec 64))
(declare-fun temp110288_14 () (_ BitVec 64))
(declare-fun temp110288_15 () (_ BitVec 64))
(declare-fun temp110288_16 () (_ BitVec 64))
(declare-fun temp110288_17 () (_ BitVec 64))
(declare-fun temp110288_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp110288_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp110288_20 () (_ BitVec 64))
(declare-fun temp110288_21 () (_ BitVec 64))
(declare-fun temp110288_22 () (_ BitVec 64))
(declare-fun temp110288_23 () (_ BitVec 64))
(declare-fun temp110288_24 () (_ BitVec 64))
(declare-fun temp110288_25 () (_ BitVec 64))
(declare-fun temp110288_26 () (_ BitVec 64))
(declare-fun temp110288_27 () (_ BitVec 64))
(declare-fun temp110288_28 () (_ BitVec 64))
(declare-fun temp110288_29 () (_ BitVec 64))
(declare-fun temp110288_30 () (_ BitVec 64))
(declare-fun temp110288_31 () (_ BitVec 64))
(declare-fun temp110288_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp110288_33 () (_ BitVec 64))
(declare-fun temp110288_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp110288_35 () (_ BitVec 64))
(declare-fun temp110288_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp110288_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp110288_38 () (_ BitVec 64))
(declare-fun temp110288_39 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp110288_40 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp110288_41 () (_ BitVec 64))
(declare-fun temp110288_43 () (_ BitVec 64))
(declare-fun temp110288_42 () (_ BitVec 64))
(declare-fun temp110288_45 () (_ BitVec 64))
(declare-fun temp110288_44 () (_ BitVec 64))
(declare-fun temp110288_46 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp110288_47 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp110288_48 () (_ BitVec 64))
(declare-fun temp110288_50 () (_ BitVec 64))
(declare-fun temp110288_49 () (_ BitVec 64))
(declare-fun temp110288_52 () (_ BitVec 64))
(declare-fun temp110288_51 () (_ BitVec 64))
(declare-fun temp110288_54 () (_ BitVec 64))
(declare-fun temp110288_53 () (_ BitVec 64))
(declare-fun temp110288_55 () (_ BitVec 64))
(declare-fun var730187 () (_ BitVec 64))
(declare-fun var730166 () (_ BitVec 64))
(declare-fun var664598 () (_ BitVec 64))
(declare-fun temp110288_56 () (_ BitVec 64))
(declare-fun temp110288_57 () (_ BitVec 64))
(declare-fun var795723 () (_ BitVec 64))
(declare-fun var795702 () (_ BitVec 64))
(declare-fun var664608 () (_ BitVec 64))
(declare-fun temp110288_58 () (_ BitVec 64))
(declare-fun temp110288_59 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp110288_60 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp110288_61 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp110288_63 () (_ BitVec 64))
(declare-fun temp110288_62 () (_ BitVec 64))
(declare-fun temp110288_65 () (_ BitVec 64))
(declare-fun temp110288_64 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp110288_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_filter_NAMEEND_DIM temp110288_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp110288_2 #x0000000000000001))
(assert (= var77740 temp110288_2))
(assert (= temp110288_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp110288_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp110288_4 #x0000000000000001))
(assert (= var77770 temp110288_4))
(assert (= temp110288_5 #x0000000000000000))
(assert (= temp110288_6 (select ARGNAME_filter_NAMEEND_DIMSIZE temp110288_5)))
(assert (= temp110288_7 #x0000000000000001))
(assert (= temp110288_8 (select ARGNAME_filter_NAMEEND_DIMSIZE temp110288_7)))
(assert (= temp110288_9 #x0000000000000002))
(assert (= temp110288_10 (select ARGNAME_filter_NAMEEND_DIMSIZE temp110288_9)))
(assert (= temp110288_11 #x0000000000000003))
(assert (= temp110288_12 (select ARGNAME_filter_NAMEEND_DIMSIZE temp110288_11)))
(assert (= temp110288_13 #x0000000000000004))
(assert (= temp110288_14 (select ARGNAME_filter_NAMEEND_DIMSIZE temp110288_13)))
(assert (= temp110288_15 #x0000000000000005))
(assert (= temp110288_16 (select ARGNAME_filter_NAMEEND_DIMSIZE temp110288_15)))
(assert (= temp110288_17 #x0000000000000003))
(assert (= temp110288_18 (select ARGNAME_filter_NAMEEND_DIMSIZE temp110288_17)))
(assert (= var77799 temp110288_18))
(assert (= temp110288_19 #x0000000000000000))
(assert (= temp110288_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp110288_19)))
(assert (= temp110288_21 #x0000000000000001))
(assert (= temp110288_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp110288_21)))
(assert (= temp110288_23 #x0000000000000002))
(assert (= temp110288_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp110288_23)))
(assert (= temp110288_25 #x0000000000000003))
(assert (= temp110288_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp110288_25)))
(assert (= temp110288_27 #x0000000000000004))
(assert (= temp110288_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp110288_27)))
(assert (= temp110288_29 #x0000000000000005))
(assert (= temp110288_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp110288_29)))
(assert (= temp110288_31 #x0000000000000004))
(assert (= temp110288_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp110288_31)))
(assert (= var77832 temp110288_32))
(assert (= temp110288_33 #x0000000000000004))
(assert (= temp110288_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp110288_33)))
(assert (= var77833 temp110288_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp110288_35 #x0000000000000001))
(assert (= var77834 temp110288_35))
(assert (= temp110288_36 #x0000000000000001))
(assert (= var275510 temp110288_36))
(assert (= temp110288_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp110288_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp110288_38 #x0000000000000000))
(assert (= var275528 temp110288_38))
(assert (= temp110288_39 #x0000000000000001))
(assert (= var406582 temp110288_39))
(assert (= temp110288_40 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp110288_40) #x0000000000000001 #x0000000000000000)))
(assert (= temp110288_41 #x0000000000000000))
(assert (= var406600 temp110288_41))
(assert (= temp110288_43 #x0000000000000000))
(assert (= temp110288_42 temp110288_43))
(assert (= temp110288_45 #x0000000000000000))
(assert (= temp110288_44 temp110288_45))
(assert (= temp110288_46 #x0000000000000001))
(assert (= var537654 temp110288_46))
(assert (= temp110288_47 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp110288_47) #x0000000000000001 #x0000000000000000)))
(assert (= temp110288_48 #x0000000000000000))
(assert (= var537672 temp110288_48))
(assert (= temp110288_50 #x00000000000000ff))
(assert (= temp110288_49 temp110288_50))
(assert (= temp110288_52 #x00000000000000ff))
(assert (= temp110288_51 temp110288_52))
(assert (= temp110288_54 #x00000000000000ff))
(assert (= temp110288_53 temp110288_54))
(assert (= temp110288_55 #x0000000000000000))
(assert (= var730187 temp110288_55))
(assert (= var730166 var730187))
(assert (= var664598 var730166))
(assert (= temp110288_56 #x0000000000000000))
(assert (= var664598 temp110288_56))
(assert (= temp110288_57 #x0000000000000000))
(assert (= var795723 temp110288_57))
(assert (= var795702 var795723))
(assert (= var664608 var795702))
(assert (= temp110288_58 #x0000000000000000))
(assert (= var664608 temp110288_58))
(assert (= temp110288_59 #x0000000000008000))
(assert (= var1057842 temp110288_59))
(assert (= temp110288_60 #x0000000000040000))
(assert (= var1123378 temp110288_60))
(assert (= temp110288_61 #x0000000000200000))
(assert (= var1188914 temp110288_61))
(assert (= temp110288_63 #x0000000000000001))
(assert (= temp110288_62 temp110288_63))
(assert (= temp110288_65 #x0000000000000001))
(assert (= temp110288_64 temp110288_65))
(model-add temp110288_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp110288_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


