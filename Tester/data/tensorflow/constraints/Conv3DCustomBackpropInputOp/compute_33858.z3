(declare-fun temp50787_1 () (_ BitVec 64))
(declare-fun temp50787_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp50787_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp50787_4 () (_ BitVec 64))
(declare-fun temp50787_5 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp50787_6 () (_ BitVec 64))
(declare-fun temp50787_7 () (_ BitVec 64))
(declare-fun temp50787_8 () (_ BitVec 64))
(declare-fun temp50787_9 () (_ BitVec 64))
(declare-fun temp50787_10 () (_ BitVec 64))
(declare-fun temp50787_11 () (_ BitVec 64))
(declare-fun temp50787_12 () (_ BitVec 64))
(declare-fun temp50787_13 () (_ BitVec 64))
(declare-fun temp50787_14 () (_ BitVec 64))
(declare-fun temp50787_15 () (_ BitVec 64))
(declare-fun temp50787_16 () (_ BitVec 64))
(declare-fun temp50787_17 () (_ BitVec 64))
(declare-fun temp50787_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp50787_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp50787_20 () (_ BitVec 64))
(declare-fun temp50787_21 () (_ BitVec 64))
(declare-fun temp50787_22 () (_ BitVec 64))
(declare-fun temp50787_23 () (_ BitVec 64))
(declare-fun temp50787_24 () (_ BitVec 64))
(declare-fun temp50787_25 () (_ BitVec 64))
(declare-fun temp50787_26 () (_ BitVec 64))
(declare-fun temp50787_27 () (_ BitVec 64))
(declare-fun temp50787_28 () (_ BitVec 64))
(declare-fun temp50787_29 () (_ BitVec 64))
(declare-fun temp50787_30 () (_ BitVec 64))
(declare-fun temp50787_31 () (_ BitVec 64))
(declare-fun temp50787_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp50787_33 () (_ BitVec 64))
(declare-fun temp50787_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp50787_35 () (_ BitVec 64))
(declare-fun temp50787_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp50787_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp50787_38 () (_ BitVec 64))
(declare-fun temp50787_40 () (_ BitVec 64))
(declare-fun temp50787_39 () (_ BitVec 64))
(declare-fun temp50787_42 () (_ BitVec 64))
(declare-fun temp50787_41 () (_ BitVec 64))
(declare-fun temp50787_43 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp50787_44 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp50787_45 () (_ BitVec 64))
(declare-fun temp50787_47 () (_ BitVec 64))
(declare-fun temp50787_46 () (_ BitVec 64))
(declare-fun temp50787_48 () (_ BitVec 64))
(declare-fun var603190 () (_ BitVec 64))
(declare-fun temp50787_49 () (_ BitVec 64))
(declare-fun var603208 () (_ BitVec 64))
(declare-fun temp50787_50 () (_ BitVec 64))
(declare-fun temp50787_52 () (_ BitVec 64))
(declare-fun temp50787_51 () (_ BitVec 64))
(declare-fun temp50787_54 () (_ BitVec 64))
(declare-fun temp50787_53 () (_ BitVec 64))
(declare-fun temp50787_56 () (_ BitVec 64))
(declare-fun temp50787_55 () (_ BitVec 64))
(declare-fun temp50787_58 () (_ BitVec 64))
(declare-fun temp50787_57 () (_ BitVec 64))
(declare-fun temp50787_60 () (_ BitVec 64))
(declare-fun temp50787_59 () (_ BitVec 64))
(declare-fun temp50787_62 () (_ BitVec 64))
(declare-fun temp50787_61 () (_ BitVec 64))
(declare-fun temp50787_64 () (_ BitVec 64))
(declare-fun temp50787_63 () (_ BitVec 64))
(declare-fun temp50787_65 () (_ BitVec 64))
(declare-fun var992306 () (_ BitVec 64))
(declare-fun temp50787_66 () (_ BitVec 64))
(declare-fun var992307 () (_ BitVec 64))
(declare-fun var992308 () (_ BitVec 64))
(declare-fun var992304 () (_ BitVec 64))
(declare-fun var730076 () (_ BitVec 64))
(declare-fun temp50787_67 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp50787_68 () (_ BitVec 64))
(declare-fun var1057843 () (_ BitVec 64))
(declare-fun var1057844 () (_ BitVec 64))
(declare-fun var1057840 () (_ BitVec 64))
(declare-fun var730083 () (_ BitVec 64))
(declare-fun temp50787_69 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp50787_70 () (_ BitVec 64))
(declare-fun var1123379 () (_ BitVec 64))
(declare-fun var1123380 () (_ BitVec 64))
(declare-fun var1123376 () (_ BitVec 64))
(declare-fun var730088 () (_ BitVec 64))
(declare-fun var78095 () (_ BitVec 64))
(declare-fun temp50787_71 () (_ BitVec 64))
(declare-fun temp50787_72 () (_ BitVec 64))
(declare-fun var78096 () (_ BitVec 64))
(declare-fun var78179 () (_ BitVec 64))
(declare-fun temp50787_74 () (_ BitVec 64))
(declare-fun temp50787_73 () (_ BitVec 64))
(declare-fun temp50787_76 () (_ BitVec 64))
(declare-fun temp50787_75 () (_ BitVec 64))
(declare-fun temp50787_77 () (_ BitVec 64))
(declare-fun var78544 () (_ BitVec 64))
(declare-fun temp50787_78 () (_ BitVec 64))
(declare-fun var78545 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp50787_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_filter_NAMEEND_DIM temp50787_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50787_2 #x0000000000000001))
(assert (= var77740 temp50787_2))
(assert (= temp50787_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp50787_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50787_4 #x0000000000000001))
(assert (= var77770 temp50787_4))
(assert (= temp50787_5 #x0000000000000000))
(assert (= temp50787_6 (select ARGNAME_filter_NAMEEND_DIMSIZE temp50787_5)))
(assert (= temp50787_7 #x0000000000000001))
(assert (= temp50787_8 (select ARGNAME_filter_NAMEEND_DIMSIZE temp50787_7)))
(assert (= temp50787_9 #x0000000000000002))
(assert (= temp50787_10 (select ARGNAME_filter_NAMEEND_DIMSIZE temp50787_9)))
(assert (= temp50787_11 #x0000000000000003))
(assert (= temp50787_12 (select ARGNAME_filter_NAMEEND_DIMSIZE temp50787_11)))
(assert (= temp50787_13 #x0000000000000004))
(assert (= temp50787_14 (select ARGNAME_filter_NAMEEND_DIMSIZE temp50787_13)))
(assert (= temp50787_15 #x0000000000000005))
(assert (= temp50787_16 (select ARGNAME_filter_NAMEEND_DIMSIZE temp50787_15)))
(assert (= temp50787_17 #x0000000000000003))
(assert (= temp50787_18 (select ARGNAME_filter_NAMEEND_DIMSIZE temp50787_17)))
(assert (= var77799 temp50787_18))
(assert (= temp50787_19 #x0000000000000000))
(assert (= temp50787_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp50787_19)))
(assert (= temp50787_21 #x0000000000000001))
(assert (= temp50787_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp50787_21)))
(assert (= temp50787_23 #x0000000000000002))
(assert (= temp50787_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp50787_23)))
(assert (= temp50787_25 #x0000000000000003))
(assert (= temp50787_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp50787_25)))
(assert (= temp50787_27 #x0000000000000004))
(assert (= temp50787_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp50787_27)))
(assert (= temp50787_29 #x0000000000000005))
(assert (= temp50787_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp50787_29)))
(assert (= temp50787_31 #x0000000000000004))
(assert (= temp50787_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp50787_31)))
(assert (= var77832 temp50787_32))
(assert (= temp50787_33 #x0000000000000004))
(assert (= temp50787_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp50787_33)))
(assert (= var77833 temp50787_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp50787_35 #x0000000000000001))
(assert (= var77834 temp50787_35))
(assert (= temp50787_36 #x0000000000000001))
(assert (= var275510 temp50787_36))
(assert (= temp50787_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp50787_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp50787_38 #x0000000000000000))
(assert (= var275528 temp50787_38))
(assert (= temp50787_40 #x0000000000000000))
(assert (= temp50787_39 temp50787_40))
(assert (= temp50787_42 #x0000000000000000))
(assert (= temp50787_41 temp50787_42))
(assert (= temp50787_43 #x0000000000000001))
(assert (= var406582 temp50787_43))
(assert (= temp50787_44 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp50787_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp50787_45 #x0000000000000000))
(assert (= var406600 temp50787_45))
(assert (= temp50787_47 #x0000000000000000))
(assert (= temp50787_46 temp50787_47))
(assert (= temp50787_48 #x0000000000000001))
(assert (= var603190 temp50787_48))
(assert (= temp50787_49 #x0000000000000001))
(assert (= var603208
   (ite (bvslt var603190 temp50787_49) #x0000000000000001 #x0000000000000000)))
(assert (= temp50787_50 #x0000000000000000))
(assert (= var603208 temp50787_50))
(assert (= temp50787_52 #x0000000000000000))
(assert (= temp50787_51 temp50787_52))
(assert (= temp50787_54 #x00000000000000ff))
(assert (= temp50787_53 temp50787_54))
(assert (= temp50787_56 #x00000000000000ff))
(assert (= temp50787_55 temp50787_56))
(assert (= temp50787_58 #x00000000000000ff))
(assert (= temp50787_57 temp50787_58))
(assert (= temp50787_60 #x0000000000000000))
(assert (= temp50787_59 temp50787_60))
(assert (= temp50787_62 #x0000000000000000))
(assert (= temp50787_61 temp50787_62))
(assert (= temp50787_64 #x0000000000000000))
(assert (= temp50787_63 temp50787_64))
(assert (= temp50787_65 #x0000000000008000))
(assert (= var992306 temp50787_65))
(assert (= temp50787_66 #x0000000000000001))
(assert (= var992307
   (ite (bvslt temp50787_63 temp50787_66) #x0000000000000001 #x0000000000000000)))
(assert (= var992308 (ite (= var992307 #x0000000000000001) var992306 temp50787_63)))
(assert (= var992304 var992308))
(assert (= var730076 var992304))
(assert (= temp50787_67 #x0000000000040000))
(assert (= var1057842 temp50787_67))
(assert (= temp50787_68 #x0000000000000001))
(assert (= var1057843
   (ite (bvslt temp50787_61 temp50787_68) #x0000000000000001 #x0000000000000000)))
(assert (= var1057844 (ite (= var1057843 #x0000000000000001) var1057842 temp50787_61)))
(assert (= var1057840 var1057844))
(assert (= var730083 var1057840))
(assert (= temp50787_69 #x0000000000200000))
(assert (= var1123378 temp50787_69))
(assert (= temp50787_70 #x0000000000000001))
(assert (= var1123379
   (ite (bvslt temp50787_59 temp50787_70) #x0000000000000001 #x0000000000000000)))
(assert (= var1123380 (ite (= var1123379 #x0000000000000001) var1123378 temp50787_59)))
(assert (= var1123376 var1123380))
(assert (= var730088 var1123376))
(assert (= var78095 var730088))
(assert (= temp50787_71 #x0000000000000003))
(assert (= temp50787_72 #xffffffffffffffff))
(assert (= var78179 (bvadd var78096 temp50787_72)))
(assert (= temp50787_74 #x0000000000000001))
(assert (= temp50787_73 temp50787_74))
(assert (= temp50787_76 #x0000000000000001))
(assert (= temp50787_75 temp50787_76))
(assert (= temp50787_77 #x0000000000000000))
(assert (= var78544 temp50787_77))
(assert (= temp50787_78 #x0000000000000001))
(assert (= var78545 (bvadd var78544 temp50787_78)))
(model-add temp50787_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp50787_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


