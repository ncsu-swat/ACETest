(declare-fun temp86682_1 () (_ BitVec 64))
(declare-fun temp86682_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_1_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp86682_3 () (_ BitVec 64))
(declare-fun ARGNAME_input_2_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp86682_4 () (_ BitVec 64))
(declare-fun temp86682_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_1_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp86682_6 () (_ BitVec 64))
(declare-fun temp86682_7 () (_ BitVec 64))
(declare-fun temp86682_8 () (_ BitVec 64))
(declare-fun temp86682_9 () (_ BitVec 64))
(declare-fun temp86682_10 () (_ BitVec 64))
(declare-fun temp86682_11 () (_ BitVec 64))
(declare-fun temp86682_12 () (_ BitVec 64))
(declare-fun temp86682_13 () (_ BitVec 64))
(declare-fun temp86682_14 () (_ BitVec 64))
(declare-fun temp86682_15 () (_ BitVec 64))
(declare-fun temp86682_16 () (_ BitVec 64))
(declare-fun temp86682_17 () (_ BitVec 64))
(declare-fun temp86682_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp86682_19 () (_ BitVec 64))
(declare-fun ARGNAME_input_2_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp86682_20 () (_ BitVec 64))
(declare-fun temp86682_21 () (_ BitVec 64))
(declare-fun temp86682_22 () (_ BitVec 64))
(declare-fun temp86682_23 () (_ BitVec 64))
(declare-fun temp86682_24 () (_ BitVec 64))
(declare-fun temp86682_25 () (_ BitVec 64))
(declare-fun temp86682_26 () (_ BitVec 64))
(declare-fun temp86682_27 () (_ BitVec 64))
(declare-fun temp86682_28 () (_ BitVec 64))
(declare-fun temp86682_29 () (_ BitVec 64))
(declare-fun temp86682_30 () (_ BitVec 64))
(declare-fun temp86682_31 () (_ BitVec 64))
(declare-fun temp86682_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp86682_33 () (_ BitVec 64))
(declare-fun temp86682_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp86682_35 () (_ BitVec 64))
(declare-fun temp86682_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp86682_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp86682_38 () (_ BitVec 64))
(declare-fun temp86682_40 () (_ BitVec 64))
(declare-fun temp86682_39 () (_ BitVec 64))
(declare-fun temp86682_41 () (_ BitVec 64))
(declare-fun var472118 () (_ BitVec 64))
(declare-fun temp86682_42 () (_ BitVec 64))
(declare-fun var472136 () (_ BitVec 64))
(declare-fun temp86682_43 () (_ BitVec 64))
(declare-fun temp86682_45 () (_ BitVec 64))
(declare-fun temp86682_44 () (_ BitVec 64))
(declare-fun temp86682_47 () (_ BitVec 64))
(declare-fun temp86682_46 () (_ BitVec 64))
(declare-fun temp86682_48 () (_ BitVec 64))
(declare-fun var603190 () (_ BitVec 64))
(declare-fun temp86682_49 () (_ BitVec 64))
(declare-fun var603208 () (_ BitVec 64))
(declare-fun temp86682_50 () (_ BitVec 64))
(declare-fun temp86682_52 () (_ BitVec 64))
(declare-fun temp86682_51 () (_ BitVec 64))
(declare-fun temp86682_54 () (_ BitVec 64))
(declare-fun temp86682_53 () (_ BitVec 64))
(declare-fun temp86682_56 () (_ BitVec 64))
(declare-fun temp86682_55 () (_ BitVec 64))
(declare-fun temp86682_58 () (_ BitVec 64))
(declare-fun temp86682_57 () (_ BitVec 64))
(declare-fun temp86682_60 () (_ BitVec 64))
(declare-fun temp86682_59 () (_ BitVec 64))
(declare-fun temp86682_62 () (_ BitVec 64))
(declare-fun temp86682_61 () (_ BitVec 64))
(declare-fun temp86682_64 () (_ BitVec 64))
(declare-fun temp86682_63 () (_ BitVec 64))
(declare-fun temp86682_66 () (_ BitVec 64))
(declare-fun temp86682_65 () (_ BitVec 64))
(declare-fun temp86682_67 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp86682_68 () (_ BitVec 64))
(declare-fun var1057843 () (_ BitVec 64))
(declare-fun var1057844 () (_ BitVec 64))
(declare-fun var1057840 () (_ BitVec 64))
(declare-fun var664540 () (_ BitVec 64))
(declare-fun temp86682_69 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp86682_70 () (_ BitVec 64))
(declare-fun var1123379 () (_ BitVec 64))
(declare-fun var1123380 () (_ BitVec 64))
(declare-fun var1123376 () (_ BitVec 64))
(declare-fun var664547 () (_ BitVec 64))
(declare-fun temp86682_71 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp86682_72 () (_ BitVec 64))
(declare-fun var1188915 () (_ BitVec 64))
(declare-fun var1188916 () (_ BitVec 64))
(declare-fun var1188912 () (_ BitVec 64))
(declare-fun var664552 () (_ BitVec 64))
(declare-fun var78095 () (_ BitVec 64))
(declare-fun temp86682_73 () (_ BitVec 64))
(declare-fun temp86682_74 () (_ BitVec 64))
(declare-fun var78184 () (_ BitVec 64))
(declare-fun temp86682_76 () (_ BitVec 64))
(declare-fun temp86682_75 () (_ BitVec 64))
(declare-fun temp86682_78 () (_ BitVec 64))
(declare-fun temp86682_77 () (_ BitVec 64))
(declare-fun temp86682_79 () (_ BitVec 64))
(declare-fun var78544 () (_ BitVec 64))
(declare-fun temp86682_80 () (_ BitVec 64))
(declare-fun var78545 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp86682_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_input_1_NAMEEND_DIM temp86682_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp86682_2 #x0000000000000001))
(assert (= var77740 temp86682_2))
(assert (= temp86682_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_input_2_NAMEEND_DIM temp86682_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp86682_4 #x0000000000000001))
(assert (= var77770 temp86682_4))
(assert (= temp86682_5 #x0000000000000000))
(assert (= temp86682_6 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp86682_5)))
(assert (= temp86682_7 #x0000000000000001))
(assert (= temp86682_8 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp86682_7)))
(assert (= temp86682_9 #x0000000000000002))
(assert (= temp86682_10 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp86682_9)))
(assert (= temp86682_11 #x0000000000000003))
(assert (= temp86682_12 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp86682_11)))
(assert (= temp86682_13 #x0000000000000004))
(assert (= temp86682_14 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp86682_13)))
(assert (= temp86682_15 #x0000000000000005))
(assert (= temp86682_16 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp86682_15)))
(assert (= temp86682_17 #x0000000000000003))
(assert (= temp86682_18 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp86682_17)))
(assert (= var77799 temp86682_18))
(assert (= temp86682_19 #x0000000000000000))
(assert (= temp86682_20 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp86682_19)))
(assert (= temp86682_21 #x0000000000000001))
(assert (= temp86682_22 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp86682_21)))
(assert (= temp86682_23 #x0000000000000002))
(assert (= temp86682_24 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp86682_23)))
(assert (= temp86682_25 #x0000000000000003))
(assert (= temp86682_26 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp86682_25)))
(assert (= temp86682_27 #x0000000000000004))
(assert (= temp86682_28 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp86682_27)))
(assert (= temp86682_29 #x0000000000000005))
(assert (= temp86682_30 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp86682_29)))
(assert (= temp86682_31 #x0000000000000004))
(assert (= temp86682_32 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp86682_31)))
(assert (= var77832 temp86682_32))
(assert (= temp86682_33 #x0000000000000004))
(assert (= temp86682_34 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp86682_33)))
(assert (= var77833 temp86682_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp86682_35 #x0000000000000001))
(assert (= var77834 temp86682_35))
(assert (= temp86682_36 #x0000000000000001))
(assert (= var275510 temp86682_36))
(assert (= temp86682_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp86682_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp86682_38 #x0000000000000000))
(assert (= var275528 temp86682_38))
(assert (= temp86682_40 #x0000000000000000))
(assert (= temp86682_39 temp86682_40))
(assert (= temp86682_41 #x0000000000000001))
(assert (= var472118 temp86682_41))
(assert (= temp86682_42 #x0000000000000001))
(assert (= var472136
   (ite (bvslt var472118 temp86682_42) #x0000000000000001 #x0000000000000000)))
(assert (= temp86682_43 #x0000000000000000))
(assert (= var472136 temp86682_43))
(assert (= temp86682_45 #x0000000000000000))
(assert (= temp86682_44 temp86682_45))
(assert (= temp86682_47 #x0000000000000000))
(assert (= temp86682_46 temp86682_47))
(assert (= temp86682_48 #x0000000000000001))
(assert (= var603190 temp86682_48))
(assert (= temp86682_49 #x0000000000000001))
(assert (= var603208
   (ite (bvslt var603190 temp86682_49) #x0000000000000001 #x0000000000000000)))
(assert (= temp86682_50 #x0000000000000000))
(assert (= var603208 temp86682_50))
(assert (= temp86682_52 #x0000000000000000))
(assert (= temp86682_51 temp86682_52))
(assert (= temp86682_54 #x0000000000000000))
(assert (= temp86682_53 temp86682_54))
(assert (= temp86682_56 #x00000000000000ff))
(assert (= temp86682_55 temp86682_56))
(assert (= temp86682_58 #x00000000000000ff))
(assert (= temp86682_57 temp86682_58))
(assert (= temp86682_60 #x00000000000000ff))
(assert (= temp86682_59 temp86682_60))
(assert (= temp86682_62 #x0000000000000000))
(assert (= temp86682_61 temp86682_62))
(assert (= temp86682_64 #x0000000000000000))
(assert (= temp86682_63 temp86682_64))
(assert (= temp86682_66 #x0000000000000000))
(assert (= temp86682_65 temp86682_66))
(assert (= temp86682_67 #x0000000000008000))
(assert (= var1057842 temp86682_67))
(assert (= temp86682_68 #x0000000000000001))
(assert (= var1057843
   (ite (bvslt temp86682_65 temp86682_68) #x0000000000000001 #x0000000000000000)))
(assert (= var1057844 (ite (= var1057843 #x0000000000000001) var1057842 temp86682_65)))
(assert (= var1057840 var1057844))
(assert (= var664540 var1057840))
(assert (= temp86682_69 #x0000000000040000))
(assert (= var1123378 temp86682_69))
(assert (= temp86682_70 #x0000000000000001))
(assert (= var1123379
   (ite (bvslt temp86682_63 temp86682_70) #x0000000000000001 #x0000000000000000)))
(assert (= var1123380 (ite (= var1123379 #x0000000000000001) var1123378 temp86682_63)))
(assert (= var1123376 var1123380))
(assert (= var664547 var1123376))
(assert (= temp86682_71 #x0000000000200000))
(assert (= var1188914 temp86682_71))
(assert (= temp86682_72 #x0000000000000001))
(assert (= var1188915
   (ite (bvslt temp86682_61 temp86682_72) #x0000000000000001 #x0000000000000000)))
(assert (= var1188916 (ite (= var1188915 #x0000000000000001) var1188914 temp86682_61)))
(assert (= var1188912 var1188916))
(assert (= var664552 var1188912))
(assert (= var78095 var664552))
(assert (= temp86682_73 #x0000000000000003))
(assert (= temp86682_74 #x0000000000000001))
(assert (= var78184 temp86682_74))
(assert (= temp86682_76 #x0000000000000001))
(assert (= temp86682_75 temp86682_76))
(assert (= temp86682_78 #x0000000000000001))
(assert (= temp86682_77 temp86682_78))
(assert (= temp86682_79 #x0000000000000000))
(assert (= var78544 temp86682_79))
(assert (= temp86682_80 #x0000000000000001))
(assert (= var78545 (bvadd var78544 temp86682_80)))
(model-add temp86682_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp86682_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_1_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))

