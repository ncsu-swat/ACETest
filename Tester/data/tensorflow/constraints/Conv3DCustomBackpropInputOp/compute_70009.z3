(declare-fun temp105028_1 () (_ BitVec 64))
(declare-fun temp105028_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp105028_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp105028_4 () (_ BitVec 64))
(declare-fun temp105028_5 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp105028_6 () (_ BitVec 64))
(declare-fun temp105028_7 () (_ BitVec 64))
(declare-fun temp105028_8 () (_ BitVec 64))
(declare-fun temp105028_9 () (_ BitVec 64))
(declare-fun temp105028_10 () (_ BitVec 64))
(declare-fun temp105028_11 () (_ BitVec 64))
(declare-fun temp105028_12 () (_ BitVec 64))
(declare-fun temp105028_13 () (_ BitVec 64))
(declare-fun temp105028_14 () (_ BitVec 64))
(declare-fun temp105028_15 () (_ BitVec 64))
(declare-fun temp105028_16 () (_ BitVec 64))
(declare-fun temp105028_17 () (_ BitVec 64))
(declare-fun temp105028_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp105028_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp105028_20 () (_ BitVec 64))
(declare-fun temp105028_21 () (_ BitVec 64))
(declare-fun temp105028_22 () (_ BitVec 64))
(declare-fun temp105028_23 () (_ BitVec 64))
(declare-fun temp105028_24 () (_ BitVec 64))
(declare-fun temp105028_25 () (_ BitVec 64))
(declare-fun temp105028_26 () (_ BitVec 64))
(declare-fun temp105028_27 () (_ BitVec 64))
(declare-fun temp105028_28 () (_ BitVec 64))
(declare-fun temp105028_29 () (_ BitVec 64))
(declare-fun temp105028_30 () (_ BitVec 64))
(declare-fun temp105028_31 () (_ BitVec 64))
(declare-fun temp105028_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp105028_33 () (_ BitVec 64))
(declare-fun temp105028_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp105028_35 () (_ BitVec 64))
(declare-fun temp105028_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp105028_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp105028_38 () (_ BitVec 64))
(declare-fun temp105028_39 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp105028_40 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp105028_41 () (_ BitVec 64))
(declare-fun temp105028_42 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp105028_43 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp105028_44 () (_ BitVec 64))
(declare-fun temp105028_46 () (_ BitVec 64))
(declare-fun temp105028_45 () (_ BitVec 64))
(declare-fun temp105028_48 () (_ BitVec 64))
(declare-fun temp105028_47 () (_ BitVec 64))
(declare-fun temp105028_50 () (_ BitVec 64))
(declare-fun temp105028_49 () (_ BitVec 64))
(declare-fun temp105028_51 () (_ BitVec 64))
(declare-fun var730187 () (_ BitVec 64))
(declare-fun var730166 () (_ BitVec 64))
(declare-fun var664598 () (_ BitVec 64))
(declare-fun temp105028_52 () (_ BitVec 64))
(declare-fun temp105028_53 () (_ BitVec 64))
(declare-fun var861259 () (_ BitVec 64))
(declare-fun var861238 () (_ BitVec 64))
(declare-fun var664611 () (_ BitVec 64))
(declare-fun temp105028_54 () (_ BitVec 64))
(declare-fun temp105028_56 () (_ BitVec 64))
(declare-fun temp105028_55 () (_ BitVec 64))
(declare-fun temp105028_58 () (_ BitVec 64))
(declare-fun temp105028_57 () (_ BitVec 64))
(declare-fun temp105028_60 () (_ BitVec 64))
(declare-fun temp105028_59 () (_ BitVec 64))
(declare-fun temp105028_61 () (_ BitVec 64))
(declare-fun var992306 () (_ BitVec 64))
(declare-fun temp105028_62 () (_ BitVec 64))
(declare-fun var992307 () (_ BitVec 64))
(declare-fun var992308 () (_ BitVec 64))
(declare-fun var992304 () (_ BitVec 64))
(declare-fun var599004 () (_ BitVec 64))
(declare-fun temp105028_63 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp105028_64 () (_ BitVec 64))
(declare-fun var1057843 () (_ BitVec 64))
(declare-fun var1057844 () (_ BitVec 64))
(declare-fun var1057840 () (_ BitVec 64))
(declare-fun var599011 () (_ BitVec 64))
(declare-fun temp105028_65 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp105028_66 () (_ BitVec 64))
(declare-fun var1123379 () (_ BitVec 64))
(declare-fun var1123380 () (_ BitVec 64))
(declare-fun var1123376 () (_ BitVec 64))
(declare-fun var599016 () (_ BitVec 64))
(declare-fun var78095 () (_ BitVec 64))
(declare-fun temp105028_67 () (_ BitVec 64))
(declare-fun temp105028_68 () (_ BitVec 64))
(declare-fun var78096 () (_ BitVec 64))
(declare-fun var78179 () (_ BitVec 64))
(declare-fun temp105028_70 () (_ BitVec 64))
(declare-fun temp105028_69 () (_ BitVec 64))
(declare-fun temp105028_72 () (_ BitVec 64))
(declare-fun temp105028_71 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp105028_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_filter_NAMEEND_DIM temp105028_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp105028_2 #x0000000000000001))
(assert (= var77740 temp105028_2))
(assert (= temp105028_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp105028_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp105028_4 #x0000000000000001))
(assert (= var77770 temp105028_4))
(assert (= temp105028_5 #x0000000000000000))
(assert (= temp105028_6 (select ARGNAME_filter_NAMEEND_DIMSIZE temp105028_5)))
(assert (= temp105028_7 #x0000000000000001))
(assert (= temp105028_8 (select ARGNAME_filter_NAMEEND_DIMSIZE temp105028_7)))
(assert (= temp105028_9 #x0000000000000002))
(assert (= temp105028_10 (select ARGNAME_filter_NAMEEND_DIMSIZE temp105028_9)))
(assert (= temp105028_11 #x0000000000000003))
(assert (= temp105028_12 (select ARGNAME_filter_NAMEEND_DIMSIZE temp105028_11)))
(assert (= temp105028_13 #x0000000000000004))
(assert (= temp105028_14 (select ARGNAME_filter_NAMEEND_DIMSIZE temp105028_13)))
(assert (= temp105028_15 #x0000000000000005))
(assert (= temp105028_16 (select ARGNAME_filter_NAMEEND_DIMSIZE temp105028_15)))
(assert (= temp105028_17 #x0000000000000003))
(assert (= temp105028_18 (select ARGNAME_filter_NAMEEND_DIMSIZE temp105028_17)))
(assert (= var77799 temp105028_18))
(assert (= temp105028_19 #x0000000000000000))
(assert (= temp105028_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp105028_19)))
(assert (= temp105028_21 #x0000000000000001))
(assert (= temp105028_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp105028_21)))
(assert (= temp105028_23 #x0000000000000002))
(assert (= temp105028_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp105028_23)))
(assert (= temp105028_25 #x0000000000000003))
(assert (= temp105028_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp105028_25)))
(assert (= temp105028_27 #x0000000000000004))
(assert (= temp105028_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp105028_27)))
(assert (= temp105028_29 #x0000000000000005))
(assert (= temp105028_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp105028_29)))
(assert (= temp105028_31 #x0000000000000004))
(assert (= temp105028_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp105028_31)))
(assert (= var77832 temp105028_32))
(assert (= temp105028_33 #x0000000000000004))
(assert (= temp105028_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp105028_33)))
(assert (= var77833 temp105028_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp105028_35 #x0000000000000001))
(assert (= var77834 temp105028_35))
(assert (= temp105028_36 #x0000000000000001))
(assert (= var275510 temp105028_36))
(assert (= temp105028_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp105028_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp105028_38 #x0000000000000000))
(assert (= var275528 temp105028_38))
(assert (= temp105028_39 #x0000000000000001))
(assert (= var406582 temp105028_39))
(assert (= temp105028_40 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp105028_40) #x0000000000000001 #x0000000000000000)))
(assert (= temp105028_41 #x0000000000000000))
(assert (= var406600 temp105028_41))
(assert (= temp105028_42 #x0000000000000001))
(assert (= var537654 temp105028_42))
(assert (= temp105028_43 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp105028_43) #x0000000000000001 #x0000000000000000)))
(assert (= temp105028_44 #x0000000000000000))
(assert (= var537672 temp105028_44))
(assert (= temp105028_46 #x00000000000000ff))
(assert (= temp105028_45 temp105028_46))
(assert (= temp105028_48 #x00000000000000ff))
(assert (= temp105028_47 temp105028_48))
(assert (= temp105028_50 #x00000000000000ff))
(assert (= temp105028_49 temp105028_50))
(assert (= temp105028_51 #x0000000000000000))
(assert (= var730187 temp105028_51))
(assert (= var730166 var730187))
(assert (= var664598 var730166))
(assert (= temp105028_52 #x0000000000000000))
(assert (= var664598 temp105028_52))
(assert (= temp105028_53 #x0000000000000000))
(assert (= var861259 temp105028_53))
(assert (= var861238 var861259))
(assert (= var664611 var861238))
(assert (= temp105028_54 #x0000000000000000))
(assert (= var664611 temp105028_54))
(assert (= temp105028_56 #x0000000000000000))
(assert (= temp105028_55 temp105028_56))
(assert (= temp105028_58 #x0000000000000000))
(assert (= temp105028_57 temp105028_58))
(assert (= temp105028_60 #x0000000000000000))
(assert (= temp105028_59 temp105028_60))
(assert (= temp105028_61 #x0000000000008000))
(assert (= var992306 temp105028_61))
(assert (= temp105028_62 #x0000000000000001))
(assert (= var992307
   (ite (bvslt temp105028_59 temp105028_62)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var992308 (ite (= var992307 #x0000000000000001) var992306 temp105028_59)))
(assert (= var992304 var992308))
(assert (= var599004 var992304))
(assert (= temp105028_63 #x0000000000040000))
(assert (= var1057842 temp105028_63))
(assert (= temp105028_64 #x0000000000000001))
(assert (= var1057843
   (ite (bvslt temp105028_57 temp105028_64)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1057844 (ite (= var1057843 #x0000000000000001) var1057842 temp105028_57)))
(assert (= var1057840 var1057844))
(assert (= var599011 var1057840))
(assert (= temp105028_65 #x0000000000200000))
(assert (= var1123378 temp105028_65))
(assert (= temp105028_66 #x0000000000000001))
(assert (= var1123379
   (ite (bvslt temp105028_55 temp105028_66)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1123380 (ite (= var1123379 #x0000000000000001) var1123378 temp105028_55)))
(assert (= var1123376 var1123380))
(assert (= var599016 var1123376))
(assert (= var78095 var599016))
(assert (= temp105028_67 #x0000000000000003))
(assert (= temp105028_68 #xffffffffffffffff))
(assert (= var78179 (bvadd var78096 temp105028_68)))
(assert (= temp105028_70 #x0000000000000001))
(assert (= temp105028_69 temp105028_70))
(assert (= temp105028_72 #x0000000000000001))
(assert (= temp105028_71 temp105028_72))
(model-add temp105028_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp105028_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


