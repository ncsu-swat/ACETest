(declare-fun temp100025_1 () (_ BitVec 64))
(declare-fun temp100025_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp100025_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp100025_4 () (_ BitVec 64))
(declare-fun temp100025_5 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp100025_6 () (_ BitVec 64))
(declare-fun temp100025_7 () (_ BitVec 64))
(declare-fun temp100025_8 () (_ BitVec 64))
(declare-fun temp100025_9 () (_ BitVec 64))
(declare-fun temp100025_10 () (_ BitVec 64))
(declare-fun temp100025_11 () (_ BitVec 64))
(declare-fun temp100025_12 () (_ BitVec 64))
(declare-fun temp100025_13 () (_ BitVec 64))
(declare-fun temp100025_14 () (_ BitVec 64))
(declare-fun temp100025_15 () (_ BitVec 64))
(declare-fun temp100025_16 () (_ BitVec 64))
(declare-fun temp100025_17 () (_ BitVec 64))
(declare-fun temp100025_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp100025_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp100025_20 () (_ BitVec 64))
(declare-fun temp100025_21 () (_ BitVec 64))
(declare-fun temp100025_22 () (_ BitVec 64))
(declare-fun temp100025_23 () (_ BitVec 64))
(declare-fun temp100025_24 () (_ BitVec 64))
(declare-fun temp100025_25 () (_ BitVec 64))
(declare-fun temp100025_26 () (_ BitVec 64))
(declare-fun temp100025_27 () (_ BitVec 64))
(declare-fun temp100025_28 () (_ BitVec 64))
(declare-fun temp100025_29 () (_ BitVec 64))
(declare-fun temp100025_30 () (_ BitVec 64))
(declare-fun temp100025_31 () (_ BitVec 64))
(declare-fun temp100025_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp100025_33 () (_ BitVec 64))
(declare-fun temp100025_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp100025_35 () (_ BitVec 64))
(declare-fun temp100025_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp100025_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp100025_38 () (_ BitVec 64))
(declare-fun temp100025_40 () (_ BitVec 64))
(declare-fun temp100025_39 () (_ BitVec 64))
(declare-fun temp100025_41 () (_ BitVec 64))
(declare-fun var472118 () (_ BitVec 64))
(declare-fun temp100025_42 () (_ BitVec 64))
(declare-fun var472136 () (_ BitVec 64))
(declare-fun temp100025_43 () (_ BitVec 64))
(declare-fun temp100025_45 () (_ BitVec 64))
(declare-fun temp100025_44 () (_ BitVec 64))
(declare-fun temp100025_46 () (_ BitVec 64))
(declare-fun var668726 () (_ BitVec 64))
(declare-fun temp100025_47 () (_ BitVec 64))
(declare-fun var668744 () (_ BitVec 64))
(declare-fun temp100025_48 () (_ BitVec 64))
(declare-fun temp100025_50 () (_ BitVec 64))
(declare-fun temp100025_49 () (_ BitVec 64))
(declare-fun temp100025_52 () (_ BitVec 64))
(declare-fun temp100025_51 () (_ BitVec 64))
(declare-fun temp100025_54 () (_ BitVec 64))
(declare-fun temp100025_53 () (_ BitVec 64))
(declare-fun temp100025_56 () (_ BitVec 64))
(declare-fun temp100025_55 () (_ BitVec 64))
(declare-fun temp100025_58 () (_ BitVec 64))
(declare-fun temp100025_57 () (_ BitVec 64))
(declare-fun temp100025_59 () (_ BitVec 64))
(declare-fun var861259 () (_ BitVec 64))
(declare-fun var861238 () (_ BitVec 64))
(declare-fun var795670 () (_ BitVec 64))
(declare-fun temp100025_60 () (_ BitVec 64))
(declare-fun temp100025_61 () (_ BitVec 64))
(declare-fun var926795 () (_ BitVec 64))
(declare-fun var926774 () (_ BitVec 64))
(declare-fun var795680 () (_ BitVec 64))
(declare-fun temp100025_62 () (_ BitVec 64))
(declare-fun temp100025_63 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp100025_64 () (_ BitVec 64))
(declare-fun var1254450 () (_ BitVec 64))
(declare-fun temp100025_65 () (_ BitVec 64))
(declare-fun var1319986 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp100025_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_filter_NAMEEND_DIM temp100025_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp100025_2 #x0000000000000001))
(assert (= var77740 temp100025_2))
(assert (= temp100025_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp100025_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp100025_4 #x0000000000000001))
(assert (= var77770 temp100025_4))
(assert (= temp100025_5 #x0000000000000000))
(assert (= temp100025_6 (select ARGNAME_filter_NAMEEND_DIMSIZE temp100025_5)))
(assert (= temp100025_7 #x0000000000000001))
(assert (= temp100025_8 (select ARGNAME_filter_NAMEEND_DIMSIZE temp100025_7)))
(assert (= temp100025_9 #x0000000000000002))
(assert (= temp100025_10 (select ARGNAME_filter_NAMEEND_DIMSIZE temp100025_9)))
(assert (= temp100025_11 #x0000000000000003))
(assert (= temp100025_12 (select ARGNAME_filter_NAMEEND_DIMSIZE temp100025_11)))
(assert (= temp100025_13 #x0000000000000004))
(assert (= temp100025_14 (select ARGNAME_filter_NAMEEND_DIMSIZE temp100025_13)))
(assert (= temp100025_15 #x0000000000000005))
(assert (= temp100025_16 (select ARGNAME_filter_NAMEEND_DIMSIZE temp100025_15)))
(assert (= temp100025_17 #x0000000000000003))
(assert (= temp100025_18 (select ARGNAME_filter_NAMEEND_DIMSIZE temp100025_17)))
(assert (= var77799 temp100025_18))
(assert (= temp100025_19 #x0000000000000000))
(assert (= temp100025_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp100025_19)))
(assert (= temp100025_21 #x0000000000000001))
(assert (= temp100025_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp100025_21)))
(assert (= temp100025_23 #x0000000000000002))
(assert (= temp100025_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp100025_23)))
(assert (= temp100025_25 #x0000000000000003))
(assert (= temp100025_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp100025_25)))
(assert (= temp100025_27 #x0000000000000004))
(assert (= temp100025_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp100025_27)))
(assert (= temp100025_29 #x0000000000000005))
(assert (= temp100025_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp100025_29)))
(assert (= temp100025_31 #x0000000000000004))
(assert (= temp100025_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp100025_31)))
(assert (= var77832 temp100025_32))
(assert (= temp100025_33 #x0000000000000004))
(assert (= temp100025_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp100025_33)))
(assert (= var77833 temp100025_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp100025_35 #x0000000000000001))
(assert (= var77834 temp100025_35))
(assert (= temp100025_36 #x0000000000000001))
(assert (= var275510 temp100025_36))
(assert (= temp100025_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp100025_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp100025_38 #x0000000000000000))
(assert (= var275528 temp100025_38))
(assert (= temp100025_40 #x0000000000000000))
(assert (= temp100025_39 temp100025_40))
(assert (= temp100025_41 #x0000000000000001))
(assert (= var472118 temp100025_41))
(assert (= temp100025_42 #x0000000000000001))
(assert (= var472136
   (ite (bvslt var472118 temp100025_42) #x0000000000000001 #x0000000000000000)))
(assert (= temp100025_43 #x0000000000000000))
(assert (= var472136 temp100025_43))
(assert (= temp100025_45 #x0000000000000000))
(assert (= temp100025_44 temp100025_45))
(assert (= temp100025_46 #x0000000000000001))
(assert (= var668726 temp100025_46))
(assert (= temp100025_47 #x0000000000000001))
(assert (= var668744
   (ite (bvslt var668726 temp100025_47) #x0000000000000001 #x0000000000000000)))
(assert (= temp100025_48 #x0000000000000000))
(assert (= var668744 temp100025_48))
(assert (= temp100025_50 #x0000000000000000))
(assert (= temp100025_49 temp100025_50))
(assert (= temp100025_52 #x0000000000000000))
(assert (= temp100025_51 temp100025_52))
(assert (= temp100025_54 #x00000000000000ff))
(assert (= temp100025_53 temp100025_54))
(assert (= temp100025_56 #x00000000000000ff))
(assert (= temp100025_55 temp100025_56))
(assert (= temp100025_58 #x00000000000000ff))
(assert (= temp100025_57 temp100025_58))
(assert (= temp100025_59 #x0000000000000000))
(assert (= var861259 temp100025_59))
(assert (= var861238 var861259))
(assert (= var795670 var861238))
(assert (= temp100025_60 #x0000000000000000))
(assert (= var795670 temp100025_60))
(assert (= temp100025_61 #x0000000000000000))
(assert (= var926795 temp100025_61))
(assert (= var926774 var926795))
(assert (= var795680 var926774))
(assert (= temp100025_62 #x0000000000000000))
(assert (= var795680 temp100025_62))
(assert (= temp100025_63 #x0000000000008000))
(assert (= var1188914 temp100025_63))
(assert (= temp100025_64 #x0000000000040000))
(assert (= var1254450 temp100025_64))
(assert (= temp100025_65 #x0000000000200000))
(assert (= var1319986 temp100025_65))
(model-add temp100025_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp100025_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))



