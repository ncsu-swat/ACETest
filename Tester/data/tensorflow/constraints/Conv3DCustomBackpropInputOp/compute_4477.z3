(declare-fun temp6668_1 () (_ BitVec 64))
(declare-fun temp6668_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_1_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp6668_3 () (_ BitVec 64))
(declare-fun ARGNAME_input_2_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp6668_4 () (_ BitVec 64))
(declare-fun temp6668_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_1_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp6668_6 () (_ BitVec 64))
(declare-fun temp6668_7 () (_ BitVec 64))
(declare-fun temp6668_8 () (_ BitVec 64))
(declare-fun temp6668_9 () (_ BitVec 64))
(declare-fun temp6668_10 () (_ BitVec 64))
(declare-fun temp6668_11 () (_ BitVec 64))
(declare-fun temp6668_12 () (_ BitVec 64))
(declare-fun temp6668_13 () (_ BitVec 64))
(declare-fun temp6668_14 () (_ BitVec 64))
(declare-fun temp6668_15 () (_ BitVec 64))
(declare-fun temp6668_16 () (_ BitVec 64))
(declare-fun temp6668_17 () (_ BitVec 64))
(declare-fun temp6668_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp6668_19 () (_ BitVec 64))
(declare-fun ARGNAME_input_2_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp6668_20 () (_ BitVec 64))
(declare-fun temp6668_21 () (_ BitVec 64))
(declare-fun temp6668_22 () (_ BitVec 64))
(declare-fun temp6668_23 () (_ BitVec 64))
(declare-fun temp6668_24 () (_ BitVec 64))
(declare-fun temp6668_25 () (_ BitVec 64))
(declare-fun temp6668_26 () (_ BitVec 64))
(declare-fun temp6668_27 () (_ BitVec 64))
(declare-fun temp6668_28 () (_ BitVec 64))
(declare-fun temp6668_29 () (_ BitVec 64))
(declare-fun temp6668_30 () (_ BitVec 64))
(declare-fun temp6668_31 () (_ BitVec 64))
(declare-fun temp6668_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp6668_33 () (_ BitVec 64))
(declare-fun temp6668_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp6668_35 () (_ BitVec 64))
(declare-fun temp6668_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp6668_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp6668_38 () (_ BitVec 64))
(declare-fun temp6668_40 () (_ BitVec 64))
(declare-fun temp6668_39 () (_ BitVec 64))
(declare-fun temp6668_42 () (_ BitVec 64))
(declare-fun temp6668_41 () (_ BitVec 64))
(declare-fun temp6668_43 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp6668_44 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp6668_45 () (_ BitVec 64))
(declare-fun temp6668_47 () (_ BitVec 64))
(declare-fun temp6668_46 () (_ BitVec 64))
(declare-fun temp6668_49 () (_ BitVec 64))
(declare-fun temp6668_48 () (_ BitVec 64))
(declare-fun temp6668_50 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp6668_51 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp6668_52 () (_ BitVec 64))
(declare-fun temp6668_54 () (_ BitVec 64))
(declare-fun temp6668_53 () (_ BitVec 64))
(declare-fun temp6668_56 () (_ BitVec 64))
(declare-fun temp6668_55 () (_ BitVec 64))
(declare-fun temp6668_58 () (_ BitVec 64))
(declare-fun temp6668_57 () (_ BitVec 64))
(declare-fun temp6668_59 () (_ BitVec 64))
(declare-fun var730187 () (_ BitVec 64))
(declare-fun var730166 () (_ BitVec 64))
(declare-fun var664598 () (_ BitVec 64))
(declare-fun temp6668_60 () (_ BitVec 64))
(declare-fun temp6668_61 () (_ BitVec 64))
(declare-fun var795723 () (_ BitVec 64))
(declare-fun var795702 () (_ BitVec 64))
(declare-fun var664608 () (_ BitVec 64))
(declare-fun temp6668_62 () (_ BitVec 64))
(declare-fun temp6668_63 () (_ BitVec 64))
(declare-fun var861259 () (_ BitVec 64))
(declare-fun var861238 () (_ BitVec 64))
(declare-fun var664611 () (_ BitVec 64))
(declare-fun temp6668_64 () (_ BitVec 64))
(declare-fun temp6668_65 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp6668_66 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp6668_67 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp6668_68 () (_ BitVec 64))
(declare-fun var78184 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp6668_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_input_1_NAMEEND_DIM temp6668_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6668_2 #x0000000000000001))
(assert (= var77740 temp6668_2))
(assert (= temp6668_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_input_2_NAMEEND_DIM temp6668_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6668_4 #x0000000000000001))
(assert (= var77770 temp6668_4))
(assert (= temp6668_5 #x0000000000000000))
(assert (= temp6668_6 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp6668_5)))
(assert (= temp6668_7 #x0000000000000001))
(assert (= temp6668_8 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp6668_7)))
(assert (= temp6668_9 #x0000000000000002))
(assert (= temp6668_10 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp6668_9)))
(assert (= temp6668_11 #x0000000000000003))
(assert (= temp6668_12 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp6668_11)))
(assert (= temp6668_13 #x0000000000000004))
(assert (= temp6668_14 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp6668_13)))
(assert (= temp6668_15 #x0000000000000005))
(assert (= temp6668_16 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp6668_15)))
(assert (= temp6668_17 #x0000000000000003))
(assert (= temp6668_18 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp6668_17)))
(assert (= var77799 temp6668_18))
(assert (= temp6668_19 #x0000000000000000))
(assert (= temp6668_20 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp6668_19)))
(assert (= temp6668_21 #x0000000000000001))
(assert (= temp6668_22 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp6668_21)))
(assert (= temp6668_23 #x0000000000000002))
(assert (= temp6668_24 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp6668_23)))
(assert (= temp6668_25 #x0000000000000003))
(assert (= temp6668_26 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp6668_25)))
(assert (= temp6668_27 #x0000000000000004))
(assert (= temp6668_28 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp6668_27)))
(assert (= temp6668_29 #x0000000000000005))
(assert (= temp6668_30 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp6668_29)))
(assert (= temp6668_31 #x0000000000000004))
(assert (= temp6668_32 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp6668_31)))
(assert (= var77832 temp6668_32))
(assert (= temp6668_33 #x0000000000000004))
(assert (= temp6668_34 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp6668_33)))
(assert (= var77833 temp6668_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp6668_35 #x0000000000000001))
(assert (= var77834 temp6668_35))
(assert (= temp6668_36 #x0000000000000001))
(assert (= var275510 temp6668_36))
(assert (= temp6668_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp6668_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp6668_38 #x0000000000000000))
(assert (= var275528 temp6668_38))
(assert (= temp6668_40 #x0000000000000000))
(assert (= temp6668_39 temp6668_40))
(assert (= temp6668_42 #x0000000000000000))
(assert (= temp6668_41 temp6668_42))
(assert (= temp6668_43 #x0000000000000001))
(assert (= var406582 temp6668_43))
(assert (= temp6668_44 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp6668_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp6668_45 #x0000000000000000))
(assert (= var406600 temp6668_45))
(assert (= temp6668_47 #x0000000000000000))
(assert (= temp6668_46 temp6668_47))
(assert (= temp6668_49 #x0000000000000000))
(assert (= temp6668_48 temp6668_49))
(assert (= temp6668_50 #x0000000000000001))
(assert (= var537654 temp6668_50))
(assert (= temp6668_51 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp6668_51) #x0000000000000001 #x0000000000000000)))
(assert (= temp6668_52 #x0000000000000000))
(assert (= var537672 temp6668_52))
(assert (= temp6668_54 #x00000000000000ff))
(assert (= temp6668_53 temp6668_54))
(assert (= temp6668_56 #x00000000000000ff))
(assert (= temp6668_55 temp6668_56))
(assert (= temp6668_58 #x00000000000000ff))
(assert (= temp6668_57 temp6668_58))
(assert (= temp6668_59 #x0000000000000000))
(assert (= var730187 temp6668_59))
(assert (= var730166 var730187))
(assert (= var664598 var730166))
(assert (= temp6668_60 #x0000000000000000))
(assert (= var664598 temp6668_60))
(assert (= temp6668_61 #x0000000000000000))
(assert (= var795723 temp6668_61))
(assert (= var795702 var795723))
(assert (= var664608 var795702))
(assert (= temp6668_62 #x0000000000000000))
(assert (= var664608 temp6668_62))
(assert (= temp6668_63 #x0000000000000000))
(assert (= var861259 temp6668_63))
(assert (= var861238 var861259))
(assert (= var664611 var861238))
(assert (= temp6668_64 #x0000000000000000))
(assert (= var664611 temp6668_64))
(assert (= temp6668_65 #x0000000000008000))
(assert (= var1057842 temp6668_65))
(assert (= temp6668_66 #x0000000000040000))
(assert (= var1123378 temp6668_66))
(assert (= temp6668_67 #x0000000000200000))
(assert (= var1188914 temp6668_67))
(assert (= temp6668_68 #x0000000000000001))
(assert (= var78184 temp6668_68))
(model-add temp6668_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp6668_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_1_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))

