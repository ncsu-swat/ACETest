(declare-fun temp140278_1 () (_ BitVec 64))
(declare-fun temp140278_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp140278_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp140278_4 () (_ BitVec 64))
(declare-fun temp140278_5 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp140278_6 () (_ BitVec 64))
(declare-fun temp140278_7 () (_ BitVec 64))
(declare-fun temp140278_8 () (_ BitVec 64))
(declare-fun temp140278_9 () (_ BitVec 64))
(declare-fun temp140278_10 () (_ BitVec 64))
(declare-fun temp140278_11 () (_ BitVec 64))
(declare-fun temp140278_12 () (_ BitVec 64))
(declare-fun temp140278_13 () (_ BitVec 64))
(declare-fun temp140278_14 () (_ BitVec 64))
(declare-fun temp140278_15 () (_ BitVec 64))
(declare-fun temp140278_16 () (_ BitVec 64))
(declare-fun temp140278_17 () (_ BitVec 64))
(declare-fun temp140278_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp140278_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp140278_20 () (_ BitVec 64))
(declare-fun temp140278_21 () (_ BitVec 64))
(declare-fun temp140278_22 () (_ BitVec 64))
(declare-fun temp140278_23 () (_ BitVec 64))
(declare-fun temp140278_24 () (_ BitVec 64))
(declare-fun temp140278_25 () (_ BitVec 64))
(declare-fun temp140278_26 () (_ BitVec 64))
(declare-fun temp140278_27 () (_ BitVec 64))
(declare-fun temp140278_28 () (_ BitVec 64))
(declare-fun temp140278_29 () (_ BitVec 64))
(declare-fun temp140278_30 () (_ BitVec 64))
(declare-fun temp140278_31 () (_ BitVec 64))
(declare-fun temp140278_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp140278_33 () (_ BitVec 64))
(declare-fun temp140278_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp140278_35 () (_ BitVec 64))
(declare-fun temp140278_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp140278_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp140278_38 () (_ BitVec 64))
(declare-fun temp140278_40 () (_ BitVec 64))
(declare-fun temp140278_39 () (_ BitVec 64))
(declare-fun temp140278_42 () (_ BitVec 64))
(declare-fun temp140278_41 () (_ BitVec 64))
(declare-fun temp140278_43 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp140278_44 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp140278_45 () (_ BitVec 64))
(declare-fun temp140278_47 () (_ BitVec 64))
(declare-fun temp140278_46 () (_ BitVec 64))
(declare-fun temp140278_49 () (_ BitVec 64))
(declare-fun temp140278_48 () (_ BitVec 64))
(declare-fun temp140278_50 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp140278_51 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp140278_52 () (_ BitVec 64))
(declare-fun temp140278_54 () (_ BitVec 64))
(declare-fun temp140278_53 () (_ BitVec 64))
(declare-fun temp140278_56 () (_ BitVec 64))
(declare-fun temp140278_55 () (_ BitVec 64))
(declare-fun temp140278_58 () (_ BitVec 64))
(declare-fun temp140278_57 () (_ BitVec 64))
(declare-fun temp140278_59 () (_ BitVec 64))
(declare-fun var795723 () (_ BitVec 64))
(declare-fun var795702 () (_ BitVec 64))
(declare-fun var664608 () (_ BitVec 64))
(declare-fun temp140278_60 () (_ BitVec 64))
(declare-fun temp140278_61 () (_ BitVec 64))
(declare-fun var861259 () (_ BitVec 64))
(declare-fun var861238 () (_ BitVec 64))
(declare-fun var664611 () (_ BitVec 64))
(declare-fun temp140278_62 () (_ BitVec 64))
(declare-fun temp140278_63 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp140278_64 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp140278_65 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp140278_67 () (_ BitVec 64))
(declare-fun temp140278_66 () (_ BitVec 64))
(declare-fun temp140278_69 () (_ BitVec 64))
(declare-fun temp140278_68 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp140278_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_filter_NAMEEND_DIM temp140278_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp140278_2 #x0000000000000001))
(assert (= var77740 temp140278_2))
(assert (= temp140278_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp140278_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp140278_4 #x0000000000000001))
(assert (= var77770 temp140278_4))
(assert (= temp140278_5 #x0000000000000000))
(assert (= temp140278_6 (select ARGNAME_filter_NAMEEND_DIMSIZE temp140278_5)))
(assert (= temp140278_7 #x0000000000000001))
(assert (= temp140278_8 (select ARGNAME_filter_NAMEEND_DIMSIZE temp140278_7)))
(assert (= temp140278_9 #x0000000000000002))
(assert (= temp140278_10 (select ARGNAME_filter_NAMEEND_DIMSIZE temp140278_9)))
(assert (= temp140278_11 #x0000000000000003))
(assert (= temp140278_12 (select ARGNAME_filter_NAMEEND_DIMSIZE temp140278_11)))
(assert (= temp140278_13 #x0000000000000004))
(assert (= temp140278_14 (select ARGNAME_filter_NAMEEND_DIMSIZE temp140278_13)))
(assert (= temp140278_15 #x0000000000000005))
(assert (= temp140278_16 (select ARGNAME_filter_NAMEEND_DIMSIZE temp140278_15)))
(assert (= temp140278_17 #x0000000000000003))
(assert (= temp140278_18 (select ARGNAME_filter_NAMEEND_DIMSIZE temp140278_17)))
(assert (= var77799 temp140278_18))
(assert (= temp140278_19 #x0000000000000000))
(assert (= temp140278_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp140278_19)))
(assert (= temp140278_21 #x0000000000000001))
(assert (= temp140278_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp140278_21)))
(assert (= temp140278_23 #x0000000000000002))
(assert (= temp140278_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp140278_23)))
(assert (= temp140278_25 #x0000000000000003))
(assert (= temp140278_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp140278_25)))
(assert (= temp140278_27 #x0000000000000004))
(assert (= temp140278_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp140278_27)))
(assert (= temp140278_29 #x0000000000000005))
(assert (= temp140278_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp140278_29)))
(assert (= temp140278_31 #x0000000000000004))
(assert (= temp140278_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp140278_31)))
(assert (= var77832 temp140278_32))
(assert (= temp140278_33 #x0000000000000004))
(assert (= temp140278_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp140278_33)))
(assert (= var77833 temp140278_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp140278_35 #x0000000000000001))
(assert (= var77834 temp140278_35))
(assert (= temp140278_36 #x0000000000000001))
(assert (= var275510 temp140278_36))
(assert (= temp140278_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp140278_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp140278_38 #x0000000000000000))
(assert (= var275528 temp140278_38))
(assert (= temp140278_40 #x0000000000000000))
(assert (= temp140278_39 temp140278_40))
(assert (= temp140278_42 #x0000000000000000))
(assert (= temp140278_41 temp140278_42))
(assert (= temp140278_43 #x0000000000000001))
(assert (= var406582 temp140278_43))
(assert (= temp140278_44 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp140278_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp140278_45 #x0000000000000000))
(assert (= var406600 temp140278_45))
(assert (= temp140278_47 #x0000000000000000))
(assert (= temp140278_46 temp140278_47))
(assert (= temp140278_49 #x0000000000000000))
(assert (= temp140278_48 temp140278_49))
(assert (= temp140278_50 #x0000000000000001))
(assert (= var537654 temp140278_50))
(assert (= temp140278_51 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp140278_51) #x0000000000000001 #x0000000000000000)))
(assert (= temp140278_52 #x0000000000000000))
(assert (= var537672 temp140278_52))
(assert (= temp140278_54 #x00000000000000ff))
(assert (= temp140278_53 temp140278_54))
(assert (= temp140278_56 #x00000000000000ff))
(assert (= temp140278_55 temp140278_56))
(assert (= temp140278_58 #x00000000000000ff))
(assert (= temp140278_57 temp140278_58))
(assert (= temp140278_59 #x0000000000000000))
(assert (= var795723 temp140278_59))
(assert (= var795702 var795723))
(assert (= var664608 var795702))
(assert (= temp140278_60 #x0000000000000000))
(assert (= var664608 temp140278_60))
(assert (= temp140278_61 #x0000000000000000))
(assert (= var861259 temp140278_61))
(assert (= var861238 var861259))
(assert (= var664611 var861238))
(assert (= temp140278_62 #x0000000000000000))
(assert (= var664611 temp140278_62))
(assert (= temp140278_63 #x0000000000008000))
(assert (= var1057842 temp140278_63))
(assert (= temp140278_64 #x0000000000040000))
(assert (= var1123378 temp140278_64))
(assert (= temp140278_65 #x0000000000200000))
(assert (= var1188914 temp140278_65))
(assert (= temp140278_67 #x0000000000000001))
(assert (= temp140278_66 temp140278_67))
(assert (= temp140278_69 #x0000000000000001))
(assert (= temp140278_68 temp140278_69))
(model-add temp140278_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp140278_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


