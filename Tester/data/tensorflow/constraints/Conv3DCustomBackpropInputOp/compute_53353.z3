(declare-fun temp80042_1 () (_ BitVec 64))
(declare-fun temp80042_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp80042_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp80042_4 () (_ BitVec 64))
(declare-fun temp80042_5 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp80042_6 () (_ BitVec 64))
(declare-fun temp80042_7 () (_ BitVec 64))
(declare-fun temp80042_8 () (_ BitVec 64))
(declare-fun temp80042_9 () (_ BitVec 64))
(declare-fun temp80042_10 () (_ BitVec 64))
(declare-fun temp80042_11 () (_ BitVec 64))
(declare-fun temp80042_12 () (_ BitVec 64))
(declare-fun temp80042_13 () (_ BitVec 64))
(declare-fun temp80042_14 () (_ BitVec 64))
(declare-fun temp80042_15 () (_ BitVec 64))
(declare-fun temp80042_16 () (_ BitVec 64))
(declare-fun temp80042_17 () (_ BitVec 64))
(declare-fun temp80042_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp80042_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp80042_20 () (_ BitVec 64))
(declare-fun temp80042_21 () (_ BitVec 64))
(declare-fun temp80042_22 () (_ BitVec 64))
(declare-fun temp80042_23 () (_ BitVec 64))
(declare-fun temp80042_24 () (_ BitVec 64))
(declare-fun temp80042_25 () (_ BitVec 64))
(declare-fun temp80042_26 () (_ BitVec 64))
(declare-fun temp80042_27 () (_ BitVec 64))
(declare-fun temp80042_28 () (_ BitVec 64))
(declare-fun temp80042_29 () (_ BitVec 64))
(declare-fun temp80042_30 () (_ BitVec 64))
(declare-fun temp80042_31 () (_ BitVec 64))
(declare-fun temp80042_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp80042_33 () (_ BitVec 64))
(declare-fun temp80042_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp80042_35 () (_ BitVec 64))
(declare-fun temp80042_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp80042_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp80042_38 () (_ BitVec 64))
(declare-fun temp80042_40 () (_ BitVec 64))
(declare-fun temp80042_39 () (_ BitVec 64))
(declare-fun temp80042_41 () (_ BitVec 64))
(declare-fun var472118 () (_ BitVec 64))
(declare-fun temp80042_42 () (_ BitVec 64))
(declare-fun var472136 () (_ BitVec 64))
(declare-fun temp80042_43 () (_ BitVec 64))
(declare-fun temp80042_44 () (_ BitVec 64))
(declare-fun var603190 () (_ BitVec 64))
(declare-fun temp80042_45 () (_ BitVec 64))
(declare-fun var603208 () (_ BitVec 64))
(declare-fun temp80042_46 () (_ BitVec 64))
(declare-fun temp80042_48 () (_ BitVec 64))
(declare-fun temp80042_47 () (_ BitVec 64))
(declare-fun temp80042_50 () (_ BitVec 64))
(declare-fun temp80042_49 () (_ BitVec 64))
(declare-fun temp80042_52 () (_ BitVec 64))
(declare-fun temp80042_51 () (_ BitVec 64))
(declare-fun temp80042_54 () (_ BitVec 64))
(declare-fun temp80042_53 () (_ BitVec 64))
(declare-fun temp80042_56 () (_ BitVec 64))
(declare-fun temp80042_55 () (_ BitVec 64))
(declare-fun temp80042_57 () (_ BitVec 64))
(declare-fun var861259 () (_ BitVec 64))
(declare-fun var861238 () (_ BitVec 64))
(declare-fun var730144 () (_ BitVec 64))
(declare-fun temp80042_58 () (_ BitVec 64))
(declare-fun temp80042_59 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp80042_60 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp80042_61 () (_ BitVec 64))
(declare-fun var1254450 () (_ BitVec 64))
(declare-fun temp80042_62 () (_ BitVec 64))
(declare-fun var78184 () (_ BitVec 64))
(declare-fun temp80042_64 () (_ BitVec 64))
(declare-fun temp80042_63 () (_ BitVec 64))
(declare-fun temp80042_66 () (_ BitVec 64))
(declare-fun temp80042_65 () (_ BitVec 64))
(declare-fun temp80042_67 () (_ BitVec 64))
(declare-fun var78544 () (_ BitVec 64))
(declare-fun temp80042_68 () (_ BitVec 64))
(declare-fun var78545 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp80042_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_filter_NAMEEND_DIM temp80042_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp80042_2 #x0000000000000001))
(assert (= var77740 temp80042_2))
(assert (= temp80042_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp80042_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp80042_4 #x0000000000000001))
(assert (= var77770 temp80042_4))
(assert (= temp80042_5 #x0000000000000000))
(assert (= temp80042_6 (select ARGNAME_filter_NAMEEND_DIMSIZE temp80042_5)))
(assert (= temp80042_7 #x0000000000000001))
(assert (= temp80042_8 (select ARGNAME_filter_NAMEEND_DIMSIZE temp80042_7)))
(assert (= temp80042_9 #x0000000000000002))
(assert (= temp80042_10 (select ARGNAME_filter_NAMEEND_DIMSIZE temp80042_9)))
(assert (= temp80042_11 #x0000000000000003))
(assert (= temp80042_12 (select ARGNAME_filter_NAMEEND_DIMSIZE temp80042_11)))
(assert (= temp80042_13 #x0000000000000004))
(assert (= temp80042_14 (select ARGNAME_filter_NAMEEND_DIMSIZE temp80042_13)))
(assert (= temp80042_15 #x0000000000000005))
(assert (= temp80042_16 (select ARGNAME_filter_NAMEEND_DIMSIZE temp80042_15)))
(assert (= temp80042_17 #x0000000000000003))
(assert (= temp80042_18 (select ARGNAME_filter_NAMEEND_DIMSIZE temp80042_17)))
(assert (= var77799 temp80042_18))
(assert (= temp80042_19 #x0000000000000000))
(assert (= temp80042_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp80042_19)))
(assert (= temp80042_21 #x0000000000000001))
(assert (= temp80042_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp80042_21)))
(assert (= temp80042_23 #x0000000000000002))
(assert (= temp80042_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp80042_23)))
(assert (= temp80042_25 #x0000000000000003))
(assert (= temp80042_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp80042_25)))
(assert (= temp80042_27 #x0000000000000004))
(assert (= temp80042_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp80042_27)))
(assert (= temp80042_29 #x0000000000000005))
(assert (= temp80042_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp80042_29)))
(assert (= temp80042_31 #x0000000000000004))
(assert (= temp80042_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp80042_31)))
(assert (= var77832 temp80042_32))
(assert (= temp80042_33 #x0000000000000004))
(assert (= temp80042_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp80042_33)))
(assert (= var77833 temp80042_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp80042_35 #x0000000000000001))
(assert (= var77834 temp80042_35))
(assert (= temp80042_36 #x0000000000000001))
(assert (= var275510 temp80042_36))
(assert (= temp80042_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp80042_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp80042_38 #x0000000000000000))
(assert (= var275528 temp80042_38))
(assert (= temp80042_40 #x0000000000000000))
(assert (= temp80042_39 temp80042_40))
(assert (= temp80042_41 #x0000000000000001))
(assert (= var472118 temp80042_41))
(assert (= temp80042_42 #x0000000000000001))
(assert (= var472136
   (ite (bvslt var472118 temp80042_42) #x0000000000000001 #x0000000000000000)))
(assert (= temp80042_43 #x0000000000000000))
(assert (= var472136 temp80042_43))
(assert (= temp80042_44 #x0000000000000001))
(assert (= var603190 temp80042_44))
(assert (= temp80042_45 #x0000000000000001))
(assert (= var603208
   (ite (bvslt var603190 temp80042_45) #x0000000000000001 #x0000000000000000)))
(assert (= temp80042_46 #x0000000000000000))
(assert (= var603208 temp80042_46))
(assert (= temp80042_48 #x0000000000000000))
(assert (= temp80042_47 temp80042_48))
(assert (= temp80042_50 #x0000000000000000))
(assert (= temp80042_49 temp80042_50))
(assert (= temp80042_52 #x00000000000000ff))
(assert (= temp80042_51 temp80042_52))
(assert (= temp80042_54 #x00000000000000ff))
(assert (= temp80042_53 temp80042_54))
(assert (= temp80042_56 #x00000000000000ff))
(assert (= temp80042_55 temp80042_56))
(assert (= temp80042_57 #x0000000000000000))
(assert (= var861259 temp80042_57))
(assert (= var861238 var861259))
(assert (= var730144 var861238))
(assert (= temp80042_58 #x0000000000000000))
(assert (= var730144 temp80042_58))
(assert (= temp80042_59 #x0000000000008000))
(assert (= var1123378 temp80042_59))
(assert (= temp80042_60 #x0000000000040000))
(assert (= var1188914 temp80042_60))
(assert (= temp80042_61 #x0000000000200000))
(assert (= var1254450 temp80042_61))
(assert (= temp80042_62 #x0000000000000001))
(assert (= var78184 temp80042_62))
(assert (= temp80042_64 #x0000000000000001))
(assert (= temp80042_63 temp80042_64))
(assert (= temp80042_66 #x0000000000000001))
(assert (= temp80042_65 temp80042_66))
(assert (= temp80042_67 #x0000000000000000))
(assert (= var78544 temp80042_67))
(assert (= temp80042_68 #x0000000000000001))
(assert (= var78545 (bvadd var78544 temp80042_68)))
(model-add temp80042_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp80042_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


