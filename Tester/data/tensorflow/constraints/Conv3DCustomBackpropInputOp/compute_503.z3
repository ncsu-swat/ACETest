(declare-fun temp765_1 () (_ BitVec 64))
(declare-fun temp765_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp765_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp765_4 () (_ BitVec 64))
(declare-fun temp765_5 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp765_6 () (_ BitVec 64))
(declare-fun temp765_7 () (_ BitVec 64))
(declare-fun temp765_8 () (_ BitVec 64))
(declare-fun temp765_9 () (_ BitVec 64))
(declare-fun temp765_10 () (_ BitVec 64))
(declare-fun temp765_11 () (_ BitVec 64))
(declare-fun temp765_12 () (_ BitVec 64))
(declare-fun temp765_13 () (_ BitVec 64))
(declare-fun temp765_14 () (_ BitVec 64))
(declare-fun temp765_15 () (_ BitVec 64))
(declare-fun temp765_16 () (_ BitVec 64))
(declare-fun temp765_17 () (_ BitVec 64))
(declare-fun temp765_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp765_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp765_20 () (_ BitVec 64))
(declare-fun temp765_21 () (_ BitVec 64))
(declare-fun temp765_22 () (_ BitVec 64))
(declare-fun temp765_23 () (_ BitVec 64))
(declare-fun temp765_24 () (_ BitVec 64))
(declare-fun temp765_25 () (_ BitVec 64))
(declare-fun temp765_26 () (_ BitVec 64))
(declare-fun temp765_27 () (_ BitVec 64))
(declare-fun temp765_28 () (_ BitVec 64))
(declare-fun temp765_29 () (_ BitVec 64))
(declare-fun temp765_30 () (_ BitVec 64))
(declare-fun temp765_31 () (_ BitVec 64))
(declare-fun temp765_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp765_33 () (_ BitVec 64))
(declare-fun temp765_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp765_35 () (_ BitVec 64))
(declare-fun temp765_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp765_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp765_38 () (_ BitVec 64))
(declare-fun temp765_39 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp765_40 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp765_41 () (_ BitVec 64))
(declare-fun temp765_42 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp765_43 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp765_44 () (_ BitVec 64))
(declare-fun temp765_46 () (_ BitVec 64))
(declare-fun temp765_45 () (_ BitVec 64))
(declare-fun temp765_48 () (_ BitVec 64))
(declare-fun temp765_47 () (_ BitVec 64))
(declare-fun temp765_50 () (_ BitVec 64))
(declare-fun temp765_49 () (_ BitVec 64))
(declare-fun temp765_51 () (_ BitVec 64))
(declare-fun var730187 () (_ BitVec 64))
(declare-fun var730166 () (_ BitVec 64))
(declare-fun var664598 () (_ BitVec 64))
(declare-fun temp765_52 () (_ BitVec 64))
(declare-fun temp765_53 () (_ BitVec 64))
(declare-fun var795723 () (_ BitVec 64))
(declare-fun var795702 () (_ BitVec 64))
(declare-fun var664608 () (_ BitVec 64))
(declare-fun temp765_54 () (_ BitVec 64))
(declare-fun temp765_55 () (_ BitVec 64))
(declare-fun var861259 () (_ BitVec 64))
(declare-fun var861238 () (_ BitVec 64))
(declare-fun var664611 () (_ BitVec 64))
(declare-fun temp765_56 () (_ BitVec 64))
(declare-fun temp765_58 () (_ BitVec 64))
(declare-fun temp765_57 () (_ BitVec 64))
(declare-fun temp765_60 () (_ BitVec 64))
(declare-fun temp765_59 () (_ BitVec 64))
(declare-fun temp765_62 () (_ BitVec 64))
(declare-fun temp765_61 () (_ BitVec 64))
(declare-fun temp765_63 () (_ BitVec 64))
(declare-fun var992306 () (_ BitVec 64))
(declare-fun temp765_64 () (_ BitVec 64))
(declare-fun var992307 () (_ BitVec 64))
(declare-fun var992308 () (_ BitVec 64))
(declare-fun var992304 () (_ BitVec 64))
(declare-fun var599004 () (_ BitVec 64))
(declare-fun temp765_65 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp765_66 () (_ BitVec 64))
(declare-fun var1057843 () (_ BitVec 64))
(declare-fun var1057844 () (_ BitVec 64))
(declare-fun var1057840 () (_ BitVec 64))
(declare-fun var599011 () (_ BitVec 64))
(declare-fun temp765_67 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp765_68 () (_ BitVec 64))
(declare-fun var1123379 () (_ BitVec 64))
(declare-fun var1123380 () (_ BitVec 64))
(declare-fun var1123376 () (_ BitVec 64))
(declare-fun var599016 () (_ BitVec 64))
(declare-fun var78095 () (_ BitVec 64))
(declare-fun temp765_69 () (_ BitVec 64))
(declare-fun temp765_70 () (_ BitVec 64))
(declare-fun var78096 () (_ BitVec 64))
(declare-fun var78179 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp765_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_filter_NAMEEND_DIM temp765_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp765_2 #x0000000000000001))
(assert (= var77740 temp765_2))
(assert (= temp765_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp765_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp765_4 #x0000000000000001))
(assert (= var77770 temp765_4))
(assert (= temp765_5 #x0000000000000000))
(assert (= temp765_6 (select ARGNAME_filter_NAMEEND_DIMSIZE temp765_5)))
(assert (= temp765_7 #x0000000000000001))
(assert (= temp765_8 (select ARGNAME_filter_NAMEEND_DIMSIZE temp765_7)))
(assert (= temp765_9 #x0000000000000002))
(assert (= temp765_10 (select ARGNAME_filter_NAMEEND_DIMSIZE temp765_9)))
(assert (= temp765_11 #x0000000000000003))
(assert (= temp765_12 (select ARGNAME_filter_NAMEEND_DIMSIZE temp765_11)))
(assert (= temp765_13 #x0000000000000004))
(assert (= temp765_14 (select ARGNAME_filter_NAMEEND_DIMSIZE temp765_13)))
(assert (= temp765_15 #x0000000000000005))
(assert (= temp765_16 (select ARGNAME_filter_NAMEEND_DIMSIZE temp765_15)))
(assert (= temp765_17 #x0000000000000003))
(assert (= temp765_18 (select ARGNAME_filter_NAMEEND_DIMSIZE temp765_17)))
(assert (= var77799 temp765_18))
(assert (= temp765_19 #x0000000000000000))
(assert (= temp765_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp765_19)))
(assert (= temp765_21 #x0000000000000001))
(assert (= temp765_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp765_21)))
(assert (= temp765_23 #x0000000000000002))
(assert (= temp765_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp765_23)))
(assert (= temp765_25 #x0000000000000003))
(assert (= temp765_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp765_25)))
(assert (= temp765_27 #x0000000000000004))
(assert (= temp765_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp765_27)))
(assert (= temp765_29 #x0000000000000005))
(assert (= temp765_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp765_29)))
(assert (= temp765_31 #x0000000000000004))
(assert (= temp765_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp765_31)))
(assert (= var77832 temp765_32))
(assert (= temp765_33 #x0000000000000004))
(assert (= temp765_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp765_33)))
(assert (= var77833 temp765_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp765_35 #x0000000000000001))
(assert (= var77834 temp765_35))
(assert (= temp765_36 #x0000000000000001))
(assert (= var275510 temp765_36))
(assert (= temp765_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp765_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp765_38 #x0000000000000000))
(assert (= var275528 temp765_38))
(assert (= temp765_39 #x0000000000000001))
(assert (= var406582 temp765_39))
(assert (= temp765_40 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp765_40) #x0000000000000001 #x0000000000000000)))
(assert (= temp765_41 #x0000000000000000))
(assert (= var406600 temp765_41))
(assert (= temp765_42 #x0000000000000001))
(assert (= var537654 temp765_42))
(assert (= temp765_43 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp765_43) #x0000000000000001 #x0000000000000000)))
(assert (= temp765_44 #x0000000000000000))
(assert (= var537672 temp765_44))
(assert (= temp765_46 #x00000000000000ff))
(assert (= temp765_45 temp765_46))
(assert (= temp765_48 #x00000000000000ff))
(assert (= temp765_47 temp765_48))
(assert (= temp765_50 #x00000000000000ff))
(assert (= temp765_49 temp765_50))
(assert (= temp765_51 #x0000000000000000))
(assert (= var730187 temp765_51))
(assert (= var730166 var730187))
(assert (= var664598 var730166))
(assert (= temp765_52 #x0000000000000000))
(assert (= var664598 temp765_52))
(assert (= temp765_53 #x0000000000000000))
(assert (= var795723 temp765_53))
(assert (= var795702 var795723))
(assert (= var664608 var795702))
(assert (= temp765_54 #x0000000000000000))
(assert (= var664608 temp765_54))
(assert (= temp765_55 #x0000000000000000))
(assert (= var861259 temp765_55))
(assert (= var861238 var861259))
(assert (= var664611 var861238))
(assert (= temp765_56 #x0000000000000000))
(assert (= var664611 temp765_56))
(assert (= temp765_58 #x0000000000000000))
(assert (= temp765_57 temp765_58))
(assert (= temp765_60 #x0000000000000000))
(assert (= temp765_59 temp765_60))
(assert (= temp765_62 #x0000000000000000))
(assert (= temp765_61 temp765_62))
(assert (= temp765_63 #x0000000000008000))
(assert (= var992306 temp765_63))
(assert (= temp765_64 #x0000000000000001))
(assert (= var992307
   (ite (bvslt temp765_61 temp765_64) #x0000000000000001 #x0000000000000000)))
(assert (= var992308 (ite (= var992307 #x0000000000000001) var992306 temp765_61)))
(assert (= var992304 var992308))
(assert (= var599004 var992304))
(assert (= temp765_65 #x0000000000040000))
(assert (= var1057842 temp765_65))
(assert (= temp765_66 #x0000000000000001))
(assert (= var1057843
   (ite (bvslt temp765_59 temp765_66) #x0000000000000001 #x0000000000000000)))
(assert (= var1057844 (ite (= var1057843 #x0000000000000001) var1057842 temp765_59)))
(assert (= var1057840 var1057844))
(assert (= var599011 var1057840))
(assert (= temp765_67 #x0000000000200000))
(assert (= var1123378 temp765_67))
(assert (= temp765_68 #x0000000000000001))
(assert (= var1123379
   (ite (bvslt temp765_57 temp765_68) #x0000000000000001 #x0000000000000000)))
(assert (= var1123380 (ite (= var1123379 #x0000000000000001) var1123378 temp765_57)))
(assert (= var1123376 var1123380))
(assert (= var599016 var1123376))
(assert (= var78095 var599016))
(assert (= temp765_69 #x0000000000000003))
(assert (= temp765_70 #xffffffffffffffff))
(assert (= var78179 (bvadd var78096 temp765_70)))
(model-add temp765_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp765_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


