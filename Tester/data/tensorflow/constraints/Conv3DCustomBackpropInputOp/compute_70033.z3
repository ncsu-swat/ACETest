(declare-fun temp105052_1 () (_ BitVec 64))
(declare-fun temp105052_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp105052_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp105052_4 () (_ BitVec 64))
(declare-fun temp105052_5 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp105052_6 () (_ BitVec 64))
(declare-fun temp105052_7 () (_ BitVec 64))
(declare-fun temp105052_8 () (_ BitVec 64))
(declare-fun temp105052_9 () (_ BitVec 64))
(declare-fun temp105052_10 () (_ BitVec 64))
(declare-fun temp105052_11 () (_ BitVec 64))
(declare-fun temp105052_12 () (_ BitVec 64))
(declare-fun temp105052_13 () (_ BitVec 64))
(declare-fun temp105052_14 () (_ BitVec 64))
(declare-fun temp105052_15 () (_ BitVec 64))
(declare-fun temp105052_16 () (_ BitVec 64))
(declare-fun temp105052_17 () (_ BitVec 64))
(declare-fun temp105052_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp105052_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp105052_20 () (_ BitVec 64))
(declare-fun temp105052_21 () (_ BitVec 64))
(declare-fun temp105052_22 () (_ BitVec 64))
(declare-fun temp105052_23 () (_ BitVec 64))
(declare-fun temp105052_24 () (_ BitVec 64))
(declare-fun temp105052_25 () (_ BitVec 64))
(declare-fun temp105052_26 () (_ BitVec 64))
(declare-fun temp105052_27 () (_ BitVec 64))
(declare-fun temp105052_28 () (_ BitVec 64))
(declare-fun temp105052_29 () (_ BitVec 64))
(declare-fun temp105052_30 () (_ BitVec 64))
(declare-fun temp105052_31 () (_ BitVec 64))
(declare-fun temp105052_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp105052_33 () (_ BitVec 64))
(declare-fun temp105052_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp105052_35 () (_ BitVec 64))
(declare-fun temp105052_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp105052_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp105052_38 () (_ BitVec 64))
(declare-fun temp105052_39 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp105052_40 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp105052_41 () (_ BitVec 64))
(declare-fun temp105052_42 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp105052_43 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp105052_44 () (_ BitVec 64))
(declare-fun temp105052_46 () (_ BitVec 64))
(declare-fun temp105052_45 () (_ BitVec 64))
(declare-fun temp105052_48 () (_ BitVec 64))
(declare-fun temp105052_47 () (_ BitVec 64))
(declare-fun temp105052_50 () (_ BitVec 64))
(declare-fun temp105052_49 () (_ BitVec 64))
(declare-fun temp105052_51 () (_ BitVec 64))
(declare-fun var730187 () (_ BitVec 64))
(declare-fun var730166 () (_ BitVec 64))
(declare-fun var664598 () (_ BitVec 64))
(declare-fun temp105052_52 () (_ BitVec 64))
(declare-fun temp105052_53 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp105052_54 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp105052_55 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp105052_56 () (_ BitVec 64))
(declare-fun var78184 () (_ BitVec 64))
(declare-fun temp105052_58 () (_ BitVec 64))
(declare-fun temp105052_57 () (_ BitVec 64))
(declare-fun temp105052_60 () (_ BitVec 64))
(declare-fun temp105052_59 () (_ BitVec 64))
(declare-fun temp105052_61 () (_ BitVec 64))
(declare-fun var78544 () (_ BitVec 64))
(declare-fun temp105052_62 () (_ BitVec 64))
(declare-fun var78545 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp105052_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_filter_NAMEEND_DIM temp105052_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp105052_2 #x0000000000000001))
(assert (= var77740 temp105052_2))
(assert (= temp105052_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp105052_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp105052_4 #x0000000000000001))
(assert (= var77770 temp105052_4))
(assert (= temp105052_5 #x0000000000000000))
(assert (= temp105052_6 (select ARGNAME_filter_NAMEEND_DIMSIZE temp105052_5)))
(assert (= temp105052_7 #x0000000000000001))
(assert (= temp105052_8 (select ARGNAME_filter_NAMEEND_DIMSIZE temp105052_7)))
(assert (= temp105052_9 #x0000000000000002))
(assert (= temp105052_10 (select ARGNAME_filter_NAMEEND_DIMSIZE temp105052_9)))
(assert (= temp105052_11 #x0000000000000003))
(assert (= temp105052_12 (select ARGNAME_filter_NAMEEND_DIMSIZE temp105052_11)))
(assert (= temp105052_13 #x0000000000000004))
(assert (= temp105052_14 (select ARGNAME_filter_NAMEEND_DIMSIZE temp105052_13)))
(assert (= temp105052_15 #x0000000000000005))
(assert (= temp105052_16 (select ARGNAME_filter_NAMEEND_DIMSIZE temp105052_15)))
(assert (= temp105052_17 #x0000000000000003))
(assert (= temp105052_18 (select ARGNAME_filter_NAMEEND_DIMSIZE temp105052_17)))
(assert (= var77799 temp105052_18))
(assert (= temp105052_19 #x0000000000000000))
(assert (= temp105052_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp105052_19)))
(assert (= temp105052_21 #x0000000000000001))
(assert (= temp105052_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp105052_21)))
(assert (= temp105052_23 #x0000000000000002))
(assert (= temp105052_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp105052_23)))
(assert (= temp105052_25 #x0000000000000003))
(assert (= temp105052_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp105052_25)))
(assert (= temp105052_27 #x0000000000000004))
(assert (= temp105052_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp105052_27)))
(assert (= temp105052_29 #x0000000000000005))
(assert (= temp105052_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp105052_29)))
(assert (= temp105052_31 #x0000000000000004))
(assert (= temp105052_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp105052_31)))
(assert (= var77832 temp105052_32))
(assert (= temp105052_33 #x0000000000000004))
(assert (= temp105052_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp105052_33)))
(assert (= var77833 temp105052_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp105052_35 #x0000000000000001))
(assert (= var77834 temp105052_35))
(assert (= temp105052_36 #x0000000000000001))
(assert (= var275510 temp105052_36))
(assert (= temp105052_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp105052_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp105052_38 #x0000000000000000))
(assert (= var275528 temp105052_38))
(assert (= temp105052_39 #x0000000000000001))
(assert (= var406582 temp105052_39))
(assert (= temp105052_40 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp105052_40) #x0000000000000001 #x0000000000000000)))
(assert (= temp105052_41 #x0000000000000000))
(assert (= var406600 temp105052_41))
(assert (= temp105052_42 #x0000000000000001))
(assert (= var537654 temp105052_42))
(assert (= temp105052_43 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp105052_43) #x0000000000000001 #x0000000000000000)))
(assert (= temp105052_44 #x0000000000000000))
(assert (= var537672 temp105052_44))
(assert (= temp105052_46 #x00000000000000ff))
(assert (= temp105052_45 temp105052_46))
(assert (= temp105052_48 #x00000000000000ff))
(assert (= temp105052_47 temp105052_48))
(assert (= temp105052_50 #x00000000000000ff))
(assert (= temp105052_49 temp105052_50))
(assert (= temp105052_51 #x0000000000000000))
(assert (= var730187 temp105052_51))
(assert (= var730166 var730187))
(assert (= var664598 var730166))
(assert (= temp105052_52 #x0000000000000000))
(assert (= var664598 temp105052_52))
(assert (= temp105052_53 #x0000000000008000))
(assert (= var1057842 temp105052_53))
(assert (= temp105052_54 #x0000000000040000))
(assert (= var1123378 temp105052_54))
(assert (= temp105052_55 #x0000000000200000))
(assert (= var1188914 temp105052_55))
(assert (= temp105052_56 #x0000000000000001))
(assert (= var78184 temp105052_56))
(assert (= temp105052_58 #x0000000000000001))
(assert (= temp105052_57 temp105052_58))
(assert (= temp105052_60 #x0000000000000001))
(assert (= temp105052_59 temp105052_60))
(assert (= temp105052_61 #x0000000000000000))
(assert (= var78544 temp105052_61))
(assert (= temp105052_62 #x0000000000000001))
(assert (= var78545 (bvadd var78544 temp105052_62)))
(model-add temp105052_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp105052_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


