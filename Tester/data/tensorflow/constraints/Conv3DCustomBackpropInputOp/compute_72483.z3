(declare-fun temp108752_1 () (_ BitVec 64))
(declare-fun temp108752_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp108752_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp108752_4 () (_ BitVec 64))
(declare-fun temp108752_5 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp108752_6 () (_ BitVec 64))
(declare-fun temp108752_7 () (_ BitVec 64))
(declare-fun temp108752_8 () (_ BitVec 64))
(declare-fun temp108752_9 () (_ BitVec 64))
(declare-fun temp108752_10 () (_ BitVec 64))
(declare-fun temp108752_11 () (_ BitVec 64))
(declare-fun temp108752_12 () (_ BitVec 64))
(declare-fun temp108752_13 () (_ BitVec 64))
(declare-fun temp108752_14 () (_ BitVec 64))
(declare-fun temp108752_15 () (_ BitVec 64))
(declare-fun temp108752_16 () (_ BitVec 64))
(declare-fun temp108752_17 () (_ BitVec 64))
(declare-fun temp108752_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp108752_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp108752_20 () (_ BitVec 64))
(declare-fun temp108752_21 () (_ BitVec 64))
(declare-fun temp108752_22 () (_ BitVec 64))
(declare-fun temp108752_23 () (_ BitVec 64))
(declare-fun temp108752_24 () (_ BitVec 64))
(declare-fun temp108752_25 () (_ BitVec 64))
(declare-fun temp108752_26 () (_ BitVec 64))
(declare-fun temp108752_27 () (_ BitVec 64))
(declare-fun temp108752_28 () (_ BitVec 64))
(declare-fun temp108752_29 () (_ BitVec 64))
(declare-fun temp108752_30 () (_ BitVec 64))
(declare-fun temp108752_31 () (_ BitVec 64))
(declare-fun temp108752_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp108752_33 () (_ BitVec 64))
(declare-fun temp108752_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp108752_35 () (_ BitVec 64))
(declare-fun temp108752_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp108752_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp108752_38 () (_ BitVec 64))
(declare-fun temp108752_39 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp108752_40 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp108752_41 () (_ BitVec 64))
(declare-fun temp108752_42 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp108752_43 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp108752_44 () (_ BitVec 64))
(declare-fun temp108752_46 () (_ BitVec 64))
(declare-fun temp108752_45 () (_ BitVec 64))
(declare-fun temp108752_48 () (_ BitVec 64))
(declare-fun temp108752_47 () (_ BitVec 64))
(declare-fun temp108752_50 () (_ BitVec 64))
(declare-fun temp108752_49 () (_ BitVec 64))
(declare-fun temp108752_52 () (_ BitVec 64))
(declare-fun temp108752_51 () (_ BitVec 64))
(declare-fun temp108752_53 () (_ BitVec 64))
(declare-fun var795723 () (_ BitVec 64))
(declare-fun var795702 () (_ BitVec 64))
(declare-fun var730134 () (_ BitVec 64))
(declare-fun temp108752_54 () (_ BitVec 64))
(declare-fun temp108752_56 () (_ BitVec 64))
(declare-fun temp108752_55 () (_ BitVec 64))
(declare-fun temp108752_58 () (_ BitVec 64))
(declare-fun temp108752_57 () (_ BitVec 64))
(declare-fun temp108752_60 () (_ BitVec 64))
(declare-fun temp108752_59 () (_ BitVec 64))
(declare-fun temp108752_61 () (_ BitVec 64))
(declare-fun var992306 () (_ BitVec 64))
(declare-fun temp108752_62 () (_ BitVec 64))
(declare-fun var992307 () (_ BitVec 64))
(declare-fun var992308 () (_ BitVec 64))
(declare-fun var992304 () (_ BitVec 64))
(declare-fun var664540 () (_ BitVec 64))
(declare-fun temp108752_63 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp108752_64 () (_ BitVec 64))
(declare-fun var1057843 () (_ BitVec 64))
(declare-fun var1057844 () (_ BitVec 64))
(declare-fun var1057840 () (_ BitVec 64))
(declare-fun var664547 () (_ BitVec 64))
(declare-fun temp108752_65 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp108752_66 () (_ BitVec 64))
(declare-fun var1123379 () (_ BitVec 64))
(declare-fun var1123380 () (_ BitVec 64))
(declare-fun var1123376 () (_ BitVec 64))
(declare-fun var664552 () (_ BitVec 64))
(declare-fun var78095 () (_ BitVec 64))
(declare-fun temp108752_67 () (_ BitVec 64))
(declare-fun temp108752_68 () (_ BitVec 64))
(declare-fun var78184 () (_ BitVec 64))
(declare-fun temp108752_70 () (_ BitVec 64))
(declare-fun temp108752_69 () (_ BitVec 64))
(declare-fun temp108752_72 () (_ BitVec 64))
(declare-fun temp108752_71 () (_ BitVec 64))
(declare-fun temp108752_73 () (_ BitVec 64))
(declare-fun var78544 () (_ BitVec 64))
(declare-fun temp108752_74 () (_ BitVec 64))
(declare-fun var78545 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp108752_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_filter_NAMEEND_DIM temp108752_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp108752_2 #x0000000000000001))
(assert (= var77740 temp108752_2))
(assert (= temp108752_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp108752_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp108752_4 #x0000000000000001))
(assert (= var77770 temp108752_4))
(assert (= temp108752_5 #x0000000000000000))
(assert (= temp108752_6 (select ARGNAME_filter_NAMEEND_DIMSIZE temp108752_5)))
(assert (= temp108752_7 #x0000000000000001))
(assert (= temp108752_8 (select ARGNAME_filter_NAMEEND_DIMSIZE temp108752_7)))
(assert (= temp108752_9 #x0000000000000002))
(assert (= temp108752_10 (select ARGNAME_filter_NAMEEND_DIMSIZE temp108752_9)))
(assert (= temp108752_11 #x0000000000000003))
(assert (= temp108752_12 (select ARGNAME_filter_NAMEEND_DIMSIZE temp108752_11)))
(assert (= temp108752_13 #x0000000000000004))
(assert (= temp108752_14 (select ARGNAME_filter_NAMEEND_DIMSIZE temp108752_13)))
(assert (= temp108752_15 #x0000000000000005))
(assert (= temp108752_16 (select ARGNAME_filter_NAMEEND_DIMSIZE temp108752_15)))
(assert (= temp108752_17 #x0000000000000003))
(assert (= temp108752_18 (select ARGNAME_filter_NAMEEND_DIMSIZE temp108752_17)))
(assert (= var77799 temp108752_18))
(assert (= temp108752_19 #x0000000000000000))
(assert (= temp108752_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp108752_19)))
(assert (= temp108752_21 #x0000000000000001))
(assert (= temp108752_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp108752_21)))
(assert (= temp108752_23 #x0000000000000002))
(assert (= temp108752_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp108752_23)))
(assert (= temp108752_25 #x0000000000000003))
(assert (= temp108752_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp108752_25)))
(assert (= temp108752_27 #x0000000000000004))
(assert (= temp108752_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp108752_27)))
(assert (= temp108752_29 #x0000000000000005))
(assert (= temp108752_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp108752_29)))
(assert (= temp108752_31 #x0000000000000004))
(assert (= temp108752_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp108752_31)))
(assert (= var77832 temp108752_32))
(assert (= temp108752_33 #x0000000000000004))
(assert (= temp108752_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp108752_33)))
(assert (= var77833 temp108752_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp108752_35 #x0000000000000001))
(assert (= var77834 temp108752_35))
(assert (= temp108752_36 #x0000000000000001))
(assert (= var275510 temp108752_36))
(assert (= temp108752_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp108752_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp108752_38 #x0000000000000000))
(assert (= var275528 temp108752_38))
(assert (= temp108752_39 #x0000000000000001))
(assert (= var406582 temp108752_39))
(assert (= temp108752_40 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp108752_40) #x0000000000000001 #x0000000000000000)))
(assert (= temp108752_41 #x0000000000000000))
(assert (= var406600 temp108752_41))
(assert (= temp108752_42 #x0000000000000001))
(assert (= var537654 temp108752_42))
(assert (= temp108752_43 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp108752_43) #x0000000000000001 #x0000000000000000)))
(assert (= temp108752_44 #x0000000000000000))
(assert (= var537672 temp108752_44))
(assert (= temp108752_46 #x0000000000000000))
(assert (= temp108752_45 temp108752_46))
(assert (= temp108752_48 #x00000000000000ff))
(assert (= temp108752_47 temp108752_48))
(assert (= temp108752_50 #x00000000000000ff))
(assert (= temp108752_49 temp108752_50))
(assert (= temp108752_52 #x00000000000000ff))
(assert (= temp108752_51 temp108752_52))
(assert (= temp108752_53 #x0000000000000000))
(assert (= var795723 temp108752_53))
(assert (= var795702 var795723))
(assert (= var730134 var795702))
(assert (= temp108752_54 #x0000000000000000))
(assert (= var730134 temp108752_54))
(assert (= temp108752_56 #x0000000000000000))
(assert (= temp108752_55 temp108752_56))
(assert (= temp108752_58 #x0000000000000000))
(assert (= temp108752_57 temp108752_58))
(assert (= temp108752_60 #x0000000000000000))
(assert (= temp108752_59 temp108752_60))
(assert (= temp108752_61 #x0000000000008000))
(assert (= var992306 temp108752_61))
(assert (= temp108752_62 #x0000000000000001))
(assert (= var992307
   (ite (bvslt temp108752_59 temp108752_62)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var992308 (ite (= var992307 #x0000000000000001) var992306 temp108752_59)))
(assert (= var992304 var992308))
(assert (= var664540 var992304))
(assert (= temp108752_63 #x0000000000040000))
(assert (= var1057842 temp108752_63))
(assert (= temp108752_64 #x0000000000000001))
(assert (= var1057843
   (ite (bvslt temp108752_57 temp108752_64)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1057844 (ite (= var1057843 #x0000000000000001) var1057842 temp108752_57)))
(assert (= var1057840 var1057844))
(assert (= var664547 var1057840))
(assert (= temp108752_65 #x0000000000200000))
(assert (= var1123378 temp108752_65))
(assert (= temp108752_66 #x0000000000000001))
(assert (= var1123379
   (ite (bvslt temp108752_55 temp108752_66)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1123380 (ite (= var1123379 #x0000000000000001) var1123378 temp108752_55)))
(assert (= var1123376 var1123380))
(assert (= var664552 var1123376))
(assert (= var78095 var664552))
(assert (= temp108752_67 #x0000000000000003))
(assert (= temp108752_68 #x0000000000000001))
(assert (= var78184 temp108752_68))
(assert (= temp108752_70 #x0000000000000001))
(assert (= temp108752_69 temp108752_70))
(assert (= temp108752_72 #x0000000000000001))
(assert (= temp108752_71 temp108752_72))
(assert (= temp108752_73 #x0000000000000000))
(assert (= var78544 temp108752_73))
(assert (= temp108752_74 #x0000000000000001))
(assert (= var78545 (bvadd var78544 temp108752_74)))
(model-add temp108752_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp108752_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


