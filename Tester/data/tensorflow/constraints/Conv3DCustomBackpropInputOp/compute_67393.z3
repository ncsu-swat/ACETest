(declare-fun temp101102_1 () (_ BitVec 64))
(declare-fun temp101102_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp101102_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp101102_4 () (_ BitVec 64))
(declare-fun temp101102_5 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp101102_6 () (_ BitVec 64))
(declare-fun temp101102_7 () (_ BitVec 64))
(declare-fun temp101102_8 () (_ BitVec 64))
(declare-fun temp101102_9 () (_ BitVec 64))
(declare-fun temp101102_10 () (_ BitVec 64))
(declare-fun temp101102_11 () (_ BitVec 64))
(declare-fun temp101102_12 () (_ BitVec 64))
(declare-fun temp101102_13 () (_ BitVec 64))
(declare-fun temp101102_14 () (_ BitVec 64))
(declare-fun temp101102_15 () (_ BitVec 64))
(declare-fun temp101102_16 () (_ BitVec 64))
(declare-fun temp101102_17 () (_ BitVec 64))
(declare-fun temp101102_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp101102_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp101102_20 () (_ BitVec 64))
(declare-fun temp101102_21 () (_ BitVec 64))
(declare-fun temp101102_22 () (_ BitVec 64))
(declare-fun temp101102_23 () (_ BitVec 64))
(declare-fun temp101102_24 () (_ BitVec 64))
(declare-fun temp101102_25 () (_ BitVec 64))
(declare-fun temp101102_26 () (_ BitVec 64))
(declare-fun temp101102_27 () (_ BitVec 64))
(declare-fun temp101102_28 () (_ BitVec 64))
(declare-fun temp101102_29 () (_ BitVec 64))
(declare-fun temp101102_30 () (_ BitVec 64))
(declare-fun temp101102_31 () (_ BitVec 64))
(declare-fun temp101102_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp101102_33 () (_ BitVec 64))
(declare-fun temp101102_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp101102_35 () (_ BitVec 64))
(declare-fun temp101102_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp101102_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp101102_38 () (_ BitVec 64))
(declare-fun temp101102_40 () (_ BitVec 64))
(declare-fun temp101102_39 () (_ BitVec 64))
(declare-fun temp101102_41 () (_ BitVec 64))
(declare-fun var472118 () (_ BitVec 64))
(declare-fun temp101102_42 () (_ BitVec 64))
(declare-fun var472136 () (_ BitVec 64))
(declare-fun temp101102_43 () (_ BitVec 64))
(declare-fun temp101102_45 () (_ BitVec 64))
(declare-fun temp101102_44 () (_ BitVec 64))
(declare-fun temp101102_46 () (_ BitVec 64))
(declare-fun var668726 () (_ BitVec 64))
(declare-fun temp101102_47 () (_ BitVec 64))
(declare-fun var668744 () (_ BitVec 64))
(declare-fun temp101102_48 () (_ BitVec 64))
(declare-fun temp101102_50 () (_ BitVec 64))
(declare-fun temp101102_49 () (_ BitVec 64))
(declare-fun temp101102_52 () (_ BitVec 64))
(declare-fun temp101102_51 () (_ BitVec 64))
(declare-fun temp101102_54 () (_ BitVec 64))
(declare-fun temp101102_53 () (_ BitVec 64))
(declare-fun temp101102_55 () (_ BitVec 64))
(declare-fun var926795 () (_ BitVec 64))
(declare-fun var926774 () (_ BitVec 64))
(declare-fun var795680 () (_ BitVec 64))
(declare-fun temp101102_56 () (_ BitVec 64))
(declare-fun temp101102_57 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp101102_58 () (_ BitVec 64))
(declare-fun var1254450 () (_ BitVec 64))
(declare-fun temp101102_59 () (_ BitVec 64))
(declare-fun var1319986 () (_ BitVec 64))
(declare-fun temp101102_60 () (_ BitVec 64))
(declare-fun var78184 () (_ BitVec 64))
(declare-fun temp101102_62 () (_ BitVec 64))
(declare-fun temp101102_61 () (_ BitVec 64))
(declare-fun temp101102_64 () (_ BitVec 64))
(declare-fun temp101102_63 () (_ BitVec 64))
(declare-fun temp101102_65 () (_ BitVec 64))
(declare-fun var78544 () (_ BitVec 64))
(declare-fun temp101102_66 () (_ BitVec 64))
(declare-fun var78545 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp101102_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_filter_NAMEEND_DIM temp101102_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp101102_2 #x0000000000000001))
(assert (= var77740 temp101102_2))
(assert (= temp101102_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp101102_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp101102_4 #x0000000000000001))
(assert (= var77770 temp101102_4))
(assert (= temp101102_5 #x0000000000000000))
(assert (= temp101102_6 (select ARGNAME_filter_NAMEEND_DIMSIZE temp101102_5)))
(assert (= temp101102_7 #x0000000000000001))
(assert (= temp101102_8 (select ARGNAME_filter_NAMEEND_DIMSIZE temp101102_7)))
(assert (= temp101102_9 #x0000000000000002))
(assert (= temp101102_10 (select ARGNAME_filter_NAMEEND_DIMSIZE temp101102_9)))
(assert (= temp101102_11 #x0000000000000003))
(assert (= temp101102_12 (select ARGNAME_filter_NAMEEND_DIMSIZE temp101102_11)))
(assert (= temp101102_13 #x0000000000000004))
(assert (= temp101102_14 (select ARGNAME_filter_NAMEEND_DIMSIZE temp101102_13)))
(assert (= temp101102_15 #x0000000000000005))
(assert (= temp101102_16 (select ARGNAME_filter_NAMEEND_DIMSIZE temp101102_15)))
(assert (= temp101102_17 #x0000000000000003))
(assert (= temp101102_18 (select ARGNAME_filter_NAMEEND_DIMSIZE temp101102_17)))
(assert (= var77799 temp101102_18))
(assert (= temp101102_19 #x0000000000000000))
(assert (= temp101102_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp101102_19)))
(assert (= temp101102_21 #x0000000000000001))
(assert (= temp101102_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp101102_21)))
(assert (= temp101102_23 #x0000000000000002))
(assert (= temp101102_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp101102_23)))
(assert (= temp101102_25 #x0000000000000003))
(assert (= temp101102_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp101102_25)))
(assert (= temp101102_27 #x0000000000000004))
(assert (= temp101102_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp101102_27)))
(assert (= temp101102_29 #x0000000000000005))
(assert (= temp101102_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp101102_29)))
(assert (= temp101102_31 #x0000000000000004))
(assert (= temp101102_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp101102_31)))
(assert (= var77832 temp101102_32))
(assert (= temp101102_33 #x0000000000000004))
(assert (= temp101102_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp101102_33)))
(assert (= var77833 temp101102_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp101102_35 #x0000000000000001))
(assert (= var77834 temp101102_35))
(assert (= temp101102_36 #x0000000000000001))
(assert (= var275510 temp101102_36))
(assert (= temp101102_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp101102_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp101102_38 #x0000000000000000))
(assert (= var275528 temp101102_38))
(assert (= temp101102_40 #x0000000000000000))
(assert (= temp101102_39 temp101102_40))
(assert (= temp101102_41 #x0000000000000001))
(assert (= var472118 temp101102_41))
(assert (= temp101102_42 #x0000000000000001))
(assert (= var472136
   (ite (bvslt var472118 temp101102_42) #x0000000000000001 #x0000000000000000)))
(assert (= temp101102_43 #x0000000000000000))
(assert (= var472136 temp101102_43))
(assert (= temp101102_45 #x0000000000000000))
(assert (= temp101102_44 temp101102_45))
(assert (= temp101102_46 #x0000000000000001))
(assert (= var668726 temp101102_46))
(assert (= temp101102_47 #x0000000000000001))
(assert (= var668744
   (ite (bvslt var668726 temp101102_47) #x0000000000000001 #x0000000000000000)))
(assert (= temp101102_48 #x0000000000000000))
(assert (= var668744 temp101102_48))
(assert (= temp101102_50 #x00000000000000ff))
(assert (= temp101102_49 temp101102_50))
(assert (= temp101102_52 #x00000000000000ff))
(assert (= temp101102_51 temp101102_52))
(assert (= temp101102_54 #x00000000000000ff))
(assert (= temp101102_53 temp101102_54))
(assert (= temp101102_55 #x0000000000000000))
(assert (= var926795 temp101102_55))
(assert (= var926774 var926795))
(assert (= var795680 var926774))
(assert (= temp101102_56 #x0000000000000000))
(assert (= var795680 temp101102_56))
(assert (= temp101102_57 #x0000000000008000))
(assert (= var1188914 temp101102_57))
(assert (= temp101102_58 #x0000000000040000))
(assert (= var1254450 temp101102_58))
(assert (= temp101102_59 #x0000000000200000))
(assert (= var1319986 temp101102_59))
(assert (= temp101102_60 #x0000000000000001))
(assert (= var78184 temp101102_60))
(assert (= temp101102_62 #x0000000000000001))
(assert (= temp101102_61 temp101102_62))
(assert (= temp101102_64 #x0000000000000001))
(assert (= temp101102_63 temp101102_64))
(assert (= temp101102_65 #x0000000000000000))
(assert (= var78544 temp101102_65))
(assert (= temp101102_66 #x0000000000000001))
(assert (= var78545 (bvadd var78544 temp101102_66)))
(model-add temp101102_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp101102_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


