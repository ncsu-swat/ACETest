(declare-fun temp8058_1 () (_ BitVec 64))
(declare-fun temp8058_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp8058_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp8058_4 () (_ BitVec 64))
(declare-fun temp8058_5 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp8058_6 () (_ BitVec 64))
(declare-fun temp8058_7 () (_ BitVec 64))
(declare-fun temp8058_8 () (_ BitVec 64))
(declare-fun temp8058_9 () (_ BitVec 64))
(declare-fun temp8058_10 () (_ BitVec 64))
(declare-fun temp8058_11 () (_ BitVec 64))
(declare-fun temp8058_12 () (_ BitVec 64))
(declare-fun temp8058_13 () (_ BitVec 64))
(declare-fun temp8058_14 () (_ BitVec 64))
(declare-fun temp8058_15 () (_ BitVec 64))
(declare-fun temp8058_16 () (_ BitVec 64))
(declare-fun temp8058_17 () (_ BitVec 64))
(declare-fun temp8058_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp8058_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp8058_20 () (_ BitVec 64))
(declare-fun temp8058_21 () (_ BitVec 64))
(declare-fun temp8058_22 () (_ BitVec 64))
(declare-fun temp8058_23 () (_ BitVec 64))
(declare-fun temp8058_24 () (_ BitVec 64))
(declare-fun temp8058_25 () (_ BitVec 64))
(declare-fun temp8058_26 () (_ BitVec 64))
(declare-fun temp8058_27 () (_ BitVec 64))
(declare-fun temp8058_28 () (_ BitVec 64))
(declare-fun temp8058_29 () (_ BitVec 64))
(declare-fun temp8058_30 () (_ BitVec 64))
(declare-fun temp8058_31 () (_ BitVec 64))
(declare-fun temp8058_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp8058_33 () (_ BitVec 64))
(declare-fun temp8058_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp8058_35 () (_ BitVec 64))
(declare-fun temp8058_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp8058_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp8058_38 () (_ BitVec 64))
(declare-fun temp8058_39 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp8058_40 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp8058_41 () (_ BitVec 64))
(declare-fun temp8058_43 () (_ BitVec 64))
(declare-fun temp8058_42 () (_ BitVec 64))
(declare-fun temp8058_45 () (_ BitVec 64))
(declare-fun temp8058_44 () (_ BitVec 64))
(declare-fun temp8058_46 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp8058_47 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp8058_48 () (_ BitVec 64))
(declare-fun temp8058_50 () (_ BitVec 64))
(declare-fun temp8058_49 () (_ BitVec 64))
(declare-fun temp8058_52 () (_ BitVec 64))
(declare-fun temp8058_51 () (_ BitVec 64))
(declare-fun temp8058_54 () (_ BitVec 64))
(declare-fun temp8058_53 () (_ BitVec 64))
(declare-fun temp8058_55 () (_ BitVec 64))
(declare-fun var730187 () (_ BitVec 64))
(declare-fun var730166 () (_ BitVec 64))
(declare-fun var664598 () (_ BitVec 64))
(declare-fun temp8058_56 () (_ BitVec 64))
(declare-fun temp8058_58 () (_ BitVec 64))
(declare-fun temp8058_57 () (_ BitVec 64))
(declare-fun temp8058_60 () (_ BitVec 64))
(declare-fun temp8058_59 () (_ BitVec 64))
(declare-fun temp8058_62 () (_ BitVec 64))
(declare-fun temp8058_61 () (_ BitVec 64))
(declare-fun temp8058_63 () (_ BitVec 64))
(declare-fun var926770 () (_ BitVec 64))
(declare-fun temp8058_64 () (_ BitVec 64))
(declare-fun var926771 () (_ BitVec 64))
(declare-fun var926772 () (_ BitVec 64))
(declare-fun var926768 () (_ BitVec 64))
(declare-fun var599004 () (_ BitVec 64))
(declare-fun temp8058_65 () (_ BitVec 64))
(declare-fun var992306 () (_ BitVec 64))
(declare-fun temp8058_66 () (_ BitVec 64))
(declare-fun var992307 () (_ BitVec 64))
(declare-fun var992308 () (_ BitVec 64))
(declare-fun var992304 () (_ BitVec 64))
(declare-fun var599011 () (_ BitVec 64))
(declare-fun temp8058_67 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp8058_68 () (_ BitVec 64))
(declare-fun var1057843 () (_ BitVec 64))
(declare-fun var1057844 () (_ BitVec 64))
(declare-fun var1057840 () (_ BitVec 64))
(declare-fun var599016 () (_ BitVec 64))
(declare-fun var78095 () (_ BitVec 64))
(declare-fun temp8058_69 () (_ BitVec 64))
(declare-fun temp8058_70 () (_ BitVec 64))
(declare-fun var78096 () (_ BitVec 64))
(declare-fun var78179 () (_ BitVec 64))
(declare-fun temp8058_72 () (_ BitVec 64))
(declare-fun temp8058_71 () (_ BitVec 64))
(declare-fun temp8058_74 () (_ BitVec 64))
(declare-fun temp8058_73 () (_ BitVec 64))
(declare-fun temp8058_75 () (_ BitVec 64))
(declare-fun var78544 () (_ BitVec 64))
(declare-fun temp8058_76 () (_ BitVec 64))
(declare-fun var78545 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp8058_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_filter_NAMEEND_DIM temp8058_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8058_2 #x0000000000000001))
(assert (= var77740 temp8058_2))
(assert (= temp8058_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp8058_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8058_4 #x0000000000000001))
(assert (= var77770 temp8058_4))
(assert (= temp8058_5 #x0000000000000000))
(assert (= temp8058_6 (select ARGNAME_filter_NAMEEND_DIMSIZE temp8058_5)))
(assert (= temp8058_7 #x0000000000000001))
(assert (= temp8058_8 (select ARGNAME_filter_NAMEEND_DIMSIZE temp8058_7)))
(assert (= temp8058_9 #x0000000000000002))
(assert (= temp8058_10 (select ARGNAME_filter_NAMEEND_DIMSIZE temp8058_9)))
(assert (= temp8058_11 #x0000000000000003))
(assert (= temp8058_12 (select ARGNAME_filter_NAMEEND_DIMSIZE temp8058_11)))
(assert (= temp8058_13 #x0000000000000004))
(assert (= temp8058_14 (select ARGNAME_filter_NAMEEND_DIMSIZE temp8058_13)))
(assert (= temp8058_15 #x0000000000000005))
(assert (= temp8058_16 (select ARGNAME_filter_NAMEEND_DIMSIZE temp8058_15)))
(assert (= temp8058_17 #x0000000000000003))
(assert (= temp8058_18 (select ARGNAME_filter_NAMEEND_DIMSIZE temp8058_17)))
(assert (= var77799 temp8058_18))
(assert (= temp8058_19 #x0000000000000000))
(assert (= temp8058_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8058_19)))
(assert (= temp8058_21 #x0000000000000001))
(assert (= temp8058_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8058_21)))
(assert (= temp8058_23 #x0000000000000002))
(assert (= temp8058_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8058_23)))
(assert (= temp8058_25 #x0000000000000003))
(assert (= temp8058_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8058_25)))
(assert (= temp8058_27 #x0000000000000004))
(assert (= temp8058_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8058_27)))
(assert (= temp8058_29 #x0000000000000005))
(assert (= temp8058_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8058_29)))
(assert (= temp8058_31 #x0000000000000004))
(assert (= temp8058_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp8058_31)))
(assert (= var77832 temp8058_32))
(assert (= temp8058_33 #x0000000000000004))
(assert (= temp8058_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp8058_33)))
(assert (= var77833 temp8058_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp8058_35 #x0000000000000001))
(assert (= var77834 temp8058_35))
(assert (= temp8058_36 #x0000000000000001))
(assert (= var275510 temp8058_36))
(assert (= temp8058_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp8058_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp8058_38 #x0000000000000000))
(assert (= var275528 temp8058_38))
(assert (= temp8058_39 #x0000000000000001))
(assert (= var406582 temp8058_39))
(assert (= temp8058_40 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp8058_40) #x0000000000000001 #x0000000000000000)))
(assert (= temp8058_41 #x0000000000000000))
(assert (= var406600 temp8058_41))
(assert (= temp8058_43 #x0000000000000000))
(assert (= temp8058_42 temp8058_43))
(assert (= temp8058_45 #x0000000000000000))
(assert (= temp8058_44 temp8058_45))
(assert (= temp8058_46 #x0000000000000001))
(assert (= var537654 temp8058_46))
(assert (= temp8058_47 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp8058_47) #x0000000000000001 #x0000000000000000)))
(assert (= temp8058_48 #x0000000000000000))
(assert (= var537672 temp8058_48))
(assert (= temp8058_50 #x00000000000000ff))
(assert (= temp8058_49 temp8058_50))
(assert (= temp8058_52 #x00000000000000ff))
(assert (= temp8058_51 temp8058_52))
(assert (= temp8058_54 #x00000000000000ff))
(assert (= temp8058_53 temp8058_54))
(assert (= temp8058_55 #x0000000000000000))
(assert (= var730187 temp8058_55))
(assert (= var730166 var730187))
(assert (= var664598 var730166))
(assert (= temp8058_56 #x0000000000000000))
(assert (= var664598 temp8058_56))
(assert (= temp8058_58 #x0000000000000000))
(assert (= temp8058_57 temp8058_58))
(assert (= temp8058_60 #x0000000000000000))
(assert (= temp8058_59 temp8058_60))
(assert (= temp8058_62 #x0000000000000000))
(assert (= temp8058_61 temp8058_62))
(assert (= temp8058_63 #x0000000000008000))
(assert (= var926770 temp8058_63))
(assert (= temp8058_64 #x0000000000000001))
(assert (= var926771
   (ite (bvslt temp8058_61 temp8058_64) #x0000000000000001 #x0000000000000000)))
(assert (= var926772 (ite (= var926771 #x0000000000000001) var926770 temp8058_61)))
(assert (= var926768 var926772))
(assert (= var599004 var926768))
(assert (= temp8058_65 #x0000000000040000))
(assert (= var992306 temp8058_65))
(assert (= temp8058_66 #x0000000000000001))
(assert (= var992307
   (ite (bvslt temp8058_59 temp8058_66) #x0000000000000001 #x0000000000000000)))
(assert (= var992308 (ite (= var992307 #x0000000000000001) var992306 temp8058_59)))
(assert (= var992304 var992308))
(assert (= var599011 var992304))
(assert (= temp8058_67 #x0000000000200000))
(assert (= var1057842 temp8058_67))
(assert (= temp8058_68 #x0000000000000001))
(assert (= var1057843
   (ite (bvslt temp8058_57 temp8058_68) #x0000000000000001 #x0000000000000000)))
(assert (= var1057844 (ite (= var1057843 #x0000000000000001) var1057842 temp8058_57)))
(assert (= var1057840 var1057844))
(assert (= var599016 var1057840))
(assert (= var78095 var599016))
(assert (= temp8058_69 #x0000000000000003))
(assert (= temp8058_70 #xffffffffffffffff))
(assert (= var78179 (bvadd var78096 temp8058_70)))
(assert (= temp8058_72 #x0000000000000001))
(assert (= temp8058_71 temp8058_72))
(assert (= temp8058_74 #x0000000000000001))
(assert (= temp8058_73 temp8058_74))
(assert (= temp8058_75 #x0000000000000000))
(assert (= var78544 temp8058_75))
(assert (= temp8058_76 #x0000000000000001))
(assert (= var78545 (bvadd var78544 temp8058_76)))
(model-add temp8058_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp8058_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


