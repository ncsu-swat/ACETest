(declare-fun temp101052_1 () (_ BitVec 64))
(declare-fun temp101052_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_1_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp101052_3 () (_ BitVec 64))
(declare-fun ARGNAME_input_2_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp101052_4 () (_ BitVec 64))
(declare-fun temp101052_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_1_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp101052_6 () (_ BitVec 64))
(declare-fun temp101052_7 () (_ BitVec 64))
(declare-fun temp101052_8 () (_ BitVec 64))
(declare-fun temp101052_9 () (_ BitVec 64))
(declare-fun temp101052_10 () (_ BitVec 64))
(declare-fun temp101052_11 () (_ BitVec 64))
(declare-fun temp101052_12 () (_ BitVec 64))
(declare-fun temp101052_13 () (_ BitVec 64))
(declare-fun temp101052_14 () (_ BitVec 64))
(declare-fun temp101052_15 () (_ BitVec 64))
(declare-fun temp101052_16 () (_ BitVec 64))
(declare-fun temp101052_17 () (_ BitVec 64))
(declare-fun temp101052_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp101052_19 () (_ BitVec 64))
(declare-fun ARGNAME_input_2_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp101052_20 () (_ BitVec 64))
(declare-fun temp101052_21 () (_ BitVec 64))
(declare-fun temp101052_22 () (_ BitVec 64))
(declare-fun temp101052_23 () (_ BitVec 64))
(declare-fun temp101052_24 () (_ BitVec 64))
(declare-fun temp101052_25 () (_ BitVec 64))
(declare-fun temp101052_26 () (_ BitVec 64))
(declare-fun temp101052_27 () (_ BitVec 64))
(declare-fun temp101052_28 () (_ BitVec 64))
(declare-fun temp101052_29 () (_ BitVec 64))
(declare-fun temp101052_30 () (_ BitVec 64))
(declare-fun temp101052_31 () (_ BitVec 64))
(declare-fun temp101052_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp101052_33 () (_ BitVec 64))
(declare-fun temp101052_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp101052_35 () (_ BitVec 64))
(declare-fun temp101052_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp101052_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp101052_38 () (_ BitVec 64))
(declare-fun temp101052_40 () (_ BitVec 64))
(declare-fun temp101052_39 () (_ BitVec 64))
(declare-fun temp101052_41 () (_ BitVec 64))
(declare-fun var472118 () (_ BitVec 64))
(declare-fun temp101052_42 () (_ BitVec 64))
(declare-fun var472136 () (_ BitVec 64))
(declare-fun temp101052_43 () (_ BitVec 64))
(declare-fun temp101052_45 () (_ BitVec 64))
(declare-fun temp101052_44 () (_ BitVec 64))
(declare-fun temp101052_46 () (_ BitVec 64))
(declare-fun var668726 () (_ BitVec 64))
(declare-fun temp101052_47 () (_ BitVec 64))
(declare-fun var668744 () (_ BitVec 64))
(declare-fun temp101052_48 () (_ BitVec 64))
(declare-fun temp101052_50 () (_ BitVec 64))
(declare-fun temp101052_49 () (_ BitVec 64))
(declare-fun temp101052_52 () (_ BitVec 64))
(declare-fun temp101052_51 () (_ BitVec 64))
(declare-fun temp101052_54 () (_ BitVec 64))
(declare-fun temp101052_53 () (_ BitVec 64))
(declare-fun temp101052_55 () (_ BitVec 64))
(declare-fun var926795 () (_ BitVec 64))
(declare-fun var926774 () (_ BitVec 64))
(declare-fun var795680 () (_ BitVec 64))
(declare-fun temp101052_56 () (_ BitVec 64))
(declare-fun temp101052_57 () (_ BitVec 64))
(declare-fun var992331 () (_ BitVec 64))
(declare-fun var992310 () (_ BitVec 64))
(declare-fun var795683 () (_ BitVec 64))
(declare-fun temp101052_58 () (_ BitVec 64))
(declare-fun temp101052_59 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp101052_60 () (_ BitVec 64))
(declare-fun var1254450 () (_ BitVec 64))
(declare-fun temp101052_61 () (_ BitVec 64))
(declare-fun var1319986 () (_ BitVec 64))
(declare-fun temp101052_62 () (_ BitVec 64))
(declare-fun var78184 () (_ BitVec 64))
(declare-fun temp101052_64 () (_ BitVec 64))
(declare-fun temp101052_63 () (_ BitVec 64))
(declare-fun temp101052_66 () (_ BitVec 64))
(declare-fun temp101052_65 () (_ BitVec 64))
(declare-fun temp101052_67 () (_ BitVec 64))
(declare-fun var78544 () (_ BitVec 64))
(declare-fun temp101052_68 () (_ BitVec 64))
(declare-fun var78545 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp101052_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_input_1_NAMEEND_DIM temp101052_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp101052_2 #x0000000000000001))
(assert (= var77740 temp101052_2))
(assert (= temp101052_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_input_2_NAMEEND_DIM temp101052_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp101052_4 #x0000000000000001))
(assert (= var77770 temp101052_4))
(assert (= temp101052_5 #x0000000000000000))
(assert (= temp101052_6 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp101052_5)))
(assert (= temp101052_7 #x0000000000000001))
(assert (= temp101052_8 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp101052_7)))
(assert (= temp101052_9 #x0000000000000002))
(assert (= temp101052_10 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp101052_9)))
(assert (= temp101052_11 #x0000000000000003))
(assert (= temp101052_12 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp101052_11)))
(assert (= temp101052_13 #x0000000000000004))
(assert (= temp101052_14 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp101052_13)))
(assert (= temp101052_15 #x0000000000000005))
(assert (= temp101052_16 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp101052_15)))
(assert (= temp101052_17 #x0000000000000003))
(assert (= temp101052_18 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp101052_17)))
(assert (= var77799 temp101052_18))
(assert (= temp101052_19 #x0000000000000000))
(assert (= temp101052_20 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp101052_19)))
(assert (= temp101052_21 #x0000000000000001))
(assert (= temp101052_22 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp101052_21)))
(assert (= temp101052_23 #x0000000000000002))
(assert (= temp101052_24 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp101052_23)))
(assert (= temp101052_25 #x0000000000000003))
(assert (= temp101052_26 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp101052_25)))
(assert (= temp101052_27 #x0000000000000004))
(assert (= temp101052_28 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp101052_27)))
(assert (= temp101052_29 #x0000000000000005))
(assert (= temp101052_30 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp101052_29)))
(assert (= temp101052_31 #x0000000000000004))
(assert (= temp101052_32 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp101052_31)))
(assert (= var77832 temp101052_32))
(assert (= temp101052_33 #x0000000000000004))
(assert (= temp101052_34 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp101052_33)))
(assert (= var77833 temp101052_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp101052_35 #x0000000000000001))
(assert (= var77834 temp101052_35))
(assert (= temp101052_36 #x0000000000000001))
(assert (= var275510 temp101052_36))
(assert (= temp101052_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp101052_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp101052_38 #x0000000000000000))
(assert (= var275528 temp101052_38))
(assert (= temp101052_40 #x0000000000000000))
(assert (= temp101052_39 temp101052_40))
(assert (= temp101052_41 #x0000000000000001))
(assert (= var472118 temp101052_41))
(assert (= temp101052_42 #x0000000000000001))
(assert (= var472136
   (ite (bvslt var472118 temp101052_42) #x0000000000000001 #x0000000000000000)))
(assert (= temp101052_43 #x0000000000000000))
(assert (= var472136 temp101052_43))
(assert (= temp101052_45 #x0000000000000000))
(assert (= temp101052_44 temp101052_45))
(assert (= temp101052_46 #x0000000000000001))
(assert (= var668726 temp101052_46))
(assert (= temp101052_47 #x0000000000000001))
(assert (= var668744
   (ite (bvslt var668726 temp101052_47) #x0000000000000001 #x0000000000000000)))
(assert (= temp101052_48 #x0000000000000000))
(assert (= var668744 temp101052_48))
(assert (= temp101052_50 #x00000000000000ff))
(assert (= temp101052_49 temp101052_50))
(assert (= temp101052_52 #x00000000000000ff))
(assert (= temp101052_51 temp101052_52))
(assert (= temp101052_54 #x00000000000000ff))
(assert (= temp101052_53 temp101052_54))
(assert (= temp101052_55 #x0000000000000000))
(assert (= var926795 temp101052_55))
(assert (= var926774 var926795))
(assert (= var795680 var926774))
(assert (= temp101052_56 #x0000000000000000))
(assert (= var795680 temp101052_56))
(assert (= temp101052_57 #x0000000000000000))
(assert (= var992331 temp101052_57))
(assert (= var992310 var992331))
(assert (= var795683 var992310))
(assert (= temp101052_58 #x0000000000000000))
(assert (= var795683 temp101052_58))
(assert (= temp101052_59 #x0000000000008000))
(assert (= var1188914 temp101052_59))
(assert (= temp101052_60 #x0000000000040000))
(assert (= var1254450 temp101052_60))
(assert (= temp101052_61 #x0000000000200000))
(assert (= var1319986 temp101052_61))
(assert (= temp101052_62 #x0000000000000001))
(assert (= var78184 temp101052_62))
(assert (= temp101052_64 #x0000000000000001))
(assert (= temp101052_63 temp101052_64))
(assert (= temp101052_66 #x0000000000000001))
(assert (= temp101052_65 temp101052_66))
(assert (= temp101052_67 #x0000000000000000))
(assert (= var78544 temp101052_67))
(assert (= temp101052_68 #x0000000000000001))
(assert (= var78545 (bvadd var78544 temp101052_68)))
(model-add temp101052_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp101052_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_1_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))

