(declare-fun temp90008_1 () (_ BitVec 64))
(declare-fun temp90008_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_1_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp90008_3 () (_ BitVec 64))
(declare-fun ARGNAME_input_2_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp90008_4 () (_ BitVec 64))
(declare-fun temp90008_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_1_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp90008_6 () (_ BitVec 64))
(declare-fun temp90008_7 () (_ BitVec 64))
(declare-fun temp90008_8 () (_ BitVec 64))
(declare-fun temp90008_9 () (_ BitVec 64))
(declare-fun temp90008_10 () (_ BitVec 64))
(declare-fun temp90008_11 () (_ BitVec 64))
(declare-fun temp90008_12 () (_ BitVec 64))
(declare-fun temp90008_13 () (_ BitVec 64))
(declare-fun temp90008_14 () (_ BitVec 64))
(declare-fun temp90008_15 () (_ BitVec 64))
(declare-fun temp90008_16 () (_ BitVec 64))
(declare-fun temp90008_17 () (_ BitVec 64))
(declare-fun temp90008_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp90008_19 () (_ BitVec 64))
(declare-fun ARGNAME_input_2_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp90008_20 () (_ BitVec 64))
(declare-fun temp90008_21 () (_ BitVec 64))
(declare-fun temp90008_22 () (_ BitVec 64))
(declare-fun temp90008_23 () (_ BitVec 64))
(declare-fun temp90008_24 () (_ BitVec 64))
(declare-fun temp90008_25 () (_ BitVec 64))
(declare-fun temp90008_26 () (_ BitVec 64))
(declare-fun temp90008_27 () (_ BitVec 64))
(declare-fun temp90008_28 () (_ BitVec 64))
(declare-fun temp90008_29 () (_ BitVec 64))
(declare-fun temp90008_30 () (_ BitVec 64))
(declare-fun temp90008_31 () (_ BitVec 64))
(declare-fun temp90008_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp90008_33 () (_ BitVec 64))
(declare-fun temp90008_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp90008_35 () (_ BitVec 64))
(declare-fun temp90008_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp90008_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp90008_38 () (_ BitVec 64))
(declare-fun temp90008_40 () (_ BitVec 64))
(declare-fun temp90008_39 () (_ BitVec 64))
(declare-fun temp90008_41 () (_ BitVec 64))
(declare-fun var472118 () (_ BitVec 64))
(declare-fun temp90008_42 () (_ BitVec 64))
(declare-fun var472136 () (_ BitVec 64))
(declare-fun temp90008_43 () (_ BitVec 64))
(declare-fun temp90008_45 () (_ BitVec 64))
(declare-fun temp90008_44 () (_ BitVec 64))
(declare-fun temp90008_47 () (_ BitVec 64))
(declare-fun temp90008_46 () (_ BitVec 64))
(declare-fun temp90008_48 () (_ BitVec 64))
(declare-fun var603190 () (_ BitVec 64))
(declare-fun temp90008_49 () (_ BitVec 64))
(declare-fun var603208 () (_ BitVec 64))
(declare-fun temp90008_50 () (_ BitVec 64))
(declare-fun temp90008_52 () (_ BitVec 64))
(declare-fun temp90008_51 () (_ BitVec 64))
(declare-fun temp90008_54 () (_ BitVec 64))
(declare-fun temp90008_53 () (_ BitVec 64))
(declare-fun temp90008_56 () (_ BitVec 64))
(declare-fun temp90008_55 () (_ BitVec 64))
(declare-fun temp90008_58 () (_ BitVec 64))
(declare-fun temp90008_57 () (_ BitVec 64))
(declare-fun temp90008_59 () (_ BitVec 64))
(declare-fun var992331 () (_ BitVec 64))
(declare-fun var992310 () (_ BitVec 64))
(declare-fun var795683 () (_ BitVec 64))
(declare-fun temp90008_60 () (_ BitVec 64))
(declare-fun temp90008_62 () (_ BitVec 64))
(declare-fun temp90008_61 () (_ BitVec 64))
(declare-fun temp90008_64 () (_ BitVec 64))
(declare-fun temp90008_63 () (_ BitVec 64))
(declare-fun temp90008_66 () (_ BitVec 64))
(declare-fun temp90008_65 () (_ BitVec 64))
(declare-fun temp90008_67 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp90008_68 () (_ BitVec 64))
(declare-fun var1123379 () (_ BitVec 64))
(declare-fun var1123380 () (_ BitVec 64))
(declare-fun var1123376 () (_ BitVec 64))
(declare-fun var730076 () (_ BitVec 64))
(declare-fun temp90008_69 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp90008_70 () (_ BitVec 64))
(declare-fun var1188915 () (_ BitVec 64))
(declare-fun var1188916 () (_ BitVec 64))
(declare-fun var1188912 () (_ BitVec 64))
(declare-fun var730083 () (_ BitVec 64))
(declare-fun temp90008_71 () (_ BitVec 64))
(declare-fun var1254450 () (_ BitVec 64))
(declare-fun temp90008_72 () (_ BitVec 64))
(declare-fun var1254451 () (_ BitVec 64))
(declare-fun var1254452 () (_ BitVec 64))
(declare-fun var1254448 () (_ BitVec 64))
(declare-fun var730088 () (_ BitVec 64))
(declare-fun var78095 () (_ BitVec 64))
(declare-fun temp90008_73 () (_ BitVec 64))
(declare-fun temp90008_74 () (_ BitVec 64))
(declare-fun var78096 () (_ BitVec 64))
(declare-fun var78179 () (_ BitVec 64))
(declare-fun temp90008_76 () (_ BitVec 64))
(declare-fun temp90008_75 () (_ BitVec 64))
(declare-fun temp90008_78 () (_ BitVec 64))
(declare-fun temp90008_77 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp90008_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_input_1_NAMEEND_DIM temp90008_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp90008_2 #x0000000000000001))
(assert (= var77740 temp90008_2))
(assert (= temp90008_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_input_2_NAMEEND_DIM temp90008_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp90008_4 #x0000000000000001))
(assert (= var77770 temp90008_4))
(assert (= temp90008_5 #x0000000000000000))
(assert (= temp90008_6 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp90008_5)))
(assert (= temp90008_7 #x0000000000000001))
(assert (= temp90008_8 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp90008_7)))
(assert (= temp90008_9 #x0000000000000002))
(assert (= temp90008_10 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp90008_9)))
(assert (= temp90008_11 #x0000000000000003))
(assert (= temp90008_12 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp90008_11)))
(assert (= temp90008_13 #x0000000000000004))
(assert (= temp90008_14 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp90008_13)))
(assert (= temp90008_15 #x0000000000000005))
(assert (= temp90008_16 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp90008_15)))
(assert (= temp90008_17 #x0000000000000003))
(assert (= temp90008_18 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp90008_17)))
(assert (= var77799 temp90008_18))
(assert (= temp90008_19 #x0000000000000000))
(assert (= temp90008_20 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp90008_19)))
(assert (= temp90008_21 #x0000000000000001))
(assert (= temp90008_22 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp90008_21)))
(assert (= temp90008_23 #x0000000000000002))
(assert (= temp90008_24 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp90008_23)))
(assert (= temp90008_25 #x0000000000000003))
(assert (= temp90008_26 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp90008_25)))
(assert (= temp90008_27 #x0000000000000004))
(assert (= temp90008_28 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp90008_27)))
(assert (= temp90008_29 #x0000000000000005))
(assert (= temp90008_30 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp90008_29)))
(assert (= temp90008_31 #x0000000000000004))
(assert (= temp90008_32 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp90008_31)))
(assert (= var77832 temp90008_32))
(assert (= temp90008_33 #x0000000000000004))
(assert (= temp90008_34 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp90008_33)))
(assert (= var77833 temp90008_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp90008_35 #x0000000000000001))
(assert (= var77834 temp90008_35))
(assert (= temp90008_36 #x0000000000000001))
(assert (= var275510 temp90008_36))
(assert (= temp90008_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp90008_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp90008_38 #x0000000000000000))
(assert (= var275528 temp90008_38))
(assert (= temp90008_40 #x0000000000000000))
(assert (= temp90008_39 temp90008_40))
(assert (= temp90008_41 #x0000000000000001))
(assert (= var472118 temp90008_41))
(assert (= temp90008_42 #x0000000000000001))
(assert (= var472136
   (ite (bvslt var472118 temp90008_42) #x0000000000000001 #x0000000000000000)))
(assert (= temp90008_43 #x0000000000000000))
(assert (= var472136 temp90008_43))
(assert (= temp90008_45 #x0000000000000000))
(assert (= temp90008_44 temp90008_45))
(assert (= temp90008_47 #x0000000000000000))
(assert (= temp90008_46 temp90008_47))
(assert (= temp90008_48 #x0000000000000001))
(assert (= var603190 temp90008_48))
(assert (= temp90008_49 #x0000000000000001))
(assert (= var603208
   (ite (bvslt var603190 temp90008_49) #x0000000000000001 #x0000000000000000)))
(assert (= temp90008_50 #x0000000000000000))
(assert (= var603208 temp90008_50))
(assert (= temp90008_52 #x0000000000000000))
(assert (= temp90008_51 temp90008_52))
(assert (= temp90008_54 #x00000000000000ff))
(assert (= temp90008_53 temp90008_54))
(assert (= temp90008_56 #x00000000000000ff))
(assert (= temp90008_55 temp90008_56))
(assert (= temp90008_58 #x00000000000000ff))
(assert (= temp90008_57 temp90008_58))
(assert (= temp90008_59 #x0000000000000000))
(assert (= var992331 temp90008_59))
(assert (= var992310 var992331))
(assert (= var795683 var992310))
(assert (= temp90008_60 #x0000000000000000))
(assert (= var795683 temp90008_60))
(assert (= temp90008_62 #x0000000000000000))
(assert (= temp90008_61 temp90008_62))
(assert (= temp90008_64 #x0000000000000000))
(assert (= temp90008_63 temp90008_64))
(assert (= temp90008_66 #x0000000000000000))
(assert (= temp90008_65 temp90008_66))
(assert (= temp90008_67 #x0000000000008000))
(assert (= var1123378 temp90008_67))
(assert (= temp90008_68 #x0000000000000001))
(assert (= var1123379
   (ite (bvslt temp90008_65 temp90008_68) #x0000000000000001 #x0000000000000000)))
(assert (= var1123380 (ite (= var1123379 #x0000000000000001) var1123378 temp90008_65)))
(assert (= var1123376 var1123380))
(assert (= var730076 var1123376))
(assert (= temp90008_69 #x0000000000040000))
(assert (= var1188914 temp90008_69))
(assert (= temp90008_70 #x0000000000000001))
(assert (= var1188915
   (ite (bvslt temp90008_63 temp90008_70) #x0000000000000001 #x0000000000000000)))
(assert (= var1188916 (ite (= var1188915 #x0000000000000001) var1188914 temp90008_63)))
(assert (= var1188912 var1188916))
(assert (= var730083 var1188912))
(assert (= temp90008_71 #x0000000000200000))
(assert (= var1254450 temp90008_71))
(assert (= temp90008_72 #x0000000000000001))
(assert (= var1254451
   (ite (bvslt temp90008_61 temp90008_72) #x0000000000000001 #x0000000000000000)))
(assert (= var1254452 (ite (= var1254451 #x0000000000000001) var1254450 temp90008_61)))
(assert (= var1254448 var1254452))
(assert (= var730088 var1254448))
(assert (= var78095 var730088))
(assert (= temp90008_73 #x0000000000000003))
(assert (= temp90008_74 #xffffffffffffffff))
(assert (= var78179 (bvadd var78096 temp90008_74)))
(assert (= temp90008_76 #x0000000000000001))
(assert (= temp90008_75 temp90008_76))
(assert (= temp90008_78 #x0000000000000001))
(assert (= temp90008_77 temp90008_78))
(model-add temp90008_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp90008_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_1_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))

