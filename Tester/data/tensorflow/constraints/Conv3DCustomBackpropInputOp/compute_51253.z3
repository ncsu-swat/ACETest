(declare-fun temp76882_1 () (_ BitVec 64))
(declare-fun temp76882_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_1_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp76882_3 () (_ BitVec 64))
(declare-fun ARGNAME_input_2_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp76882_4 () (_ BitVec 64))
(declare-fun temp76882_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_1_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp76882_6 () (_ BitVec 64))
(declare-fun temp76882_7 () (_ BitVec 64))
(declare-fun temp76882_8 () (_ BitVec 64))
(declare-fun temp76882_9 () (_ BitVec 64))
(declare-fun temp76882_10 () (_ BitVec 64))
(declare-fun temp76882_11 () (_ BitVec 64))
(declare-fun temp76882_12 () (_ BitVec 64))
(declare-fun temp76882_13 () (_ BitVec 64))
(declare-fun temp76882_14 () (_ BitVec 64))
(declare-fun temp76882_15 () (_ BitVec 64))
(declare-fun temp76882_16 () (_ BitVec 64))
(declare-fun temp76882_17 () (_ BitVec 64))
(declare-fun temp76882_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp76882_19 () (_ BitVec 64))
(declare-fun ARGNAME_input_2_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp76882_20 () (_ BitVec 64))
(declare-fun temp76882_21 () (_ BitVec 64))
(declare-fun temp76882_22 () (_ BitVec 64))
(declare-fun temp76882_23 () (_ BitVec 64))
(declare-fun temp76882_24 () (_ BitVec 64))
(declare-fun temp76882_25 () (_ BitVec 64))
(declare-fun temp76882_26 () (_ BitVec 64))
(declare-fun temp76882_27 () (_ BitVec 64))
(declare-fun temp76882_28 () (_ BitVec 64))
(declare-fun temp76882_29 () (_ BitVec 64))
(declare-fun temp76882_30 () (_ BitVec 64))
(declare-fun temp76882_31 () (_ BitVec 64))
(declare-fun temp76882_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp76882_33 () (_ BitVec 64))
(declare-fun temp76882_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp76882_35 () (_ BitVec 64))
(declare-fun temp76882_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp76882_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp76882_38 () (_ BitVec 64))
(declare-fun temp76882_39 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp76882_40 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp76882_41 () (_ BitVec 64))
(declare-fun temp76882_43 () (_ BitVec 64))
(declare-fun temp76882_42 () (_ BitVec 64))
(declare-fun temp76882_44 () (_ BitVec 64))
(declare-fun var603190 () (_ BitVec 64))
(declare-fun temp76882_45 () (_ BitVec 64))
(declare-fun var603208 () (_ BitVec 64))
(declare-fun temp76882_46 () (_ BitVec 64))
(declare-fun temp76882_48 () (_ BitVec 64))
(declare-fun temp76882_47 () (_ BitVec 64))
(declare-fun temp76882_50 () (_ BitVec 64))
(declare-fun temp76882_49 () (_ BitVec 64))
(declare-fun temp76882_52 () (_ BitVec 64))
(declare-fun temp76882_51 () (_ BitVec 64))
(declare-fun temp76882_54 () (_ BitVec 64))
(declare-fun temp76882_53 () (_ BitVec 64))
(declare-fun temp76882_55 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp76882_56 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp76882_57 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp76882_58 () (_ BitVec 64))
(declare-fun var78184 () (_ BitVec 64))
(declare-fun temp76882_60 () (_ BitVec 64))
(declare-fun temp76882_59 () (_ BitVec 64))
(declare-fun temp76882_62 () (_ BitVec 64))
(declare-fun temp76882_61 () (_ BitVec 64))
(declare-fun temp76882_63 () (_ BitVec 64))
(declare-fun var78544 () (_ BitVec 64))
(declare-fun temp76882_64 () (_ BitVec 64))
(declare-fun var78545 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp76882_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_input_1_NAMEEND_DIM temp76882_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp76882_2 #x0000000000000001))
(assert (= var77740 temp76882_2))
(assert (= temp76882_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_input_2_NAMEEND_DIM temp76882_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp76882_4 #x0000000000000001))
(assert (= var77770 temp76882_4))
(assert (= temp76882_5 #x0000000000000000))
(assert (= temp76882_6 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp76882_5)))
(assert (= temp76882_7 #x0000000000000001))
(assert (= temp76882_8 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp76882_7)))
(assert (= temp76882_9 #x0000000000000002))
(assert (= temp76882_10 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp76882_9)))
(assert (= temp76882_11 #x0000000000000003))
(assert (= temp76882_12 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp76882_11)))
(assert (= temp76882_13 #x0000000000000004))
(assert (= temp76882_14 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp76882_13)))
(assert (= temp76882_15 #x0000000000000005))
(assert (= temp76882_16 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp76882_15)))
(assert (= temp76882_17 #x0000000000000003))
(assert (= temp76882_18 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp76882_17)))
(assert (= var77799 temp76882_18))
(assert (= temp76882_19 #x0000000000000000))
(assert (= temp76882_20 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp76882_19)))
(assert (= temp76882_21 #x0000000000000001))
(assert (= temp76882_22 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp76882_21)))
(assert (= temp76882_23 #x0000000000000002))
(assert (= temp76882_24 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp76882_23)))
(assert (= temp76882_25 #x0000000000000003))
(assert (= temp76882_26 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp76882_25)))
(assert (= temp76882_27 #x0000000000000004))
(assert (= temp76882_28 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp76882_27)))
(assert (= temp76882_29 #x0000000000000005))
(assert (= temp76882_30 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp76882_29)))
(assert (= temp76882_31 #x0000000000000004))
(assert (= temp76882_32 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp76882_31)))
(assert (= var77832 temp76882_32))
(assert (= temp76882_33 #x0000000000000004))
(assert (= temp76882_34 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp76882_33)))
(assert (= var77833 temp76882_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp76882_35 #x0000000000000001))
(assert (= var77834 temp76882_35))
(assert (= temp76882_36 #x0000000000000001))
(assert (= var275510 temp76882_36))
(assert (= temp76882_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp76882_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp76882_38 #x0000000000000000))
(assert (= var275528 temp76882_38))
(assert (= temp76882_39 #x0000000000000001))
(assert (= var406582 temp76882_39))
(assert (= temp76882_40 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp76882_40) #x0000000000000001 #x0000000000000000)))
(assert (= temp76882_41 #x0000000000000000))
(assert (= var406600 temp76882_41))
(assert (= temp76882_43 #x0000000000000000))
(assert (= temp76882_42 temp76882_43))
(assert (= temp76882_44 #x0000000000000001))
(assert (= var603190 temp76882_44))
(assert (= temp76882_45 #x0000000000000001))
(assert (= var603208
   (ite (bvslt var603190 temp76882_45) #x0000000000000001 #x0000000000000000)))
(assert (= temp76882_46 #x0000000000000000))
(assert (= var603208 temp76882_46))
(assert (= temp76882_48 #x0000000000000000))
(assert (= temp76882_47 temp76882_48))
(assert (= temp76882_50 #x00000000000000ff))
(assert (= temp76882_49 temp76882_50))
(assert (= temp76882_52 #x00000000000000ff))
(assert (= temp76882_51 temp76882_52))
(assert (= temp76882_54 #x00000000000000ff))
(assert (= temp76882_53 temp76882_54))
(assert (= temp76882_55 #x0000000000008000))
(assert (= var1057842 temp76882_55))
(assert (= temp76882_56 #x0000000000040000))
(assert (= var1123378 temp76882_56))
(assert (= temp76882_57 #x0000000000200000))
(assert (= var1188914 temp76882_57))
(assert (= temp76882_58 #x0000000000000001))
(assert (= var78184 temp76882_58))
(assert (= temp76882_60 #x0000000000000001))
(assert (= temp76882_59 temp76882_60))
(assert (= temp76882_62 #x0000000000000001))
(assert (= temp76882_61 temp76882_62))
(assert (= temp76882_63 #x0000000000000000))
(assert (= var78544 temp76882_63))
(assert (= temp76882_64 #x0000000000000001))
(assert (= var78545 (bvadd var78544 temp76882_64)))
(model-add temp76882_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp76882_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_1_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))

