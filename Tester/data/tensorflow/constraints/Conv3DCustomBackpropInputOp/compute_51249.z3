(declare-fun temp76878_1 () (_ BitVec 64))
(declare-fun temp76878_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_1_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp76878_3 () (_ BitVec 64))
(declare-fun ARGNAME_input_2_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp76878_4 () (_ BitVec 64))
(declare-fun temp76878_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_1_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp76878_6 () (_ BitVec 64))
(declare-fun temp76878_7 () (_ BitVec 64))
(declare-fun temp76878_8 () (_ BitVec 64))
(declare-fun temp76878_9 () (_ BitVec 64))
(declare-fun temp76878_10 () (_ BitVec 64))
(declare-fun temp76878_11 () (_ BitVec 64))
(declare-fun temp76878_12 () (_ BitVec 64))
(declare-fun temp76878_13 () (_ BitVec 64))
(declare-fun temp76878_14 () (_ BitVec 64))
(declare-fun temp76878_15 () (_ BitVec 64))
(declare-fun temp76878_16 () (_ BitVec 64))
(declare-fun temp76878_17 () (_ BitVec 64))
(declare-fun temp76878_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp76878_19 () (_ BitVec 64))
(declare-fun ARGNAME_input_2_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp76878_20 () (_ BitVec 64))
(declare-fun temp76878_21 () (_ BitVec 64))
(declare-fun temp76878_22 () (_ BitVec 64))
(declare-fun temp76878_23 () (_ BitVec 64))
(declare-fun temp76878_24 () (_ BitVec 64))
(declare-fun temp76878_25 () (_ BitVec 64))
(declare-fun temp76878_26 () (_ BitVec 64))
(declare-fun temp76878_27 () (_ BitVec 64))
(declare-fun temp76878_28 () (_ BitVec 64))
(declare-fun temp76878_29 () (_ BitVec 64))
(declare-fun temp76878_30 () (_ BitVec 64))
(declare-fun temp76878_31 () (_ BitVec 64))
(declare-fun temp76878_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp76878_33 () (_ BitVec 64))
(declare-fun temp76878_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp76878_35 () (_ BitVec 64))
(declare-fun temp76878_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp76878_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp76878_38 () (_ BitVec 64))
(declare-fun temp76878_39 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp76878_40 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp76878_41 () (_ BitVec 64))
(declare-fun temp76878_43 () (_ BitVec 64))
(declare-fun temp76878_42 () (_ BitVec 64))
(declare-fun temp76878_44 () (_ BitVec 64))
(declare-fun var603190 () (_ BitVec 64))
(declare-fun temp76878_45 () (_ BitVec 64))
(declare-fun var603208 () (_ BitVec 64))
(declare-fun temp76878_46 () (_ BitVec 64))
(declare-fun temp76878_48 () (_ BitVec 64))
(declare-fun temp76878_47 () (_ BitVec 64))
(declare-fun temp76878_50 () (_ BitVec 64))
(declare-fun temp76878_49 () (_ BitVec 64))
(declare-fun temp76878_52 () (_ BitVec 64))
(declare-fun temp76878_51 () (_ BitVec 64))
(declare-fun temp76878_54 () (_ BitVec 64))
(declare-fun temp76878_53 () (_ BitVec 64))
(declare-fun temp76878_55 () (_ BitVec 64))
(declare-fun var926795 () (_ BitVec 64))
(declare-fun var926774 () (_ BitVec 64))
(declare-fun var795680 () (_ BitVec 64))
(declare-fun temp76878_56 () (_ BitVec 64))
(declare-fun temp76878_57 () (_ BitVec 64))
(declare-fun var992331 () (_ BitVec 64))
(declare-fun var992310 () (_ BitVec 64))
(declare-fun var795683 () (_ BitVec 64))
(declare-fun temp76878_58 () (_ BitVec 64))
(declare-fun temp76878_60 () (_ BitVec 64))
(declare-fun temp76878_59 () (_ BitVec 64))
(declare-fun temp76878_62 () (_ BitVec 64))
(declare-fun temp76878_61 () (_ BitVec 64))
(declare-fun temp76878_64 () (_ BitVec 64))
(declare-fun temp76878_63 () (_ BitVec 64))
(declare-fun temp76878_65 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp76878_66 () (_ BitVec 64))
(declare-fun var1123379 () (_ BitVec 64))
(declare-fun var1123380 () (_ BitVec 64))
(declare-fun var1123376 () (_ BitVec 64))
(declare-fun var730076 () (_ BitVec 64))
(declare-fun temp76878_67 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp76878_68 () (_ BitVec 64))
(declare-fun var1188915 () (_ BitVec 64))
(declare-fun var1188916 () (_ BitVec 64))
(declare-fun var1188912 () (_ BitVec 64))
(declare-fun var730083 () (_ BitVec 64))
(declare-fun temp76878_69 () (_ BitVec 64))
(declare-fun var1254450 () (_ BitVec 64))
(declare-fun temp76878_70 () (_ BitVec 64))
(declare-fun var1254451 () (_ BitVec 64))
(declare-fun var1254452 () (_ BitVec 64))
(declare-fun var1254448 () (_ BitVec 64))
(declare-fun var730088 () (_ BitVec 64))
(declare-fun var78095 () (_ BitVec 64))
(declare-fun temp76878_71 () (_ BitVec 64))
(declare-fun temp76878_72 () (_ BitVec 64))
(declare-fun var78096 () (_ BitVec 64))
(declare-fun var78179 () (_ BitVec 64))
(declare-fun temp76878_74 () (_ BitVec 64))
(declare-fun temp76878_73 () (_ BitVec 64))
(declare-fun temp76878_76 () (_ BitVec 64))
(declare-fun temp76878_75 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp76878_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_input_1_NAMEEND_DIM temp76878_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp76878_2 #x0000000000000001))
(assert (= var77740 temp76878_2))
(assert (= temp76878_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_input_2_NAMEEND_DIM temp76878_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp76878_4 #x0000000000000001))
(assert (= var77770 temp76878_4))
(assert (= temp76878_5 #x0000000000000000))
(assert (= temp76878_6 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp76878_5)))
(assert (= temp76878_7 #x0000000000000001))
(assert (= temp76878_8 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp76878_7)))
(assert (= temp76878_9 #x0000000000000002))
(assert (= temp76878_10 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp76878_9)))
(assert (= temp76878_11 #x0000000000000003))
(assert (= temp76878_12 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp76878_11)))
(assert (= temp76878_13 #x0000000000000004))
(assert (= temp76878_14 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp76878_13)))
(assert (= temp76878_15 #x0000000000000005))
(assert (= temp76878_16 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp76878_15)))
(assert (= temp76878_17 #x0000000000000003))
(assert (= temp76878_18 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp76878_17)))
(assert (= var77799 temp76878_18))
(assert (= temp76878_19 #x0000000000000000))
(assert (= temp76878_20 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp76878_19)))
(assert (= temp76878_21 #x0000000000000001))
(assert (= temp76878_22 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp76878_21)))
(assert (= temp76878_23 #x0000000000000002))
(assert (= temp76878_24 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp76878_23)))
(assert (= temp76878_25 #x0000000000000003))
(assert (= temp76878_26 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp76878_25)))
(assert (= temp76878_27 #x0000000000000004))
(assert (= temp76878_28 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp76878_27)))
(assert (= temp76878_29 #x0000000000000005))
(assert (= temp76878_30 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp76878_29)))
(assert (= temp76878_31 #x0000000000000004))
(assert (= temp76878_32 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp76878_31)))
(assert (= var77832 temp76878_32))
(assert (= temp76878_33 #x0000000000000004))
(assert (= temp76878_34 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp76878_33)))
(assert (= var77833 temp76878_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp76878_35 #x0000000000000001))
(assert (= var77834 temp76878_35))
(assert (= temp76878_36 #x0000000000000001))
(assert (= var275510 temp76878_36))
(assert (= temp76878_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp76878_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp76878_38 #x0000000000000000))
(assert (= var275528 temp76878_38))
(assert (= temp76878_39 #x0000000000000001))
(assert (= var406582 temp76878_39))
(assert (= temp76878_40 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp76878_40) #x0000000000000001 #x0000000000000000)))
(assert (= temp76878_41 #x0000000000000000))
(assert (= var406600 temp76878_41))
(assert (= temp76878_43 #x0000000000000000))
(assert (= temp76878_42 temp76878_43))
(assert (= temp76878_44 #x0000000000000001))
(assert (= var603190 temp76878_44))
(assert (= temp76878_45 #x0000000000000001))
(assert (= var603208
   (ite (bvslt var603190 temp76878_45) #x0000000000000001 #x0000000000000000)))
(assert (= temp76878_46 #x0000000000000000))
(assert (= var603208 temp76878_46))
(assert (= temp76878_48 #x0000000000000000))
(assert (= temp76878_47 temp76878_48))
(assert (= temp76878_50 #x00000000000000ff))
(assert (= temp76878_49 temp76878_50))
(assert (= temp76878_52 #x00000000000000ff))
(assert (= temp76878_51 temp76878_52))
(assert (= temp76878_54 #x00000000000000ff))
(assert (= temp76878_53 temp76878_54))
(assert (= temp76878_55 #x0000000000000000))
(assert (= var926795 temp76878_55))
(assert (= var926774 var926795))
(assert (= var795680 var926774))
(assert (= temp76878_56 #x0000000000000000))
(assert (= var795680 temp76878_56))
(assert (= temp76878_57 #x0000000000000000))
(assert (= var992331 temp76878_57))
(assert (= var992310 var992331))
(assert (= var795683 var992310))
(assert (= temp76878_58 #x0000000000000000))
(assert (= var795683 temp76878_58))
(assert (= temp76878_60 #x0000000000000000))
(assert (= temp76878_59 temp76878_60))
(assert (= temp76878_62 #x0000000000000000))
(assert (= temp76878_61 temp76878_62))
(assert (= temp76878_64 #x0000000000000000))
(assert (= temp76878_63 temp76878_64))
(assert (= temp76878_65 #x0000000000008000))
(assert (= var1123378 temp76878_65))
(assert (= temp76878_66 #x0000000000000001))
(assert (= var1123379
   (ite (bvslt temp76878_63 temp76878_66) #x0000000000000001 #x0000000000000000)))
(assert (= var1123380 (ite (= var1123379 #x0000000000000001) var1123378 temp76878_63)))
(assert (= var1123376 var1123380))
(assert (= var730076 var1123376))
(assert (= temp76878_67 #x0000000000040000))
(assert (= var1188914 temp76878_67))
(assert (= temp76878_68 #x0000000000000001))
(assert (= var1188915
   (ite (bvslt temp76878_61 temp76878_68) #x0000000000000001 #x0000000000000000)))
(assert (= var1188916 (ite (= var1188915 #x0000000000000001) var1188914 temp76878_61)))
(assert (= var1188912 var1188916))
(assert (= var730083 var1188912))
(assert (= temp76878_69 #x0000000000200000))
(assert (= var1254450 temp76878_69))
(assert (= temp76878_70 #x0000000000000001))
(assert (= var1254451
   (ite (bvslt temp76878_59 temp76878_70) #x0000000000000001 #x0000000000000000)))
(assert (= var1254452 (ite (= var1254451 #x0000000000000001) var1254450 temp76878_59)))
(assert (= var1254448 var1254452))
(assert (= var730088 var1254448))
(assert (= var78095 var730088))
(assert (= temp76878_71 #x0000000000000003))
(assert (= temp76878_72 #xffffffffffffffff))
(assert (= var78179 (bvadd var78096 temp76878_72)))
(assert (= temp76878_74 #x0000000000000001))
(assert (= temp76878_73 temp76878_74))
(assert (= temp76878_76 #x0000000000000001))
(assert (= temp76878_75 temp76878_76))
(model-add temp76878_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp76878_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_1_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))

