(declare-fun temp136884_1 () (_ BitVec 64))
(declare-fun temp136884_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_1_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp136884_3 () (_ BitVec 64))
(declare-fun ARGNAME_input_2_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp136884_4 () (_ BitVec 64))
(declare-fun temp136884_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_1_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp136884_6 () (_ BitVec 64))
(declare-fun temp136884_7 () (_ BitVec 64))
(declare-fun temp136884_8 () (_ BitVec 64))
(declare-fun temp136884_9 () (_ BitVec 64))
(declare-fun temp136884_10 () (_ BitVec 64))
(declare-fun temp136884_11 () (_ BitVec 64))
(declare-fun temp136884_12 () (_ BitVec 64))
(declare-fun temp136884_13 () (_ BitVec 64))
(declare-fun temp136884_14 () (_ BitVec 64))
(declare-fun temp136884_15 () (_ BitVec 64))
(declare-fun temp136884_16 () (_ BitVec 64))
(declare-fun temp136884_17 () (_ BitVec 64))
(declare-fun temp136884_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp136884_19 () (_ BitVec 64))
(declare-fun ARGNAME_input_2_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp136884_20 () (_ BitVec 64))
(declare-fun temp136884_21 () (_ BitVec 64))
(declare-fun temp136884_22 () (_ BitVec 64))
(declare-fun temp136884_23 () (_ BitVec 64))
(declare-fun temp136884_24 () (_ BitVec 64))
(declare-fun temp136884_25 () (_ BitVec 64))
(declare-fun temp136884_26 () (_ BitVec 64))
(declare-fun temp136884_27 () (_ BitVec 64))
(declare-fun temp136884_28 () (_ BitVec 64))
(declare-fun temp136884_29 () (_ BitVec 64))
(declare-fun temp136884_30 () (_ BitVec 64))
(declare-fun temp136884_31 () (_ BitVec 64))
(declare-fun temp136884_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp136884_33 () (_ BitVec 64))
(declare-fun temp136884_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp136884_35 () (_ BitVec 64))
(declare-fun temp136884_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp136884_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp136884_38 () (_ BitVec 64))
(declare-fun temp136884_40 () (_ BitVec 64))
(declare-fun temp136884_39 () (_ BitVec 64))
(declare-fun temp136884_42 () (_ BitVec 64))
(declare-fun temp136884_41 () (_ BitVec 64))
(declare-fun temp136884_43 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp136884_44 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp136884_45 () (_ BitVec 64))
(declare-fun temp136884_47 () (_ BitVec 64))
(declare-fun temp136884_46 () (_ BitVec 64))
(declare-fun temp136884_49 () (_ BitVec 64))
(declare-fun temp136884_48 () (_ BitVec 64))
(declare-fun temp136884_50 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp136884_51 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp136884_52 () (_ BitVec 64))
(declare-fun temp136884_54 () (_ BitVec 64))
(declare-fun temp136884_53 () (_ BitVec 64))
(declare-fun temp136884_56 () (_ BitVec 64))
(declare-fun temp136884_55 () (_ BitVec 64))
(declare-fun temp136884_58 () (_ BitVec 64))
(declare-fun temp136884_57 () (_ BitVec 64))
(declare-fun temp136884_59 () (_ BitVec 64))
(declare-fun var861259 () (_ BitVec 64))
(declare-fun var861238 () (_ BitVec 64))
(declare-fun var664611 () (_ BitVec 64))
(declare-fun temp136884_60 () (_ BitVec 64))
(declare-fun temp136884_62 () (_ BitVec 64))
(declare-fun temp136884_61 () (_ BitVec 64))
(declare-fun temp136884_64 () (_ BitVec 64))
(declare-fun temp136884_63 () (_ BitVec 64))
(declare-fun temp136884_66 () (_ BitVec 64))
(declare-fun temp136884_65 () (_ BitVec 64))
(declare-fun temp136884_67 () (_ BitVec 64))
(declare-fun var992306 () (_ BitVec 64))
(declare-fun temp136884_68 () (_ BitVec 64))
(declare-fun var992307 () (_ BitVec 64))
(declare-fun var992308 () (_ BitVec 64))
(declare-fun var992304 () (_ BitVec 64))
(declare-fun var599004 () (_ BitVec 64))
(declare-fun temp136884_69 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp136884_70 () (_ BitVec 64))
(declare-fun var1057843 () (_ BitVec 64))
(declare-fun var1057844 () (_ BitVec 64))
(declare-fun var1057840 () (_ BitVec 64))
(declare-fun var599011 () (_ BitVec 64))
(declare-fun temp136884_71 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp136884_72 () (_ BitVec 64))
(declare-fun var1123379 () (_ BitVec 64))
(declare-fun var1123380 () (_ BitVec 64))
(declare-fun var1123376 () (_ BitVec 64))
(declare-fun var599016 () (_ BitVec 64))
(declare-fun var78095 () (_ BitVec 64))
(declare-fun temp136884_73 () (_ BitVec 64))
(declare-fun temp136884_74 () (_ BitVec 64))
(declare-fun var78184 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp136884_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_input_1_NAMEEND_DIM temp136884_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp136884_2 #x0000000000000001))
(assert (= var77740 temp136884_2))
(assert (= temp136884_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_input_2_NAMEEND_DIM temp136884_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp136884_4 #x0000000000000001))
(assert (= var77770 temp136884_4))
(assert (= temp136884_5 #x0000000000000000))
(assert (= temp136884_6 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp136884_5)))
(assert (= temp136884_7 #x0000000000000001))
(assert (= temp136884_8 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp136884_7)))
(assert (= temp136884_9 #x0000000000000002))
(assert (= temp136884_10 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp136884_9)))
(assert (= temp136884_11 #x0000000000000003))
(assert (= temp136884_12 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp136884_11)))
(assert (= temp136884_13 #x0000000000000004))
(assert (= temp136884_14 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp136884_13)))
(assert (= temp136884_15 #x0000000000000005))
(assert (= temp136884_16 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp136884_15)))
(assert (= temp136884_17 #x0000000000000003))
(assert (= temp136884_18 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp136884_17)))
(assert (= var77799 temp136884_18))
(assert (= temp136884_19 #x0000000000000000))
(assert (= temp136884_20 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp136884_19)))
(assert (= temp136884_21 #x0000000000000001))
(assert (= temp136884_22 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp136884_21)))
(assert (= temp136884_23 #x0000000000000002))
(assert (= temp136884_24 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp136884_23)))
(assert (= temp136884_25 #x0000000000000003))
(assert (= temp136884_26 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp136884_25)))
(assert (= temp136884_27 #x0000000000000004))
(assert (= temp136884_28 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp136884_27)))
(assert (= temp136884_29 #x0000000000000005))
(assert (= temp136884_30 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp136884_29)))
(assert (= temp136884_31 #x0000000000000004))
(assert (= temp136884_32 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp136884_31)))
(assert (= var77832 temp136884_32))
(assert (= temp136884_33 #x0000000000000004))
(assert (= temp136884_34 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp136884_33)))
(assert (= var77833 temp136884_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp136884_35 #x0000000000000001))
(assert (= var77834 temp136884_35))
(assert (= temp136884_36 #x0000000000000001))
(assert (= var275510 temp136884_36))
(assert (= temp136884_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp136884_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp136884_38 #x0000000000000000))
(assert (= var275528 temp136884_38))
(assert (= temp136884_40 #x0000000000000000))
(assert (= temp136884_39 temp136884_40))
(assert (= temp136884_42 #x0000000000000000))
(assert (= temp136884_41 temp136884_42))
(assert (= temp136884_43 #x0000000000000001))
(assert (= var406582 temp136884_43))
(assert (= temp136884_44 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp136884_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp136884_45 #x0000000000000000))
(assert (= var406600 temp136884_45))
(assert (= temp136884_47 #x0000000000000000))
(assert (= temp136884_46 temp136884_47))
(assert (= temp136884_49 #x0000000000000000))
(assert (= temp136884_48 temp136884_49))
(assert (= temp136884_50 #x0000000000000001))
(assert (= var537654 temp136884_50))
(assert (= temp136884_51 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp136884_51) #x0000000000000001 #x0000000000000000)))
(assert (= temp136884_52 #x0000000000000000))
(assert (= var537672 temp136884_52))
(assert (= temp136884_54 #x00000000000000ff))
(assert (= temp136884_53 temp136884_54))
(assert (= temp136884_56 #x00000000000000ff))
(assert (= temp136884_55 temp136884_56))
(assert (= temp136884_58 #x00000000000000ff))
(assert (= temp136884_57 temp136884_58))
(assert (= temp136884_59 #x0000000000000000))
(assert (= var861259 temp136884_59))
(assert (= var861238 var861259))
(assert (= var664611 var861238))
(assert (= temp136884_60 #x0000000000000000))
(assert (= var664611 temp136884_60))
(assert (= temp136884_62 #x0000000000000000))
(assert (= temp136884_61 temp136884_62))
(assert (= temp136884_64 #x0000000000000000))
(assert (= temp136884_63 temp136884_64))
(assert (= temp136884_66 #x0000000000000000))
(assert (= temp136884_65 temp136884_66))
(assert (= temp136884_67 #x0000000000008000))
(assert (= var992306 temp136884_67))
(assert (= temp136884_68 #x0000000000000001))
(assert (= var992307
   (ite (bvslt temp136884_65 temp136884_68)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var992308 (ite (= var992307 #x0000000000000001) var992306 temp136884_65)))
(assert (= var992304 var992308))
(assert (= var599004 var992304))
(assert (= temp136884_69 #x0000000000040000))
(assert (= var1057842 temp136884_69))
(assert (= temp136884_70 #x0000000000000001))
(assert (= var1057843
   (ite (bvslt temp136884_63 temp136884_70)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1057844 (ite (= var1057843 #x0000000000000001) var1057842 temp136884_63)))
(assert (= var1057840 var1057844))
(assert (= var599011 var1057840))
(assert (= temp136884_71 #x0000000000200000))
(assert (= var1123378 temp136884_71))
(assert (= temp136884_72 #x0000000000000001))
(assert (= var1123379
   (ite (bvslt temp136884_61 temp136884_72)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1123380 (ite (= var1123379 #x0000000000000001) var1123378 temp136884_61)))
(assert (= var1123376 var1123380))
(assert (= var599016 var1123376))
(assert (= var78095 var599016))
(assert (= temp136884_73 #x0000000000000003))
(assert (= temp136884_74 #x0000000000000001))
(assert (= var78184 temp136884_74))
(model-add temp136884_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp136884_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_1_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))

