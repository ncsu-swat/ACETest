(declare-fun temp13272_1 () (_ BitVec 64))
(declare-fun temp13272_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_1_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp13272_3 () (_ BitVec 64))
(declare-fun ARGNAME_input_2_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp13272_4 () (_ BitVec 64))
(declare-fun temp13272_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_1_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp13272_6 () (_ BitVec 64))
(declare-fun temp13272_7 () (_ BitVec 64))
(declare-fun temp13272_8 () (_ BitVec 64))
(declare-fun temp13272_9 () (_ BitVec 64))
(declare-fun temp13272_10 () (_ BitVec 64))
(declare-fun temp13272_11 () (_ BitVec 64))
(declare-fun temp13272_12 () (_ BitVec 64))
(declare-fun temp13272_13 () (_ BitVec 64))
(declare-fun temp13272_14 () (_ BitVec 64))
(declare-fun temp13272_15 () (_ BitVec 64))
(declare-fun temp13272_16 () (_ BitVec 64))
(declare-fun temp13272_17 () (_ BitVec 64))
(declare-fun temp13272_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp13272_19 () (_ BitVec 64))
(declare-fun ARGNAME_input_2_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp13272_20 () (_ BitVec 64))
(declare-fun temp13272_21 () (_ BitVec 64))
(declare-fun temp13272_22 () (_ BitVec 64))
(declare-fun temp13272_23 () (_ BitVec 64))
(declare-fun temp13272_24 () (_ BitVec 64))
(declare-fun temp13272_25 () (_ BitVec 64))
(declare-fun temp13272_26 () (_ BitVec 64))
(declare-fun temp13272_27 () (_ BitVec 64))
(declare-fun temp13272_28 () (_ BitVec 64))
(declare-fun temp13272_29 () (_ BitVec 64))
(declare-fun temp13272_30 () (_ BitVec 64))
(declare-fun temp13272_31 () (_ BitVec 64))
(declare-fun temp13272_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp13272_33 () (_ BitVec 64))
(declare-fun temp13272_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp13272_35 () (_ BitVec 64))
(declare-fun temp13272_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp13272_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp13272_38 () (_ BitVec 64))
(declare-fun temp13272_39 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp13272_40 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp13272_41 () (_ BitVec 64))
(declare-fun temp13272_42 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp13272_43 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp13272_44 () (_ BitVec 64))
(declare-fun temp13272_46 () (_ BitVec 64))
(declare-fun temp13272_45 () (_ BitVec 64))
(declare-fun temp13272_48 () (_ BitVec 64))
(declare-fun temp13272_47 () (_ BitVec 64))
(declare-fun temp13272_50 () (_ BitVec 64))
(declare-fun temp13272_49 () (_ BitVec 64))
(declare-fun temp13272_51 () (_ BitVec 64))
(declare-fun var730187 () (_ BitVec 64))
(declare-fun var730166 () (_ BitVec 64))
(declare-fun var664598 () (_ BitVec 64))
(declare-fun temp13272_52 () (_ BitVec 64))
(declare-fun temp13272_54 () (_ BitVec 64))
(declare-fun temp13272_53 () (_ BitVec 64))
(declare-fun temp13272_56 () (_ BitVec 64))
(declare-fun temp13272_55 () (_ BitVec 64))
(declare-fun temp13272_58 () (_ BitVec 64))
(declare-fun temp13272_57 () (_ BitVec 64))
(declare-fun temp13272_59 () (_ BitVec 64))
(declare-fun var992306 () (_ BitVec 64))
(declare-fun temp13272_60 () (_ BitVec 64))
(declare-fun var992307 () (_ BitVec 64))
(declare-fun var992308 () (_ BitVec 64))
(declare-fun var992304 () (_ BitVec 64))
(declare-fun var599004 () (_ BitVec 64))
(declare-fun temp13272_61 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp13272_62 () (_ BitVec 64))
(declare-fun var1057843 () (_ BitVec 64))
(declare-fun var1057844 () (_ BitVec 64))
(declare-fun var1057840 () (_ BitVec 64))
(declare-fun var599011 () (_ BitVec 64))
(declare-fun temp13272_63 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp13272_64 () (_ BitVec 64))
(declare-fun var1123379 () (_ BitVec 64))
(declare-fun var1123380 () (_ BitVec 64))
(declare-fun var1123376 () (_ BitVec 64))
(declare-fun var599016 () (_ BitVec 64))
(declare-fun var78095 () (_ BitVec 64))
(declare-fun temp13272_65 () (_ BitVec 64))
(declare-fun temp13272_66 () (_ BitVec 64))
(declare-fun var78184 () (_ BitVec 64))
(declare-fun temp13272_68 () (_ BitVec 64))
(declare-fun temp13272_67 () (_ BitVec 64))
(declare-fun temp13272_70 () (_ BitVec 64))
(declare-fun temp13272_69 () (_ BitVec 64))
(declare-fun temp13272_71 () (_ BitVec 64))
(declare-fun var78544 () (_ BitVec 64))
(declare-fun temp13272_72 () (_ BitVec 64))
(declare-fun var78545 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp13272_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_input_1_NAMEEND_DIM temp13272_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp13272_2 #x0000000000000001))
(assert (= var77740 temp13272_2))
(assert (= temp13272_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_input_2_NAMEEND_DIM temp13272_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp13272_4 #x0000000000000001))
(assert (= var77770 temp13272_4))
(assert (= temp13272_5 #x0000000000000000))
(assert (= temp13272_6 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp13272_5)))
(assert (= temp13272_7 #x0000000000000001))
(assert (= temp13272_8 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp13272_7)))
(assert (= temp13272_9 #x0000000000000002))
(assert (= temp13272_10 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp13272_9)))
(assert (= temp13272_11 #x0000000000000003))
(assert (= temp13272_12 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp13272_11)))
(assert (= temp13272_13 #x0000000000000004))
(assert (= temp13272_14 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp13272_13)))
(assert (= temp13272_15 #x0000000000000005))
(assert (= temp13272_16 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp13272_15)))
(assert (= temp13272_17 #x0000000000000003))
(assert (= temp13272_18 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp13272_17)))
(assert (= var77799 temp13272_18))
(assert (= temp13272_19 #x0000000000000000))
(assert (= temp13272_20 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp13272_19)))
(assert (= temp13272_21 #x0000000000000001))
(assert (= temp13272_22 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp13272_21)))
(assert (= temp13272_23 #x0000000000000002))
(assert (= temp13272_24 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp13272_23)))
(assert (= temp13272_25 #x0000000000000003))
(assert (= temp13272_26 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp13272_25)))
(assert (= temp13272_27 #x0000000000000004))
(assert (= temp13272_28 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp13272_27)))
(assert (= temp13272_29 #x0000000000000005))
(assert (= temp13272_30 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp13272_29)))
(assert (= temp13272_31 #x0000000000000004))
(assert (= temp13272_32 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp13272_31)))
(assert (= var77832 temp13272_32))
(assert (= temp13272_33 #x0000000000000004))
(assert (= temp13272_34 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp13272_33)))
(assert (= var77833 temp13272_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp13272_35 #x0000000000000001))
(assert (= var77834 temp13272_35))
(assert (= temp13272_36 #x0000000000000001))
(assert (= var275510 temp13272_36))
(assert (= temp13272_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp13272_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp13272_38 #x0000000000000000))
(assert (= var275528 temp13272_38))
(assert (= temp13272_39 #x0000000000000001))
(assert (= var406582 temp13272_39))
(assert (= temp13272_40 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp13272_40) #x0000000000000001 #x0000000000000000)))
(assert (= temp13272_41 #x0000000000000000))
(assert (= var406600 temp13272_41))
(assert (= temp13272_42 #x0000000000000001))
(assert (= var537654 temp13272_42))
(assert (= temp13272_43 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp13272_43) #x0000000000000001 #x0000000000000000)))
(assert (= temp13272_44 #x0000000000000000))
(assert (= var537672 temp13272_44))
(assert (= temp13272_46 #x00000000000000ff))
(assert (= temp13272_45 temp13272_46))
(assert (= temp13272_48 #x00000000000000ff))
(assert (= temp13272_47 temp13272_48))
(assert (= temp13272_50 #x00000000000000ff))
(assert (= temp13272_49 temp13272_50))
(assert (= temp13272_51 #x0000000000000000))
(assert (= var730187 temp13272_51))
(assert (= var730166 var730187))
(assert (= var664598 var730166))
(assert (= temp13272_52 #x0000000000000000))
(assert (= var664598 temp13272_52))
(assert (= temp13272_54 #x0000000000000000))
(assert (= temp13272_53 temp13272_54))
(assert (= temp13272_56 #x0000000000000000))
(assert (= temp13272_55 temp13272_56))
(assert (= temp13272_58 #x0000000000000000))
(assert (= temp13272_57 temp13272_58))
(assert (= temp13272_59 #x0000000000008000))
(assert (= var992306 temp13272_59))
(assert (= temp13272_60 #x0000000000000001))
(assert (= var992307
   (ite (bvslt temp13272_57 temp13272_60) #x0000000000000001 #x0000000000000000)))
(assert (= var992308 (ite (= var992307 #x0000000000000001) var992306 temp13272_57)))
(assert (= var992304 var992308))
(assert (= var599004 var992304))
(assert (= temp13272_61 #x0000000000040000))
(assert (= var1057842 temp13272_61))
(assert (= temp13272_62 #x0000000000000001))
(assert (= var1057843
   (ite (bvslt temp13272_55 temp13272_62) #x0000000000000001 #x0000000000000000)))
(assert (= var1057844 (ite (= var1057843 #x0000000000000001) var1057842 temp13272_55)))
(assert (= var1057840 var1057844))
(assert (= var599011 var1057840))
(assert (= temp13272_63 #x0000000000200000))
(assert (= var1123378 temp13272_63))
(assert (= temp13272_64 #x0000000000000001))
(assert (= var1123379
   (ite (bvslt temp13272_53 temp13272_64) #x0000000000000001 #x0000000000000000)))
(assert (= var1123380 (ite (= var1123379 #x0000000000000001) var1123378 temp13272_53)))
(assert (= var1123376 var1123380))
(assert (= var599016 var1123376))
(assert (= var78095 var599016))
(assert (= temp13272_65 #x0000000000000003))
(assert (= temp13272_66 #x0000000000000001))
(assert (= var78184 temp13272_66))
(assert (= temp13272_68 #x0000000000000001))
(assert (= temp13272_67 temp13272_68))
(assert (= temp13272_70 #x0000000000000001))
(assert (= temp13272_69 temp13272_70))
(assert (= temp13272_71 #x0000000000000000))
(assert (= var78544 temp13272_71))
(assert (= temp13272_72 #x0000000000000001))
(assert (= var78545 (bvadd var78544 temp13272_72)))
(model-add temp13272_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp13272_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_1_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))

