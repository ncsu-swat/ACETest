(declare-fun temp141661_1 () (_ BitVec 64))
(declare-fun temp141661_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_1_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp141661_3 () (_ BitVec 64))
(declare-fun ARGNAME_input_2_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp141661_4 () (_ BitVec 64))
(declare-fun temp141661_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_1_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp141661_6 () (_ BitVec 64))
(declare-fun temp141661_7 () (_ BitVec 64))
(declare-fun temp141661_8 () (_ BitVec 64))
(declare-fun temp141661_9 () (_ BitVec 64))
(declare-fun temp141661_10 () (_ BitVec 64))
(declare-fun temp141661_11 () (_ BitVec 64))
(declare-fun temp141661_12 () (_ BitVec 64))
(declare-fun temp141661_13 () (_ BitVec 64))
(declare-fun temp141661_14 () (_ BitVec 64))
(declare-fun temp141661_15 () (_ BitVec 64))
(declare-fun temp141661_16 () (_ BitVec 64))
(declare-fun temp141661_17 () (_ BitVec 64))
(declare-fun temp141661_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp141661_19 () (_ BitVec 64))
(declare-fun ARGNAME_input_2_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp141661_20 () (_ BitVec 64))
(declare-fun temp141661_21 () (_ BitVec 64))
(declare-fun temp141661_22 () (_ BitVec 64))
(declare-fun temp141661_23 () (_ BitVec 64))
(declare-fun temp141661_24 () (_ BitVec 64))
(declare-fun temp141661_25 () (_ BitVec 64))
(declare-fun temp141661_26 () (_ BitVec 64))
(declare-fun temp141661_27 () (_ BitVec 64))
(declare-fun temp141661_28 () (_ BitVec 64))
(declare-fun temp141661_29 () (_ BitVec 64))
(declare-fun temp141661_30 () (_ BitVec 64))
(declare-fun temp141661_31 () (_ BitVec 64))
(declare-fun temp141661_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp141661_33 () (_ BitVec 64))
(declare-fun temp141661_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp141661_35 () (_ BitVec 64))
(declare-fun temp141661_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp141661_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp141661_38 () (_ BitVec 64))
(declare-fun temp141661_40 () (_ BitVec 64))
(declare-fun temp141661_39 () (_ BitVec 64))
(declare-fun temp141661_42 () (_ BitVec 64))
(declare-fun temp141661_41 () (_ BitVec 64))
(declare-fun temp141661_43 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp141661_44 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp141661_45 () (_ BitVec 64))
(declare-fun temp141661_47 () (_ BitVec 64))
(declare-fun temp141661_46 () (_ BitVec 64))
(declare-fun temp141661_49 () (_ BitVec 64))
(declare-fun temp141661_48 () (_ BitVec 64))
(declare-fun temp141661_50 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp141661_51 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp141661_52 () (_ BitVec 64))
(declare-fun temp141661_54 () (_ BitVec 64))
(declare-fun temp141661_53 () (_ BitVec 64))
(declare-fun temp141661_56 () (_ BitVec 64))
(declare-fun temp141661_55 () (_ BitVec 64))
(declare-fun temp141661_58 () (_ BitVec 64))
(declare-fun temp141661_57 () (_ BitVec 64))
(declare-fun temp141661_60 () (_ BitVec 64))
(declare-fun temp141661_59 () (_ BitVec 64))
(declare-fun temp141661_61 () (_ BitVec 64))
(declare-fun var861259 () (_ BitVec 64))
(declare-fun var861238 () (_ BitVec 64))
(declare-fun var730144 () (_ BitVec 64))
(declare-fun temp141661_62 () (_ BitVec 64))
(declare-fun temp141661_63 () (_ BitVec 64))
(declare-fun var926795 () (_ BitVec 64))
(declare-fun var926774 () (_ BitVec 64))
(declare-fun var730147 () (_ BitVec 64))
(declare-fun temp141661_64 () (_ BitVec 64))
(declare-fun temp141661_65 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp141661_66 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp141661_67 () (_ BitVec 64))
(declare-fun var1254450 () (_ BitVec 64))
(declare-fun temp141661_68 () (_ BitVec 64))
(declare-fun var78184 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp141661_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_input_1_NAMEEND_DIM temp141661_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp141661_2 #x0000000000000001))
(assert (= var77740 temp141661_2))
(assert (= temp141661_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_input_2_NAMEEND_DIM temp141661_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp141661_4 #x0000000000000001))
(assert (= var77770 temp141661_4))
(assert (= temp141661_5 #x0000000000000000))
(assert (= temp141661_6 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp141661_5)))
(assert (= temp141661_7 #x0000000000000001))
(assert (= temp141661_8 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp141661_7)))
(assert (= temp141661_9 #x0000000000000002))
(assert (= temp141661_10 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp141661_9)))
(assert (= temp141661_11 #x0000000000000003))
(assert (= temp141661_12 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp141661_11)))
(assert (= temp141661_13 #x0000000000000004))
(assert (= temp141661_14 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp141661_13)))
(assert (= temp141661_15 #x0000000000000005))
(assert (= temp141661_16 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp141661_15)))
(assert (= temp141661_17 #x0000000000000003))
(assert (= temp141661_18 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp141661_17)))
(assert (= var77799 temp141661_18))
(assert (= temp141661_19 #x0000000000000000))
(assert (= temp141661_20 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp141661_19)))
(assert (= temp141661_21 #x0000000000000001))
(assert (= temp141661_22 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp141661_21)))
(assert (= temp141661_23 #x0000000000000002))
(assert (= temp141661_24 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp141661_23)))
(assert (= temp141661_25 #x0000000000000003))
(assert (= temp141661_26 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp141661_25)))
(assert (= temp141661_27 #x0000000000000004))
(assert (= temp141661_28 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp141661_27)))
(assert (= temp141661_29 #x0000000000000005))
(assert (= temp141661_30 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp141661_29)))
(assert (= temp141661_31 #x0000000000000004))
(assert (= temp141661_32 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp141661_31)))
(assert (= var77832 temp141661_32))
(assert (= temp141661_33 #x0000000000000004))
(assert (= temp141661_34 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp141661_33)))
(assert (= var77833 temp141661_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp141661_35 #x0000000000000001))
(assert (= var77834 temp141661_35))
(assert (= temp141661_36 #x0000000000000001))
(assert (= var275510 temp141661_36))
(assert (= temp141661_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp141661_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp141661_38 #x0000000000000000))
(assert (= var275528 temp141661_38))
(assert (= temp141661_40 #x0000000000000000))
(assert (= temp141661_39 temp141661_40))
(assert (= temp141661_42 #x0000000000000000))
(assert (= temp141661_41 temp141661_42))
(assert (= temp141661_43 #x0000000000000001))
(assert (= var406582 temp141661_43))
(assert (= temp141661_44 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp141661_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp141661_45 #x0000000000000000))
(assert (= var406600 temp141661_45))
(assert (= temp141661_47 #x0000000000000000))
(assert (= temp141661_46 temp141661_47))
(assert (= temp141661_49 #x0000000000000000))
(assert (= temp141661_48 temp141661_49))
(assert (= temp141661_50 #x0000000000000001))
(assert (= var537654 temp141661_50))
(assert (= temp141661_51 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp141661_51) #x0000000000000001 #x0000000000000000)))
(assert (= temp141661_52 #x0000000000000000))
(assert (= var537672 temp141661_52))
(assert (= temp141661_54 #x0000000000000000))
(assert (= temp141661_53 temp141661_54))
(assert (= temp141661_56 #x00000000000000ff))
(assert (= temp141661_55 temp141661_56))
(assert (= temp141661_58 #x00000000000000ff))
(assert (= temp141661_57 temp141661_58))
(assert (= temp141661_60 #x00000000000000ff))
(assert (= temp141661_59 temp141661_60))
(assert (= temp141661_61 #x0000000000000000))
(assert (= var861259 temp141661_61))
(assert (= var861238 var861259))
(assert (= var730144 var861238))
(assert (= temp141661_62 #x0000000000000000))
(assert (= var730144 temp141661_62))
(assert (= temp141661_63 #x0000000000000000))
(assert (= var926795 temp141661_63))
(assert (= var926774 var926795))
(assert (= var730147 var926774))
(assert (= temp141661_64 #x0000000000000000))
(assert (= var730147 temp141661_64))
(assert (= temp141661_65 #x0000000000008000))
(assert (= var1123378 temp141661_65))
(assert (= temp141661_66 #x0000000000040000))
(assert (= var1188914 temp141661_66))
(assert (= temp141661_67 #x0000000000200000))
(assert (= var1254450 temp141661_67))
(assert (= temp141661_68 #x0000000000000001))
(assert (= var78184 temp141661_68))
(model-add temp141661_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp141661_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_1_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))

