(declare-fun temp103505_1 () (_ BitVec 64))
(declare-fun temp103505_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp103505_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp103505_4 () (_ BitVec 64))
(declare-fun temp103505_5 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp103505_6 () (_ BitVec 64))
(declare-fun temp103505_7 () (_ BitVec 64))
(declare-fun temp103505_8 () (_ BitVec 64))
(declare-fun temp103505_9 () (_ BitVec 64))
(declare-fun temp103505_10 () (_ BitVec 64))
(declare-fun temp103505_11 () (_ BitVec 64))
(declare-fun temp103505_12 () (_ BitVec 64))
(declare-fun temp103505_13 () (_ BitVec 64))
(declare-fun temp103505_14 () (_ BitVec 64))
(declare-fun temp103505_15 () (_ BitVec 64))
(declare-fun temp103505_16 () (_ BitVec 64))
(declare-fun temp103505_17 () (_ BitVec 64))
(declare-fun temp103505_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp103505_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp103505_20 () (_ BitVec 64))
(declare-fun temp103505_21 () (_ BitVec 64))
(declare-fun temp103505_22 () (_ BitVec 64))
(declare-fun temp103505_23 () (_ BitVec 64))
(declare-fun temp103505_24 () (_ BitVec 64))
(declare-fun temp103505_25 () (_ BitVec 64))
(declare-fun temp103505_26 () (_ BitVec 64))
(declare-fun temp103505_27 () (_ BitVec 64))
(declare-fun temp103505_28 () (_ BitVec 64))
(declare-fun temp103505_29 () (_ BitVec 64))
(declare-fun temp103505_30 () (_ BitVec 64))
(declare-fun temp103505_31 () (_ BitVec 64))
(declare-fun temp103505_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp103505_33 () (_ BitVec 64))
(declare-fun temp103505_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp103505_35 () (_ BitVec 64))
(declare-fun temp103505_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp103505_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp103505_38 () (_ BitVec 64))
(declare-fun temp103505_40 () (_ BitVec 64))
(declare-fun temp103505_39 () (_ BitVec 64))
(declare-fun temp103505_41 () (_ BitVec 64))
(declare-fun var472118 () (_ BitVec 64))
(declare-fun temp103505_42 () (_ BitVec 64))
(declare-fun var472136 () (_ BitVec 64))
(declare-fun temp103505_43 () (_ BitVec 64))
(declare-fun temp103505_45 () (_ BitVec 64))
(declare-fun temp103505_44 () (_ BitVec 64))
(declare-fun temp103505_46 () (_ BitVec 64))
(declare-fun var668726 () (_ BitVec 64))
(declare-fun temp103505_47 () (_ BitVec 64))
(declare-fun var668744 () (_ BitVec 64))
(declare-fun temp103505_48 () (_ BitVec 64))
(declare-fun temp103505_50 () (_ BitVec 64))
(declare-fun temp103505_49 () (_ BitVec 64))
(declare-fun temp103505_52 () (_ BitVec 64))
(declare-fun temp103505_51 () (_ BitVec 64))
(declare-fun temp103505_54 () (_ BitVec 64))
(declare-fun temp103505_53 () (_ BitVec 64))
(declare-fun temp103505_56 () (_ BitVec 64))
(declare-fun temp103505_55 () (_ BitVec 64))
(declare-fun temp103505_57 () (_ BitVec 64))
(declare-fun var926795 () (_ BitVec 64))
(declare-fun var926774 () (_ BitVec 64))
(declare-fun var861206 () (_ BitVec 64))
(declare-fun temp103505_58 () (_ BitVec 64))
(declare-fun temp103505_59 () (_ BitVec 64))
(declare-fun var1057867 () (_ BitVec 64))
(declare-fun var1057846 () (_ BitVec 64))
(declare-fun var861219 () (_ BitVec 64))
(declare-fun temp103505_60 () (_ BitVec 64))
(declare-fun temp103505_62 () (_ BitVec 64))
(declare-fun temp103505_61 () (_ BitVec 64))
(declare-fun temp103505_64 () (_ BitVec 64))
(declare-fun temp103505_63 () (_ BitVec 64))
(declare-fun temp103505_66 () (_ BitVec 64))
(declare-fun temp103505_65 () (_ BitVec 64))
(declare-fun temp103505_67 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp103505_68 () (_ BitVec 64))
(declare-fun var1188915 () (_ BitVec 64))
(declare-fun var1188916 () (_ BitVec 64))
(declare-fun var1188912 () (_ BitVec 64))
(declare-fun var795612 () (_ BitVec 64))
(declare-fun temp103505_69 () (_ BitVec 64))
(declare-fun var1254450 () (_ BitVec 64))
(declare-fun temp103505_70 () (_ BitVec 64))
(declare-fun var1254451 () (_ BitVec 64))
(declare-fun var1254452 () (_ BitVec 64))
(declare-fun var1254448 () (_ BitVec 64))
(declare-fun var795619 () (_ BitVec 64))
(declare-fun temp103505_71 () (_ BitVec 64))
(declare-fun var1319986 () (_ BitVec 64))
(declare-fun temp103505_72 () (_ BitVec 64))
(declare-fun var1319987 () (_ BitVec 64))
(declare-fun var1319988 () (_ BitVec 64))
(declare-fun var1319984 () (_ BitVec 64))
(declare-fun var795624 () (_ BitVec 64))
(declare-fun var78095 () (_ BitVec 64))
(declare-fun temp103505_73 () (_ BitVec 64))
(declare-fun temp103505_74 () (_ BitVec 64))
(declare-fun var78096 () (_ BitVec 64))
(declare-fun var78179 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp103505_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_filter_NAMEEND_DIM temp103505_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp103505_2 #x0000000000000001))
(assert (= var77740 temp103505_2))
(assert (= temp103505_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp103505_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp103505_4 #x0000000000000001))
(assert (= var77770 temp103505_4))
(assert (= temp103505_5 #x0000000000000000))
(assert (= temp103505_6 (select ARGNAME_filter_NAMEEND_DIMSIZE temp103505_5)))
(assert (= temp103505_7 #x0000000000000001))
(assert (= temp103505_8 (select ARGNAME_filter_NAMEEND_DIMSIZE temp103505_7)))
(assert (= temp103505_9 #x0000000000000002))
(assert (= temp103505_10 (select ARGNAME_filter_NAMEEND_DIMSIZE temp103505_9)))
(assert (= temp103505_11 #x0000000000000003))
(assert (= temp103505_12 (select ARGNAME_filter_NAMEEND_DIMSIZE temp103505_11)))
(assert (= temp103505_13 #x0000000000000004))
(assert (= temp103505_14 (select ARGNAME_filter_NAMEEND_DIMSIZE temp103505_13)))
(assert (= temp103505_15 #x0000000000000005))
(assert (= temp103505_16 (select ARGNAME_filter_NAMEEND_DIMSIZE temp103505_15)))
(assert (= temp103505_17 #x0000000000000003))
(assert (= temp103505_18 (select ARGNAME_filter_NAMEEND_DIMSIZE temp103505_17)))
(assert (= var77799 temp103505_18))
(assert (= temp103505_19 #x0000000000000000))
(assert (= temp103505_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp103505_19)))
(assert (= temp103505_21 #x0000000000000001))
(assert (= temp103505_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp103505_21)))
(assert (= temp103505_23 #x0000000000000002))
(assert (= temp103505_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp103505_23)))
(assert (= temp103505_25 #x0000000000000003))
(assert (= temp103505_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp103505_25)))
(assert (= temp103505_27 #x0000000000000004))
(assert (= temp103505_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp103505_27)))
(assert (= temp103505_29 #x0000000000000005))
(assert (= temp103505_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp103505_29)))
(assert (= temp103505_31 #x0000000000000004))
(assert (= temp103505_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp103505_31)))
(assert (= var77832 temp103505_32))
(assert (= temp103505_33 #x0000000000000004))
(assert (= temp103505_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp103505_33)))
(assert (= var77833 temp103505_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp103505_35 #x0000000000000001))
(assert (= var77834 temp103505_35))
(assert (= temp103505_36 #x0000000000000001))
(assert (= var275510 temp103505_36))
(assert (= temp103505_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp103505_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp103505_38 #x0000000000000000))
(assert (= var275528 temp103505_38))
(assert (= temp103505_40 #x0000000000000000))
(assert (= temp103505_39 temp103505_40))
(assert (= temp103505_41 #x0000000000000001))
(assert (= var472118 temp103505_41))
(assert (= temp103505_42 #x0000000000000001))
(assert (= var472136
   (ite (bvslt var472118 temp103505_42) #x0000000000000001 #x0000000000000000)))
(assert (= temp103505_43 #x0000000000000000))
(assert (= var472136 temp103505_43))
(assert (= temp103505_45 #x0000000000000000))
(assert (= temp103505_44 temp103505_45))
(assert (= temp103505_46 #x0000000000000001))
(assert (= var668726 temp103505_46))
(assert (= temp103505_47 #x0000000000000001))
(assert (= var668744
   (ite (bvslt var668726 temp103505_47) #x0000000000000001 #x0000000000000000)))
(assert (= temp103505_48 #x0000000000000000))
(assert (= var668744 temp103505_48))
(assert (= temp103505_50 #x0000000000000000))
(assert (= temp103505_49 temp103505_50))
(assert (= temp103505_52 #x00000000000000ff))
(assert (= temp103505_51 temp103505_52))
(assert (= temp103505_54 #x00000000000000ff))
(assert (= temp103505_53 temp103505_54))
(assert (= temp103505_56 #x00000000000000ff))
(assert (= temp103505_55 temp103505_56))
(assert (= temp103505_57 #x0000000000000000))
(assert (= var926795 temp103505_57))
(assert (= var926774 var926795))
(assert (= var861206 var926774))
(assert (= temp103505_58 #x0000000000000000))
(assert (= var861206 temp103505_58))
(assert (= temp103505_59 #x0000000000000000))
(assert (= var1057867 temp103505_59))
(assert (= var1057846 var1057867))
(assert (= var861219 var1057846))
(assert (= temp103505_60 #x0000000000000000))
(assert (= var861219 temp103505_60))
(assert (= temp103505_62 #x0000000000000000))
(assert (= temp103505_61 temp103505_62))
(assert (= temp103505_64 #x0000000000000000))
(assert (= temp103505_63 temp103505_64))
(assert (= temp103505_66 #x0000000000000000))
(assert (= temp103505_65 temp103505_66))
(assert (= temp103505_67 #x0000000000008000))
(assert (= var1188914 temp103505_67))
(assert (= temp103505_68 #x0000000000000001))
(assert (= var1188915
   (ite (bvslt temp103505_65 temp103505_68)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1188916 (ite (= var1188915 #x0000000000000001) var1188914 temp103505_65)))
(assert (= var1188912 var1188916))
(assert (= var795612 var1188912))
(assert (= temp103505_69 #x0000000000040000))
(assert (= var1254450 temp103505_69))
(assert (= temp103505_70 #x0000000000000001))
(assert (= var1254451
   (ite (bvslt temp103505_63 temp103505_70)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1254452 (ite (= var1254451 #x0000000000000001) var1254450 temp103505_63)))
(assert (= var1254448 var1254452))
(assert (= var795619 var1254448))
(assert (= temp103505_71 #x0000000000200000))
(assert (= var1319986 temp103505_71))
(assert (= temp103505_72 #x0000000000000001))
(assert (= var1319987
   (ite (bvslt temp103505_61 temp103505_72)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1319988 (ite (= var1319987 #x0000000000000001) var1319986 temp103505_61)))
(assert (= var1319984 var1319988))
(assert (= var795624 var1319984))
(assert (= var78095 var795624))
(assert (= temp103505_73 #x0000000000000003))
(assert (= temp103505_74 #xffffffffffffffff))
(assert (= var78179 (bvadd var78096 temp103505_74)))
(model-add temp103505_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp103505_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


