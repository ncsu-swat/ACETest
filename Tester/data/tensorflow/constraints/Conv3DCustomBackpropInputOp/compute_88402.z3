(declare-fun temp132601_1 () (_ BitVec 64))
(declare-fun temp132601_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp132601_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp132601_4 () (_ BitVec 64))
(declare-fun temp132601_5 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp132601_6 () (_ BitVec 64))
(declare-fun temp132601_7 () (_ BitVec 64))
(declare-fun temp132601_8 () (_ BitVec 64))
(declare-fun temp132601_9 () (_ BitVec 64))
(declare-fun temp132601_10 () (_ BitVec 64))
(declare-fun temp132601_11 () (_ BitVec 64))
(declare-fun temp132601_12 () (_ BitVec 64))
(declare-fun temp132601_13 () (_ BitVec 64))
(declare-fun temp132601_14 () (_ BitVec 64))
(declare-fun temp132601_15 () (_ BitVec 64))
(declare-fun temp132601_16 () (_ BitVec 64))
(declare-fun temp132601_17 () (_ BitVec 64))
(declare-fun temp132601_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp132601_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp132601_20 () (_ BitVec 64))
(declare-fun temp132601_21 () (_ BitVec 64))
(declare-fun temp132601_22 () (_ BitVec 64))
(declare-fun temp132601_23 () (_ BitVec 64))
(declare-fun temp132601_24 () (_ BitVec 64))
(declare-fun temp132601_25 () (_ BitVec 64))
(declare-fun temp132601_26 () (_ BitVec 64))
(declare-fun temp132601_27 () (_ BitVec 64))
(declare-fun temp132601_28 () (_ BitVec 64))
(declare-fun temp132601_29 () (_ BitVec 64))
(declare-fun temp132601_30 () (_ BitVec 64))
(declare-fun temp132601_31 () (_ BitVec 64))
(declare-fun temp132601_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp132601_33 () (_ BitVec 64))
(declare-fun temp132601_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp132601_35 () (_ BitVec 64))
(declare-fun temp132601_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp132601_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp132601_38 () (_ BitVec 64))
(declare-fun temp132601_40 () (_ BitVec 64))
(declare-fun temp132601_39 () (_ BitVec 64))
(declare-fun temp132601_42 () (_ BitVec 64))
(declare-fun temp132601_41 () (_ BitVec 64))
(declare-fun temp132601_43 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp132601_44 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp132601_45 () (_ BitVec 64))
(declare-fun temp132601_46 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp132601_47 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp132601_48 () (_ BitVec 64))
(declare-fun temp132601_50 () (_ BitVec 64))
(declare-fun temp132601_49 () (_ BitVec 64))
(declare-fun temp132601_52 () (_ BitVec 64))
(declare-fun temp132601_51 () (_ BitVec 64))
(declare-fun temp132601_54 () (_ BitVec 64))
(declare-fun temp132601_53 () (_ BitVec 64))
(declare-fun temp132601_56 () (_ BitVec 64))
(declare-fun temp132601_55 () (_ BitVec 64))
(declare-fun temp132601_58 () (_ BitVec 64))
(declare-fun temp132601_57 () (_ BitVec 64))
(declare-fun temp132601_59 () (_ BitVec 64))
(declare-fun var730187 () (_ BitVec 64))
(declare-fun var730166 () (_ BitVec 64))
(declare-fun var664598 () (_ BitVec 64))
(declare-fun temp132601_60 () (_ BitVec 64))
(declare-fun temp132601_61 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp132601_62 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp132601_63 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp132601_64 () (_ BitVec 64))
(declare-fun var78184 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp132601_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_filter_NAMEEND_DIM temp132601_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp132601_2 #x0000000000000001))
(assert (= var77740 temp132601_2))
(assert (= temp132601_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp132601_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp132601_4 #x0000000000000001))
(assert (= var77770 temp132601_4))
(assert (= temp132601_5 #x0000000000000000))
(assert (= temp132601_6 (select ARGNAME_filter_NAMEEND_DIMSIZE temp132601_5)))
(assert (= temp132601_7 #x0000000000000001))
(assert (= temp132601_8 (select ARGNAME_filter_NAMEEND_DIMSIZE temp132601_7)))
(assert (= temp132601_9 #x0000000000000002))
(assert (= temp132601_10 (select ARGNAME_filter_NAMEEND_DIMSIZE temp132601_9)))
(assert (= temp132601_11 #x0000000000000003))
(assert (= temp132601_12 (select ARGNAME_filter_NAMEEND_DIMSIZE temp132601_11)))
(assert (= temp132601_13 #x0000000000000004))
(assert (= temp132601_14 (select ARGNAME_filter_NAMEEND_DIMSIZE temp132601_13)))
(assert (= temp132601_15 #x0000000000000005))
(assert (= temp132601_16 (select ARGNAME_filter_NAMEEND_DIMSIZE temp132601_15)))
(assert (= temp132601_17 #x0000000000000003))
(assert (= temp132601_18 (select ARGNAME_filter_NAMEEND_DIMSIZE temp132601_17)))
(assert (= var77799 temp132601_18))
(assert (= temp132601_19 #x0000000000000000))
(assert (= temp132601_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp132601_19)))
(assert (= temp132601_21 #x0000000000000001))
(assert (= temp132601_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp132601_21)))
(assert (= temp132601_23 #x0000000000000002))
(assert (= temp132601_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp132601_23)))
(assert (= temp132601_25 #x0000000000000003))
(assert (= temp132601_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp132601_25)))
(assert (= temp132601_27 #x0000000000000004))
(assert (= temp132601_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp132601_27)))
(assert (= temp132601_29 #x0000000000000005))
(assert (= temp132601_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp132601_29)))
(assert (= temp132601_31 #x0000000000000004))
(assert (= temp132601_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp132601_31)))
(assert (= var77832 temp132601_32))
(assert (= temp132601_33 #x0000000000000004))
(assert (= temp132601_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp132601_33)))
(assert (= var77833 temp132601_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp132601_35 #x0000000000000001))
(assert (= var77834 temp132601_35))
(assert (= temp132601_36 #x0000000000000001))
(assert (= var275510 temp132601_36))
(assert (= temp132601_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp132601_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp132601_38 #x0000000000000000))
(assert (= var275528 temp132601_38))
(assert (= temp132601_40 #x0000000000000000))
(assert (= temp132601_39 temp132601_40))
(assert (= temp132601_42 #x0000000000000000))
(assert (= temp132601_41 temp132601_42))
(assert (= temp132601_43 #x0000000000000001))
(assert (= var406582 temp132601_43))
(assert (= temp132601_44 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp132601_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp132601_45 #x0000000000000000))
(assert (= var406600 temp132601_45))
(assert (= temp132601_46 #x0000000000000001))
(assert (= var537654 temp132601_46))
(assert (= temp132601_47 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp132601_47) #x0000000000000001 #x0000000000000000)))
(assert (= temp132601_48 #x0000000000000000))
(assert (= var537672 temp132601_48))
(assert (= temp132601_50 #x0000000000000000))
(assert (= temp132601_49 temp132601_50))
(assert (= temp132601_52 #x0000000000000000))
(assert (= temp132601_51 temp132601_52))
(assert (= temp132601_54 #x00000000000000ff))
(assert (= temp132601_53 temp132601_54))
(assert (= temp132601_56 #x00000000000000ff))
(assert (= temp132601_55 temp132601_56))
(assert (= temp132601_58 #x00000000000000ff))
(assert (= temp132601_57 temp132601_58))
(assert (= temp132601_59 #x0000000000000000))
(assert (= var730187 temp132601_59))
(assert (= var730166 var730187))
(assert (= var664598 var730166))
(assert (= temp132601_60 #x0000000000000000))
(assert (= var664598 temp132601_60))
(assert (= temp132601_61 #x0000000000008000))
(assert (= var1057842 temp132601_61))
(assert (= temp132601_62 #x0000000000040000))
(assert (= var1123378 temp132601_62))
(assert (= temp132601_63 #x0000000000200000))
(assert (= var1188914 temp132601_63))
(assert (= temp132601_64 #x0000000000000001))
(assert (= var78184 temp132601_64))
(model-add temp132601_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp132601_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


