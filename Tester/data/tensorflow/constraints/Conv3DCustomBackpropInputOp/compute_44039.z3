(declare-fun temp66078_1 () (_ BitVec 64))
(declare-fun temp66078_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_1_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp66078_3 () (_ BitVec 64))
(declare-fun ARGNAME_input_2_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp66078_4 () (_ BitVec 64))
(declare-fun temp66078_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_1_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp66078_6 () (_ BitVec 64))
(declare-fun temp66078_7 () (_ BitVec 64))
(declare-fun temp66078_8 () (_ BitVec 64))
(declare-fun temp66078_9 () (_ BitVec 64))
(declare-fun temp66078_10 () (_ BitVec 64))
(declare-fun temp66078_11 () (_ BitVec 64))
(declare-fun temp66078_12 () (_ BitVec 64))
(declare-fun temp66078_13 () (_ BitVec 64))
(declare-fun temp66078_14 () (_ BitVec 64))
(declare-fun temp66078_15 () (_ BitVec 64))
(declare-fun temp66078_16 () (_ BitVec 64))
(declare-fun temp66078_17 () (_ BitVec 64))
(declare-fun temp66078_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp66078_19 () (_ BitVec 64))
(declare-fun ARGNAME_input_2_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp66078_20 () (_ BitVec 64))
(declare-fun temp66078_21 () (_ BitVec 64))
(declare-fun temp66078_22 () (_ BitVec 64))
(declare-fun temp66078_23 () (_ BitVec 64))
(declare-fun temp66078_24 () (_ BitVec 64))
(declare-fun temp66078_25 () (_ BitVec 64))
(declare-fun temp66078_26 () (_ BitVec 64))
(declare-fun temp66078_27 () (_ BitVec 64))
(declare-fun temp66078_28 () (_ BitVec 64))
(declare-fun temp66078_29 () (_ BitVec 64))
(declare-fun temp66078_30 () (_ BitVec 64))
(declare-fun temp66078_31 () (_ BitVec 64))
(declare-fun temp66078_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp66078_33 () (_ BitVec 64))
(declare-fun temp66078_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp66078_35 () (_ BitVec 64))
(declare-fun temp66078_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp66078_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp66078_38 () (_ BitVec 64))
(declare-fun temp66078_39 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp66078_40 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp66078_41 () (_ BitVec 64))
(declare-fun temp66078_42 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp66078_43 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp66078_44 () (_ BitVec 64))
(declare-fun temp66078_46 () (_ BitVec 64))
(declare-fun temp66078_45 () (_ BitVec 64))
(declare-fun temp66078_48 () (_ BitVec 64))
(declare-fun temp66078_47 () (_ BitVec 64))
(declare-fun temp66078_50 () (_ BitVec 64))
(declare-fun temp66078_49 () (_ BitVec 64))
(declare-fun temp66078_51 () (_ BitVec 64))
(declare-fun var730187 () (_ BitVec 64))
(declare-fun var730166 () (_ BitVec 64))
(declare-fun var664598 () (_ BitVec 64))
(declare-fun temp66078_52 () (_ BitVec 64))
(declare-fun temp66078_53 () (_ BitVec 64))
(declare-fun var795723 () (_ BitVec 64))
(declare-fun var795702 () (_ BitVec 64))
(declare-fun var664608 () (_ BitVec 64))
(declare-fun temp66078_54 () (_ BitVec 64))
(declare-fun temp66078_55 () (_ BitVec 64))
(declare-fun var861259 () (_ BitVec 64))
(declare-fun var861238 () (_ BitVec 64))
(declare-fun var664611 () (_ BitVec 64))
(declare-fun temp66078_56 () (_ BitVec 64))
(declare-fun temp66078_58 () (_ BitVec 64))
(declare-fun temp66078_57 () (_ BitVec 64))
(declare-fun temp66078_60 () (_ BitVec 64))
(declare-fun temp66078_59 () (_ BitVec 64))
(declare-fun temp66078_62 () (_ BitVec 64))
(declare-fun temp66078_61 () (_ BitVec 64))
(declare-fun temp66078_63 () (_ BitVec 64))
(declare-fun var992306 () (_ BitVec 64))
(declare-fun temp66078_64 () (_ BitVec 64))
(declare-fun var992307 () (_ BitVec 64))
(declare-fun var992308 () (_ BitVec 64))
(declare-fun var992304 () (_ BitVec 64))
(declare-fun var599004 () (_ BitVec 64))
(declare-fun temp66078_65 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp66078_66 () (_ BitVec 64))
(declare-fun var1057843 () (_ BitVec 64))
(declare-fun var1057844 () (_ BitVec 64))
(declare-fun var1057840 () (_ BitVec 64))
(declare-fun var599011 () (_ BitVec 64))
(declare-fun temp66078_67 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp66078_68 () (_ BitVec 64))
(declare-fun var1123379 () (_ BitVec 64))
(declare-fun var1123380 () (_ BitVec 64))
(declare-fun var1123376 () (_ BitVec 64))
(declare-fun var599016 () (_ BitVec 64))
(declare-fun var78095 () (_ BitVec 64))
(declare-fun temp66078_69 () (_ BitVec 64))
(declare-fun temp66078_70 () (_ BitVec 64))
(declare-fun var78096 () (_ BitVec 64))
(declare-fun var78179 () (_ BitVec 64))
(declare-fun temp66078_72 () (_ BitVec 64))
(declare-fun temp66078_71 () (_ BitVec 64))
(declare-fun temp66078_74 () (_ BitVec 64))
(declare-fun temp66078_73 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp66078_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_input_1_NAMEEND_DIM temp66078_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66078_2 #x0000000000000001))
(assert (= var77740 temp66078_2))
(assert (= temp66078_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_input_2_NAMEEND_DIM temp66078_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66078_4 #x0000000000000001))
(assert (= var77770 temp66078_4))
(assert (= temp66078_5 #x0000000000000000))
(assert (= temp66078_6 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp66078_5)))
(assert (= temp66078_7 #x0000000000000001))
(assert (= temp66078_8 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp66078_7)))
(assert (= temp66078_9 #x0000000000000002))
(assert (= temp66078_10 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp66078_9)))
(assert (= temp66078_11 #x0000000000000003))
(assert (= temp66078_12 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp66078_11)))
(assert (= temp66078_13 #x0000000000000004))
(assert (= temp66078_14 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp66078_13)))
(assert (= temp66078_15 #x0000000000000005))
(assert (= temp66078_16 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp66078_15)))
(assert (= temp66078_17 #x0000000000000003))
(assert (= temp66078_18 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp66078_17)))
(assert (= var77799 temp66078_18))
(assert (= temp66078_19 #x0000000000000000))
(assert (= temp66078_20 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp66078_19)))
(assert (= temp66078_21 #x0000000000000001))
(assert (= temp66078_22 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp66078_21)))
(assert (= temp66078_23 #x0000000000000002))
(assert (= temp66078_24 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp66078_23)))
(assert (= temp66078_25 #x0000000000000003))
(assert (= temp66078_26 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp66078_25)))
(assert (= temp66078_27 #x0000000000000004))
(assert (= temp66078_28 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp66078_27)))
(assert (= temp66078_29 #x0000000000000005))
(assert (= temp66078_30 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp66078_29)))
(assert (= temp66078_31 #x0000000000000004))
(assert (= temp66078_32 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp66078_31)))
(assert (= var77832 temp66078_32))
(assert (= temp66078_33 #x0000000000000004))
(assert (= temp66078_34 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp66078_33)))
(assert (= var77833 temp66078_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp66078_35 #x0000000000000001))
(assert (= var77834 temp66078_35))
(assert (= temp66078_36 #x0000000000000001))
(assert (= var275510 temp66078_36))
(assert (= temp66078_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp66078_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp66078_38 #x0000000000000000))
(assert (= var275528 temp66078_38))
(assert (= temp66078_39 #x0000000000000001))
(assert (= var406582 temp66078_39))
(assert (= temp66078_40 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp66078_40) #x0000000000000001 #x0000000000000000)))
(assert (= temp66078_41 #x0000000000000000))
(assert (= var406600 temp66078_41))
(assert (= temp66078_42 #x0000000000000001))
(assert (= var537654 temp66078_42))
(assert (= temp66078_43 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp66078_43) #x0000000000000001 #x0000000000000000)))
(assert (= temp66078_44 #x0000000000000000))
(assert (= var537672 temp66078_44))
(assert (= temp66078_46 #x00000000000000ff))
(assert (= temp66078_45 temp66078_46))
(assert (= temp66078_48 #x00000000000000ff))
(assert (= temp66078_47 temp66078_48))
(assert (= temp66078_50 #x00000000000000ff))
(assert (= temp66078_49 temp66078_50))
(assert (= temp66078_51 #x0000000000000000))
(assert (= var730187 temp66078_51))
(assert (= var730166 var730187))
(assert (= var664598 var730166))
(assert (= temp66078_52 #x0000000000000000))
(assert (= var664598 temp66078_52))
(assert (= temp66078_53 #x0000000000000000))
(assert (= var795723 temp66078_53))
(assert (= var795702 var795723))
(assert (= var664608 var795702))
(assert (= temp66078_54 #x0000000000000000))
(assert (= var664608 temp66078_54))
(assert (= temp66078_55 #x0000000000000000))
(assert (= var861259 temp66078_55))
(assert (= var861238 var861259))
(assert (= var664611 var861238))
(assert (= temp66078_56 #x0000000000000000))
(assert (= var664611 temp66078_56))
(assert (= temp66078_58 #x0000000000000000))
(assert (= temp66078_57 temp66078_58))
(assert (= temp66078_60 #x0000000000000000))
(assert (= temp66078_59 temp66078_60))
(assert (= temp66078_62 #x0000000000000000))
(assert (= temp66078_61 temp66078_62))
(assert (= temp66078_63 #x0000000000008000))
(assert (= var992306 temp66078_63))
(assert (= temp66078_64 #x0000000000000001))
(assert (= var992307
   (ite (bvslt temp66078_61 temp66078_64) #x0000000000000001 #x0000000000000000)))
(assert (= var992308 (ite (= var992307 #x0000000000000001) var992306 temp66078_61)))
(assert (= var992304 var992308))
(assert (= var599004 var992304))
(assert (= temp66078_65 #x0000000000040000))
(assert (= var1057842 temp66078_65))
(assert (= temp66078_66 #x0000000000000001))
(assert (= var1057843
   (ite (bvslt temp66078_59 temp66078_66) #x0000000000000001 #x0000000000000000)))
(assert (= var1057844 (ite (= var1057843 #x0000000000000001) var1057842 temp66078_59)))
(assert (= var1057840 var1057844))
(assert (= var599011 var1057840))
(assert (= temp66078_67 #x0000000000200000))
(assert (= var1123378 temp66078_67))
(assert (= temp66078_68 #x0000000000000001))
(assert (= var1123379
   (ite (bvslt temp66078_57 temp66078_68) #x0000000000000001 #x0000000000000000)))
(assert (= var1123380 (ite (= var1123379 #x0000000000000001) var1123378 temp66078_57)))
(assert (= var1123376 var1123380))
(assert (= var599016 var1123376))
(assert (= var78095 var599016))
(assert (= temp66078_69 #x0000000000000003))
(assert (= temp66078_70 #xffffffffffffffff))
(assert (= var78179 (bvadd var78096 temp66078_70)))
(assert (= temp66078_72 #x0000000000000001))
(assert (= temp66078_71 temp66078_72))
(assert (= temp66078_74 #x0000000000000001))
(assert (= temp66078_73 temp66078_74))
(model-add temp66078_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp66078_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_1_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))

