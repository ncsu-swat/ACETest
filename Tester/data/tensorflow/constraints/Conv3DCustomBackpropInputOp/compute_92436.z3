(declare-fun temp138665_1 () (_ BitVec 64))
(declare-fun temp138665_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_1_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp138665_3 () (_ BitVec 64))
(declare-fun ARGNAME_input_2_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp138665_4 () (_ BitVec 64))
(declare-fun temp138665_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_1_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp138665_6 () (_ BitVec 64))
(declare-fun temp138665_7 () (_ BitVec 64))
(declare-fun temp138665_8 () (_ BitVec 64))
(declare-fun temp138665_9 () (_ BitVec 64))
(declare-fun temp138665_10 () (_ BitVec 64))
(declare-fun temp138665_11 () (_ BitVec 64))
(declare-fun temp138665_12 () (_ BitVec 64))
(declare-fun temp138665_13 () (_ BitVec 64))
(declare-fun temp138665_14 () (_ BitVec 64))
(declare-fun temp138665_15 () (_ BitVec 64))
(declare-fun temp138665_16 () (_ BitVec 64))
(declare-fun temp138665_17 () (_ BitVec 64))
(declare-fun temp138665_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp138665_19 () (_ BitVec 64))
(declare-fun ARGNAME_input_2_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp138665_20 () (_ BitVec 64))
(declare-fun temp138665_21 () (_ BitVec 64))
(declare-fun temp138665_22 () (_ BitVec 64))
(declare-fun temp138665_23 () (_ BitVec 64))
(declare-fun temp138665_24 () (_ BitVec 64))
(declare-fun temp138665_25 () (_ BitVec 64))
(declare-fun temp138665_26 () (_ BitVec 64))
(declare-fun temp138665_27 () (_ BitVec 64))
(declare-fun temp138665_28 () (_ BitVec 64))
(declare-fun temp138665_29 () (_ BitVec 64))
(declare-fun temp138665_30 () (_ BitVec 64))
(declare-fun temp138665_31 () (_ BitVec 64))
(declare-fun temp138665_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp138665_33 () (_ BitVec 64))
(declare-fun temp138665_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp138665_35 () (_ BitVec 64))
(declare-fun temp138665_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp138665_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp138665_38 () (_ BitVec 64))
(declare-fun temp138665_40 () (_ BitVec 64))
(declare-fun temp138665_39 () (_ BitVec 64))
(declare-fun temp138665_42 () (_ BitVec 64))
(declare-fun temp138665_41 () (_ BitVec 64))
(declare-fun temp138665_43 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp138665_44 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp138665_45 () (_ BitVec 64))
(declare-fun temp138665_47 () (_ BitVec 64))
(declare-fun temp138665_46 () (_ BitVec 64))
(declare-fun temp138665_49 () (_ BitVec 64))
(declare-fun temp138665_48 () (_ BitVec 64))
(declare-fun temp138665_50 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp138665_51 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp138665_52 () (_ BitVec 64))
(declare-fun temp138665_54 () (_ BitVec 64))
(declare-fun temp138665_53 () (_ BitVec 64))
(declare-fun temp138665_56 () (_ BitVec 64))
(declare-fun temp138665_55 () (_ BitVec 64))
(declare-fun temp138665_58 () (_ BitVec 64))
(declare-fun temp138665_57 () (_ BitVec 64))
(declare-fun temp138665_60 () (_ BitVec 64))
(declare-fun temp138665_59 () (_ BitVec 64))
(declare-fun temp138665_62 () (_ BitVec 64))
(declare-fun temp138665_61 () (_ BitVec 64))
(declare-fun temp138665_63 () (_ BitVec 64))
(declare-fun var795723 () (_ BitVec 64))
(declare-fun var795702 () (_ BitVec 64))
(declare-fun var664608 () (_ BitVec 64))
(declare-fun temp138665_64 () (_ BitVec 64))
(declare-fun temp138665_65 () (_ BitVec 64))
(declare-fun var861259 () (_ BitVec 64))
(declare-fun var861238 () (_ BitVec 64))
(declare-fun var664611 () (_ BitVec 64))
(declare-fun temp138665_66 () (_ BitVec 64))
(declare-fun temp138665_67 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp138665_68 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp138665_69 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp138665_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_input_1_NAMEEND_DIM temp138665_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp138665_2 #x0000000000000001))
(assert (= var77740 temp138665_2))
(assert (= temp138665_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_input_2_NAMEEND_DIM temp138665_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp138665_4 #x0000000000000001))
(assert (= var77770 temp138665_4))
(assert (= temp138665_5 #x0000000000000000))
(assert (= temp138665_6 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp138665_5)))
(assert (= temp138665_7 #x0000000000000001))
(assert (= temp138665_8 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp138665_7)))
(assert (= temp138665_9 #x0000000000000002))
(assert (= temp138665_10 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp138665_9)))
(assert (= temp138665_11 #x0000000000000003))
(assert (= temp138665_12 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp138665_11)))
(assert (= temp138665_13 #x0000000000000004))
(assert (= temp138665_14 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp138665_13)))
(assert (= temp138665_15 #x0000000000000005))
(assert (= temp138665_16 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp138665_15)))
(assert (= temp138665_17 #x0000000000000003))
(assert (= temp138665_18 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp138665_17)))
(assert (= var77799 temp138665_18))
(assert (= temp138665_19 #x0000000000000000))
(assert (= temp138665_20 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp138665_19)))
(assert (= temp138665_21 #x0000000000000001))
(assert (= temp138665_22 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp138665_21)))
(assert (= temp138665_23 #x0000000000000002))
(assert (= temp138665_24 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp138665_23)))
(assert (= temp138665_25 #x0000000000000003))
(assert (= temp138665_26 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp138665_25)))
(assert (= temp138665_27 #x0000000000000004))
(assert (= temp138665_28 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp138665_27)))
(assert (= temp138665_29 #x0000000000000005))
(assert (= temp138665_30 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp138665_29)))
(assert (= temp138665_31 #x0000000000000004))
(assert (= temp138665_32 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp138665_31)))
(assert (= var77832 temp138665_32))
(assert (= temp138665_33 #x0000000000000004))
(assert (= temp138665_34 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp138665_33)))
(assert (= var77833 temp138665_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp138665_35 #x0000000000000001))
(assert (= var77834 temp138665_35))
(assert (= temp138665_36 #x0000000000000001))
(assert (= var275510 temp138665_36))
(assert (= temp138665_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp138665_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp138665_38 #x0000000000000000))
(assert (= var275528 temp138665_38))
(assert (= temp138665_40 #x0000000000000000))
(assert (= temp138665_39 temp138665_40))
(assert (= temp138665_42 #x0000000000000000))
(assert (= temp138665_41 temp138665_42))
(assert (= temp138665_43 #x0000000000000001))
(assert (= var406582 temp138665_43))
(assert (= temp138665_44 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp138665_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp138665_45 #x0000000000000000))
(assert (= var406600 temp138665_45))
(assert (= temp138665_47 #x0000000000000000))
(assert (= temp138665_46 temp138665_47))
(assert (= temp138665_49 #x0000000000000000))
(assert (= temp138665_48 temp138665_49))
(assert (= temp138665_50 #x0000000000000001))
(assert (= var537654 temp138665_50))
(assert (= temp138665_51 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp138665_51) #x0000000000000001 #x0000000000000000)))
(assert (= temp138665_52 #x0000000000000000))
(assert (= var537672 temp138665_52))
(assert (= temp138665_54 #x0000000000000000))
(assert (= temp138665_53 temp138665_54))
(assert (= temp138665_56 #x0000000000000000))
(assert (= temp138665_55 temp138665_56))
(assert (= temp138665_58 #x00000000000000ff))
(assert (= temp138665_57 temp138665_58))
(assert (= temp138665_60 #x00000000000000ff))
(assert (= temp138665_59 temp138665_60))
(assert (= temp138665_62 #x00000000000000ff))
(assert (= temp138665_61 temp138665_62))
(assert (= temp138665_63 #x0000000000000000))
(assert (= var795723 temp138665_63))
(assert (= var795702 var795723))
(assert (= var664608 var795702))
(assert (= temp138665_64 #x0000000000000000))
(assert (= var664608 temp138665_64))
(assert (= temp138665_65 #x0000000000000000))
(assert (= var861259 temp138665_65))
(assert (= var861238 var861259))
(assert (= var664611 var861238))
(assert (= temp138665_66 #x0000000000000000))
(assert (= var664611 temp138665_66))
(assert (= temp138665_67 #x0000000000008000))
(assert (= var1057842 temp138665_67))
(assert (= temp138665_68 #x0000000000040000))
(assert (= var1123378 temp138665_68))
(assert (= temp138665_69 #x0000000000200000))
(assert (= var1188914 temp138665_69))
(model-add temp138665_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp138665_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_1_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))

