(declare-fun temp140868_1 () (_ BitVec 64))
(declare-fun temp140868_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp140868_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp140868_4 () (_ BitVec 64))
(declare-fun temp140868_5 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp140868_6 () (_ BitVec 64))
(declare-fun temp140868_7 () (_ BitVec 64))
(declare-fun temp140868_8 () (_ BitVec 64))
(declare-fun temp140868_9 () (_ BitVec 64))
(declare-fun temp140868_10 () (_ BitVec 64))
(declare-fun temp140868_11 () (_ BitVec 64))
(declare-fun temp140868_12 () (_ BitVec 64))
(declare-fun temp140868_13 () (_ BitVec 64))
(declare-fun temp140868_14 () (_ BitVec 64))
(declare-fun temp140868_15 () (_ BitVec 64))
(declare-fun temp140868_16 () (_ BitVec 64))
(declare-fun temp140868_17 () (_ BitVec 64))
(declare-fun temp140868_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp140868_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp140868_20 () (_ BitVec 64))
(declare-fun temp140868_21 () (_ BitVec 64))
(declare-fun temp140868_22 () (_ BitVec 64))
(declare-fun temp140868_23 () (_ BitVec 64))
(declare-fun temp140868_24 () (_ BitVec 64))
(declare-fun temp140868_25 () (_ BitVec 64))
(declare-fun temp140868_26 () (_ BitVec 64))
(declare-fun temp140868_27 () (_ BitVec 64))
(declare-fun temp140868_28 () (_ BitVec 64))
(declare-fun temp140868_29 () (_ BitVec 64))
(declare-fun temp140868_30 () (_ BitVec 64))
(declare-fun temp140868_31 () (_ BitVec 64))
(declare-fun temp140868_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp140868_33 () (_ BitVec 64))
(declare-fun temp140868_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp140868_35 () (_ BitVec 64))
(declare-fun temp140868_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp140868_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp140868_38 () (_ BitVec 64))
(declare-fun temp140868_40 () (_ BitVec 64))
(declare-fun temp140868_39 () (_ BitVec 64))
(declare-fun temp140868_42 () (_ BitVec 64))
(declare-fun temp140868_41 () (_ BitVec 64))
(declare-fun temp140868_43 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp140868_44 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp140868_45 () (_ BitVec 64))
(declare-fun temp140868_47 () (_ BitVec 64))
(declare-fun temp140868_46 () (_ BitVec 64))
(declare-fun temp140868_49 () (_ BitVec 64))
(declare-fun temp140868_48 () (_ BitVec 64))
(declare-fun temp140868_50 () (_ BitVec 64))
(declare-fun var537654 () (_ BitVec 64))
(declare-fun temp140868_51 () (_ BitVec 64))
(declare-fun var537672 () (_ BitVec 64))
(declare-fun temp140868_52 () (_ BitVec 64))
(declare-fun temp140868_54 () (_ BitVec 64))
(declare-fun temp140868_53 () (_ BitVec 64))
(declare-fun temp140868_56 () (_ BitVec 64))
(declare-fun temp140868_55 () (_ BitVec 64))
(declare-fun temp140868_58 () (_ BitVec 64))
(declare-fun temp140868_57 () (_ BitVec 64))
(declare-fun temp140868_59 () (_ BitVec 64))
(declare-fun var730187 () (_ BitVec 64))
(declare-fun var730166 () (_ BitVec 64))
(declare-fun var664598 () (_ BitVec 64))
(declare-fun temp140868_60 () (_ BitVec 64))
(declare-fun temp140868_61 () (_ BitVec 64))
(declare-fun var795723 () (_ BitVec 64))
(declare-fun var795702 () (_ BitVec 64))
(declare-fun var664608 () (_ BitVec 64))
(declare-fun temp140868_62 () (_ BitVec 64))
(declare-fun temp140868_63 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp140868_64 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp140868_65 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp140868_67 () (_ BitVec 64))
(declare-fun temp140868_66 () (_ BitVec 64))
(declare-fun temp140868_69 () (_ BitVec 64))
(declare-fun temp140868_68 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp140868_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_filter_NAMEEND_DIM temp140868_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp140868_2 #x0000000000000001))
(assert (= var77740 temp140868_2))
(assert (= temp140868_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp140868_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp140868_4 #x0000000000000001))
(assert (= var77770 temp140868_4))
(assert (= temp140868_5 #x0000000000000000))
(assert (= temp140868_6 (select ARGNAME_filter_NAMEEND_DIMSIZE temp140868_5)))
(assert (= temp140868_7 #x0000000000000001))
(assert (= temp140868_8 (select ARGNAME_filter_NAMEEND_DIMSIZE temp140868_7)))
(assert (= temp140868_9 #x0000000000000002))
(assert (= temp140868_10 (select ARGNAME_filter_NAMEEND_DIMSIZE temp140868_9)))
(assert (= temp140868_11 #x0000000000000003))
(assert (= temp140868_12 (select ARGNAME_filter_NAMEEND_DIMSIZE temp140868_11)))
(assert (= temp140868_13 #x0000000000000004))
(assert (= temp140868_14 (select ARGNAME_filter_NAMEEND_DIMSIZE temp140868_13)))
(assert (= temp140868_15 #x0000000000000005))
(assert (= temp140868_16 (select ARGNAME_filter_NAMEEND_DIMSIZE temp140868_15)))
(assert (= temp140868_17 #x0000000000000003))
(assert (= temp140868_18 (select ARGNAME_filter_NAMEEND_DIMSIZE temp140868_17)))
(assert (= var77799 temp140868_18))
(assert (= temp140868_19 #x0000000000000000))
(assert (= temp140868_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp140868_19)))
(assert (= temp140868_21 #x0000000000000001))
(assert (= temp140868_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp140868_21)))
(assert (= temp140868_23 #x0000000000000002))
(assert (= temp140868_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp140868_23)))
(assert (= temp140868_25 #x0000000000000003))
(assert (= temp140868_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp140868_25)))
(assert (= temp140868_27 #x0000000000000004))
(assert (= temp140868_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp140868_27)))
(assert (= temp140868_29 #x0000000000000005))
(assert (= temp140868_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp140868_29)))
(assert (= temp140868_31 #x0000000000000004))
(assert (= temp140868_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp140868_31)))
(assert (= var77832 temp140868_32))
(assert (= temp140868_33 #x0000000000000004))
(assert (= temp140868_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp140868_33)))
(assert (= var77833 temp140868_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp140868_35 #x0000000000000001))
(assert (= var77834 temp140868_35))
(assert (= temp140868_36 #x0000000000000001))
(assert (= var275510 temp140868_36))
(assert (= temp140868_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp140868_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp140868_38 #x0000000000000000))
(assert (= var275528 temp140868_38))
(assert (= temp140868_40 #x0000000000000000))
(assert (= temp140868_39 temp140868_40))
(assert (= temp140868_42 #x0000000000000000))
(assert (= temp140868_41 temp140868_42))
(assert (= temp140868_43 #x0000000000000001))
(assert (= var406582 temp140868_43))
(assert (= temp140868_44 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp140868_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp140868_45 #x0000000000000000))
(assert (= var406600 temp140868_45))
(assert (= temp140868_47 #x0000000000000000))
(assert (= temp140868_46 temp140868_47))
(assert (= temp140868_49 #x0000000000000000))
(assert (= temp140868_48 temp140868_49))
(assert (= temp140868_50 #x0000000000000001))
(assert (= var537654 temp140868_50))
(assert (= temp140868_51 #x0000000000000001))
(assert (= var537672
   (ite (bvslt var537654 temp140868_51) #x0000000000000001 #x0000000000000000)))
(assert (= temp140868_52 #x0000000000000000))
(assert (= var537672 temp140868_52))
(assert (= temp140868_54 #x00000000000000ff))
(assert (= temp140868_53 temp140868_54))
(assert (= temp140868_56 #x00000000000000ff))
(assert (= temp140868_55 temp140868_56))
(assert (= temp140868_58 #x00000000000000ff))
(assert (= temp140868_57 temp140868_58))
(assert (= temp140868_59 #x0000000000000000))
(assert (= var730187 temp140868_59))
(assert (= var730166 var730187))
(assert (= var664598 var730166))
(assert (= temp140868_60 #x0000000000000000))
(assert (= var664598 temp140868_60))
(assert (= temp140868_61 #x0000000000000000))
(assert (= var795723 temp140868_61))
(assert (= var795702 var795723))
(assert (= var664608 var795702))
(assert (= temp140868_62 #x0000000000000000))
(assert (= var664608 temp140868_62))
(assert (= temp140868_63 #x0000000000008000))
(assert (= var1057842 temp140868_63))
(assert (= temp140868_64 #x0000000000040000))
(assert (= var1123378 temp140868_64))
(assert (= temp140868_65 #x0000000000200000))
(assert (= var1188914 temp140868_65))
(assert (= temp140868_67 #x0000000000000001))
(assert (= temp140868_66 temp140868_67))
(assert (= temp140868_69 #x0000000000000001))
(assert (= temp140868_68 temp140868_69))
(model-add temp140868_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp140868_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


