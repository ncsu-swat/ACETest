(declare-fun temp50875_1 () (_ BitVec 64))
(declare-fun temp50875_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp50875_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp50875_4 () (_ BitVec 64))
(declare-fun temp50875_5 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp50875_6 () (_ BitVec 64))
(declare-fun temp50875_7 () (_ BitVec 64))
(declare-fun temp50875_8 () (_ BitVec 64))
(declare-fun temp50875_9 () (_ BitVec 64))
(declare-fun temp50875_10 () (_ BitVec 64))
(declare-fun temp50875_11 () (_ BitVec 64))
(declare-fun temp50875_12 () (_ BitVec 64))
(declare-fun temp50875_13 () (_ BitVec 64))
(declare-fun temp50875_14 () (_ BitVec 64))
(declare-fun temp50875_15 () (_ BitVec 64))
(declare-fun temp50875_16 () (_ BitVec 64))
(declare-fun temp50875_17 () (_ BitVec 64))
(declare-fun temp50875_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp50875_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp50875_20 () (_ BitVec 64))
(declare-fun temp50875_21 () (_ BitVec 64))
(declare-fun temp50875_22 () (_ BitVec 64))
(declare-fun temp50875_23 () (_ BitVec 64))
(declare-fun temp50875_24 () (_ BitVec 64))
(declare-fun temp50875_25 () (_ BitVec 64))
(declare-fun temp50875_26 () (_ BitVec 64))
(declare-fun temp50875_27 () (_ BitVec 64))
(declare-fun temp50875_28 () (_ BitVec 64))
(declare-fun temp50875_29 () (_ BitVec 64))
(declare-fun temp50875_30 () (_ BitVec 64))
(declare-fun temp50875_31 () (_ BitVec 64))
(declare-fun temp50875_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp50875_33 () (_ BitVec 64))
(declare-fun temp50875_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp50875_35 () (_ BitVec 64))
(declare-fun temp50875_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp50875_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp50875_38 () (_ BitVec 64))
(declare-fun temp50875_40 () (_ BitVec 64))
(declare-fun temp50875_39 () (_ BitVec 64))
(declare-fun temp50875_42 () (_ BitVec 64))
(declare-fun temp50875_41 () (_ BitVec 64))
(declare-fun temp50875_43 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp50875_44 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp50875_45 () (_ BitVec 64))
(declare-fun temp50875_47 () (_ BitVec 64))
(declare-fun temp50875_46 () (_ BitVec 64))
(declare-fun temp50875_48 () (_ BitVec 64))
(declare-fun var603190 () (_ BitVec 64))
(declare-fun temp50875_49 () (_ BitVec 64))
(declare-fun var603208 () (_ BitVec 64))
(declare-fun temp50875_50 () (_ BitVec 64))
(declare-fun temp50875_52 () (_ BitVec 64))
(declare-fun temp50875_51 () (_ BitVec 64))
(declare-fun temp50875_54 () (_ BitVec 64))
(declare-fun temp50875_53 () (_ BitVec 64))
(declare-fun temp50875_56 () (_ BitVec 64))
(declare-fun temp50875_55 () (_ BitVec 64))
(declare-fun temp50875_58 () (_ BitVec 64))
(declare-fun temp50875_57 () (_ BitVec 64))
(declare-fun temp50875_59 () (_ BitVec 64))
(declare-fun var926795 () (_ BitVec 64))
(declare-fun var926774 () (_ BitVec 64))
(declare-fun var795680 () (_ BitVec 64))
(declare-fun temp50875_60 () (_ BitVec 64))
(declare-fun temp50875_62 () (_ BitVec 64))
(declare-fun temp50875_61 () (_ BitVec 64))
(declare-fun temp50875_64 () (_ BitVec 64))
(declare-fun temp50875_63 () (_ BitVec 64))
(declare-fun temp50875_66 () (_ BitVec 64))
(declare-fun temp50875_65 () (_ BitVec 64))
(declare-fun temp50875_67 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp50875_68 () (_ BitVec 64))
(declare-fun var1123379 () (_ BitVec 64))
(declare-fun var1123380 () (_ BitVec 64))
(declare-fun var1123376 () (_ BitVec 64))
(declare-fun var730076 () (_ BitVec 64))
(declare-fun temp50875_69 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp50875_70 () (_ BitVec 64))
(declare-fun var1188915 () (_ BitVec 64))
(declare-fun var1188916 () (_ BitVec 64))
(declare-fun var1188912 () (_ BitVec 64))
(declare-fun var730083 () (_ BitVec 64))
(declare-fun temp50875_71 () (_ BitVec 64))
(declare-fun var1254450 () (_ BitVec 64))
(declare-fun temp50875_72 () (_ BitVec 64))
(declare-fun var1254451 () (_ BitVec 64))
(declare-fun var1254452 () (_ BitVec 64))
(declare-fun var1254448 () (_ BitVec 64))
(declare-fun var730088 () (_ BitVec 64))
(declare-fun var78095 () (_ BitVec 64))
(declare-fun temp50875_73 () (_ BitVec 64))
(declare-fun temp50875_74 () (_ BitVec 64))
(declare-fun var78096 () (_ BitVec 64))
(declare-fun var78179 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp50875_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_filter_NAMEEND_DIM temp50875_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50875_2 #x0000000000000001))
(assert (= var77740 temp50875_2))
(assert (= temp50875_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp50875_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50875_4 #x0000000000000001))
(assert (= var77770 temp50875_4))
(assert (= temp50875_5 #x0000000000000000))
(assert (= temp50875_6 (select ARGNAME_filter_NAMEEND_DIMSIZE temp50875_5)))
(assert (= temp50875_7 #x0000000000000001))
(assert (= temp50875_8 (select ARGNAME_filter_NAMEEND_DIMSIZE temp50875_7)))
(assert (= temp50875_9 #x0000000000000002))
(assert (= temp50875_10 (select ARGNAME_filter_NAMEEND_DIMSIZE temp50875_9)))
(assert (= temp50875_11 #x0000000000000003))
(assert (= temp50875_12 (select ARGNAME_filter_NAMEEND_DIMSIZE temp50875_11)))
(assert (= temp50875_13 #x0000000000000004))
(assert (= temp50875_14 (select ARGNAME_filter_NAMEEND_DIMSIZE temp50875_13)))
(assert (= temp50875_15 #x0000000000000005))
(assert (= temp50875_16 (select ARGNAME_filter_NAMEEND_DIMSIZE temp50875_15)))
(assert (= temp50875_17 #x0000000000000003))
(assert (= temp50875_18 (select ARGNAME_filter_NAMEEND_DIMSIZE temp50875_17)))
(assert (= var77799 temp50875_18))
(assert (= temp50875_19 #x0000000000000000))
(assert (= temp50875_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp50875_19)))
(assert (= temp50875_21 #x0000000000000001))
(assert (= temp50875_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp50875_21)))
(assert (= temp50875_23 #x0000000000000002))
(assert (= temp50875_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp50875_23)))
(assert (= temp50875_25 #x0000000000000003))
(assert (= temp50875_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp50875_25)))
(assert (= temp50875_27 #x0000000000000004))
(assert (= temp50875_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp50875_27)))
(assert (= temp50875_29 #x0000000000000005))
(assert (= temp50875_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp50875_29)))
(assert (= temp50875_31 #x0000000000000004))
(assert (= temp50875_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp50875_31)))
(assert (= var77832 temp50875_32))
(assert (= temp50875_33 #x0000000000000004))
(assert (= temp50875_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp50875_33)))
(assert (= var77833 temp50875_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp50875_35 #x0000000000000001))
(assert (= var77834 temp50875_35))
(assert (= temp50875_36 #x0000000000000001))
(assert (= var275510 temp50875_36))
(assert (= temp50875_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp50875_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp50875_38 #x0000000000000000))
(assert (= var275528 temp50875_38))
(assert (= temp50875_40 #x0000000000000000))
(assert (= temp50875_39 temp50875_40))
(assert (= temp50875_42 #x0000000000000000))
(assert (= temp50875_41 temp50875_42))
(assert (= temp50875_43 #x0000000000000001))
(assert (= var406582 temp50875_43))
(assert (= temp50875_44 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp50875_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp50875_45 #x0000000000000000))
(assert (= var406600 temp50875_45))
(assert (= temp50875_47 #x0000000000000000))
(assert (= temp50875_46 temp50875_47))
(assert (= temp50875_48 #x0000000000000001))
(assert (= var603190 temp50875_48))
(assert (= temp50875_49 #x0000000000000001))
(assert (= var603208
   (ite (bvslt var603190 temp50875_49) #x0000000000000001 #x0000000000000000)))
(assert (= temp50875_50 #x0000000000000000))
(assert (= var603208 temp50875_50))
(assert (= temp50875_52 #x0000000000000000))
(assert (= temp50875_51 temp50875_52))
(assert (= temp50875_54 #x00000000000000ff))
(assert (= temp50875_53 temp50875_54))
(assert (= temp50875_56 #x00000000000000ff))
(assert (= temp50875_55 temp50875_56))
(assert (= temp50875_58 #x00000000000000ff))
(assert (= temp50875_57 temp50875_58))
(assert (= temp50875_59 #x0000000000000000))
(assert (= var926795 temp50875_59))
(assert (= var926774 var926795))
(assert (= var795680 var926774))
(assert (= temp50875_60 #x0000000000000000))
(assert (= var795680 temp50875_60))
(assert (= temp50875_62 #x0000000000000000))
(assert (= temp50875_61 temp50875_62))
(assert (= temp50875_64 #x0000000000000000))
(assert (= temp50875_63 temp50875_64))
(assert (= temp50875_66 #x0000000000000000))
(assert (= temp50875_65 temp50875_66))
(assert (= temp50875_67 #x0000000000008000))
(assert (= var1123378 temp50875_67))
(assert (= temp50875_68 #x0000000000000001))
(assert (= var1123379
   (ite (bvslt temp50875_65 temp50875_68) #x0000000000000001 #x0000000000000000)))
(assert (= var1123380 (ite (= var1123379 #x0000000000000001) var1123378 temp50875_65)))
(assert (= var1123376 var1123380))
(assert (= var730076 var1123376))
(assert (= temp50875_69 #x0000000000040000))
(assert (= var1188914 temp50875_69))
(assert (= temp50875_70 #x0000000000000001))
(assert (= var1188915
   (ite (bvslt temp50875_63 temp50875_70) #x0000000000000001 #x0000000000000000)))
(assert (= var1188916 (ite (= var1188915 #x0000000000000001) var1188914 temp50875_63)))
(assert (= var1188912 var1188916))
(assert (= var730083 var1188912))
(assert (= temp50875_71 #x0000000000200000))
(assert (= var1254450 temp50875_71))
(assert (= temp50875_72 #x0000000000000001))
(assert (= var1254451
   (ite (bvslt temp50875_61 temp50875_72) #x0000000000000001 #x0000000000000000)))
(assert (= var1254452 (ite (= var1254451 #x0000000000000001) var1254450 temp50875_61)))
(assert (= var1254448 var1254452))
(assert (= var730088 var1254448))
(assert (= var78095 var730088))
(assert (= temp50875_73 #x0000000000000003))
(assert (= temp50875_74 #xffffffffffffffff))
(assert (= var78179 (bvadd var78096 temp50875_74)))
(model-add temp50875_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp50875_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


