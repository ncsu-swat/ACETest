(declare-fun temp77092_1 () (_ BitVec 64))
(declare-fun temp77092_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_1_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp77092_3 () (_ BitVec 64))
(declare-fun ARGNAME_input_2_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp77092_4 () (_ BitVec 64))
(declare-fun temp77092_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_1_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp77092_6 () (_ BitVec 64))
(declare-fun temp77092_7 () (_ BitVec 64))
(declare-fun temp77092_8 () (_ BitVec 64))
(declare-fun temp77092_9 () (_ BitVec 64))
(declare-fun temp77092_10 () (_ BitVec 64))
(declare-fun temp77092_11 () (_ BitVec 64))
(declare-fun temp77092_12 () (_ BitVec 64))
(declare-fun temp77092_13 () (_ BitVec 64))
(declare-fun temp77092_14 () (_ BitVec 64))
(declare-fun temp77092_15 () (_ BitVec 64))
(declare-fun temp77092_16 () (_ BitVec 64))
(declare-fun temp77092_17 () (_ BitVec 64))
(declare-fun temp77092_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp77092_19 () (_ BitVec 64))
(declare-fun ARGNAME_input_2_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp77092_20 () (_ BitVec 64))
(declare-fun temp77092_21 () (_ BitVec 64))
(declare-fun temp77092_22 () (_ BitVec 64))
(declare-fun temp77092_23 () (_ BitVec 64))
(declare-fun temp77092_24 () (_ BitVec 64))
(declare-fun temp77092_25 () (_ BitVec 64))
(declare-fun temp77092_26 () (_ BitVec 64))
(declare-fun temp77092_27 () (_ BitVec 64))
(declare-fun temp77092_28 () (_ BitVec 64))
(declare-fun temp77092_29 () (_ BitVec 64))
(declare-fun temp77092_30 () (_ BitVec 64))
(declare-fun temp77092_31 () (_ BitVec 64))
(declare-fun temp77092_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp77092_33 () (_ BitVec 64))
(declare-fun temp77092_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp77092_35 () (_ BitVec 64))
(declare-fun temp77092_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp77092_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp77092_38 () (_ BitVec 64))
(declare-fun temp77092_39 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp77092_40 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp77092_41 () (_ BitVec 64))
(declare-fun temp77092_43 () (_ BitVec 64))
(declare-fun temp77092_42 () (_ BitVec 64))
(declare-fun temp77092_44 () (_ BitVec 64))
(declare-fun var603190 () (_ BitVec 64))
(declare-fun temp77092_45 () (_ BitVec 64))
(declare-fun var603208 () (_ BitVec 64))
(declare-fun temp77092_46 () (_ BitVec 64))
(declare-fun temp77092_48 () (_ BitVec 64))
(declare-fun temp77092_47 () (_ BitVec 64))
(declare-fun temp77092_50 () (_ BitVec 64))
(declare-fun temp77092_49 () (_ BitVec 64))
(declare-fun temp77092_52 () (_ BitVec 64))
(declare-fun temp77092_51 () (_ BitVec 64))
(declare-fun temp77092_54 () (_ BitVec 64))
(declare-fun temp77092_53 () (_ BitVec 64))
(declare-fun temp77092_55 () (_ BitVec 64))
(declare-fun var926795 () (_ BitVec 64))
(declare-fun var926774 () (_ BitVec 64))
(declare-fun var795680 () (_ BitVec 64))
(declare-fun temp77092_56 () (_ BitVec 64))
(declare-fun temp77092_57 () (_ BitVec 64))
(declare-fun var992331 () (_ BitVec 64))
(declare-fun var992310 () (_ BitVec 64))
(declare-fun var795683 () (_ BitVec 64))
(declare-fun temp77092_58 () (_ BitVec 64))
(declare-fun temp77092_59 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp77092_60 () (_ BitVec 64))
(declare-fun var1254450 () (_ BitVec 64))
(declare-fun temp77092_61 () (_ BitVec 64))
(declare-fun var1319986 () (_ BitVec 64))
(declare-fun temp77092_62 () (_ BitVec 64))
(declare-fun var78184 () (_ BitVec 64))
(declare-fun temp77092_64 () (_ BitVec 64))
(declare-fun temp77092_63 () (_ BitVec 64))
(declare-fun temp77092_66 () (_ BitVec 64))
(declare-fun temp77092_65 () (_ BitVec 64))
(declare-fun temp77092_67 () (_ BitVec 64))
(declare-fun var78544 () (_ BitVec 64))
(declare-fun temp77092_68 () (_ BitVec 64))
(declare-fun var78545 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp77092_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_input_1_NAMEEND_DIM temp77092_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp77092_2 #x0000000000000001))
(assert (= var77740 temp77092_2))
(assert (= temp77092_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_input_2_NAMEEND_DIM temp77092_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp77092_4 #x0000000000000001))
(assert (= var77770 temp77092_4))
(assert (= temp77092_5 #x0000000000000000))
(assert (= temp77092_6 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp77092_5)))
(assert (= temp77092_7 #x0000000000000001))
(assert (= temp77092_8 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp77092_7)))
(assert (= temp77092_9 #x0000000000000002))
(assert (= temp77092_10 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp77092_9)))
(assert (= temp77092_11 #x0000000000000003))
(assert (= temp77092_12 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp77092_11)))
(assert (= temp77092_13 #x0000000000000004))
(assert (= temp77092_14 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp77092_13)))
(assert (= temp77092_15 #x0000000000000005))
(assert (= temp77092_16 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp77092_15)))
(assert (= temp77092_17 #x0000000000000003))
(assert (= temp77092_18 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp77092_17)))
(assert (= var77799 temp77092_18))
(assert (= temp77092_19 #x0000000000000000))
(assert (= temp77092_20 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp77092_19)))
(assert (= temp77092_21 #x0000000000000001))
(assert (= temp77092_22 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp77092_21)))
(assert (= temp77092_23 #x0000000000000002))
(assert (= temp77092_24 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp77092_23)))
(assert (= temp77092_25 #x0000000000000003))
(assert (= temp77092_26 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp77092_25)))
(assert (= temp77092_27 #x0000000000000004))
(assert (= temp77092_28 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp77092_27)))
(assert (= temp77092_29 #x0000000000000005))
(assert (= temp77092_30 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp77092_29)))
(assert (= temp77092_31 #x0000000000000004))
(assert (= temp77092_32 (select ARGNAME_input_2_NAMEEND_DIMSIZE temp77092_31)))
(assert (= var77832 temp77092_32))
(assert (= temp77092_33 #x0000000000000004))
(assert (= temp77092_34 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp77092_33)))
(assert (= var77833 temp77092_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp77092_35 #x0000000000000001))
(assert (= var77834 temp77092_35))
(assert (= temp77092_36 #x0000000000000001))
(assert (= var275510 temp77092_36))
(assert (= temp77092_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp77092_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp77092_38 #x0000000000000000))
(assert (= var275528 temp77092_38))
(assert (= temp77092_39 #x0000000000000001))
(assert (= var406582 temp77092_39))
(assert (= temp77092_40 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp77092_40) #x0000000000000001 #x0000000000000000)))
(assert (= temp77092_41 #x0000000000000000))
(assert (= var406600 temp77092_41))
(assert (= temp77092_43 #x0000000000000000))
(assert (= temp77092_42 temp77092_43))
(assert (= temp77092_44 #x0000000000000001))
(assert (= var603190 temp77092_44))
(assert (= temp77092_45 #x0000000000000001))
(assert (= var603208
   (ite (bvslt var603190 temp77092_45) #x0000000000000001 #x0000000000000000)))
(assert (= temp77092_46 #x0000000000000000))
(assert (= var603208 temp77092_46))
(assert (= temp77092_48 #x0000000000000000))
(assert (= temp77092_47 temp77092_48))
(assert (= temp77092_50 #x00000000000000ff))
(assert (= temp77092_49 temp77092_50))
(assert (= temp77092_52 #x00000000000000ff))
(assert (= temp77092_51 temp77092_52))
(assert (= temp77092_54 #x00000000000000ff))
(assert (= temp77092_53 temp77092_54))
(assert (= temp77092_55 #x0000000000000000))
(assert (= var926795 temp77092_55))
(assert (= var926774 var926795))
(assert (= var795680 var926774))
(assert (= temp77092_56 #x0000000000000000))
(assert (= var795680 temp77092_56))
(assert (= temp77092_57 #x0000000000000000))
(assert (= var992331 temp77092_57))
(assert (= var992310 var992331))
(assert (= var795683 var992310))
(assert (= temp77092_58 #x0000000000000000))
(assert (= var795683 temp77092_58))
(assert (= temp77092_59 #x0000000000008000))
(assert (= var1188914 temp77092_59))
(assert (= temp77092_60 #x0000000000040000))
(assert (= var1254450 temp77092_60))
(assert (= temp77092_61 #x0000000000200000))
(assert (= var1319986 temp77092_61))
(assert (= temp77092_62 #x0000000000000001))
(assert (= var78184 temp77092_62))
(assert (= temp77092_64 #x0000000000000001))
(assert (= temp77092_63 temp77092_64))
(assert (= temp77092_66 #x0000000000000001))
(assert (= temp77092_65 temp77092_66))
(assert (= temp77092_67 #x0000000000000000))
(assert (= var78544 temp77092_67))
(assert (= temp77092_68 #x0000000000000001))
(assert (= var78545 (bvadd var78544 temp77092_68)))
(model-add temp77092_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp77092_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_1_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))

