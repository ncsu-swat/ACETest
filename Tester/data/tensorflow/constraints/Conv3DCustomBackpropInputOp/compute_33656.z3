(declare-fun temp50505_1 () (_ BitVec 64))
(declare-fun temp50505_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp50505_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp50505_4 () (_ BitVec 64))
(declare-fun temp50505_5 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp50505_6 () (_ BitVec 64))
(declare-fun temp50505_7 () (_ BitVec 64))
(declare-fun temp50505_8 () (_ BitVec 64))
(declare-fun temp50505_9 () (_ BitVec 64))
(declare-fun temp50505_10 () (_ BitVec 64))
(declare-fun temp50505_11 () (_ BitVec 64))
(declare-fun temp50505_12 () (_ BitVec 64))
(declare-fun temp50505_13 () (_ BitVec 64))
(declare-fun temp50505_14 () (_ BitVec 64))
(declare-fun temp50505_15 () (_ BitVec 64))
(declare-fun temp50505_16 () (_ BitVec 64))
(declare-fun temp50505_17 () (_ BitVec 64))
(declare-fun temp50505_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp50505_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp50505_20 () (_ BitVec 64))
(declare-fun temp50505_21 () (_ BitVec 64))
(declare-fun temp50505_22 () (_ BitVec 64))
(declare-fun temp50505_23 () (_ BitVec 64))
(declare-fun temp50505_24 () (_ BitVec 64))
(declare-fun temp50505_25 () (_ BitVec 64))
(declare-fun temp50505_26 () (_ BitVec 64))
(declare-fun temp50505_27 () (_ BitVec 64))
(declare-fun temp50505_28 () (_ BitVec 64))
(declare-fun temp50505_29 () (_ BitVec 64))
(declare-fun temp50505_30 () (_ BitVec 64))
(declare-fun temp50505_31 () (_ BitVec 64))
(declare-fun temp50505_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp50505_33 () (_ BitVec 64))
(declare-fun temp50505_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp50505_35 () (_ BitVec 64))
(declare-fun temp50505_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp50505_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp50505_38 () (_ BitVec 64))
(declare-fun temp50505_40 () (_ BitVec 64))
(declare-fun temp50505_39 () (_ BitVec 64))
(declare-fun temp50505_42 () (_ BitVec 64))
(declare-fun temp50505_41 () (_ BitVec 64))
(declare-fun temp50505_43 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp50505_44 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp50505_45 () (_ BitVec 64))
(declare-fun temp50505_47 () (_ BitVec 64))
(declare-fun temp50505_46 () (_ BitVec 64))
(declare-fun temp50505_48 () (_ BitVec 64))
(declare-fun var603190 () (_ BitVec 64))
(declare-fun temp50505_49 () (_ BitVec 64))
(declare-fun var603208 () (_ BitVec 64))
(declare-fun temp50505_50 () (_ BitVec 64))
(declare-fun temp50505_52 () (_ BitVec 64))
(declare-fun temp50505_51 () (_ BitVec 64))
(declare-fun temp50505_54 () (_ BitVec 64))
(declare-fun temp50505_53 () (_ BitVec 64))
(declare-fun temp50505_56 () (_ BitVec 64))
(declare-fun temp50505_55 () (_ BitVec 64))
(declare-fun temp50505_58 () (_ BitVec 64))
(declare-fun temp50505_57 () (_ BitVec 64))
(declare-fun temp50505_59 () (_ BitVec 64))
(declare-fun var861259 () (_ BitVec 64))
(declare-fun var861238 () (_ BitVec 64))
(declare-fun var795670 () (_ BitVec 64))
(declare-fun temp50505_60 () (_ BitVec 64))
(declare-fun temp50505_62 () (_ BitVec 64))
(declare-fun temp50505_61 () (_ BitVec 64))
(declare-fun temp50505_64 () (_ BitVec 64))
(declare-fun temp50505_63 () (_ BitVec 64))
(declare-fun temp50505_66 () (_ BitVec 64))
(declare-fun temp50505_65 () (_ BitVec 64))
(declare-fun temp50505_67 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp50505_68 () (_ BitVec 64))
(declare-fun var1123379 () (_ BitVec 64))
(declare-fun var1123380 () (_ BitVec 64))
(declare-fun var1123376 () (_ BitVec 64))
(declare-fun var730076 () (_ BitVec 64))
(declare-fun temp50505_69 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp50505_70 () (_ BitVec 64))
(declare-fun var1188915 () (_ BitVec 64))
(declare-fun var1188916 () (_ BitVec 64))
(declare-fun var1188912 () (_ BitVec 64))
(declare-fun var730083 () (_ BitVec 64))
(declare-fun temp50505_71 () (_ BitVec 64))
(declare-fun var1254450 () (_ BitVec 64))
(declare-fun temp50505_72 () (_ BitVec 64))
(declare-fun var1254451 () (_ BitVec 64))
(declare-fun var1254452 () (_ BitVec 64))
(declare-fun var1254448 () (_ BitVec 64))
(declare-fun var730088 () (_ BitVec 64))
(declare-fun var78095 () (_ BitVec 64))
(declare-fun temp50505_73 () (_ BitVec 64))
(declare-fun temp50505_74 () (_ BitVec 64))
(declare-fun var78096 () (_ BitVec 64))
(declare-fun var78179 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp50505_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_filter_NAMEEND_DIM temp50505_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50505_2 #x0000000000000001))
(assert (= var77740 temp50505_2))
(assert (= temp50505_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp50505_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50505_4 #x0000000000000001))
(assert (= var77770 temp50505_4))
(assert (= temp50505_5 #x0000000000000000))
(assert (= temp50505_6 (select ARGNAME_filter_NAMEEND_DIMSIZE temp50505_5)))
(assert (= temp50505_7 #x0000000000000001))
(assert (= temp50505_8 (select ARGNAME_filter_NAMEEND_DIMSIZE temp50505_7)))
(assert (= temp50505_9 #x0000000000000002))
(assert (= temp50505_10 (select ARGNAME_filter_NAMEEND_DIMSIZE temp50505_9)))
(assert (= temp50505_11 #x0000000000000003))
(assert (= temp50505_12 (select ARGNAME_filter_NAMEEND_DIMSIZE temp50505_11)))
(assert (= temp50505_13 #x0000000000000004))
(assert (= temp50505_14 (select ARGNAME_filter_NAMEEND_DIMSIZE temp50505_13)))
(assert (= temp50505_15 #x0000000000000005))
(assert (= temp50505_16 (select ARGNAME_filter_NAMEEND_DIMSIZE temp50505_15)))
(assert (= temp50505_17 #x0000000000000003))
(assert (= temp50505_18 (select ARGNAME_filter_NAMEEND_DIMSIZE temp50505_17)))
(assert (= var77799 temp50505_18))
(assert (= temp50505_19 #x0000000000000000))
(assert (= temp50505_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp50505_19)))
(assert (= temp50505_21 #x0000000000000001))
(assert (= temp50505_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp50505_21)))
(assert (= temp50505_23 #x0000000000000002))
(assert (= temp50505_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp50505_23)))
(assert (= temp50505_25 #x0000000000000003))
(assert (= temp50505_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp50505_25)))
(assert (= temp50505_27 #x0000000000000004))
(assert (= temp50505_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp50505_27)))
(assert (= temp50505_29 #x0000000000000005))
(assert (= temp50505_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp50505_29)))
(assert (= temp50505_31 #x0000000000000004))
(assert (= temp50505_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp50505_31)))
(assert (= var77832 temp50505_32))
(assert (= temp50505_33 #x0000000000000004))
(assert (= temp50505_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp50505_33)))
(assert (= var77833 temp50505_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp50505_35 #x0000000000000001))
(assert (= var77834 temp50505_35))
(assert (= temp50505_36 #x0000000000000001))
(assert (= var275510 temp50505_36))
(assert (= temp50505_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp50505_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp50505_38 #x0000000000000000))
(assert (= var275528 temp50505_38))
(assert (= temp50505_40 #x0000000000000000))
(assert (= temp50505_39 temp50505_40))
(assert (= temp50505_42 #x0000000000000000))
(assert (= temp50505_41 temp50505_42))
(assert (= temp50505_43 #x0000000000000001))
(assert (= var406582 temp50505_43))
(assert (= temp50505_44 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp50505_44) #x0000000000000001 #x0000000000000000)))
(assert (= temp50505_45 #x0000000000000000))
(assert (= var406600 temp50505_45))
(assert (= temp50505_47 #x0000000000000000))
(assert (= temp50505_46 temp50505_47))
(assert (= temp50505_48 #x0000000000000001))
(assert (= var603190 temp50505_48))
(assert (= temp50505_49 #x0000000000000001))
(assert (= var603208
   (ite (bvslt var603190 temp50505_49) #x0000000000000001 #x0000000000000000)))
(assert (= temp50505_50 #x0000000000000000))
(assert (= var603208 temp50505_50))
(assert (= temp50505_52 #x0000000000000000))
(assert (= temp50505_51 temp50505_52))
(assert (= temp50505_54 #x00000000000000ff))
(assert (= temp50505_53 temp50505_54))
(assert (= temp50505_56 #x00000000000000ff))
(assert (= temp50505_55 temp50505_56))
(assert (= temp50505_58 #x00000000000000ff))
(assert (= temp50505_57 temp50505_58))
(assert (= temp50505_59 #x0000000000000000))
(assert (= var861259 temp50505_59))
(assert (= var861238 var861259))
(assert (= var795670 var861238))
(assert (= temp50505_60 #x0000000000000000))
(assert (= var795670 temp50505_60))
(assert (= temp50505_62 #x0000000000000000))
(assert (= temp50505_61 temp50505_62))
(assert (= temp50505_64 #x0000000000000000))
(assert (= temp50505_63 temp50505_64))
(assert (= temp50505_66 #x0000000000000000))
(assert (= temp50505_65 temp50505_66))
(assert (= temp50505_67 #x0000000000008000))
(assert (= var1123378 temp50505_67))
(assert (= temp50505_68 #x0000000000000001))
(assert (= var1123379
   (ite (bvslt temp50505_65 temp50505_68) #x0000000000000001 #x0000000000000000)))
(assert (= var1123380 (ite (= var1123379 #x0000000000000001) var1123378 temp50505_65)))
(assert (= var1123376 var1123380))
(assert (= var730076 var1123376))
(assert (= temp50505_69 #x0000000000040000))
(assert (= var1188914 temp50505_69))
(assert (= temp50505_70 #x0000000000000001))
(assert (= var1188915
   (ite (bvslt temp50505_63 temp50505_70) #x0000000000000001 #x0000000000000000)))
(assert (= var1188916 (ite (= var1188915 #x0000000000000001) var1188914 temp50505_63)))
(assert (= var1188912 var1188916))
(assert (= var730083 var1188912))
(assert (= temp50505_71 #x0000000000200000))
(assert (= var1254450 temp50505_71))
(assert (= temp50505_72 #x0000000000000001))
(assert (= var1254451
   (ite (bvslt temp50505_61 temp50505_72) #x0000000000000001 #x0000000000000000)))
(assert (= var1254452 (ite (= var1254451 #x0000000000000001) var1254450 temp50505_61)))
(assert (= var1254448 var1254452))
(assert (= var730088 var1254448))
(assert (= var78095 var730088))
(assert (= temp50505_73 #x0000000000000003))
(assert (= temp50505_74 #xffffffffffffffff))
(assert (= var78179 (bvadd var78096 temp50505_74)))
(model-add temp50505_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp50505_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


