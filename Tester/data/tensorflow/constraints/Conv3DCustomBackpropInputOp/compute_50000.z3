(declare-fun temp75009_1 () (_ BitVec 64))
(declare-fun temp75009_2 () (_ BitVec 64))
(declare-fun var77740 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp75009_3 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var77770 () (_ BitVec 64))
(declare-fun temp75009_4 () (_ BitVec 64))
(declare-fun temp75009_5 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp75009_6 () (_ BitVec 64))
(declare-fun temp75009_7 () (_ BitVec 64))
(declare-fun temp75009_8 () (_ BitVec 64))
(declare-fun temp75009_9 () (_ BitVec 64))
(declare-fun temp75009_10 () (_ BitVec 64))
(declare-fun temp75009_11 () (_ BitVec 64))
(declare-fun temp75009_12 () (_ BitVec 64))
(declare-fun temp75009_13 () (_ BitVec 64))
(declare-fun temp75009_14 () (_ BitVec 64))
(declare-fun temp75009_15 () (_ BitVec 64))
(declare-fun temp75009_16 () (_ BitVec 64))
(declare-fun temp75009_17 () (_ BitVec 64))
(declare-fun temp75009_18 () (_ BitVec 64))
(declare-fun var77799 () (_ BitVec 64))
(declare-fun temp75009_19 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp75009_20 () (_ BitVec 64))
(declare-fun temp75009_21 () (_ BitVec 64))
(declare-fun temp75009_22 () (_ BitVec 64))
(declare-fun temp75009_23 () (_ BitVec 64))
(declare-fun temp75009_24 () (_ BitVec 64))
(declare-fun temp75009_25 () (_ BitVec 64))
(declare-fun temp75009_26 () (_ BitVec 64))
(declare-fun temp75009_27 () (_ BitVec 64))
(declare-fun temp75009_28 () (_ BitVec 64))
(declare-fun temp75009_29 () (_ BitVec 64))
(declare-fun temp75009_30 () (_ BitVec 64))
(declare-fun temp75009_31 () (_ BitVec 64))
(declare-fun temp75009_32 () (_ BitVec 64))
(declare-fun var77832 () (_ BitVec 64))
(declare-fun temp75009_33 () (_ BitVec 64))
(declare-fun temp75009_34 () (_ BitVec 64))
(declare-fun var77833 () (_ BitVec 64))
(declare-fun var77834 () (_ BitVec 64))
(declare-fun temp75009_35 () (_ BitVec 64))
(declare-fun temp75009_36 () (_ BitVec 64))
(declare-fun var275510 () (_ BitVec 64))
(declare-fun temp75009_37 () (_ BitVec 64))
(declare-fun var275528 () (_ BitVec 64))
(declare-fun temp75009_38 () (_ BitVec 64))
(declare-fun temp75009_39 () (_ BitVec 64))
(declare-fun var406582 () (_ BitVec 64))
(declare-fun temp75009_40 () (_ BitVec 64))
(declare-fun var406600 () (_ BitVec 64))
(declare-fun temp75009_41 () (_ BitVec 64))
(declare-fun temp75009_43 () (_ BitVec 64))
(declare-fun temp75009_42 () (_ BitVec 64))
(declare-fun temp75009_44 () (_ BitVec 64))
(declare-fun var603190 () (_ BitVec 64))
(declare-fun temp75009_45 () (_ BitVec 64))
(declare-fun var603208 () (_ BitVec 64))
(declare-fun temp75009_46 () (_ BitVec 64))
(declare-fun temp75009_48 () (_ BitVec 64))
(declare-fun temp75009_47 () (_ BitVec 64))
(declare-fun temp75009_50 () (_ BitVec 64))
(declare-fun temp75009_49 () (_ BitVec 64))
(declare-fun temp75009_52 () (_ BitVec 64))
(declare-fun temp75009_51 () (_ BitVec 64))
(declare-fun temp75009_53 () (_ BitVec 64))
(declare-fun var795723 () (_ BitVec 64))
(declare-fun var795702 () (_ BitVec 64))
(declare-fun var730134 () (_ BitVec 64))
(declare-fun temp75009_54 () (_ BitVec 64))
(declare-fun temp75009_55 () (_ BitVec 64))
(declare-fun var861259 () (_ BitVec 64))
(declare-fun var861238 () (_ BitVec 64))
(declare-fun var730144 () (_ BitVec 64))
(declare-fun temp75009_56 () (_ BitVec 64))
(declare-fun temp75009_58 () (_ BitVec 64))
(declare-fun temp75009_57 () (_ BitVec 64))
(declare-fun temp75009_60 () (_ BitVec 64))
(declare-fun temp75009_59 () (_ BitVec 64))
(declare-fun temp75009_62 () (_ BitVec 64))
(declare-fun temp75009_61 () (_ BitVec 64))
(declare-fun temp75009_63 () (_ BitVec 64))
(declare-fun var1057842 () (_ BitVec 64))
(declare-fun temp75009_64 () (_ BitVec 64))
(declare-fun var1057843 () (_ BitVec 64))
(declare-fun var1057844 () (_ BitVec 64))
(declare-fun var1057840 () (_ BitVec 64))
(declare-fun var664540 () (_ BitVec 64))
(declare-fun temp75009_65 () (_ BitVec 64))
(declare-fun var1123378 () (_ BitVec 64))
(declare-fun temp75009_66 () (_ BitVec 64))
(declare-fun var1123379 () (_ BitVec 64))
(declare-fun var1123380 () (_ BitVec 64))
(declare-fun var1123376 () (_ BitVec 64))
(declare-fun var664547 () (_ BitVec 64))
(declare-fun temp75009_67 () (_ BitVec 64))
(declare-fun var1188914 () (_ BitVec 64))
(declare-fun temp75009_68 () (_ BitVec 64))
(declare-fun var1188915 () (_ BitVec 64))
(declare-fun var1188916 () (_ BitVec 64))
(declare-fun var1188912 () (_ BitVec 64))
(declare-fun var664552 () (_ BitVec 64))
(declare-fun var78095 () (_ BitVec 64))
(declare-fun temp75009_69 () (_ BitVec 64))
(declare-fun temp75009_70 () (_ BitVec 64))
(declare-fun var78096 () (_ BitVec 64))
(declare-fun var78179 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp75009_1 #x0000000000000005))
(assert (= var77740
   (ite (= ARGNAME_filter_NAMEEND_DIM temp75009_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp75009_2 #x0000000000000001))
(assert (= var77740 temp75009_2))
(assert (= temp75009_3 #x0000000000000005))
(assert (= var77770
   (ite (= ARGNAME_out_backprop_NAMEEND_DIM temp75009_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp75009_4 #x0000000000000001))
(assert (= var77770 temp75009_4))
(assert (= temp75009_5 #x0000000000000000))
(assert (= temp75009_6 (select ARGNAME_filter_NAMEEND_DIMSIZE temp75009_5)))
(assert (= temp75009_7 #x0000000000000001))
(assert (= temp75009_8 (select ARGNAME_filter_NAMEEND_DIMSIZE temp75009_7)))
(assert (= temp75009_9 #x0000000000000002))
(assert (= temp75009_10 (select ARGNAME_filter_NAMEEND_DIMSIZE temp75009_9)))
(assert (= temp75009_11 #x0000000000000003))
(assert (= temp75009_12 (select ARGNAME_filter_NAMEEND_DIMSIZE temp75009_11)))
(assert (= temp75009_13 #x0000000000000004))
(assert (= temp75009_14 (select ARGNAME_filter_NAMEEND_DIMSIZE temp75009_13)))
(assert (= temp75009_15 #x0000000000000005))
(assert (= temp75009_16 (select ARGNAME_filter_NAMEEND_DIMSIZE temp75009_15)))
(assert (= temp75009_17 #x0000000000000003))
(assert (= temp75009_18 (select ARGNAME_filter_NAMEEND_DIMSIZE temp75009_17)))
(assert (= var77799 temp75009_18))
(assert (= temp75009_19 #x0000000000000000))
(assert (= temp75009_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp75009_19)))
(assert (= temp75009_21 #x0000000000000001))
(assert (= temp75009_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp75009_21)))
(assert (= temp75009_23 #x0000000000000002))
(assert (= temp75009_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp75009_23)))
(assert (= temp75009_25 #x0000000000000003))
(assert (= temp75009_26 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp75009_25)))
(assert (= temp75009_27 #x0000000000000004))
(assert (= temp75009_28 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp75009_27)))
(assert (= temp75009_29 #x0000000000000005))
(assert (= temp75009_30 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp75009_29)))
(assert (= temp75009_31 #x0000000000000004))
(assert (= temp75009_32 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp75009_31)))
(assert (= var77832 temp75009_32))
(assert (= temp75009_33 #x0000000000000004))
(assert (= temp75009_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp75009_33)))
(assert (= var77833 temp75009_34))
(assert (= var77834 (ite (= var77832 var77833) #x0000000000000001 #x0000000000000000)))
(assert (= temp75009_35 #x0000000000000001))
(assert (= var77834 temp75009_35))
(assert (= temp75009_36 #x0000000000000001))
(assert (= var275510 temp75009_36))
(assert (= temp75009_37 #x0000000000000001))
(assert (= var275528
   (ite (bvslt var275510 temp75009_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp75009_38 #x0000000000000000))
(assert (= var275528 temp75009_38))
(assert (= temp75009_39 #x0000000000000001))
(assert (= var406582 temp75009_39))
(assert (= temp75009_40 #x0000000000000001))
(assert (= var406600
   (ite (bvslt var406582 temp75009_40) #x0000000000000001 #x0000000000000000)))
(assert (= temp75009_41 #x0000000000000000))
(assert (= var406600 temp75009_41))
(assert (= temp75009_43 #x0000000000000000))
(assert (= temp75009_42 temp75009_43))
(assert (= temp75009_44 #x0000000000000001))
(assert (= var603190 temp75009_44))
(assert (= temp75009_45 #x0000000000000001))
(assert (= var603208
   (ite (bvslt var603190 temp75009_45) #x0000000000000001 #x0000000000000000)))
(assert (= temp75009_46 #x0000000000000000))
(assert (= var603208 temp75009_46))
(assert (= temp75009_48 #x00000000000000ff))
(assert (= temp75009_47 temp75009_48))
(assert (= temp75009_50 #x00000000000000ff))
(assert (= temp75009_49 temp75009_50))
(assert (= temp75009_52 #x00000000000000ff))
(assert (= temp75009_51 temp75009_52))
(assert (= temp75009_53 #x0000000000000000))
(assert (= var795723 temp75009_53))
(assert (= var795702 var795723))
(assert (= var730134 var795702))
(assert (= temp75009_54 #x0000000000000000))
(assert (= var730134 temp75009_54))
(assert (= temp75009_55 #x0000000000000000))
(assert (= var861259 temp75009_55))
(assert (= var861238 var861259))
(assert (= var730144 var861238))
(assert (= temp75009_56 #x0000000000000000))
(assert (= var730144 temp75009_56))
(assert (= temp75009_58 #x0000000000000000))
(assert (= temp75009_57 temp75009_58))
(assert (= temp75009_60 #x0000000000000000))
(assert (= temp75009_59 temp75009_60))
(assert (= temp75009_62 #x0000000000000000))
(assert (= temp75009_61 temp75009_62))
(assert (= temp75009_63 #x0000000000008000))
(assert (= var1057842 temp75009_63))
(assert (= temp75009_64 #x0000000000000001))
(assert (= var1057843
   (ite (bvslt temp75009_61 temp75009_64) #x0000000000000001 #x0000000000000000)))
(assert (= var1057844 (ite (= var1057843 #x0000000000000001) var1057842 temp75009_61)))
(assert (= var1057840 var1057844))
(assert (= var664540 var1057840))
(assert (= temp75009_65 #x0000000000040000))
(assert (= var1123378 temp75009_65))
(assert (= temp75009_66 #x0000000000000001))
(assert (= var1123379
   (ite (bvslt temp75009_59 temp75009_66) #x0000000000000001 #x0000000000000000)))
(assert (= var1123380 (ite (= var1123379 #x0000000000000001) var1123378 temp75009_59)))
(assert (= var1123376 var1123380))
(assert (= var664547 var1123376))
(assert (= temp75009_67 #x0000000000200000))
(assert (= var1188914 temp75009_67))
(assert (= temp75009_68 #x0000000000000001))
(assert (= var1188915
   (ite (bvslt temp75009_57 temp75009_68) #x0000000000000001 #x0000000000000000)))
(assert (= var1188916 (ite (= var1188915 #x0000000000000001) var1188914 temp75009_57)))
(assert (= var1188912 var1188916))
(assert (= var664552 var1188912))
(assert (= var78095 var664552))
(assert (= temp75009_69 #x0000000000000003))
(assert (= temp75009_70 #xffffffffffffffff))
(assert (= var78179 (bvadd var78096 temp75009_70)))
(model-add temp75009_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp75009_2 () (_ BitVec 64) #x0000000000000001)
(model-add var77740 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_filter_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))


