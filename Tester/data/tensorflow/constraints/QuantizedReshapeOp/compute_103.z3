(declare-fun temp1059_1 () (_ BitVec 64))
(declare-fun var197762 () (_ BitVec 64))
(declare-fun var197758 () (_ BitVec 64))
(declare-fun temp1059_2 () (_ BitVec 64))
(declare-fun var131809 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun extend_977 () (_ BitVec 64))
(declare-fun temp1059_3 () (_ BitVec 64))
(declare-fun var263292 () (_ BitVec 64))
(declare-fun var263286 () (_ BitVec 64))
(declare-fun var131812 () (_ BitVec 64))
(declare-fun temp1059_4 () (_ BitVec 64))
(declare-fun temp1059_5 () (_ BitVec 64))
(declare-fun var329720 () (_ BitVec 64))
(declare-fun var131856 () (_ BitVec 64))
(declare-fun var131859 () (_ BitVec 64))
(declare-fun ARGNAME_shape_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var131860 () (_ BitVec 64))
(declare-fun temp1059_6 () (_ BitVec 64))
(declare-fun temp1059_8 () (_ BitVec 64))
(declare-fun temp1059_7 () (_ BitVec 64))
(declare-fun temp1059_10 () (_ BitVec 64))
(declare-fun temp1059_9 () (_ BitVec 64))
(declare-fun temp1059_12 () (_ BitVec 64))
(declare-fun temp1059_11 () (_ BitVec 64))
(declare-fun temp1059_14 () (_ BitVec 64))
(declare-fun temp1059_13 () (_ BitVec 64))
(declare-fun temp1059_16 () (_ BitVec 64))
(declare-fun temp1059_15 () (_ BitVec 64))
(declare-fun temp1059_17 () (_ BitVec 64))
(declare-fun var592226 () (_ BitVec 64))
(declare-fun temp1059_18 () (_ BitVec 64))
(declare-fun temp1059_19 () (_ BitVec 64))
(declare-fun var592240 () (_ BitVec 64))
(declare-fun var658069 () (_ BitVec 64))
(declare-fun temp1059_21 () (_ BitVec 64))
(declare-fun temp1059_20 () (_ BitVec 64))
(declare-fun temp1059_22 () (_ BitVec 64))
(declare-fun var592345 () (_ BitVec 64))
(declare-fun temp1059_23 () (_ BitVec 64))
(declare-fun var592346 () (_ BitVec 64))
(declare-fun temp1059_24 () (_ BitVec 64))
(declare-fun var592238 () (_ BitVec 64))
(declare-fun var592237 () (_ BitVec 64))
(declare-fun temp1059_27 () (_ BitVec 64))
(declare-fun var592348 () (_ BitVec 64))
(declare-fun temp1059_28 () (_ BitVec 64))
(declare-fun var592349 () (_ BitVec 64))
(declare-fun temp1059_29 () (_ BitVec 64))
(declare-fun temp1059_30 () (_ BitVec 64))
(declare-fun var132005 () (_ BitVec 64))
(declare-fun temp1059_31 () (_ BitVec 64))
(declare-fun temp1059_32 () (_ BitVec 64))
(declare-fun ARGNAME_input_min_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var984188 () (_ BitVec 64))
(declare-fun var984182 () (_ BitVec 64))
(declare-fun var65992 () (_ BitVec 64))
(declare-fun temp1059_33 () (_ BitVec 64))
(declare-fun temp1059_34 () (_ BitVec 64))
(declare-fun var1049730 () (_ BitVec 64))
(declare-fun var1049726 () (_ BitVec 64))
(declare-fun var65996 () (_ BitVec 64))
(declare-fun temp1059_35 () (_ BitVec 64))
(declare-fun temp1059_36 () (_ BitVec 64))
(declare-fun ARGNAME_input_min_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1059_37 () (_ BitVec 64))
(declare-fun temp1059_38 () (_ BitVec 64))
(declare-fun temp1059_39 () (_ BitVec 64))
(declare-fun temp1059_40 () (_ BitVec 64))
(declare-fun temp1059_41 () (_ BitVec 64))
(declare-fun temp1059_42 () (_ BitVec 64))
(declare-fun temp1059_43 () (_ BitVec 64))
(declare-fun temp1059_44 () (_ BitVec 64))
(declare-fun temp1059_45 () (_ BitVec 64))
(declare-fun temp1059_46 () (_ BitVec 64))
(declare-fun temp1059_47 () (_ BitVec 64))
(declare-fun temp1059_48 () (_ BitVec 64))
(declare-fun temp1059_49 () (_ BitVec 64))
(declare-fun var66001 () (_ BitVec 64))
(declare-fun temp1059_50 () (_ BitVec 64))
(declare-fun var66005 () (_ BitVec 64))
(declare-fun temp1059_51 () (_ BitVec 64))
(declare-fun temp1059_52 () (_ BitVec 64))
(declare-fun var1115361 () (_ BitVec 64))
(declare-fun temp1059_53 () (_ BitVec 64))
(declare-fun ARGNAME_input_max_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1180796 () (_ BitVec 64))
(declare-fun var1180790 () (_ BitVec 64))
(declare-fun var66056 () (_ BitVec 64))
(declare-fun temp1059_54 () (_ BitVec 64))
(declare-fun temp1059_55 () (_ BitVec 64))
(declare-fun var1246338 () (_ BitVec 64))
(declare-fun var1246334 () (_ BitVec 64))
(declare-fun var66058 () (_ BitVec 64))
(declare-fun temp1059_56 () (_ BitVec 64))
(declare-fun temp1059_57 () (_ BitVec 64))
(declare-fun ARGNAME_input_max_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1059_58 () (_ BitVec 64))
(declare-fun temp1059_59 () (_ BitVec 64))
(declare-fun temp1059_60 () (_ BitVec 64))
(declare-fun temp1059_61 () (_ BitVec 64))
(declare-fun temp1059_62 () (_ BitVec 64))
(declare-fun temp1059_63 () (_ BitVec 64))
(declare-fun temp1059_64 () (_ BitVec 64))
(declare-fun temp1059_65 () (_ BitVec 64))
(declare-fun temp1059_66 () (_ BitVec 64))
(declare-fun temp1059_67 () (_ BitVec 64))
(declare-fun temp1059_68 () (_ BitVec 64))
(declare-fun temp1059_69 () (_ BitVec 64))
(declare-fun temp1059_70 () (_ BitVec 64))
(declare-fun var66061 () (_ BitVec 64))
(declare-fun temp1059_71 () (_ BitVec 64))
(declare-fun var66062 () (_ BitVec 64))
(declare-fun temp1059_72 () (_ BitVec 64))
(assert (= temp1059_1 #x0000000000000001))
(assert (= var197762
   (ite (= extend_977 temp1059_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var197758 var197762))
(assert (= var131809 var197758))
(assert (= temp1059_2 #x0000000000000000))
(assert (= var131809 temp1059_2))
(assert (= temp1059_3 #x0000000000000000))
(assert (= var263292
   (ite (= extend_977 temp1059_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var263286 var263292))
(assert (= var131812 var263286))
(assert (= temp1059_4 #x0000000000000001))
(assert (= var131812 temp1059_4))
(assert (= temp1059_5 #x00000000000000fe))
(assert (= var329720 temp1059_5))
(assert (= var131856 var329720))
(assert (= var131859 var131856))
(assert (= var131860
   (ite (bvslt ARGNAME_shape_NAMEEND_LEN var131859)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1059_6 #x0000000000000001))
(assert (= var131860 temp1059_6))
(assert (= temp1059_8 #x0000000000000001))
(assert (= temp1059_7 temp1059_8))
(assert (= temp1059_10 #xffffffffffffffff))
(assert (= temp1059_9 temp1059_10))
(assert (= temp1059_12 #x0000000000000001))
(assert (= temp1059_11 temp1059_12))
(assert (= temp1059_14 #xffffffffffffffff))
(assert (= temp1059_13 temp1059_14))
(assert (= temp1059_16 #x0000000000000000))
(assert (= temp1059_15 temp1059_16))
(assert (= temp1059_17 #x0000000000000000))
(assert (= var592226
   (ite (bvsgt ARGNAME_shape_NAMEEND_LEN temp1059_17)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1059_18 #x0000000000000001))
(assert (= var592226 temp1059_18))
(assert (= temp1059_19 #x0000000000000000))
(assert (= var592240 temp1059_19))
(assert (= var658069 var592240))
(assert (= temp1059_21 #x0000000000000001))
(assert (= temp1059_20 temp1059_21))
(assert (= temp1059_22 #x0000000000000000))
(assert (= var592345 temp1059_22))
(assert (= temp1059_23 #x0000000000000000))
(assert (= var592346
   (ite (= var592345 temp1059_23) #x0000000000000001 #x0000000000000000)))
(assert (= temp1059_24 #x0000000000000001))
(assert (= var592238 (bvadd var592240 temp1059_24)))
(assert (= var592237
   (ite (= var592238 ARGNAME_shape_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1059_27 #x0000000000000002))
(assert (= var592348 temp1059_27))
(assert (= temp1059_28 #x0000000000000002))
(assert (= var592349
   (ite (= var592348 temp1059_28) #x0000000000000001 #x0000000000000000)))
(assert (= temp1059_29 #x0000000000000001))
(assert (= var592349 temp1059_29))
(assert (= temp1059_30 #xffffffffffffffff))
(assert (= var132005
   (ite (= temp1059_13 temp1059_30) #x0000000000000001 #x0000000000000000)))
(assert (= temp1059_31 #x0000000000000001))
(assert (= var132005 temp1059_31))
(assert (= temp1059_32 #x0000000000000000))
(assert (= var984188
   (ite (= ARGNAME_input_min_NAMEEND_DIM temp1059_32)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var984182 var984188))
(assert (= var65992 var984182))
(assert (= temp1059_33 #x0000000000000000))
(assert (= var65992 temp1059_33))
(assert (= temp1059_34 #x0000000000000001))
(assert (= var1049730
   (ite (= ARGNAME_input_min_NAMEEND_DIM temp1059_34)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1049726 var1049730))
(assert (= var65996 var1049726))
(assert (= temp1059_35 #x0000000000000001))
(assert (= var65996 temp1059_35))
(assert (= temp1059_36 #x0000000000000000))
(assert (= temp1059_37 (select ARGNAME_input_min_NAMEEND_DIMSIZE temp1059_36)))
(assert (= temp1059_38 #x0000000000000001))
(assert (= temp1059_39 (select ARGNAME_input_min_NAMEEND_DIMSIZE temp1059_38)))
(assert (= temp1059_40 #x0000000000000002))
(assert (= temp1059_41 (select ARGNAME_input_min_NAMEEND_DIMSIZE temp1059_40)))
(assert (= temp1059_42 #x0000000000000003))
(assert (= temp1059_43 (select ARGNAME_input_min_NAMEEND_DIMSIZE temp1059_42)))
(assert (= temp1059_44 #x0000000000000004))
(assert (= temp1059_45 (select ARGNAME_input_min_NAMEEND_DIMSIZE temp1059_44)))
(assert (= temp1059_46 #x0000000000000005))
(assert (= temp1059_47 (select ARGNAME_input_min_NAMEEND_DIMSIZE temp1059_46)))
(assert (= temp1059_48 #x0000000000000000))
(assert (= temp1059_49 (select ARGNAME_input_min_NAMEEND_DIMSIZE temp1059_48)))
(assert (= var66001 temp1059_49))
(assert (= temp1059_50 #x0000000000000001))
(assert (= var66005
   (ite (= var66001 temp1059_50) #x0000000000000001 #x0000000000000000)))
(assert (= temp1059_51 #x0000000000000001))
(assert (= var66005 temp1059_51))
(assert (= temp1059_52 #x0000000000000000))
(assert (= var1115361 temp1059_52))
(assert (= temp1059_53 #x0000000000000000))
(assert (= var1180796
   (ite (= ARGNAME_input_max_NAMEEND_DIM temp1059_53)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1180790 var1180796))
(assert (= var66056 var1180790))
(assert (= temp1059_54 #x0000000000000000))
(assert (= var66056 temp1059_54))
(assert (= temp1059_55 #x0000000000000001))
(assert (= var1246338
   (ite (= ARGNAME_input_max_NAMEEND_DIM temp1059_55)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1246334 var1246338))
(assert (= var66058 var1246334))
(assert (= temp1059_56 #x0000000000000001))
(assert (= var66058 temp1059_56))
(assert (= temp1059_57 #x0000000000000000))
(assert (= temp1059_58 (select ARGNAME_input_max_NAMEEND_DIMSIZE temp1059_57)))
(assert (= temp1059_59 #x0000000000000001))
(assert (= temp1059_60 (select ARGNAME_input_max_NAMEEND_DIMSIZE temp1059_59)))
(assert (= temp1059_61 #x0000000000000002))
(assert (= temp1059_62 (select ARGNAME_input_max_NAMEEND_DIMSIZE temp1059_61)))
(assert (= temp1059_63 #x0000000000000003))
(assert (= temp1059_64 (select ARGNAME_input_max_NAMEEND_DIMSIZE temp1059_63)))
(assert (= temp1059_65 #x0000000000000004))
(assert (= temp1059_66 (select ARGNAME_input_max_NAMEEND_DIMSIZE temp1059_65)))
(assert (= temp1059_67 #x0000000000000005))
(assert (= temp1059_68 (select ARGNAME_input_max_NAMEEND_DIMSIZE temp1059_67)))
(assert (= temp1059_69 #x0000000000000000))
(assert (= temp1059_70 (select ARGNAME_input_max_NAMEEND_DIMSIZE temp1059_69)))
(assert (= var66061 temp1059_70))
(assert (= temp1059_71 #x0000000000000001))
(assert (= var66062
   (ite (= var66061 temp1059_71) #x0000000000000001 #x0000000000000000)))
(assert (= temp1059_72 #x0000000000000001))
(assert (= var66062 temp1059_72))
(model-add temp1059_1 () (_ BitVec 64) #x0000000000000001)
(model-add var197762 () (_ BitVec 64) #x0000000000000000)
(model-add var197758 () (_ BitVec 64) #x0000000000000000)
(model-add temp1059_2 () (_ BitVec 64) #x0000000000000000)
(model-add var131809 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add extend_977
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))












