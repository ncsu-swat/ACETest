(declare-fun temp68_1 () (_ BitVec 64))
(declare-fun var197762 () (_ BitVec 64))
(declare-fun var197758 () (_ BitVec 64))
(declare-fun temp68_2 () (_ BitVec 64))
(declare-fun var131809 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun extend_982 () (_ BitVec 64))
(declare-fun temp68_3 () (_ BitVec 64))
(declare-fun var264184 () (_ BitVec 64))
(declare-fun var131856 () (_ BitVec 64))
(declare-fun var131859 () (_ BitVec 64))
(declare-fun ARGNAME_shape_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var131860 () (_ BitVec 64))
(declare-fun temp68_4 () (_ BitVec 64))
(declare-fun temp68_6 () (_ BitVec 64))
(declare-fun temp68_5 () (_ BitVec 64))
(declare-fun temp68_8 () (_ BitVec 64))
(declare-fun temp68_7 () (_ BitVec 64))
(declare-fun temp68_10 () (_ BitVec 64))
(declare-fun temp68_9 () (_ BitVec 64))
(declare-fun temp68_12 () (_ BitVec 64))
(declare-fun temp68_11 () (_ BitVec 64))
(declare-fun temp68_14 () (_ BitVec 64))
(declare-fun temp68_13 () (_ BitVec 64))
(declare-fun temp68_15 () (_ BitVec 64))
(declare-fun var526509 () (_ BitVec 64))
(declare-fun temp68_16 () (_ BitVec 64))
(declare-fun temp68_17 () (_ BitVec 64))
(declare-fun var526523 () (_ BitVec 64))
(declare-fun var593158 () (_ BitVec 64))
(declare-fun temp68_19 () (_ BitVec 64))
(declare-fun temp68_18 () (_ BitVec 64))
(declare-fun temp68_20 () (_ BitVec 64))
(declare-fun var526644 () (_ BitVec 64))
(declare-fun temp68_21 () (_ BitVec 64))
(declare-fun var526645 () (_ BitVec 64))
(declare-fun temp68_22 () (_ BitVec 64))
(declare-fun var526521 () (_ BitVec 64))
(declare-fun var526520 () (_ BitVec 64))
(declare-fun temp68_25 () (_ BitVec 64))
(declare-fun var526647 () (_ BitVec 64))
(declare-fun temp68_26 () (_ BitVec 64))
(declare-fun var526648 () (_ BitVec 64))
(declare-fun temp68_27 () (_ BitVec 64))
(declare-fun temp68_28 () (_ BitVec 64))
(declare-fun var132005 () (_ BitVec 64))
(declare-fun temp68_29 () (_ BitVec 64))
(declare-fun temp68_30 () (_ BitVec 64))
(declare-fun ARGNAME_input_min_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var918652 () (_ BitVec 64))
(declare-fun var918646 () (_ BitVec 64))
(declare-fun var65992 () (_ BitVec 64))
(declare-fun temp68_31 () (_ BitVec 64))
(declare-fun temp68_32 () (_ BitVec 64))
(declare-fun var984194 () (_ BitVec 64))
(declare-fun var984190 () (_ BitVec 64))
(declare-fun var65996 () (_ BitVec 64))
(declare-fun temp68_33 () (_ BitVec 64))
(declare-fun temp68_34 () (_ BitVec 64))
(declare-fun ARGNAME_input_min_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp68_35 () (_ BitVec 64))
(declare-fun temp68_36 () (_ BitVec 64))
(declare-fun temp68_37 () (_ BitVec 64))
(declare-fun temp68_38 () (_ BitVec 64))
(declare-fun temp68_39 () (_ BitVec 64))
(declare-fun temp68_40 () (_ BitVec 64))
(declare-fun temp68_41 () (_ BitVec 64))
(declare-fun temp68_42 () (_ BitVec 64))
(declare-fun temp68_43 () (_ BitVec 64))
(declare-fun temp68_44 () (_ BitVec 64))
(declare-fun temp68_45 () (_ BitVec 64))
(declare-fun temp68_46 () (_ BitVec 64))
(declare-fun temp68_47 () (_ BitVec 64))
(declare-fun var66001 () (_ BitVec 64))
(declare-fun temp68_48 () (_ BitVec 64))
(declare-fun var66005 () (_ BitVec 64))
(declare-fun temp68_49 () (_ BitVec 64))
(declare-fun temp68_50 () (_ BitVec 64))
(declare-fun var1049825 () (_ BitVec 64))
(declare-fun temp68_51 () (_ BitVec 64))
(declare-fun ARGNAME_input_max_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1115260 () (_ BitVec 64))
(declare-fun var1115254 () (_ BitVec 64))
(declare-fun var66056 () (_ BitVec 64))
(declare-fun temp68_52 () (_ BitVec 64))
(assert (= temp68_1 #x0000000000000001))
(assert (= var197762
   (ite (= extend_982 temp68_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var197758 var197762))
(assert (= var131809 var197758))
(assert (= temp68_2 #x0000000000000001))
(assert (= var131809 temp68_2))
(assert (= temp68_3 #x00000000000000fe))
(assert (= var264184 temp68_3))
(assert (= var131856 var264184))
(assert (= var131859 var131856))
(assert (= var131860
   (ite (bvslt ARGNAME_shape_NAMEEND_LEN var131859)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_4 #x0000000000000001))
(assert (= var131860 temp68_4))
(assert (= temp68_6 #x0000000000000001))
(assert (= temp68_5 temp68_6))
(assert (= temp68_8 #xffffffffffffffff))
(assert (= temp68_7 temp68_8))
(assert (= temp68_10 #x0000000000000001))
(assert (= temp68_9 temp68_10))
(assert (= temp68_12 #xffffffffffffffff))
(assert (= temp68_11 temp68_12))
(assert (= temp68_14 #x0000000000000000))
(assert (= temp68_13 temp68_14))
(assert (= temp68_15 #x0000000000000000))
(assert (= var526509
   (ite (bvsgt ARGNAME_shape_NAMEEND_LEN temp68_15)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_16 #x0000000000000001))
(assert (= var526509 temp68_16))
(assert (= temp68_17 #x0000000000000000))
(assert (= var526523 temp68_17))
(assert (= var593158 var526523))
(assert (= temp68_19 #x0000000000000001))
(assert (= temp68_18 temp68_19))
(assert (= temp68_20 #x0000000000000000))
(assert (= var526644 temp68_20))
(assert (= temp68_21 #x0000000000000000))
(assert (= var526645
   (ite (= var526644 temp68_21) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_22 #x0000000000000001))
(assert (= var526521 (bvadd var526523 temp68_22)))
(assert (= var526520
   (ite (= var526521 ARGNAME_shape_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_25 #x0000000000000002))
(assert (= var526647 temp68_25))
(assert (= temp68_26 #x0000000000000002))
(assert (= var526648
   (ite (= var526647 temp68_26) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_27 #x0000000000000001))
(assert (= var526648 temp68_27))
(assert (= temp68_28 #xffffffffffffffff))
(assert (= var132005
   (ite (= temp68_11 temp68_28) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_29 #x0000000000000001))
(assert (= var132005 temp68_29))
(assert (= temp68_30 #x0000000000000000))
(assert (= var918652
   (ite (= ARGNAME_input_min_NAMEEND_DIM temp68_30)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var918646 var918652))
(assert (= var65992 var918646))
(assert (= temp68_31 #x0000000000000000))
(assert (= var65992 temp68_31))
(assert (= temp68_32 #x0000000000000001))
(assert (= var984194
   (ite (= ARGNAME_input_min_NAMEEND_DIM temp68_32)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var984190 var984194))
(assert (= var65996 var984190))
(assert (= temp68_33 #x0000000000000001))
(assert (= var65996 temp68_33))
(assert (= temp68_34 #x0000000000000000))
(assert (= temp68_35 (select ARGNAME_input_min_NAMEEND_DIMSIZE temp68_34)))
(assert (= temp68_36 #x0000000000000001))
(assert (= temp68_37 (select ARGNAME_input_min_NAMEEND_DIMSIZE temp68_36)))
(assert (= temp68_38 #x0000000000000002))
(assert (= temp68_39 (select ARGNAME_input_min_NAMEEND_DIMSIZE temp68_38)))
(assert (= temp68_40 #x0000000000000003))
(assert (= temp68_41 (select ARGNAME_input_min_NAMEEND_DIMSIZE temp68_40)))
(assert (= temp68_42 #x0000000000000004))
(assert (= temp68_43 (select ARGNAME_input_min_NAMEEND_DIMSIZE temp68_42)))
(assert (= temp68_44 #x0000000000000005))
(assert (= temp68_45 (select ARGNAME_input_min_NAMEEND_DIMSIZE temp68_44)))
(assert (= temp68_46 #x0000000000000000))
(assert (= temp68_47 (select ARGNAME_input_min_NAMEEND_DIMSIZE temp68_46)))
(assert (= var66001 temp68_47))
(assert (= temp68_48 #x0000000000000001))
(assert (= var66005 (ite (= var66001 temp68_48) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_49 #x0000000000000001))
(assert (= var66005 temp68_49))
(assert (= temp68_50 #x0000000000000000))
(assert (= var1049825 temp68_50))
(assert (= temp68_51 #x0000000000000000))
(assert (= var1115260
   (ite (= ARGNAME_input_max_NAMEEND_DIM temp68_51)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1115254 var1115260))
(assert (= var66056 var1115254))
(assert (= temp68_52 #x0000000000000001))
(assert (= var66056 temp68_52))
(model-add temp68_1 () (_ BitVec 64) #x0000000000000001)
(model-add var197762 () (_ BitVec 64) #x0000000000000001)
(model-add var197758 () (_ BitVec 64) #x0000000000000001)
(model-add temp68_2 () (_ BitVec 64) #x0000000000000001)
(model-add var131809 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add extend_982
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))











