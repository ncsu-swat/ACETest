(declare-fun temp32_1 () (_ BitVec 64))
(declare-fun var197762 () (_ BitVec 64))
(declare-fun var197758 () (_ BitVec 64))
(declare-fun temp32_2 () (_ BitVec 64))
(declare-fun var131809 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun extend_894 () (_ BitVec 64))
(declare-fun temp32_3 () (_ BitVec 64))
(declare-fun var264184 () (_ BitVec 64))
(declare-fun var131856 () (_ BitVec 64))
(declare-fun var131859 () (_ BitVec 64))
(declare-fun ARGNAME_shape_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var131860 () (_ BitVec 64))
(declare-fun temp32_4 () (_ BitVec 64))
(declare-fun temp32_6 () (_ BitVec 64))
(declare-fun temp32_5 () (_ BitVec 64))
(declare-fun temp32_8 () (_ BitVec 64))
(declare-fun temp32_7 () (_ BitVec 64))
(declare-fun temp32_10 () (_ BitVec 64))
(declare-fun temp32_9 () (_ BitVec 64))
(declare-fun temp32_12 () (_ BitVec 64))
(declare-fun temp32_11 () (_ BitVec 64))
(declare-fun temp32_14 () (_ BitVec 64))
(declare-fun temp32_13 () (_ BitVec 64))
(declare-fun temp32_15 () (_ BitVec 64))
(declare-fun var526509 () (_ BitVec 64))
(declare-fun temp32_16 () (_ BitVec 64))
(declare-fun temp32_17 () (_ BitVec 64))
(declare-fun var526523 () (_ BitVec 64))
(declare-fun var593158 () (_ BitVec 64))
(declare-fun temp32_18 () (_ BitVec 64))
(declare-fun var526531 () (_ BitVec 64))
(declare-fun var526532 () (_ BitVec 64))
(declare-fun temp32_19 () (_ BitVec 64))
(declare-fun temp32_20 () (_ BitVec 64))
(declare-fun var526644 () (_ BitVec 64))
(declare-fun temp32_21 () (_ BitVec 64))
(declare-fun var526645 () (_ BitVec 64))
(declare-fun temp32_22 () (_ BitVec 64))
(declare-fun var526521 () (_ BitVec 64))
(declare-fun var526520 () (_ BitVec 64))
(declare-fun temp32_25 () (_ BitVec 64))
(declare-fun var526647 () (_ BitVec 64))
(declare-fun temp32_26 () (_ BitVec 64))
(declare-fun var526648 () (_ BitVec 64))
(declare-fun temp32_27 () (_ BitVec 64))
(declare-fun var132004 () (_ BitVec 64))
(declare-fun temp32_28 () (_ BitVec 64))
(declare-fun var132005 () (_ BitVec 64))
(declare-fun temp32_29 () (_ BitVec 64))
(declare-fun temp32_30 () (_ BitVec 64))
(declare-fun var132007 () (_ BitVec 64))
(declare-fun var132020 () (_ BitVec 64))
(declare-fun var132024 () (_ BitVec 64))
(declare-fun var132025 () (_ BitVec 64))
(declare-fun var132079 () (_ BitVec 64))
(assert (= temp32_1 #x0000000000000001))
(assert (= var197762
   (ite (= extend_894 temp32_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var197758 var197762))
(assert (= var131809 var197758))
(assert (= temp32_2 #x0000000000000001))
(assert (= var131809 temp32_2))
(assert (= temp32_3 #x00000000000000fe))
(assert (= var264184 temp32_3))
(assert (= var131856 var264184))
(assert (= var131859 var131856))
(assert (= var131860
   (ite (bvslt ARGNAME_shape_NAMEEND_LEN var131859)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_4 #x0000000000000001))
(assert (= var131860 temp32_4))
(assert (= temp32_6 #x0000000000000001))
(assert (= temp32_5 temp32_6))
(assert (= temp32_8 #xffffffffffffffff))
(assert (= temp32_7 temp32_8))
(assert (= temp32_10 #x0000000000000001))
(assert (= temp32_9 temp32_10))
(assert (= temp32_12 #xffffffffffffffff))
(assert (= temp32_11 temp32_12))
(assert (= temp32_14 #x0000000000000000))
(assert (= temp32_13 temp32_14))
(assert (= temp32_15 #x0000000000000000))
(assert (= var526509
   (ite (bvsgt ARGNAME_shape_NAMEEND_LEN temp32_15)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_16 #x0000000000000001))
(assert (= var526509 temp32_16))
(assert (= temp32_17 #x0000000000000000))
(assert (= var526523 temp32_17))
(assert (= var593158 var526523))
(assert (= temp32_18 #xffffffffffffffff))
(assert (= var526531
   (ite (= temp32_11 temp32_18) #x0000000000000001 #x0000000000000000)))
(assert (= var526532 var526523))
(assert (= temp32_19 #x0000000000000001))
(assert (= var526531 temp32_19))
(assert (= temp32_20 #x0000000000000000))
(assert (= var526644 temp32_20))
(assert (= temp32_21 #x0000000000000000))
(assert (= var526645
   (ite (= var526644 temp32_21) #x0000000000000001 #x0000000000000000)))
(assert (= temp32_22 #x0000000000000001))
(assert (= var526521 (bvadd var526523 temp32_22)))
(assert (= var526520
   (ite (= var526521 ARGNAME_shape_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_25 #x0000000000000002))
(assert (= var526647 temp32_25))
(assert (= temp32_26 #x0000000000000002))
(assert (= var526648
   (ite (= var526647 temp32_26) #x0000000000000001 #x0000000000000000)))
(assert (= temp32_27 #x0000000000000001))
(assert (= var526648 temp32_27))
(assert (= var132004 var526532))
(assert (= temp32_28 #xffffffffffffffff))
(assert (= var132005
   (ite (= var132004 temp32_28) #x0000000000000001 #x0000000000000000)))
(assert (= temp32_29 #x0000000000000000))
(assert (= var132005 temp32_29))
(assert (= temp32_30 #x0000000000000001))
(assert (= var132007 temp32_30))
(assert (= var132020 (bvsdiv var132007 temp32_9)))
(assert (= var132024 (bvmul var132020 temp32_9)))
(assert (= var132025
   (ite (= var132024 var132007) #x0000000000000001 #x0000000000000000)))
(assert (= var132079 var526532))
(model-add temp32_1 () (_ BitVec 64) #x0000000000000001)
(model-add var197762 () (_ BitVec 64) #x0000000000000001)
(model-add var197758 () (_ BitVec 64) #x0000000000000001)
(model-add temp32_2 () (_ BitVec 64) #x0000000000000001)
(model-add var131809 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add extend_894
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))













