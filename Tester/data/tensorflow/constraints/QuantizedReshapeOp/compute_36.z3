(declare-fun temp361_1 () (_ BitVec 64))
(declare-fun var197762 () (_ BitVec 64))
(declare-fun var197758 () (_ BitVec 64))
(declare-fun temp361_2 () (_ BitVec 64))
(declare-fun var131809 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun extend_937 () (_ BitVec 64))
(declare-fun temp361_3 () (_ BitVec 64))
(declare-fun var264184 () (_ BitVec 64))
(declare-fun var131856 () (_ BitVec 64))
(declare-fun var131859 () (_ BitVec 64))
(declare-fun ARGNAME_shape_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var131860 () (_ BitVec 64))
(declare-fun temp361_4 () (_ BitVec 64))
(declare-fun temp361_6 () (_ BitVec 64))
(declare-fun temp361_5 () (_ BitVec 64))
(declare-fun temp361_8 () (_ BitVec 64))
(declare-fun temp361_7 () (_ BitVec 64))
(declare-fun temp361_10 () (_ BitVec 64))
(declare-fun temp361_9 () (_ BitVec 64))
(declare-fun temp361_12 () (_ BitVec 64))
(declare-fun temp361_11 () (_ BitVec 64))
(declare-fun temp361_14 () (_ BitVec 64))
(declare-fun temp361_13 () (_ BitVec 64))
(declare-fun temp361_15 () (_ BitVec 64))
(declare-fun var526690 () (_ BitVec 64))
(declare-fun temp361_16 () (_ BitVec 64))
(declare-fun temp361_17 () (_ BitVec 64))
(declare-fun var526704 () (_ BitVec 64))
(declare-fun var592533 () (_ BitVec 64))
(declare-fun temp361_18 () (_ BitVec 64))
(declare-fun var526713 () (_ BitVec 64))
(declare-fun var526714 () (_ BitVec 64))
(declare-fun temp361_19 () (_ BitVec 64))
(declare-fun temp361_20 () (_ BitVec 64))
(declare-fun var526809 () (_ BitVec 64))
(declare-fun temp361_21 () (_ BitVec 64))
(declare-fun var526810 () (_ BitVec 64))
(declare-fun temp361_22 () (_ BitVec 64))
(declare-fun var526702 () (_ BitVec 64))
(declare-fun var526701 () (_ BitVec 64))
(declare-fun temp361_25 () (_ BitVec 64))
(declare-fun var526812 () (_ BitVec 64))
(declare-fun temp361_26 () (_ BitVec 64))
(declare-fun var526813 () (_ BitVec 64))
(declare-fun temp361_27 () (_ BitVec 64))
(declare-fun var132004 () (_ BitVec 64))
(declare-fun temp361_28 () (_ BitVec 64))
(declare-fun var132005 () (_ BitVec 64))
(declare-fun temp361_29 () (_ BitVec 64))
(declare-fun temp361_30 () (_ BitVec 64))
(declare-fun var132007 () (_ BitVec 64))
(declare-fun var132020 () (_ BitVec 64))
(declare-fun var132024 () (_ BitVec 64))
(declare-fun var132025 () (_ BitVec 64))
(declare-fun var132079 () (_ BitVec 64))
(declare-fun temp361_31 () (_ BitVec 64))
(declare-fun ARGNAME_input_min_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var918652 () (_ BitVec 64))
(declare-fun var918646 () (_ BitVec 64))
(declare-fun var65992 () (_ BitVec 64))
(declare-fun temp361_32 () (_ BitVec 64))
(declare-fun temp361_33 () (_ BitVec 64))
(declare-fun var984194 () (_ BitVec 64))
(declare-fun var984190 () (_ BitVec 64))
(declare-fun var65996 () (_ BitVec 64))
(declare-fun temp361_34 () (_ BitVec 64))
(declare-fun temp361_35 () (_ BitVec 64))
(declare-fun ARGNAME_input_min_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp361_36 () (_ BitVec 64))
(declare-fun temp361_37 () (_ BitVec 64))
(declare-fun temp361_38 () (_ BitVec 64))
(declare-fun temp361_39 () (_ BitVec 64))
(declare-fun temp361_40 () (_ BitVec 64))
(declare-fun temp361_41 () (_ BitVec 64))
(declare-fun temp361_42 () (_ BitVec 64))
(declare-fun temp361_43 () (_ BitVec 64))
(declare-fun temp361_44 () (_ BitVec 64))
(declare-fun temp361_45 () (_ BitVec 64))
(declare-fun temp361_46 () (_ BitVec 64))
(declare-fun temp361_47 () (_ BitVec 64))
(declare-fun temp361_48 () (_ BitVec 64))
(declare-fun var66001 () (_ BitVec 64))
(declare-fun temp361_49 () (_ BitVec 64))
(declare-fun var66005 () (_ BitVec 64))
(declare-fun temp361_50 () (_ BitVec 64))
(declare-fun temp361_51 () (_ BitVec 64))
(declare-fun var1049825 () (_ BitVec 64))
(declare-fun temp361_52 () (_ BitVec 64))
(declare-fun ARGNAME_input_max_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1115260 () (_ BitVec 64))
(declare-fun var1115254 () (_ BitVec 64))
(declare-fun var66056 () (_ BitVec 64))
(declare-fun temp361_53 () (_ BitVec 64))
(declare-fun temp361_54 () (_ BitVec 64))
(declare-fun var1180802 () (_ BitVec 64))
(declare-fun var1180798 () (_ BitVec 64))
(declare-fun var66058 () (_ BitVec 64))
(declare-fun temp361_55 () (_ BitVec 64))
(declare-fun temp361_56 () (_ BitVec 64))
(declare-fun ARGNAME_input_max_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp361_57 () (_ BitVec 64))
(declare-fun temp361_58 () (_ BitVec 64))
(declare-fun temp361_59 () (_ BitVec 64))
(declare-fun temp361_60 () (_ BitVec 64))
(declare-fun temp361_61 () (_ BitVec 64))
(declare-fun temp361_62 () (_ BitVec 64))
(declare-fun temp361_63 () (_ BitVec 64))
(declare-fun temp361_64 () (_ BitVec 64))
(declare-fun temp361_65 () (_ BitVec 64))
(declare-fun temp361_66 () (_ BitVec 64))
(declare-fun temp361_67 () (_ BitVec 64))
(declare-fun temp361_68 () (_ BitVec 64))
(declare-fun temp361_69 () (_ BitVec 64))
(declare-fun var66061 () (_ BitVec 64))
(declare-fun temp361_70 () (_ BitVec 64))
(declare-fun var66062 () (_ BitVec 64))
(declare-fun temp361_71 () (_ BitVec 64))
(assert (= temp361_1 #x0000000000000001))
(assert (= var197762
   (ite (= extend_937 temp361_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var197758 var197762))
(assert (= var131809 var197758))
(assert (= temp361_2 #x0000000000000001))
(assert (= var131809 temp361_2))
(assert (= temp361_3 #x00000000000000fe))
(assert (= var264184 temp361_3))
(assert (= var131856 var264184))
(assert (= var131859 var131856))
(assert (= var131860
   (ite (bvslt ARGNAME_shape_NAMEEND_LEN var131859)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp361_4 #x0000000000000001))
(assert (= var131860 temp361_4))
(assert (= temp361_6 #x0000000000000001))
(assert (= temp361_5 temp361_6))
(assert (= temp361_8 #xffffffffffffffff))
(assert (= temp361_7 temp361_8))
(assert (= temp361_10 #x0000000000000001))
(assert (= temp361_9 temp361_10))
(assert (= temp361_12 #xffffffffffffffff))
(assert (= temp361_11 temp361_12))
(assert (= temp361_14 #x0000000000000000))
(assert (= temp361_13 temp361_14))
(assert (= temp361_15 #x0000000000000000))
(assert (= var526690
   (ite (bvsgt ARGNAME_shape_NAMEEND_LEN temp361_15)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp361_16 #x0000000000000001))
(assert (= var526690 temp361_16))
(assert (= temp361_17 #x0000000000000000))
(assert (= var526704 temp361_17))
(assert (= var592533 var526704))
(assert (= temp361_18 #xffffffffffffffff))
(assert (= var526713
   (ite (= temp361_11 temp361_18) #x0000000000000001 #x0000000000000000)))
(assert (= var526714 var526704))
(assert (= temp361_19 #x0000000000000001))
(assert (= var526713 temp361_19))
(assert (= temp361_20 #x0000000000000000))
(assert (= var526809 temp361_20))
(assert (= temp361_21 #x0000000000000000))
(assert (= var526810
   (ite (= var526809 temp361_21) #x0000000000000001 #x0000000000000000)))
(assert (= temp361_22 #x0000000000000001))
(assert (= var526702 (bvadd var526704 temp361_22)))
(assert (= var526701
   (ite (= var526702 ARGNAME_shape_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp361_25 #x0000000000000002))
(assert (= var526812 temp361_25))
(assert (= temp361_26 #x0000000000000002))
(assert (= var526813
   (ite (= var526812 temp361_26) #x0000000000000001 #x0000000000000000)))
(assert (= temp361_27 #x0000000000000001))
(assert (= var526813 temp361_27))
(assert (= var132004 var526714))
(assert (= temp361_28 #xffffffffffffffff))
(assert (= var132005
   (ite (= var132004 temp361_28) #x0000000000000001 #x0000000000000000)))
(assert (= temp361_29 #x0000000000000000))
(assert (= var132005 temp361_29))
(assert (= temp361_30 #x0000000000000001))
(assert (= var132007 temp361_30))
(assert (= var132020 (bvsdiv var132007 temp361_9)))
(assert (= var132024 (bvmul var132020 temp361_9)))
(assert (= var132025
   (ite (= var132024 var132007) #x0000000000000001 #x0000000000000000)))
(assert (= var132079 var526714))
(assert (= temp361_31 #x0000000000000000))
(assert (= var918652
   (ite (= ARGNAME_input_min_NAMEEND_DIM temp361_31)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var918646 var918652))
(assert (= var65992 var918646))
(assert (= temp361_32 #x0000000000000000))
(assert (= var65992 temp361_32))
(assert (= temp361_33 #x0000000000000001))
(assert (= var984194
   (ite (= ARGNAME_input_min_NAMEEND_DIM temp361_33)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var984190 var984194))
(assert (= var65996 var984190))
(assert (= temp361_34 #x0000000000000001))
(assert (= var65996 temp361_34))
(assert (= temp361_35 #x0000000000000000))
(assert (= temp361_36 (select ARGNAME_input_min_NAMEEND_DIMSIZE temp361_35)))
(assert (= temp361_37 #x0000000000000001))
(assert (= temp361_38 (select ARGNAME_input_min_NAMEEND_DIMSIZE temp361_37)))
(assert (= temp361_39 #x0000000000000002))
(assert (= temp361_40 (select ARGNAME_input_min_NAMEEND_DIMSIZE temp361_39)))
(assert (= temp361_41 #x0000000000000003))
(assert (= temp361_42 (select ARGNAME_input_min_NAMEEND_DIMSIZE temp361_41)))
(assert (= temp361_43 #x0000000000000004))
(assert (= temp361_44 (select ARGNAME_input_min_NAMEEND_DIMSIZE temp361_43)))
(assert (= temp361_45 #x0000000000000005))
(assert (= temp361_46 (select ARGNAME_input_min_NAMEEND_DIMSIZE temp361_45)))
(assert (= temp361_47 #x0000000000000000))
(assert (= temp361_48 (select ARGNAME_input_min_NAMEEND_DIMSIZE temp361_47)))
(assert (= var66001 temp361_48))
(assert (= temp361_49 #x0000000000000001))
(assert (= var66005 (ite (= var66001 temp361_49) #x0000000000000001 #x0000000000000000)))
(assert (= temp361_50 #x0000000000000001))
(assert (= var66005 temp361_50))
(assert (= temp361_51 #x0000000000000000))
(assert (= var1049825 temp361_51))
(assert (= temp361_52 #x0000000000000000))
(assert (= var1115260
   (ite (= ARGNAME_input_max_NAMEEND_DIM temp361_52)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1115254 var1115260))
(assert (= var66056 var1115254))
(assert (= temp361_53 #x0000000000000000))
(assert (= var66056 temp361_53))
(assert (= temp361_54 #x0000000000000001))
(assert (= var1180802
   (ite (= ARGNAME_input_max_NAMEEND_DIM temp361_54)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1180798 var1180802))
(assert (= var66058 var1180798))
(assert (= temp361_55 #x0000000000000001))
(assert (= var66058 temp361_55))
(assert (= temp361_56 #x0000000000000000))
(assert (= temp361_57 (select ARGNAME_input_max_NAMEEND_DIMSIZE temp361_56)))
(assert (= temp361_58 #x0000000000000001))
(assert (= temp361_59 (select ARGNAME_input_max_NAMEEND_DIMSIZE temp361_58)))
(assert (= temp361_60 #x0000000000000002))
(assert (= temp361_61 (select ARGNAME_input_max_NAMEEND_DIMSIZE temp361_60)))
(assert (= temp361_62 #x0000000000000003))
(assert (= temp361_63 (select ARGNAME_input_max_NAMEEND_DIMSIZE temp361_62)))
(assert (= temp361_64 #x0000000000000004))
(assert (= temp361_65 (select ARGNAME_input_max_NAMEEND_DIMSIZE temp361_64)))
(assert (= temp361_66 #x0000000000000005))
(assert (= temp361_67 (select ARGNAME_input_max_NAMEEND_DIMSIZE temp361_66)))
(assert (= temp361_68 #x0000000000000000))
(assert (= temp361_69 (select ARGNAME_input_max_NAMEEND_DIMSIZE temp361_68)))
(assert (= var66061 temp361_69))
(assert (= temp361_70 #x0000000000000001))
(assert (= var66062 (ite (= var66061 temp361_70) #x0000000000000001 #x0000000000000000)))
(assert (= temp361_71 #x0000000000000001))
(assert (= var66062 temp361_71))
(model-add temp361_1 () (_ BitVec 64) #x0000000000000001)
(model-add var197762 () (_ BitVec 64) #x0000000000000001)
(model-add var197758 () (_ BitVec 64) #x0000000000000001)
(model-add temp361_2 () (_ BitVec 64) #x0000000000000001)
(model-add var131809 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add extend_937
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))










