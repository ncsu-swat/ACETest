(declare-fun temp158_1 () (_ BitVec 64))
(declare-fun temp158_2 () (_ BitVec 64))
(declare-fun var66845 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp158_3 () (_ BitVec 64))
(declare-fun ARGNAME_crops_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var264765 () (_ BitVec 64))
(declare-fun var264761 () (_ BitVec 64))
(declare-fun var132721 () (_ BitVec 64))
(declare-fun temp158_4 () (_ BitVec 64))
(declare-fun temp158_5 () (_ BitVec 64))
(declare-fun ARGNAME_crops_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp158_6 () (_ BitVec 64))
(declare-fun temp158_7 () (_ BitVec 64))
(declare-fun temp158_8 () (_ BitVec 64))
(declare-fun temp158_9 () (_ BitVec 64))
(declare-fun temp158_10 () (_ BitVec 64))
(declare-fun temp158_11 () (_ BitVec 64))
(declare-fun temp158_12 () (_ BitVec 64))
(declare-fun temp158_13 () (_ BitVec 64))
(declare-fun temp158_14 () (_ BitVec 64))
(declare-fun temp158_15 () (_ BitVec 64))
(declare-fun temp158_16 () (_ BitVec 64))
(declare-fun temp158_17 () (_ BitVec 64))
(declare-fun temp158_18 () (_ BitVec 64))
(declare-fun var132727 () (_ BitVec 64))
(declare-fun temp158_19 () (_ BitVec 64))
(declare-fun temp158_20 () (_ BitVec 64))
(declare-fun var132730 () (_ BitVec 64))
(declare-fun temp158_21 () (_ BitVec 64))
(declare-fun var132731 () (_ BitVec 64))
(declare-fun temp158_22 () (_ BitVec 64))
(declare-fun temp158_23 () (_ BitVec 64))
(declare-fun var132793 () (_ BitVec 64))
(declare-fun temp158_24 () (_ BitVec 64))
(declare-fun var132795 () (_ BitVec 64))
(declare-fun var132801 () (_ BitVec 64))
(declare-fun temp158_25 () (_ BitVec 64))
(declare-fun var132803 () (_ BitVec 64))
(declare-fun temp158_26 () (_ BitVec 64))
(declare-fun var132794 () (_ BitVec 64))
(declare-fun temp158_27 () (_ BitVec 64))
(declare-fun var132833 () (_ BitVec 64))
(declare-fun var132835 () (_ BitVec 64))
(declare-fun temp158_28 () (_ BitVec 64))
(declare-fun var132836 () (_ BitVec 64))
(declare-fun var132844 () (_ BitVec 64))
(declare-fun var132863 () (_ BitVec 64))
(declare-fun temp158_29 () (_ BitVec 64))
(declare-fun var132869 () (_ BitVec 64))
(declare-fun temp158_30 () (_ BitVec 64))
(declare-fun var132871 () (_ BitVec 64))
(declare-fun temp158_31 () (_ BitVec 64))
(declare-fun temp158_32 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp158_33 () (_ BitVec 64))
(declare-fun temp158_34 () (_ BitVec 64))
(declare-fun temp158_35 () (_ BitVec 64))
(declare-fun temp158_36 () (_ BitVec 64))
(declare-fun temp158_37 () (_ BitVec 64))
(declare-fun temp158_38 () (_ BitVec 64))
(declare-fun temp158_39 () (_ BitVec 64))
(declare-fun temp158_40 () (_ BitVec 64))
(declare-fun temp158_41 () (_ BitVec 64))
(declare-fun temp158_42 () (_ BitVec 64))
(declare-fun temp158_43 () (_ BitVec 64))
(declare-fun temp158_44 () (_ BitVec 64))
(declare-fun temp158_45 () (_ BitVec 64))
(declare-fun var132917 () (_ BitVec 64))
(declare-fun var132918 () (_ BitVec 64))
(declare-fun var132919 () (_ BitVec 64))
(declare-fun temp158_46 () (_ BitVec 64))
(declare-fun var132920 () (_ BitVec 64))
(declare-fun temp158_47 () (_ BitVec 64))
(declare-fun var133035 () (_ BitVec 64))
(assert (= temp158_1 #x0000000000000004))
(assert (= var66845
   (ite (= ARGNAME_input_NAMEEND_DIM temp158_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp158_2 #x0000000000000001))
(assert (= var66845 temp158_2))
(assert (= temp158_3 #x0000000000000002))
(assert (= var264765
   (ite (= ARGNAME_crops_NAMEEND_DIM temp158_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var264761 var264765))
(assert (= var132721 var264761))
(assert (= temp158_4 #x0000000000000001))
(assert (= var132721 temp158_4))
(assert (= temp158_5 #x0000000000000000))
(assert (= temp158_6 (select ARGNAME_crops_NAMEEND_DIMSIZE temp158_5)))
(assert (= temp158_7 #x0000000000000001))
(assert (= temp158_8 (select ARGNAME_crops_NAMEEND_DIMSIZE temp158_7)))
(assert (= temp158_9 #x0000000000000002))
(assert (= temp158_10 (select ARGNAME_crops_NAMEEND_DIMSIZE temp158_9)))
(assert (= temp158_11 #x0000000000000003))
(assert (= temp158_12 (select ARGNAME_crops_NAMEEND_DIMSIZE temp158_11)))
(assert (= temp158_13 #x0000000000000004))
(assert (= temp158_14 (select ARGNAME_crops_NAMEEND_DIMSIZE temp158_13)))
(assert (= temp158_15 #x0000000000000005))
(assert (= temp158_16 (select ARGNAME_crops_NAMEEND_DIMSIZE temp158_15)))
(assert (= temp158_17 #x0000000000000000))
(assert (= temp158_18 (select ARGNAME_crops_NAMEEND_DIMSIZE temp158_17)))
(assert (= var132727 temp158_18))
(assert (= temp158_19 #x0000000000000001))
(assert (= temp158_20 (select ARGNAME_crops_NAMEEND_DIMSIZE temp158_19)))
(assert (= var132730 temp158_20))
(assert (= temp158_21 #x0000000000000002))
(assert (= var132731
   (ite (= var132730 temp158_21) #x0000000000000001 #x0000000000000000)))
(assert (= temp158_22 #x0000000000000001))
(assert (= var132731 temp158_22))
(assert (= temp158_23 #x0000000000000000))
(assert (= var132793 temp158_23))
(assert (= temp158_24 #x0000000000000001))
(assert (= var132795 (bvshl var132793 temp158_24)))
(assert (= var132801 var132793))
(assert (= temp158_25 #x0000000000000001))
(assert (= var132803 (bvor var132795 temp158_25)))
(assert (= temp158_26 #x0000000000000001))
(assert (= var132794 (bvadd var132793 temp158_26)))
(assert (= temp158_27 #x0000000000000000))
(assert (= var132833 temp158_27))
(assert (= var132835 var132833))
(assert (= temp158_28 #xffffffffffffffff))
(assert (= var132836 (bvxor var132835 temp158_28)))
(assert (= var132844 var132833))
(assert (= var132863 var132844))
(assert (= temp158_29 #x0000000000000001))
(assert (= var132869 temp158_29))
(assert (= temp158_30 #x0000000000000000))
(assert (= var132871
   (ite (bvsgt var132869 temp158_30) #x0000000000000001 #x0000000000000000)))
(assert (= temp158_31 #x0000000000000001))
(assert (= var132871 temp158_31))
(assert (= temp158_32 #x0000000000000000))
(assert (= temp158_33 (select ARGNAME_input_NAMEEND_DIMSIZE temp158_32)))
(assert (= temp158_34 #x0000000000000001))
(assert (= temp158_35 (select ARGNAME_input_NAMEEND_DIMSIZE temp158_34)))
(assert (= temp158_36 #x0000000000000002))
(assert (= temp158_37 (select ARGNAME_input_NAMEEND_DIMSIZE temp158_36)))
(assert (= temp158_38 #x0000000000000003))
(assert (= temp158_39 (select ARGNAME_input_NAMEEND_DIMSIZE temp158_38)))
(assert (= temp158_40 #x0000000000000004))
(assert (= temp158_41 (select ARGNAME_input_NAMEEND_DIMSIZE temp158_40)))
(assert (= temp158_42 #x0000000000000005))
(assert (= temp158_43 (select ARGNAME_input_NAMEEND_DIMSIZE temp158_42)))
(assert (= temp158_44 #x0000000000000000))
(assert (= temp158_45 (select ARGNAME_input_NAMEEND_DIMSIZE temp158_44)))
(assert (= var132917 temp158_45))
(assert (= var132918 (bvsmod var132917 var132869)))
(assert (= var132919 (bvsdiv var132917 var132869)))
(assert (= temp158_46 #x0000000000000000))
(assert (= var132920
   (ite (= var132918 temp158_46) #x0000000000000001 #x0000000000000000)))
(assert (= temp158_47 #x0000000000000001))
(assert (= var132920 temp158_47))
(assert (= var133035 var132917))
(model-add temp158_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp158_2 () (_ BitVec 64) #x0000000000000001)
(model-add var66845 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))














