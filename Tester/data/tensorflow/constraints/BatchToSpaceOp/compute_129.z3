(declare-fun temp188_1 () (_ BitVec 64))
(declare-fun temp188_2 () (_ BitVec 64))
(declare-fun var66845 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp188_3 () (_ BitVec 64))
(declare-fun ARGNAME_crops_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var264765 () (_ BitVec 64))
(declare-fun var264761 () (_ BitVec 64))
(declare-fun var132721 () (_ BitVec 64))
(declare-fun temp188_4 () (_ BitVec 64))
(declare-fun temp188_5 () (_ BitVec 64))
(declare-fun ARGNAME_crops_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp188_6 () (_ BitVec 64))
(declare-fun temp188_7 () (_ BitVec 64))
(declare-fun temp188_8 () (_ BitVec 64))
(declare-fun temp188_9 () (_ BitVec 64))
(declare-fun temp188_10 () (_ BitVec 64))
(declare-fun temp188_11 () (_ BitVec 64))
(declare-fun temp188_12 () (_ BitVec 64))
(declare-fun temp188_13 () (_ BitVec 64))
(declare-fun temp188_14 () (_ BitVec 64))
(declare-fun temp188_15 () (_ BitVec 64))
(declare-fun temp188_16 () (_ BitVec 64))
(declare-fun temp188_17 () (_ BitVec 64))
(declare-fun temp188_18 () (_ BitVec 64))
(declare-fun var132727 () (_ BitVec 64))
(declare-fun temp188_19 () (_ BitVec 64))
(declare-fun temp188_20 () (_ BitVec 64))
(declare-fun var132730 () (_ BitVec 64))
(declare-fun temp188_21 () (_ BitVec 64))
(declare-fun var132731 () (_ BitVec 64))
(declare-fun temp188_22 () (_ BitVec 64))
(declare-fun temp188_23 () (_ BitVec 64))
(declare-fun var132793 () (_ BitVec 64))
(declare-fun temp188_24 () (_ BitVec 64))
(declare-fun var132795 () (_ BitVec 64))
(declare-fun var132801 () (_ BitVec 64))
(declare-fun temp188_25 () (_ BitVec 64))
(declare-fun var132803 () (_ BitVec 64))
(declare-fun temp188_26 () (_ BitVec 64))
(declare-fun var132794 () (_ BitVec 64))
(declare-fun temp188_27 () (_ BitVec 64))
(declare-fun var132833 () (_ BitVec 64))
(declare-fun var132835 () (_ BitVec 64))
(declare-fun temp188_28 () (_ BitVec 64))
(declare-fun var132836 () (_ BitVec 64))
(declare-fun var132844 () (_ BitVec 64))
(declare-fun temp188_29 () (_ BitVec 64))
(declare-fun var132834 () (_ BitVec 64))
(declare-fun temp188_30 () (_ BitVec 64))
(declare-fun var132869 () (_ BitVec 64))
(declare-fun temp188_31 () (_ BitVec 64))
(declare-fun var132871 () (_ BitVec 64))
(declare-fun temp188_32 () (_ BitVec 64))
(declare-fun temp188_33 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp188_34 () (_ BitVec 64))
(declare-fun temp188_35 () (_ BitVec 64))
(declare-fun temp188_36 () (_ BitVec 64))
(declare-fun temp188_37 () (_ BitVec 64))
(declare-fun temp188_38 () (_ BitVec 64))
(declare-fun temp188_39 () (_ BitVec 64))
(declare-fun temp188_40 () (_ BitVec 64))
(declare-fun temp188_41 () (_ BitVec 64))
(declare-fun temp188_42 () (_ BitVec 64))
(declare-fun temp188_43 () (_ BitVec 64))
(declare-fun temp188_44 () (_ BitVec 64))
(declare-fun temp188_45 () (_ BitVec 64))
(declare-fun temp188_46 () (_ BitVec 64))
(declare-fun var132917 () (_ BitVec 64))
(declare-fun var132918 () (_ BitVec 64))
(declare-fun var132919 () (_ BitVec 64))
(declare-fun temp188_47 () (_ BitVec 64))
(declare-fun var132920 () (_ BitVec 64))
(declare-fun temp188_48 () (_ BitVec 64))
(declare-fun var133035 () (_ BitVec 64))
(assert (= temp188_1 #x0000000000000004))
(assert (= var66845
   (ite (= ARGNAME_input_NAMEEND_DIM temp188_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp188_2 #x0000000000000001))
(assert (= var66845 temp188_2))
(assert (= temp188_3 #x0000000000000002))
(assert (= var264765
   (ite (= ARGNAME_crops_NAMEEND_DIM temp188_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var264761 var264765))
(assert (= var132721 var264761))
(assert (= temp188_4 #x0000000000000001))
(assert (= var132721 temp188_4))
(assert (= temp188_5 #x0000000000000000))
(assert (= temp188_6 (select ARGNAME_crops_NAMEEND_DIMSIZE temp188_5)))
(assert (= temp188_7 #x0000000000000001))
(assert (= temp188_8 (select ARGNAME_crops_NAMEEND_DIMSIZE temp188_7)))
(assert (= temp188_9 #x0000000000000002))
(assert (= temp188_10 (select ARGNAME_crops_NAMEEND_DIMSIZE temp188_9)))
(assert (= temp188_11 #x0000000000000003))
(assert (= temp188_12 (select ARGNAME_crops_NAMEEND_DIMSIZE temp188_11)))
(assert (= temp188_13 #x0000000000000004))
(assert (= temp188_14 (select ARGNAME_crops_NAMEEND_DIMSIZE temp188_13)))
(assert (= temp188_15 #x0000000000000005))
(assert (= temp188_16 (select ARGNAME_crops_NAMEEND_DIMSIZE temp188_15)))
(assert (= temp188_17 #x0000000000000000))
(assert (= temp188_18 (select ARGNAME_crops_NAMEEND_DIMSIZE temp188_17)))
(assert (= var132727 temp188_18))
(assert (= temp188_19 #x0000000000000001))
(assert (= temp188_20 (select ARGNAME_crops_NAMEEND_DIMSIZE temp188_19)))
(assert (= var132730 temp188_20))
(assert (= temp188_21 #x0000000000000002))
(assert (= var132731
   (ite (= var132730 temp188_21) #x0000000000000001 #x0000000000000000)))
(assert (= temp188_22 #x0000000000000001))
(assert (= var132731 temp188_22))
(assert (= temp188_23 #x0000000000000000))
(assert (= var132793 temp188_23))
(assert (= temp188_24 #x0000000000000001))
(assert (= var132795 (bvshl var132793 temp188_24)))
(assert (= var132801 var132793))
(assert (= temp188_25 #x0000000000000001))
(assert (= var132803 (bvor var132795 temp188_25)))
(assert (= temp188_26 #x0000000000000001))
(assert (= var132794 (bvadd var132793 temp188_26)))
(assert (= temp188_27 #x0000000000000000))
(assert (= var132833 temp188_27))
(assert (= var132835 var132833))
(assert (= temp188_28 #xffffffffffffffff))
(assert (= var132836 (bvxor var132835 temp188_28)))
(assert (= var132844 var132833))
(assert (= temp188_29 #x0000000000000001))
(assert (= var132834 (bvadd var132833 temp188_29)))
(assert (= temp188_30 #x0000000000000001))
(assert (= var132869 temp188_30))
(assert (= temp188_31 #x0000000000000000))
(assert (= var132871
   (ite (bvsgt var132869 temp188_31) #x0000000000000001 #x0000000000000000)))
(assert (= temp188_32 #x0000000000000001))
(assert (= var132871 temp188_32))
(assert (= temp188_33 #x0000000000000000))
(assert (= temp188_34 (select ARGNAME_input_NAMEEND_DIMSIZE temp188_33)))
(assert (= temp188_35 #x0000000000000001))
(assert (= temp188_36 (select ARGNAME_input_NAMEEND_DIMSIZE temp188_35)))
(assert (= temp188_37 #x0000000000000002))
(assert (= temp188_38 (select ARGNAME_input_NAMEEND_DIMSIZE temp188_37)))
(assert (= temp188_39 #x0000000000000003))
(assert (= temp188_40 (select ARGNAME_input_NAMEEND_DIMSIZE temp188_39)))
(assert (= temp188_41 #x0000000000000004))
(assert (= temp188_42 (select ARGNAME_input_NAMEEND_DIMSIZE temp188_41)))
(assert (= temp188_43 #x0000000000000005))
(assert (= temp188_44 (select ARGNAME_input_NAMEEND_DIMSIZE temp188_43)))
(assert (= temp188_45 #x0000000000000000))
(assert (= temp188_46 (select ARGNAME_input_NAMEEND_DIMSIZE temp188_45)))
(assert (= var132917 temp188_46))
(assert (= var132918 (bvsmod var132917 var132869)))
(assert (= var132919 (bvsdiv var132917 var132869)))
(assert (= temp188_47 #x0000000000000000))
(assert (= var132920
   (ite (= var132918 temp188_47) #x0000000000000001 #x0000000000000000)))
(assert (= temp188_48 #x0000000000000001))
(assert (= var132920 temp188_48))
(assert (= var133035 var132917))
(model-add temp188_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp188_2 () (_ BitVec 64) #x0000000000000001)
(model-add var66845 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))















