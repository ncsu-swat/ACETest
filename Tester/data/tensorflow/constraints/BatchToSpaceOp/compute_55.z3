(declare-fun temp90_1 () (_ BitVec 64))
(declare-fun temp90_2 () (_ BitVec 64))
(declare-fun var66845 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp90_3 () (_ BitVec 64))
(declare-fun ARGNAME_crops_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var264765 () (_ BitVec 64))
(declare-fun var264761 () (_ BitVec 64))
(declare-fun var132721 () (_ BitVec 64))
(declare-fun temp90_4 () (_ BitVec 64))
(declare-fun temp90_5 () (_ BitVec 64))
(declare-fun ARGNAME_crops_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp90_6 () (_ BitVec 64))
(declare-fun temp90_7 () (_ BitVec 64))
(declare-fun temp90_8 () (_ BitVec 64))
(declare-fun temp90_9 () (_ BitVec 64))
(declare-fun temp90_10 () (_ BitVec 64))
(declare-fun temp90_11 () (_ BitVec 64))
(declare-fun temp90_12 () (_ BitVec 64))
(declare-fun temp90_13 () (_ BitVec 64))
(declare-fun temp90_14 () (_ BitVec 64))
(declare-fun temp90_15 () (_ BitVec 64))
(declare-fun temp90_16 () (_ BitVec 64))
(declare-fun temp90_17 () (_ BitVec 64))
(declare-fun temp90_18 () (_ BitVec 64))
(declare-fun var132727 () (_ BitVec 64))
(declare-fun temp90_19 () (_ BitVec 64))
(declare-fun temp90_20 () (_ BitVec 64))
(declare-fun var132730 () (_ BitVec 64))
(declare-fun temp90_21 () (_ BitVec 64))
(declare-fun var132731 () (_ BitVec 64))
(declare-fun temp90_22 () (_ BitVec 64))
(declare-fun temp90_23 () (_ BitVec 64))
(declare-fun var132793 () (_ BitVec 64))
(declare-fun temp90_24 () (_ BitVec 64))
(declare-fun var132795 () (_ BitVec 64))
(declare-fun var132801 () (_ BitVec 64))
(declare-fun temp90_25 () (_ BitVec 64))
(declare-fun var132803 () (_ BitVec 64))
(declare-fun var132825 () (_ BitVec 64))
(declare-fun temp90_26 () (_ BitVec 64))
(declare-fun var132863 () (_ BitVec 64))
(declare-fun temp90_27 () (_ BitVec 64))
(declare-fun var132873 () (_ BitVec 64))
(declare-fun temp90_28 () (_ BitVec 64))
(declare-fun var132874 () (_ BitVec 64))
(declare-fun temp90_29 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp90_30 () (_ BitVec 64))
(declare-fun temp90_31 () (_ BitVec 64))
(declare-fun temp90_32 () (_ BitVec 64))
(declare-fun temp90_33 () (_ BitVec 64))
(declare-fun temp90_34 () (_ BitVec 64))
(declare-fun temp90_35 () (_ BitVec 64))
(declare-fun temp90_36 () (_ BitVec 64))
(declare-fun temp90_37 () (_ BitVec 64))
(declare-fun temp90_38 () (_ BitVec 64))
(declare-fun temp90_39 () (_ BitVec 64))
(declare-fun temp90_40 () (_ BitVec 64))
(declare-fun temp90_41 () (_ BitVec 64))
(declare-fun temp90_42 () (_ BitVec 64))
(declare-fun var132917 () (_ BitVec 64))
(assert (= temp90_1 #x0000000000000004))
(assert (= var66845
   (ite (= ARGNAME_input_NAMEEND_DIM temp90_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp90_2 #x0000000000000001))
(assert (= var66845 temp90_2))
(assert (= temp90_3 #x0000000000000002))
(assert (= var264765
   (ite (= ARGNAME_crops_NAMEEND_DIM temp90_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var264761 var264765))
(assert (= var132721 var264761))
(assert (= temp90_4 #x0000000000000001))
(assert (= var132721 temp90_4))
(assert (= temp90_5 #x0000000000000000))
(assert (= temp90_6 (select ARGNAME_crops_NAMEEND_DIMSIZE temp90_5)))
(assert (= temp90_7 #x0000000000000001))
(assert (= temp90_8 (select ARGNAME_crops_NAMEEND_DIMSIZE temp90_7)))
(assert (= temp90_9 #x0000000000000002))
(assert (= temp90_10 (select ARGNAME_crops_NAMEEND_DIMSIZE temp90_9)))
(assert (= temp90_11 #x0000000000000003))
(assert (= temp90_12 (select ARGNAME_crops_NAMEEND_DIMSIZE temp90_11)))
(assert (= temp90_13 #x0000000000000004))
(assert (= temp90_14 (select ARGNAME_crops_NAMEEND_DIMSIZE temp90_13)))
(assert (= temp90_15 #x0000000000000005))
(assert (= temp90_16 (select ARGNAME_crops_NAMEEND_DIMSIZE temp90_15)))
(assert (= temp90_17 #x0000000000000000))
(assert (= temp90_18 (select ARGNAME_crops_NAMEEND_DIMSIZE temp90_17)))
(assert (= var132727 temp90_18))
(assert (= temp90_19 #x0000000000000001))
(assert (= temp90_20 (select ARGNAME_crops_NAMEEND_DIMSIZE temp90_19)))
(assert (= var132730 temp90_20))
(assert (= temp90_21 #x0000000000000002))
(assert (= var132731
   (ite (= var132730 temp90_21) #x0000000000000001 #x0000000000000000)))
(assert (= temp90_22 #x0000000000000001))
(assert (= var132731 temp90_22))
(assert (= temp90_23 #x0000000000000000))
(assert (= var132793 temp90_23))
(assert (= temp90_24 #x0000000000000001))
(assert (= var132795 (bvshl var132793 temp90_24)))
(assert (= var132801 var132793))
(assert (= temp90_25 #x0000000000000001))
(assert (= var132803 (bvor var132795 temp90_25)))
(assert (= var132825 var132801))
(assert (= temp90_26 #x0000000000000000))
(assert (= var132863 temp90_26))
(assert (= temp90_27 #x0000000000000000))
(assert (= var132873 temp90_27))
(assert (= temp90_28 #x0000000000000001))
(assert (= var132874 (bvadd var132873 temp90_28)))
(assert (= temp90_29 #x0000000000000000))
(assert (= temp90_30 (select ARGNAME_input_NAMEEND_DIMSIZE temp90_29)))
(assert (= temp90_31 #x0000000000000001))
(assert (= temp90_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp90_31)))
(assert (= temp90_33 #x0000000000000002))
(assert (= temp90_34 (select ARGNAME_input_NAMEEND_DIMSIZE temp90_33)))
(assert (= temp90_35 #x0000000000000003))
(assert (= temp90_36 (select ARGNAME_input_NAMEEND_DIMSIZE temp90_35)))
(assert (= temp90_37 #x0000000000000004))
(assert (= temp90_38 (select ARGNAME_input_NAMEEND_DIMSIZE temp90_37)))
(assert (= temp90_39 #x0000000000000005))
(assert (= temp90_40 (select ARGNAME_input_NAMEEND_DIMSIZE temp90_39)))
(assert (= temp90_41 #x0000000000000000))
(assert (= temp90_42 (select ARGNAME_input_NAMEEND_DIMSIZE temp90_41)))
(assert (= var132917 temp90_42))
(model-add temp90_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp90_2 () (_ BitVec 64) #x0000000000000001)
(model-add var66845 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))









