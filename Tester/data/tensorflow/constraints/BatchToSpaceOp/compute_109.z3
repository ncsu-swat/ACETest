(declare-fun temp168_1 () (_ BitVec 64))
(declare-fun temp168_2 () (_ BitVec 64))
(declare-fun var66845 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp168_3 () (_ BitVec 64))
(declare-fun ARGNAME_crops_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var264765 () (_ BitVec 64))
(declare-fun var264761 () (_ BitVec 64))
(declare-fun var132721 () (_ BitVec 64))
(declare-fun temp168_4 () (_ BitVec 64))
(declare-fun temp168_5 () (_ BitVec 64))
(declare-fun ARGNAME_crops_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp168_6 () (_ BitVec 64))
(declare-fun temp168_7 () (_ BitVec 64))
(declare-fun temp168_8 () (_ BitVec 64))
(declare-fun temp168_9 () (_ BitVec 64))
(declare-fun temp168_10 () (_ BitVec 64))
(declare-fun temp168_11 () (_ BitVec 64))
(declare-fun temp168_12 () (_ BitVec 64))
(declare-fun temp168_13 () (_ BitVec 64))
(declare-fun temp168_14 () (_ BitVec 64))
(declare-fun temp168_15 () (_ BitVec 64))
(declare-fun temp168_16 () (_ BitVec 64))
(declare-fun temp168_17 () (_ BitVec 64))
(declare-fun temp168_18 () (_ BitVec 64))
(declare-fun var132727 () (_ BitVec 64))
(declare-fun temp168_19 () (_ BitVec 64))
(declare-fun temp168_20 () (_ BitVec 64))
(declare-fun var132730 () (_ BitVec 64))
(declare-fun temp168_21 () (_ BitVec 64))
(declare-fun var132731 () (_ BitVec 64))
(declare-fun temp168_22 () (_ BitVec 64))
(declare-fun temp168_23 () (_ BitVec 64))
(declare-fun var132793 () (_ BitVec 64))
(declare-fun temp168_24 () (_ BitVec 64))
(declare-fun var132795 () (_ BitVec 64))
(declare-fun var132801 () (_ BitVec 64))
(declare-fun temp168_25 () (_ BitVec 64))
(declare-fun var132803 () (_ BitVec 64))
(declare-fun temp168_26 () (_ BitVec 64))
(declare-fun var132794 () (_ BitVec 64))
(declare-fun temp168_27 () (_ BitVec 64))
(declare-fun var132833 () (_ BitVec 64))
(declare-fun var132835 () (_ BitVec 64))
(declare-fun temp168_28 () (_ BitVec 64))
(declare-fun var132836 () (_ BitVec 64))
(declare-fun var132844 () (_ BitVec 64))
(declare-fun var132863 () (_ BitVec 64))
(declare-fun temp168_29 () (_ BitVec 64))
(declare-fun var132869 () (_ BitVec 64))
(declare-fun temp168_30 () (_ BitVec 64))
(declare-fun var132871 () (_ BitVec 64))
(declare-fun temp168_31 () (_ BitVec 64))
(declare-fun temp168_32 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp168_33 () (_ BitVec 64))
(declare-fun temp168_34 () (_ BitVec 64))
(declare-fun temp168_35 () (_ BitVec 64))
(declare-fun temp168_36 () (_ BitVec 64))
(declare-fun temp168_37 () (_ BitVec 64))
(declare-fun temp168_38 () (_ BitVec 64))
(declare-fun temp168_39 () (_ BitVec 64))
(declare-fun temp168_40 () (_ BitVec 64))
(declare-fun temp168_41 () (_ BitVec 64))
(declare-fun temp168_42 () (_ BitVec 64))
(declare-fun temp168_43 () (_ BitVec 64))
(declare-fun temp168_44 () (_ BitVec 64))
(declare-fun temp168_45 () (_ BitVec 64))
(declare-fun var132917 () (_ BitVec 64))
(declare-fun var132918 () (_ BitVec 64))
(declare-fun var132919 () (_ BitVec 64))
(declare-fun temp168_46 () (_ BitVec 64))
(declare-fun var132920 () (_ BitVec 64))
(declare-fun temp168_47 () (_ BitVec 64))
(declare-fun var133035 () (_ BitVec 64))
(assert (= temp168_1 #x0000000000000004))
(assert (= var66845
   (ite (= ARGNAME_input_NAMEEND_DIM temp168_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp168_2 #x0000000000000001))
(assert (= var66845 temp168_2))
(assert (= temp168_3 #x0000000000000002))
(assert (= var264765
   (ite (= ARGNAME_crops_NAMEEND_DIM temp168_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var264761 var264765))
(assert (= var132721 var264761))
(assert (= temp168_4 #x0000000000000001))
(assert (= var132721 temp168_4))
(assert (= temp168_5 #x0000000000000000))
(assert (= temp168_6 (select ARGNAME_crops_NAMEEND_DIMSIZE temp168_5)))
(assert (= temp168_7 #x0000000000000001))
(assert (= temp168_8 (select ARGNAME_crops_NAMEEND_DIMSIZE temp168_7)))
(assert (= temp168_9 #x0000000000000002))
(assert (= temp168_10 (select ARGNAME_crops_NAMEEND_DIMSIZE temp168_9)))
(assert (= temp168_11 #x0000000000000003))
(assert (= temp168_12 (select ARGNAME_crops_NAMEEND_DIMSIZE temp168_11)))
(assert (= temp168_13 #x0000000000000004))
(assert (= temp168_14 (select ARGNAME_crops_NAMEEND_DIMSIZE temp168_13)))
(assert (= temp168_15 #x0000000000000005))
(assert (= temp168_16 (select ARGNAME_crops_NAMEEND_DIMSIZE temp168_15)))
(assert (= temp168_17 #x0000000000000000))
(assert (= temp168_18 (select ARGNAME_crops_NAMEEND_DIMSIZE temp168_17)))
(assert (= var132727 temp168_18))
(assert (= temp168_19 #x0000000000000001))
(assert (= temp168_20 (select ARGNAME_crops_NAMEEND_DIMSIZE temp168_19)))
(assert (= var132730 temp168_20))
(assert (= temp168_21 #x0000000000000002))
(assert (= var132731
   (ite (= var132730 temp168_21) #x0000000000000001 #x0000000000000000)))
(assert (= temp168_22 #x0000000000000001))
(assert (= var132731 temp168_22))
(assert (= temp168_23 #x0000000000000000))
(assert (= var132793 temp168_23))
(assert (= temp168_24 #x0000000000000001))
(assert (= var132795 (bvshl var132793 temp168_24)))
(assert (= var132801 var132793))
(assert (= temp168_25 #x0000000000000001))
(assert (= var132803 (bvor var132795 temp168_25)))
(assert (= temp168_26 #x0000000000000001))
(assert (= var132794 (bvadd var132793 temp168_26)))
(assert (= temp168_27 #x0000000000000000))
(assert (= var132833 temp168_27))
(assert (= var132835 var132833))
(assert (= temp168_28 #xffffffffffffffff))
(assert (= var132836 (bvxor var132835 temp168_28)))
(assert (= var132844 var132833))
(assert (= var132863 var132844))
(assert (= temp168_29 #x0000000000000001))
(assert (= var132869 temp168_29))
(assert (= temp168_30 #x0000000000000000))
(assert (= var132871
   (ite (bvsgt var132869 temp168_30) #x0000000000000001 #x0000000000000000)))
(assert (= temp168_31 #x0000000000000001))
(assert (= var132871 temp168_31))
(assert (= temp168_32 #x0000000000000000))
(assert (= temp168_33 (select ARGNAME_input_NAMEEND_DIMSIZE temp168_32)))
(assert (= temp168_34 #x0000000000000001))
(assert (= temp168_35 (select ARGNAME_input_NAMEEND_DIMSIZE temp168_34)))
(assert (= temp168_36 #x0000000000000002))
(assert (= temp168_37 (select ARGNAME_input_NAMEEND_DIMSIZE temp168_36)))
(assert (= temp168_38 #x0000000000000003))
(assert (= temp168_39 (select ARGNAME_input_NAMEEND_DIMSIZE temp168_38)))
(assert (= temp168_40 #x0000000000000004))
(assert (= temp168_41 (select ARGNAME_input_NAMEEND_DIMSIZE temp168_40)))
(assert (= temp168_42 #x0000000000000005))
(assert (= temp168_43 (select ARGNAME_input_NAMEEND_DIMSIZE temp168_42)))
(assert (= temp168_44 #x0000000000000000))
(assert (= temp168_45 (select ARGNAME_input_NAMEEND_DIMSIZE temp168_44)))
(assert (= var132917 temp168_45))
(assert (= var132918 (bvsmod var132917 var132869)))
(assert (= var132919 (bvsdiv var132917 var132869)))
(assert (= temp168_46 #x0000000000000000))
(assert (= var132920
   (ite (= var132918 temp168_46) #x0000000000000001 #x0000000000000000)))
(assert (= temp168_47 #x0000000000000001))
(assert (= var132920 temp168_47))
(assert (= var133035 var132917))
(model-add temp168_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp168_2 () (_ BitVec 64) #x0000000000000001)
(model-add var66845 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))


















