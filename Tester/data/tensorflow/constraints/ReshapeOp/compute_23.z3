(declare-fun temp279_1 () (_ BitVec 64))
(declare-fun var132226 () (_ BitVec 64))
(declare-fun var132222 () (_ BitVec 64))
(declare-fun temp279_2 () (_ BitVec 64))
(declare-fun var66273 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun extend_1331 () (_ BitVec 64))
(declare-fun temp279_3 () (_ BitVec 64))
(declare-fun var197756 () (_ BitVec 64))
(declare-fun var197750 () (_ BitVec 64))
(declare-fun var66276 () (_ BitVec 64))
(declare-fun temp279_4 () (_ BitVec 64))
(declare-fun temp279_5 () (_ BitVec 64))
(declare-fun var264184 () (_ BitVec 64))
(declare-fun var66320 () (_ BitVec 64))
(declare-fun var66323 () (_ BitVec 64))
(declare-fun ARGNAME_shape_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var66324 () (_ BitVec 64))
(declare-fun temp279_6 () (_ BitVec 64))
(declare-fun temp279_8 () (_ BitVec 64))
(declare-fun temp279_7 () (_ BitVec 64))
(declare-fun temp279_10 () (_ BitVec 64))
(declare-fun temp279_9 () (_ BitVec 64))
(declare-fun temp279_12 () (_ BitVec 64))
(declare-fun temp279_11 () (_ BitVec 64))
(declare-fun temp279_14 () (_ BitVec 64))
(declare-fun temp279_13 () (_ BitVec 64))
(declare-fun temp279_16 () (_ BitVec 64))
(declare-fun temp279_15 () (_ BitVec 64))
(declare-fun temp279_17 () (_ BitVec 64))
(declare-fun var526690 () (_ BitVec 64))
(declare-fun temp279_18 () (_ BitVec 64))
(declare-fun temp279_19 () (_ BitVec 64))
(declare-fun var526704 () (_ BitVec 64))
(declare-fun var592533 () (_ BitVec 64))
(declare-fun temp279_20 () (_ BitVec 64))
(declare-fun var526713 () (_ BitVec 64))
(declare-fun var526714 () (_ BitVec 64))
(declare-fun temp279_21 () (_ BitVec 64))
(declare-fun temp279_22 () (_ BitVec 64))
(declare-fun var526809 () (_ BitVec 64))
(declare-fun temp279_23 () (_ BitVec 64))
(declare-fun var526810 () (_ BitVec 64))
(declare-fun temp279_24 () (_ BitVec 64))
(declare-fun var526702 () (_ BitVec 64))
(declare-fun var526701 () (_ BitVec 64))
(declare-fun temp279_27 () (_ BitVec 64))
(declare-fun var526812 () (_ BitVec 64))
(declare-fun temp279_28 () (_ BitVec 64))
(declare-fun var526813 () (_ BitVec 64))
(declare-fun temp279_29 () (_ BitVec 64))
(declare-fun var66468 () (_ BitVec 64))
(declare-fun temp279_30 () (_ BitVec 64))
(declare-fun var66469 () (_ BitVec 64))
(declare-fun temp279_31 () (_ BitVec 64))
(declare-fun temp279_32 () (_ BitVec 64))
(declare-fun var66471 () (_ BitVec 64))
(declare-fun var66484 () (_ BitVec 64))
(declare-fun var66488 () (_ BitVec 64))
(declare-fun var66489 () (_ BitVec 64))
(declare-fun var66543 () (_ BitVec 64))
(assert (= temp279_1 #x0000000000000001))
(assert (= var132226
   (ite (= extend_1331 temp279_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var132222 var132226))
(assert (= var66273 var132222))
(assert (= temp279_2 #x0000000000000000))
(assert (= var66273 temp279_2))
(assert (= temp279_3 #x0000000000000000))
(assert (= var197756
   (ite (= extend_1331 temp279_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var197750 var197756))
(assert (= var66276 var197750))
(assert (= temp279_4 #x0000000000000001))
(assert (= var66276 temp279_4))
(assert (= temp279_5 #x00000000000000fe))
(assert (= var264184 temp279_5))
(assert (= var66320 var264184))
(assert (= var66323 var66320))
(assert (= var66324
   (ite (bvslt ARGNAME_shape_NAMEEND_LEN var66323)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp279_6 #x0000000000000001))
(assert (= var66324 temp279_6))
(assert (= temp279_8 #x0000000000000001))
(assert (= temp279_7 temp279_8))
(assert (= temp279_10 #xffffffffffffffff))
(assert (= temp279_9 temp279_10))
(assert (= temp279_12 #x0000000000000001))
(assert (= temp279_11 temp279_12))
(assert (= temp279_14 #xffffffffffffffff))
(assert (= temp279_13 temp279_14))
(assert (= temp279_16 #x0000000000000000))
(assert (= temp279_15 temp279_16))
(assert (= temp279_17 #x0000000000000000))
(assert (= var526690
   (ite (bvsgt ARGNAME_shape_NAMEEND_LEN temp279_17)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp279_18 #x0000000000000001))
(assert (= var526690 temp279_18))
(assert (= temp279_19 #x0000000000000000))
(assert (= var526704 temp279_19))
(assert (= var592533 var526704))
(assert (= temp279_20 #xffffffffffffffff))
(assert (= var526713
   (ite (= temp279_13 temp279_20) #x0000000000000001 #x0000000000000000)))
(assert (= var526714 var526704))
(assert (= temp279_21 #x0000000000000001))
(assert (= var526713 temp279_21))
(assert (= temp279_22 #x0000000000000000))
(assert (= var526809 temp279_22))
(assert (= temp279_23 #x0000000000000000))
(assert (= var526810
   (ite (= var526809 temp279_23) #x0000000000000001 #x0000000000000000)))
(assert (= temp279_24 #x0000000000000001))
(assert (= var526702 (bvadd var526704 temp279_24)))
(assert (= var526701
   (ite (= var526702 ARGNAME_shape_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp279_27 #x0000000000000002))
(assert (= var526812 temp279_27))
(assert (= temp279_28 #x0000000000000002))
(assert (= var526813
   (ite (= var526812 temp279_28) #x0000000000000001 #x0000000000000000)))
(assert (= temp279_29 #x0000000000000001))
(assert (= var526813 temp279_29))
(assert (= var66468 var526714))
(assert (= temp279_30 #xffffffffffffffff))
(assert (= var66469 (ite (= var66468 temp279_30) #x0000000000000001 #x0000000000000000)))
(assert (= temp279_31 #x0000000000000000))
(assert (= var66469 temp279_31))
(assert (= temp279_32 #x0000000000000001))
(assert (= var66471 temp279_32))
(assert (= var66484 (bvsdiv var66471 temp279_11)))
(assert (= var66488 (bvmul var66484 temp279_11)))
(assert (= var66489 (ite (= var66488 var66471) #x0000000000000001 #x0000000000000000)))
(assert (= var66543 var526714))
(model-add temp279_1 () (_ BitVec 64) #x0000000000000001)
(model-add var132226 () (_ BitVec 64) #x0000000000000000)
(model-add var132222 () (_ BitVec 64) #x0000000000000000)
(model-add temp279_2 () (_ BitVec 64) #x0000000000000000)
(model-add var66273 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add extend_1331
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))














