(declare-fun temp4_1 () (_ BitVec 64))
(declare-fun temp4_2 () (_ BitVec 64))
(declare-fun var73567 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_ksize_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp4_3 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var73628 () (_ BitVec 64))
(declare-fun temp4_4 () (_ BitVec 64))
(declare-fun temp4_5 () (_ BitVec 64))
(declare-fun ARGNAME_ksize_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp4_6 () (_ BitVec 64))
(declare-fun temp4_7 () (_ BitVec 64))
(declare-fun temp4_8 () (_ BitVec 64))
(declare-fun temp4_9 () (_ BitVec 64))
(declare-fun temp4_10 () (_ BitVec 64))
(declare-fun temp4_11 () (_ BitVec 64))
(declare-fun temp4_12 () (_ BitVec 64))
(declare-fun temp4_13 () (_ BitVec 64))
(declare-fun temp4_14 () (_ BitVec 64))
(declare-fun temp4_15 () (_ BitVec 64))
(declare-fun temp4_16 () (_ BitVec 64))
(declare-fun temp4_17 () (_ BitVec 64))
(declare-fun temp4_19 () (_ BitVec 64))
(declare-fun temp4_18 () (_ BitVec 64))
(declare-fun temp4_20 () (_ BitVec 64))
(declare-fun var73693 () (_ BitVec 64))
(declare-fun temp4_21 () (_ BitVec 64))
(declare-fun temp4_22 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp4_23 () (_ BitVec 64))
(declare-fun temp4_24 () (_ BitVec 64))
(declare-fun temp4_25 () (_ BitVec 64))
(declare-fun temp4_26 () (_ BitVec 64))
(declare-fun temp4_27 () (_ BitVec 64))
(declare-fun temp4_28 () (_ BitVec 64))
(declare-fun temp4_29 () (_ BitVec 64))
(declare-fun temp4_30 () (_ BitVec 64))
(declare-fun temp4_31 () (_ BitVec 64))
(declare-fun temp4_32 () (_ BitVec 64))
(declare-fun temp4_33 () (_ BitVec 64))
(declare-fun temp4_34 () (_ BitVec 64))
(declare-fun temp4_36 () (_ BitVec 64))
(declare-fun temp4_35 () (_ BitVec 64))
(declare-fun temp4_37 () (_ BitVec 64))
(declare-fun var73697 () (_ BitVec 64))
(declare-fun temp4_38 () (_ BitVec 64))
(declare-fun temp4_42 () (_ BitVec 64))
(declare-fun temp4_43 () (_ BitVec 64))
(declare-fun temp4_44 () (_ BitVec 64))
(declare-fun temp4_45 () (_ BitVec 64))
(declare-fun temp4_40 () (_ BitVec 64))
(declare-fun temp4_46 () (_ BitVec 64))
(declare-fun temp4_47 () (_ BitVec 64))
(declare-fun temp4_48 () (_ BitVec 64))
(declare-fun temp4_41 () (_ BitVec 64))
(declare-fun temp4_50 () (_ BitVec 64))
(declare-fun temp4_51 () (_ BitVec 64))
(declare-fun temp4_52 () (_ BitVec 64))
(declare-fun temp4_53 () (_ BitVec 64))
(declare-fun temp4_54 () (_ BitVec 64))
(declare-fun temp4_39 () (_ BitVec 64))
(declare-fun temp4_55 () (_ BitVec 64))
(declare-fun var73730 () (_ BitVec 64))
(declare-fun temp4_59 () (_ BitVec 64))
(declare-fun temp4_60 () (_ BitVec 64))
(declare-fun temp4_61 () (_ BitVec 64))
(declare-fun temp4_62 () (_ BitVec 64))
(declare-fun temp4_57 () (_ BitVec 64))
(declare-fun temp4_63 () (_ BitVec 64))
(declare-fun temp4_64 () (_ BitVec 64))
(declare-fun temp4_65 () (_ BitVec 64))
(declare-fun temp4_58 () (_ BitVec 64))
(declare-fun temp4_67 () (_ BitVec 64))
(declare-fun temp4_68 () (_ BitVec 64))
(declare-fun temp4_69 () (_ BitVec 64))
(declare-fun temp4_70 () (_ BitVec 64))
(declare-fun temp4_71 () (_ BitVec 64))
(declare-fun temp4_56 () (_ BitVec 64))
(declare-fun temp4_72 () (_ BitVec 64))
(declare-fun var73732 () (_ BitVec 64))
(declare-fun temp4_73 () (_ BitVec 64))
(declare-fun var73733 () (_ BitVec 64))
(declare-fun temp4_74 () (_ BitVec 64))
(declare-fun var73734 () (_ BitVec 64))
(declare-fun var73735 () (_ BitVec 64))
(declare-fun temp4_75 () (_ BitVec 64))
(assert (or (= ARGNAME_padding_NAMEEND #x0000000000000001)
    (= ARGNAME_padding_NAMEEND #x0000000000000002)
    (= ARGNAME_padding_NAMEEND #x0000000000000003)))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp4_1 #x0000000000000005))
(assert (= var73567
   (ite (= ARGNAME_ksize_NAMEEND_LEN temp4_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp4_2 #x0000000000000001))
(assert (= var73567 temp4_2))
(assert (= temp4_3 #x0000000000000005))
(assert (= var73628
   (ite (= ARGNAME_strides_NAMEEND_LEN temp4_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp4_4 #x0000000000000001))
(assert (= var73628 temp4_4))
(assert (= temp4_5 #x0000000000000000))
(assert (= temp4_6 (select ARGNAME_ksize_NAMEEND_VAL temp4_5)))
(assert (= temp4_7 #x0000000000000001))
(assert (= temp4_8 (select ARGNAME_ksize_NAMEEND_VAL temp4_7)))
(assert (= temp4_9 #x0000000000000002))
(assert (= temp4_10 (select ARGNAME_ksize_NAMEEND_VAL temp4_9)))
(assert (= temp4_11 #x0000000000000003))
(assert (= temp4_12 (select ARGNAME_ksize_NAMEEND_VAL temp4_11)))
(assert (= temp4_13 #x0000000000000004))
(assert (= temp4_14 (select ARGNAME_ksize_NAMEEND_VAL temp4_13)))
(assert (= temp4_15 #x0000000000000005))
(assert (= temp4_16 (select ARGNAME_ksize_NAMEEND_VAL temp4_15)))
(assert (= temp4_17 #x0000000000000000))
(assert (= temp4_19 (select ARGNAME_ksize_NAMEEND_VAL temp4_17)))
(assert (= temp4_18 temp4_19))
(assert (= temp4_20 #x0000000000000001))
(assert (= var73693 (ite (= temp4_18 temp4_20) #x0000000000000001 #x0000000000000000)))
(assert (= temp4_21 #x0000000000000001))
(assert (= var73693 temp4_21))
(assert (= temp4_22 #x0000000000000000))
(assert (= temp4_23 (select ARGNAME_strides_NAMEEND_VAL temp4_22)))
(assert (= temp4_24 #x0000000000000001))
(assert (= temp4_25 (select ARGNAME_strides_NAMEEND_VAL temp4_24)))
(assert (= temp4_26 #x0000000000000002))
(assert (= temp4_27 (select ARGNAME_strides_NAMEEND_VAL temp4_26)))
(assert (= temp4_28 #x0000000000000003))
(assert (= temp4_29 (select ARGNAME_strides_NAMEEND_VAL temp4_28)))
(assert (= temp4_30 #x0000000000000004))
(assert (= temp4_31 (select ARGNAME_strides_NAMEEND_VAL temp4_30)))
(assert (= temp4_32 #x0000000000000005))
(assert (= temp4_33 (select ARGNAME_strides_NAMEEND_VAL temp4_32)))
(assert (= temp4_34 #x0000000000000000))
(assert (= temp4_36 (select ARGNAME_strides_NAMEEND_VAL temp4_34)))
(assert (= temp4_35 temp4_36))
(assert (= temp4_37 #x0000000000000001))
(assert (= var73697 (ite (= temp4_35 temp4_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp4_38 #x0000000000000001))
(assert (= var73697 temp4_38))
(assert (= temp4_42 #x0000000000000002))
(assert (= temp4_43 #x0000000000000003))
(assert (= temp4_44 #x0000000000000002))
(assert (= temp4_45 #x0000000000000003))
(assert (= temp4_40
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp4_44)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp4_45))
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp4_43)
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp4_42))))
(assert (= temp4_46 #x0000000000000002))
(assert (= temp4_47 #x0000000000000003))
(assert (= temp4_48 #x0000000000000003))
(assert (= temp4_41 (ite (= temp4_40 temp4_48) temp4_47 temp4_46)))
(assert (= temp4_50 #x0000000000000001))
(assert (= temp4_51 #x0000000000000005))
(assert (= temp4_52 #x0000000000000001))
(assert (= temp4_53 #x0000000000000001))
(assert (= temp4_54 #x0000000000000002))
(assert (= temp4_39
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp4_53)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp4_54))
        temp4_52
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp4_51)
             temp4_41
             (bvadd temp4_41 temp4_50)))))
(assert (= temp4_55 (select ARGNAME_ksize_NAMEEND_VAL temp4_39)))
(assert (= var73730 temp4_55))
(assert (= temp4_59 #x0000000000000002))
(assert (= temp4_60 #x0000000000000003))
(assert (= temp4_61 #x0000000000000002))
(assert (= temp4_62 #x0000000000000003))
(assert (= temp4_57
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp4_61)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp4_62))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp4_60)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp4_59))))
(assert (= temp4_63 #x0000000000000002))
(assert (= temp4_64 #x0000000000000003))
(assert (= temp4_65 #x0000000000000003))
(assert (= temp4_58 (ite (= temp4_57 temp4_65) temp4_64 temp4_63)))
(assert (= temp4_67 #x0000000000000001))
(assert (= temp4_68 #x0000000000000005))
(assert (= temp4_69 #x0000000000000001))
(assert (= temp4_70 #x0000000000000001))
(assert (= temp4_71 #x0000000000000002))
(assert (= temp4_56
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp4_70)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp4_71))
        temp4_69
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp4_68)
             temp4_58
             (bvadd temp4_58 temp4_67)))))
(assert (= temp4_72 (select ARGNAME_strides_NAMEEND_VAL temp4_56)))
(assert (= var73732 temp4_72))
(assert (= temp4_73 #x0000000000000001))
(assert (= var73733 (ite (= var73730 temp4_73) #x0000000000000001 #x0000000000000000)))
(assert (= temp4_74 #x0000000000000001))
(assert (= var73734 (ite (= var73732 temp4_74) #x0000000000000001 #x0000000000000000)))
(assert (= var73735 (bvand var73733 var73734)))
(assert (= temp4_75 #x0000000000000001))
(assert (= var73735 temp4_75))
(model-add temp4_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp4_2 () (_ BitVec 64) #x0000000000000001)
(model-add var73567 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_ksize_NAMEEND_LEN
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))

























