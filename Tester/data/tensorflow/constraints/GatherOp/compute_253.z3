(declare-fun temp288_1 () (_ BitVec 64))
(declare-fun var136368 () (_ BitVec 64))
(declare-fun var136362 () (_ BitVec 64))
(declare-fun temp288_2 () (_ BitVec 64))
(declare-fun var70098 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_params_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp288_3 () (_ BitVec 64))
(declare-fun extend_88435 () (_ BitVec 64))
(declare-fun var464123 () (_ BitVec 64))
(declare-fun var464119 () (_ BitVec 64))
(declare-fun var70135 () (_ BitVec 64))
(declare-fun temp288_4 () (_ BitVec 64))
(declare-fun temp288_5 () (_ BitVec 64))
(declare-fun var70215 () (_ BitVec 64))
(declare-fun temp288_6 () (_ BitVec 64))
(declare-fun var70355 () (_ BitVec 64))
(declare-fun temp288_7 () (_ BitVec 64))
(declare-fun ARGNAME_params_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp288_8 () (_ BitVec 64))
(declare-fun temp288_9 () (_ BitVec 64))
(declare-fun temp288_10 () (_ BitVec 64))
(declare-fun temp288_11 () (_ BitVec 64))
(declare-fun temp288_12 () (_ BitVec 64))
(declare-fun temp288_13 () (_ BitVec 64))
(declare-fun temp288_14 () (_ BitVec 64))
(declare-fun temp288_15 () (_ BitVec 64))
(declare-fun temp288_16 () (_ BitVec 64))
(declare-fun temp288_17 () (_ BitVec 64))
(declare-fun temp288_18 () (_ BitVec 64))
(declare-fun temp288_19 () (_ BitVec 64))
(declare-fun var70357 () (_ BitVec 64))
(declare-fun temp288_20 () (_ BitVec 64))
(declare-fun ARGNAME_indices_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp288_21 () (_ BitVec 64))
(declare-fun temp288_22 () (_ BitVec 64))
(declare-fun temp288_23 () (_ BitVec 64))
(declare-fun temp288_24 () (_ BitVec 64))
(declare-fun temp288_25 () (_ BitVec 64))
(declare-fun temp288_26 () (_ BitVec 64))
(declare-fun temp288_27 () (_ BitVec 64))
(declare-fun temp288_28 () (_ BitVec 64))
(declare-fun temp288_29 () (_ BitVec 64))
(declare-fun temp288_30 () (_ BitVec 64))
(declare-fun temp288_31 () (_ BitVec 64))
(declare-fun temp288_32 () (_ BitVec 64))
(declare-fun var70360 () (_ BitVec 64))
(declare-fun var70361 () (_ BitVec 64))
(declare-fun temp288_34 () (_ BitVec 64))
(declare-fun var70356 () (_ BitVec 64))
(declare-fun temp288_35 () (_ BitVec 64))
(declare-fun var923835 () (_ BitVec 64))
(declare-fun var70396 () (_ BitVec 64))
(declare-fun temp288_36 () (_ BitVec 64))
(declare-fun var70461 () (_ BitVec 64))
(declare-fun temp288_37 () (_ BitVec 64))
(declare-fun var70476 () (_ BitVec 64))
(declare-fun temp288_38 () (_ BitVec 64))
(declare-fun ARGNAME_indices_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var70553 () (_ BitVec 64))
(assert (= temp288_1 #x0000000000000000))
(assert (= var136368
   (ite (bvsgt ARGNAME_params_NAMEEND_DIM temp288_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var136362 var136368))
(assert (= var70098 var136362))
(assert (= temp288_2 #x0000000000000001))
(assert (= var70098 temp288_2))
(assert (= temp288_3 #x0000000000000000))
(assert (= var464123
   (ite (= extend_88435 temp288_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var464119 var464123))
(assert (= var70135 var464119))
(assert (= temp288_4 #x0000000000000001))
(assert (= var70135 temp288_4))
(assert (= temp288_5 #x0000000000000001))
(assert (= var70215 temp288_5))
(assert (= temp288_6 #x0000000000000000))
(assert (= var70355 temp288_6))
(assert (= temp288_7 #x0000000000000000))
(assert (= temp288_8 (select ARGNAME_params_NAMEEND_DIMSIZE temp288_7)))
(assert (= temp288_9 #x0000000000000001))
(assert (= temp288_10 (select ARGNAME_params_NAMEEND_DIMSIZE temp288_9)))
(assert (= temp288_11 #x0000000000000002))
(assert (= temp288_12 (select ARGNAME_params_NAMEEND_DIMSIZE temp288_11)))
(assert (= temp288_13 #x0000000000000003))
(assert (= temp288_14 (select ARGNAME_params_NAMEEND_DIMSIZE temp288_13)))
(assert (= temp288_15 #x0000000000000004))
(assert (= temp288_16 (select ARGNAME_params_NAMEEND_DIMSIZE temp288_15)))
(assert (= temp288_17 #x0000000000000005))
(assert (= temp288_18 (select ARGNAME_params_NAMEEND_DIMSIZE temp288_17)))
(assert (= temp288_19 (select ARGNAME_params_NAMEEND_DIMSIZE var70355)))
(assert (= var70357 temp288_19))
(assert (= temp288_20 #x0000000000000000))
(assert (= temp288_21 (select ARGNAME_indices_NAMEEND_DIMSIZE temp288_20)))
(assert (= temp288_22 #x0000000000000001))
(assert (= temp288_23 (select ARGNAME_indices_NAMEEND_DIMSIZE temp288_22)))
(assert (= temp288_24 #x0000000000000002))
(assert (= temp288_25 (select ARGNAME_indices_NAMEEND_DIMSIZE temp288_24)))
(assert (= temp288_26 #x0000000000000003))
(assert (= temp288_27 (select ARGNAME_indices_NAMEEND_DIMSIZE temp288_26)))
(assert (= temp288_28 #x0000000000000004))
(assert (= temp288_29 (select ARGNAME_indices_NAMEEND_DIMSIZE temp288_28)))
(assert (= temp288_30 #x0000000000000005))
(assert (= temp288_31 (select ARGNAME_indices_NAMEEND_DIMSIZE temp288_30)))
(assert (= temp288_32 (select ARGNAME_indices_NAMEEND_DIMSIZE var70355)))
(assert (= var70360 temp288_32))
(assert (= var70361 (ite (= var70357 var70360) #x0000000000000001 #x0000000000000000)))
(assert (= temp288_34 #x0000000000000001))
(assert (= var70356 (bvadd var70355 temp288_34)))
(assert (= temp288_35 #xffffffffffffffff))
(assert (= var923835 temp288_35))
(assert (= var70396 var923835))
(assert (= temp288_36 #x0000000000000001))
(assert (= var70461 temp288_36))
(assert (= temp288_37 #x0000000000000001))
(assert (= var70476 temp288_37))
(assert (= temp288_38 #x0000000000000000))
(assert (= var70553
   (ite (= ARGNAME_indices_NAMEEND_NUMELEMENT temp288_38)
        #x0000000000000001
        #x0000000000000000)))
(model-add temp288_1 () (_ BitVec 64) #x0000000000000000)
(model-add var136368 () (_ BitVec 64) #x0000000000000001)
(model-add var136362 () (_ BitVec 64) #x0000000000000001)
(model-add temp288_2 () (_ BitVec 64) #x0000000000000001)
(model-add var70098 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_params_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x7fffffffffffffff))
                #x0000000000000000
                (bvadd #x0000000000000000 #x0000000000000001)))






