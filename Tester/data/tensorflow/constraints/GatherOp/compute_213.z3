(declare-fun temp248_1 () (_ BitVec 64))
(declare-fun var136368 () (_ BitVec 64))
(declare-fun var136362 () (_ BitVec 64))
(declare-fun temp248_2 () (_ BitVec 64))
(declare-fun var70098 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_params_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp248_3 () (_ BitVec 64))
(declare-fun extend_101 () (_ BitVec 64))
(declare-fun var464123 () (_ BitVec 64))
(declare-fun var464119 () (_ BitVec 64))
(declare-fun var70135 () (_ BitVec 64))
(declare-fun temp248_4 () (_ BitVec 64))
(declare-fun temp248_5 () (_ BitVec 64))
(declare-fun var70215 () (_ BitVec 64))
(declare-fun temp248_6 () (_ BitVec 64))
(declare-fun var70355 () (_ BitVec 64))
(declare-fun temp248_7 () (_ BitVec 64))
(declare-fun ARGNAME_params_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp248_8 () (_ BitVec 64))
(declare-fun temp248_9 () (_ BitVec 64))
(declare-fun temp248_10 () (_ BitVec 64))
(declare-fun temp248_11 () (_ BitVec 64))
(declare-fun temp248_12 () (_ BitVec 64))
(declare-fun temp248_13 () (_ BitVec 64))
(declare-fun temp248_14 () (_ BitVec 64))
(declare-fun temp248_15 () (_ BitVec 64))
(declare-fun temp248_16 () (_ BitVec 64))
(declare-fun temp248_17 () (_ BitVec 64))
(declare-fun temp248_18 () (_ BitVec 64))
(declare-fun temp248_19 () (_ BitVec 64))
(declare-fun var70357 () (_ BitVec 64))
(declare-fun temp248_20 () (_ BitVec 64))
(declare-fun ARGNAME_indices_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp248_21 () (_ BitVec 64))
(declare-fun temp248_22 () (_ BitVec 64))
(declare-fun temp248_23 () (_ BitVec 64))
(declare-fun temp248_24 () (_ BitVec 64))
(declare-fun temp248_25 () (_ BitVec 64))
(declare-fun temp248_26 () (_ BitVec 64))
(declare-fun temp248_27 () (_ BitVec 64))
(declare-fun temp248_28 () (_ BitVec 64))
(declare-fun temp248_29 () (_ BitVec 64))
(declare-fun temp248_30 () (_ BitVec 64))
(declare-fun temp248_31 () (_ BitVec 64))
(declare-fun temp248_32 () (_ BitVec 64))
(declare-fun var70360 () (_ BitVec 64))
(declare-fun var70361 () (_ BitVec 64))
(declare-fun temp248_34 () (_ BitVec 64))
(declare-fun var70356 () (_ BitVec 64))
(declare-fun temp248_35 () (_ BitVec 64))
(declare-fun var923835 () (_ BitVec 64))
(declare-fun var70396 () (_ BitVec 64))
(declare-fun temp248_36 () (_ BitVec 64))
(declare-fun var70461 () (_ BitVec 64))
(declare-fun temp248_37 () (_ BitVec 64))
(declare-fun var70476 () (_ BitVec 64))
(declare-fun temp248_38 () (_ BitVec 64))
(declare-fun ARGNAME_indices_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var70553 () (_ BitVec 64))
(assert (= temp248_1 #x0000000000000000))
(assert (= var136368
   (ite (bvsgt ARGNAME_params_NAMEEND_DIM temp248_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var136362 var136368))
(assert (= var70098 var136362))
(assert (= temp248_2 #x0000000000000001))
(assert (= var70098 temp248_2))
(assert (= temp248_3 #x0000000000000000))
(assert (= var464123
   (ite (= extend_101 temp248_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var464119 var464123))
(assert (= var70135 var464119))
(assert (= temp248_4 #x0000000000000001))
(assert (= var70135 temp248_4))
(assert (= temp248_5 #x0000000000000001))
(assert (= var70215 temp248_5))
(assert (= temp248_6 #x0000000000000000))
(assert (= var70355 temp248_6))
(assert (= temp248_7 #x0000000000000000))
(assert (= temp248_8 (select ARGNAME_params_NAMEEND_DIMSIZE temp248_7)))
(assert (= temp248_9 #x0000000000000001))
(assert (= temp248_10 (select ARGNAME_params_NAMEEND_DIMSIZE temp248_9)))
(assert (= temp248_11 #x0000000000000002))
(assert (= temp248_12 (select ARGNAME_params_NAMEEND_DIMSIZE temp248_11)))
(assert (= temp248_13 #x0000000000000003))
(assert (= temp248_14 (select ARGNAME_params_NAMEEND_DIMSIZE temp248_13)))
(assert (= temp248_15 #x0000000000000004))
(assert (= temp248_16 (select ARGNAME_params_NAMEEND_DIMSIZE temp248_15)))
(assert (= temp248_17 #x0000000000000005))
(assert (= temp248_18 (select ARGNAME_params_NAMEEND_DIMSIZE temp248_17)))
(assert (= temp248_19 (select ARGNAME_params_NAMEEND_DIMSIZE var70355)))
(assert (= var70357 temp248_19))
(assert (= temp248_20 #x0000000000000000))
(assert (= temp248_21 (select ARGNAME_indices_NAMEEND_DIMSIZE temp248_20)))
(assert (= temp248_22 #x0000000000000001))
(assert (= temp248_23 (select ARGNAME_indices_NAMEEND_DIMSIZE temp248_22)))
(assert (= temp248_24 #x0000000000000002))
(assert (= temp248_25 (select ARGNAME_indices_NAMEEND_DIMSIZE temp248_24)))
(assert (= temp248_26 #x0000000000000003))
(assert (= temp248_27 (select ARGNAME_indices_NAMEEND_DIMSIZE temp248_26)))
(assert (= temp248_28 #x0000000000000004))
(assert (= temp248_29 (select ARGNAME_indices_NAMEEND_DIMSIZE temp248_28)))
(assert (= temp248_30 #x0000000000000005))
(assert (= temp248_31 (select ARGNAME_indices_NAMEEND_DIMSIZE temp248_30)))
(assert (= temp248_32 (select ARGNAME_indices_NAMEEND_DIMSIZE var70355)))
(assert (= var70360 temp248_32))
(assert (= var70361 (ite (= var70357 var70360) #x0000000000000001 #x0000000000000000)))
(assert (= temp248_34 #x0000000000000001))
(assert (= var70356 (bvadd var70355 temp248_34)))
(assert (= temp248_35 #xffffffffffffffff))
(assert (= var923835 temp248_35))
(assert (= var70396 var923835))
(assert (= temp248_36 #x0000000000000001))
(assert (= var70461 temp248_36))
(assert (= temp248_37 #x0000000000000001))
(assert (= var70476 temp248_37))
(assert (= temp248_38 #x0000000000000000))
(assert (= var70553
   (ite (= ARGNAME_indices_NAMEEND_NUMELEMENT temp248_38)
        #x0000000000000001
        #x0000000000000000)))
(model-add temp248_1 () (_ BitVec 64) #x0000000000000000)
(model-add var136368 () (_ BitVec 64) #x0000000000000001)
(model-add var136362 () (_ BitVec 64) #x0000000000000001)
(model-add temp248_2 () (_ BitVec 64) #x0000000000000001)
(model-add var70098 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_params_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x7fffffffffffffff))
                #x0000000000000000
                (bvadd #x0000000000000000 #x0000000000000001)))









