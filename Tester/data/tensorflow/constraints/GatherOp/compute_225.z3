(declare-fun temp260_1 () (_ BitVec 64))
(declare-fun var136368 () (_ BitVec 64))
(declare-fun var136362 () (_ BitVec 64))
(declare-fun temp260_2 () (_ BitVec 64))
(declare-fun var70098 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_params_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp260_3 () (_ BitVec 64))
(declare-fun extend_8937 () (_ BitVec 64))
(declare-fun var464123 () (_ BitVec 64))
(declare-fun var464119 () (_ BitVec 64))
(declare-fun var70135 () (_ BitVec 64))
(declare-fun temp260_4 () (_ BitVec 64))
(declare-fun temp260_5 () (_ BitVec 64))
(declare-fun var70215 () (_ BitVec 64))
(declare-fun temp260_6 () (_ BitVec 64))
(declare-fun var70355 () (_ BitVec 64))
(declare-fun temp260_7 () (_ BitVec 64))
(declare-fun ARGNAME_params_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp260_8 () (_ BitVec 64))
(declare-fun temp260_9 () (_ BitVec 64))
(declare-fun temp260_10 () (_ BitVec 64))
(declare-fun temp260_11 () (_ BitVec 64))
(declare-fun temp260_12 () (_ BitVec 64))
(declare-fun temp260_13 () (_ BitVec 64))
(declare-fun temp260_14 () (_ BitVec 64))
(declare-fun temp260_15 () (_ BitVec 64))
(declare-fun temp260_16 () (_ BitVec 64))
(declare-fun temp260_17 () (_ BitVec 64))
(declare-fun temp260_18 () (_ BitVec 64))
(declare-fun temp260_19 () (_ BitVec 64))
(declare-fun var70357 () (_ BitVec 64))
(declare-fun temp260_20 () (_ BitVec 64))
(declare-fun ARGNAME_indices_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp260_21 () (_ BitVec 64))
(declare-fun temp260_22 () (_ BitVec 64))
(declare-fun temp260_23 () (_ BitVec 64))
(declare-fun temp260_24 () (_ BitVec 64))
(declare-fun temp260_25 () (_ BitVec 64))
(declare-fun temp260_26 () (_ BitVec 64))
(declare-fun temp260_27 () (_ BitVec 64))
(declare-fun temp260_28 () (_ BitVec 64))
(declare-fun temp260_29 () (_ BitVec 64))
(declare-fun temp260_30 () (_ BitVec 64))
(declare-fun temp260_31 () (_ BitVec 64))
(declare-fun temp260_32 () (_ BitVec 64))
(declare-fun var70360 () (_ BitVec 64))
(declare-fun var70361 () (_ BitVec 64))
(declare-fun temp260_34 () (_ BitVec 64))
(declare-fun var70356 () (_ BitVec 64))
(declare-fun temp260_35 () (_ BitVec 64))
(declare-fun var923835 () (_ BitVec 64))
(declare-fun var70396 () (_ BitVec 64))
(declare-fun temp260_36 () (_ BitVec 64))
(declare-fun var70452 () (_ BitVec 64))
(declare-fun temp260_37 () (_ BitVec 64))
(declare-fun var70476 () (_ BitVec 64))
(declare-fun temp260_38 () (_ BitVec 64))
(declare-fun ARGNAME_indices_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var70553 () (_ BitVec 64))
(assert (= temp260_1 #x0000000000000000))
(assert (= var136368
   (ite (bvsgt ARGNAME_params_NAMEEND_DIM temp260_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var136362 var136368))
(assert (= var70098 var136362))
(assert (= temp260_2 #x0000000000000001))
(assert (= var70098 temp260_2))
(assert (= temp260_3 #x0000000000000000))
(assert (= var464123
   (ite (= extend_8937 temp260_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var464119 var464123))
(assert (= var70135 var464119))
(assert (= temp260_4 #x0000000000000001))
(assert (= var70135 temp260_4))
(assert (= temp260_5 #x0000000000000001))
(assert (= var70215 temp260_5))
(assert (= temp260_6 #x0000000000000000))
(assert (= var70355 temp260_6))
(assert (= temp260_7 #x0000000000000000))
(assert (= temp260_8 (select ARGNAME_params_NAMEEND_DIMSIZE temp260_7)))
(assert (= temp260_9 #x0000000000000001))
(assert (= temp260_10 (select ARGNAME_params_NAMEEND_DIMSIZE temp260_9)))
(assert (= temp260_11 #x0000000000000002))
(assert (= temp260_12 (select ARGNAME_params_NAMEEND_DIMSIZE temp260_11)))
(assert (= temp260_13 #x0000000000000003))
(assert (= temp260_14 (select ARGNAME_params_NAMEEND_DIMSIZE temp260_13)))
(assert (= temp260_15 #x0000000000000004))
(assert (= temp260_16 (select ARGNAME_params_NAMEEND_DIMSIZE temp260_15)))
(assert (= temp260_17 #x0000000000000005))
(assert (= temp260_18 (select ARGNAME_params_NAMEEND_DIMSIZE temp260_17)))
(assert (= temp260_19 (select ARGNAME_params_NAMEEND_DIMSIZE var70355)))
(assert (= var70357 temp260_19))
(assert (= temp260_20 #x0000000000000000))
(assert (= temp260_21 (select ARGNAME_indices_NAMEEND_DIMSIZE temp260_20)))
(assert (= temp260_22 #x0000000000000001))
(assert (= temp260_23 (select ARGNAME_indices_NAMEEND_DIMSIZE temp260_22)))
(assert (= temp260_24 #x0000000000000002))
(assert (= temp260_25 (select ARGNAME_indices_NAMEEND_DIMSIZE temp260_24)))
(assert (= temp260_26 #x0000000000000003))
(assert (= temp260_27 (select ARGNAME_indices_NAMEEND_DIMSIZE temp260_26)))
(assert (= temp260_28 #x0000000000000004))
(assert (= temp260_29 (select ARGNAME_indices_NAMEEND_DIMSIZE temp260_28)))
(assert (= temp260_30 #x0000000000000005))
(assert (= temp260_31 (select ARGNAME_indices_NAMEEND_DIMSIZE temp260_30)))
(assert (= temp260_32 (select ARGNAME_indices_NAMEEND_DIMSIZE var70355)))
(assert (= var70360 temp260_32))
(assert (= var70361 (ite (= var70357 var70360) #x0000000000000001 #x0000000000000000)))
(assert (= temp260_34 #x0000000000000001))
(assert (= var70356 (bvadd var70355 temp260_34)))
(assert (= temp260_35 #xffffffffffffffff))
(assert (= var923835 temp260_35))
(assert (= var70396 var923835))
(assert (= temp260_36 #x0000000000000001))
(assert (= var70452 temp260_36))
(assert (= temp260_37 #x0000000000000001))
(assert (= var70476 temp260_37))
(assert (= temp260_38 #x0000000000000000))
(assert (= var70553
   (ite (= ARGNAME_indices_NAMEEND_NUMELEMENT temp260_38)
        #x0000000000000001
        #x0000000000000000)))
(model-add temp260_1 () (_ BitVec 64) #x0000000000000000)
(model-add var136368 () (_ BitVec 64) #x0000000000000001)
(model-add var136362 () (_ BitVec 64) #x0000000000000001)
(model-add temp260_2 () (_ BitVec 64) #x0000000000000001)
(model-add var70098 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_params_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x7fffffffffffffff))
                #x0000000000000000
                (bvadd #x0000000000000000 #x0000000000000001)))








