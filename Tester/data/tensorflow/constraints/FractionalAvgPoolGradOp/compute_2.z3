(declare-fun temp1_1 () (_ BitVec 64))
(declare-fun temp1_2 () (_ BitVec 64))
(declare-fun var66450 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun extend_109390 () (_ BitVec 64))
(declare-fun temp1_3 () (_ BitVec 64))
(declare-fun ARGNAME_orig_input_tensor_shape_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var66456 () (_ BitVec 64))
(declare-fun temp1_4 () (_ BitVec 64))
(declare-fun temp1_5 () (_ BitVec 64))
(declare-fun ARGNAME_out_backprop_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1_6 () (_ BitVec 64))
(declare-fun temp1_7 () (_ BitVec 64))
(declare-fun temp1_8 () (_ BitVec 64))
(declare-fun temp1_9 () (_ BitVec 64))
(declare-fun temp1_10 () (_ BitVec 64))
(declare-fun temp1_11 () (_ BitVec 64))
(declare-fun temp1_12 () (_ BitVec 64))
(declare-fun temp1_13 () (_ BitVec 64))
(declare-fun temp1_14 () (_ BitVec 64))
(declare-fun temp1_15 () (_ BitVec 64))
(declare-fun temp1_16 () (_ BitVec 64))
(declare-fun temp1_17 () (_ BitVec 64))
(declare-fun temp1_18 () (_ BitVec 64))
(declare-fun var66488 () (_ BitVec 64))
(declare-fun temp1_19 () (_ BitVec 64))
(declare-fun temp1_20 () (_ BitVec 64))
(declare-fun var66491 () (_ BitVec 64))
(declare-fun temp1_21 () (_ BitVec 64))
(declare-fun temp1_22 () (_ BitVec 64))
(declare-fun var66492 () (_ BitVec 64))
(declare-fun temp1_23 () (_ BitVec 64))
(declare-fun temp1_24 () (_ BitVec 64))
(declare-fun var66493 () (_ BitVec 64))
(declare-fun ARGNAME_row_pooling_sequence_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var66495 () (_ BitVec 64))
(declare-fun temp1_25 () (_ BitVec 64))
(declare-fun ARGNAME_col_pooling_sequence_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var66540 () (_ BitVec 64))
(declare-fun temp1_26 () (_ BitVec 64))
(declare-fun temp1_27 () (_ BitVec 64))
(declare-fun var133110 () (_ BitVec 64))
(declare-fun temp1_28 () (_ BitVec 64))
(declare-fun var198646 () (_ BitVec 64))
(declare-fun temp1_29 () (_ BitVec 64))
(declare-fun var264182 () (_ BitVec 64))
(declare-fun temp1_30 () (_ BitVec 64))
(declare-fun var329718 () (_ BitVec 64))
(declare-fun temp1_31 () (_ BitVec 64))
(declare-fun var66714 () (_ BitVec 64))
(declare-fun var395254 () (_ BitVec 64))
(declare-fun temp1_32 () (_ BitVec 64))
(declare-fun var66715 () (_ BitVec 64))
(declare-fun temp1_33 () (_ BitVec 64))
(declare-fun var66721 () (_ BitVec 64))
(declare-fun temp1_36 () (_ BitVec 64))
(declare-fun temp1_35 () (_ BitVec 64))
(declare-fun temp1_37 () (_ BitVec 64))
(declare-fun var460827 () (_ BitVec 64))
(declare-fun var66737 () (_ BitVec 64))
(declare-fun temp1_38 () (_ BitVec 64))
(declare-fun var985460 () (_ BitVec 64))
(declare-fun temp1_39 () (_ BitVec 64))
(declare-fun var985461 () (_ BitVec 64))
(declare-fun temp1_40 () (_ BitVec 64))
(declare-fun temp1_41 () (_ BitVec 64))
(declare-fun var1050996 () (_ BitVec 64))
(declare-fun temp1_42 () (_ BitVec 64))
(declare-fun var1050997 () (_ BitVec 64))
(declare-fun temp1_43 () (_ BitVec 64))
(declare-fun temp1_44 () (_ BitVec 64))
(declare-fun var2099572 () (_ BitVec 64))
(declare-fun temp1_45 () (_ BitVec 64))
(declare-fun var2099573 () (_ BitVec 64))
(declare-fun temp1_46 () (_ BitVec 64))
(declare-fun temp1_47 () (_ BitVec 64))
(declare-fun var2165108 () (_ BitVec 64))
(declare-fun temp1_48 () (_ BitVec 64))
(declare-fun var2165109 () (_ BitVec 64))
(declare-fun temp1_49 () (_ BitVec 64))
(declare-fun var66834 () (_ BitVec 64))
(declare-fun var66835 () (_ BitVec 64))
(declare-fun var2230418 () (_ BitVec 64))
(declare-fun var2230419 () (_ BitVec 64))
(declare-fun var2361778 () (_ BitVec 64))
(declare-fun var2361779 () (_ BitVec 64))
(declare-fun var2558298 () (_ BitVec 64))
(declare-fun var2623834 () (_ BitVec 64))
(declare-fun var2361791 () (_ BitVec 64))
(declare-fun temp1_50 () (_ BitVec 64))
(declare-fun var2361792 () (_ BitVec 64))
(declare-fun temp1_51 () (_ BitVec 64))
(declare-fun var66851 () (_ BitVec 64))
(declare-fun temp1_52 () (_ BitVec 64))
(declare-fun temp1_53 () (_ BitVec 64))
(declare-fun var66858 () (_ BitVec 64))
(declare-fun temp1_54 () (_ BitVec 64))
(declare-fun var66866 () (_ BitVec 64))
(declare-fun var66867 () (_ BitVec 64))
(declare-fun temp1_55 () (_ BitVec 64))
(declare-fun var66911 () (_ BitVec 64))
(declare-fun var66913 () (_ BitVec 64))
(declare-fun var3147766 () (_ BitVec 64))
(declare-fun temp1_57 () (_ BitVec 64))
(declare-fun var66912 () (_ BitVec 64))
(declare-fun var3213302 () (_ BitVec 64))
(declare-fun temp1_58 () (_ BitVec 64))
(declare-fun ARGNAME_overlapping_NAMEEND () (_ BitVec 64))
(declare-fun var66921 () (_ BitVec 64))
(declare-fun var66923 () (_ BitVec 64))
(declare-fun var66935 () (_ BitVec 64))
(declare-fun var66936 () (_ BitVec 64))
(declare-fun temp1_59 () (_ BitVec 64))
(declare-fun var66975 () (_ BitVec 64))
(declare-fun var66977 () (_ BitVec 64))
(declare-fun temp1_61 () (_ BitVec 64))
(declare-fun var67084 () (_ BitVec 64))
(assert (= temp1_1 #x0000000000000001))
(assert (= var66450
   (ite (= extend_109390 temp1_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_2 #x0000000000000001))
(assert (= var66450 temp1_2))
(assert (= temp1_3 #x0000000000000004))
(assert (= var66456
   (ite (= ARGNAME_orig_input_tensor_shape_NAMEEND_LEN temp1_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_4 #x0000000000000001))
(assert (= var66456 temp1_4))
(assert (= temp1_5 #x0000000000000000))
(assert (= temp1_6 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp1_5)))
(assert (= temp1_7 #x0000000000000001))
(assert (= temp1_8 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp1_7)))
(assert (= temp1_9 #x0000000000000002))
(assert (= temp1_10 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp1_9)))
(assert (= temp1_11 #x0000000000000003))
(assert (= temp1_12 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp1_11)))
(assert (= temp1_13 #x0000000000000004))
(assert (= temp1_14 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp1_13)))
(assert (= temp1_15 #x0000000000000005))
(assert (= temp1_16 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp1_15)))
(assert (= temp1_17 #x0000000000000000))
(assert (= temp1_18 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp1_17)))
(assert (= var66488 temp1_18))
(assert (= temp1_19 #x0000000000000001))
(assert (= temp1_20 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp1_19)))
(assert (= var66491 temp1_20))
(assert (= temp1_21 #x0000000000000002))
(assert (= temp1_22 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp1_21)))
(assert (= var66492 temp1_22))
(assert (= temp1_23 #x0000000000000003))
(assert (= temp1_24 (select ARGNAME_out_backprop_NAMEEND_DIMSIZE temp1_23)))
(assert (= var66493 temp1_24))
(assert (= var66495
   (ite (bvsgt ARGNAME_row_pooling_sequence_NAMEEND_NUMELEMENT var66491)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_25 #x0000000000000001))
(assert (= var66495 temp1_25))
(assert (= var66540
   (ite (bvsgt ARGNAME_col_pooling_sequence_NAMEEND_NUMELEMENT var66492)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_26 #x0000000000000001))
(assert (= var66540 temp1_26))
(assert (= temp1_27 #x0000000000000000))
(assert (= var133110 temp1_27))
(assert (= temp1_28 #x0000000000000001))
(assert (= var198646 temp1_28))
(assert (= temp1_29 #x0000000000000002))
(assert (= var264182 temp1_29))
(assert (= temp1_30 #x0000000000000003))
(assert (= var329718 temp1_30))
(assert (= temp1_31 #x0000000000000000))
(assert (= var66714 temp1_31))
(assert (= var395254 var66714))
(assert (= temp1_32 #x0000000000000001))
(assert (= var66715 (bvadd var66714 temp1_32)))
(assert (= temp1_33 #x0000000000000004))
(assert (= var66721 (ite (= var66715 temp1_33) #x0000000000000001 #x0000000000000000)))
(assert (= temp1_36 #x0000000000000000))
(assert (= temp1_35 temp1_36))
(assert (= temp1_37 #x0000000000000002))
(assert (= var460827 temp1_37))
(assert (= var66737 var460827))
(assert (= temp1_38 #x0000000000000000))
(assert (= var985460 temp1_38))
(assert (= temp1_39 #x0000000000000000))
(assert (= var985461 (ite (= var985460 temp1_39) #x0000000000000001 #x0000000000000000)))
(assert (= temp1_40 #x0000000000000001))
(assert (= var985461 temp1_40))
(assert (= temp1_41 #x0000000000000000))
(assert (= var1050996 temp1_41))
(assert (= temp1_42 #x0000000000000000))
(assert (= var1050997
   (ite (= var1050996 temp1_42) #x0000000000000001 #x0000000000000000)))
(assert (= temp1_43 #x0000000000000001))
(assert (= var1050997 temp1_43))
(assert (= temp1_44 #x0000000000000000))
(assert (= var2099572 temp1_44))
(assert (= temp1_45 #x0000000000000000))
(assert (= var2099573
   (ite (= var2099572 temp1_45) #x0000000000000001 #x0000000000000000)))
(assert (= temp1_46 #x0000000000000001))
(assert (= var2099573 temp1_46))
(assert (= temp1_47 #x0000000000000000))
(assert (= var2165108 temp1_47))
(assert (= temp1_48 #x0000000000000000))
(assert (= var2165109
   (ite (= var2165108 temp1_48) #x0000000000000001 #x0000000000000000)))
(assert (= temp1_49 #x0000000000000001))
(assert (= var2165109 temp1_49))
(assert (= var66834 (bvmul var66491 var66488)))
(assert (= var66835 (bvmul var66834 var66492)))
(assert (= var2230418 var66493))
(assert (= var2230419 var66835))
(assert (= var2361778 var2230418))
(assert (= var2361779 var2230419))
(assert (= var2558298 var2361778))
(assert (= var2623834 var2361779))
(assert (= var2361791 (bvor var2361779 var2361778)))
(assert (= temp1_50 #xffffffffffffffff))
(assert (= var2361792
   (ite (bvsgt var2361791 temp1_50) #x0000000000000001 #x0000000000000000)))
(assert (= temp1_51 #x0000000000000000))
(assert (= var66851
   (ite (bvsgt var66488 temp1_51) #x0000000000000001 #x0000000000000000)))
(assert (= temp1_52 #x0000000000000001))
(assert (= var66851 temp1_52))
(assert (= temp1_53 #x0000000000000000))
(assert (= var66858
   (ite (bvsgt var66493 temp1_53) #x0000000000000001 #x0000000000000000)))
(assert (= temp1_54 #x0000000000000000))
(assert (= var66866 temp1_54))
(assert (= var66867 (bvmul var66866 var66491)))
(assert (= temp1_55 #x0000000000000000))
(assert (= var66911 temp1_55))
(assert (= var66913
   (ite (bvslt var66911 var66491) #x0000000000000001 #x0000000000000000)))
(assert (= var3147766 var66911))
(assert (= temp1_57 #x0000000000000001))
(assert (= var66912 (bvadd var66911 temp1_57)))
(assert (= var3213302 var66912))
(assert (= temp1_58 #x00000000000000ff))
(assert (= var66921 (bvadd ARGNAME_overlapping_NAMEEND temp1_58)))
(assert (= var66923 var66921))
(assert (= var66935 (bvadd var66911 var66867)))
(assert (= var66936 (bvmul var66935 var66492)))
(assert (= temp1_59 #x0000000000000000))
(assert (= var66975 temp1_59))
(assert (= var66977
   (ite (bvslt var66975 var66492) #x0000000000000001 #x0000000000000000)))
(assert (= temp1_61 #x000000000000001d))
(assert (= var67084 temp1_61))
(model-add temp1_1 () (_ BitVec 64) #x0000000000000001)
(model-add temp1_2 () (_ BitVec 64) #x0000000000000001)
(model-add var66450 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add extend_109390
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))

















