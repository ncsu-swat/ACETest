(declare-fun temp4068_1 () (_ BitVec 64))
(declare-fun temp4068_2 () (_ BitVec 64))
(declare-fun var76353 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_ksize_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp4068_3 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var76383 () (_ BitVec 64))
(declare-fun temp4068_4 () (_ BitVec 64))
(declare-fun temp4068_5 () (_ BitVec 64))
(declare-fun ARGNAME_ksize_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp4068_6 () (_ BitVec 64))
(declare-fun temp4068_7 () (_ BitVec 64))
(declare-fun temp4068_8 () (_ BitVec 64))
(declare-fun temp4068_9 () (_ BitVec 64))
(declare-fun temp4068_10 () (_ BitVec 64))
(declare-fun temp4068_11 () (_ BitVec 64))
(declare-fun temp4068_12 () (_ BitVec 64))
(declare-fun temp4068_13 () (_ BitVec 64))
(declare-fun temp4068_14 () (_ BitVec 64))
(declare-fun temp4068_15 () (_ BitVec 64))
(declare-fun temp4068_16 () (_ BitVec 64))
(declare-fun temp4068_17 () (_ BitVec 64))
(declare-fun temp4068_19 () (_ BitVec 64))
(declare-fun temp4068_18 () (_ BitVec 64))
(declare-fun temp4068_20 () (_ BitVec 64))
(declare-fun var76413 () (_ BitVec 64))
(declare-fun temp4068_21 () (_ BitVec 64))
(declare-fun temp4068_22 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp4068_23 () (_ BitVec 64))
(declare-fun temp4068_24 () (_ BitVec 64))
(declare-fun temp4068_25 () (_ BitVec 64))
(declare-fun temp4068_26 () (_ BitVec 64))
(declare-fun temp4068_27 () (_ BitVec 64))
(declare-fun temp4068_28 () (_ BitVec 64))
(declare-fun temp4068_29 () (_ BitVec 64))
(declare-fun temp4068_30 () (_ BitVec 64))
(declare-fun temp4068_31 () (_ BitVec 64))
(declare-fun temp4068_32 () (_ BitVec 64))
(declare-fun temp4068_33 () (_ BitVec 64))
(declare-fun temp4068_34 () (_ BitVec 64))
(declare-fun temp4068_36 () (_ BitVec 64))
(declare-fun temp4068_35 () (_ BitVec 64))
(declare-fun temp4068_37 () (_ BitVec 64))
(declare-fun var76417 () (_ BitVec 64))
(declare-fun temp4068_38 () (_ BitVec 64))
(declare-fun temp4068_40 () (_ BitVec 64))
(declare-fun temp4068_39 () (_ BitVec 64))
(declare-fun temp4068_42 () (_ BitVec 64))
(declare-fun temp4068_41 () (_ BitVec 64))
(declare-fun temp4068_44 () (_ BitVec 64))
(declare-fun temp4068_43 () (_ BitVec 64))
(declare-fun temp4068_45 () (_ BitVec 64))
(declare-fun var463968 () (_ BitVec 64))
(declare-fun temp4068_46 () (_ BitVec 64))
(declare-fun temp4068_47 () (_ BitVec 64))
(declare-fun var458765 () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp4068_48 () (_ BitVec 64))
(declare-fun temp4068_49 () (_ BitVec 64))
(declare-fun temp4068_50 () (_ BitVec 64))
(declare-fun temp4068_51 () (_ BitVec 64))
(declare-fun temp4068_52 () (_ BitVec 64))
(declare-fun temp4068_53 () (_ BitVec 64))
(declare-fun temp4068_54 () (_ BitVec 64))
(declare-fun temp4068_55 () (_ BitVec 64))
(declare-fun temp4068_56 () (_ BitVec 64))
(declare-fun temp4068_57 () (_ BitVec 64))
(declare-fun temp4068_58 () (_ BitVec 64))
(declare-fun temp4068_59 () (_ BitVec 64))
(declare-fun temp4068_60 () (_ BitVec 64))
(declare-fun temp4068_61 () (_ BitVec 64))
(declare-fun temp4068_62 () (_ BitVec 64))
(declare-fun temp4068_63 () (_ BitVec 64))
(declare-fun temp4068_64 () (_ BitVec 64))
(declare-fun temp4068_65 () (_ BitVec 64))
(declare-fun temp4068_66 () (_ BitVec 64))
(declare-fun temp4068_67 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var463989 () (_ BitVec 64))
(declare-fun var463963 () (_ BitVec 64))
(declare-fun var406262 () (_ BitVec 64))
(declare-fun temp4068_68 () (_ BitVec 64))
(declare-fun var406263 () (_ BitVec 64))
(declare-fun temp4068_69 () (_ BitVec 64))
(declare-fun temp4068_70 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp4068_71 () (_ BitVec 64))
(declare-fun temp4068_72 () (_ BitVec 64))
(declare-fun temp4068_73 () (_ BitVec 64))
(declare-fun temp4068_74 () (_ BitVec 64))
(declare-fun temp4068_75 () (_ BitVec 64))
(declare-fun temp4068_76 () (_ BitVec 64))
(declare-fun temp4068_77 () (_ BitVec 64))
(declare-fun temp4068_78 () (_ BitVec 64))
(declare-fun temp4068_79 () (_ BitVec 64))
(declare-fun temp4068_80 () (_ BitVec 64))
(declare-fun temp4068_81 () (_ BitVec 64))
(declare-fun temp4068_85 () (_ BitVec 64))
(declare-fun temp4068_86 () (_ BitVec 64))
(declare-fun temp4068_87 () (_ BitVec 64))
(declare-fun temp4068_88 () (_ BitVec 64))
(declare-fun temp4068_83 () (_ BitVec 64))
(declare-fun temp4068_89 () (_ BitVec 64))
(declare-fun temp4068_90 () (_ BitVec 64))
(declare-fun temp4068_91 () (_ BitVec 64))
(declare-fun temp4068_84 () (_ BitVec 64))
(declare-fun temp4068_93 () (_ BitVec 64))
(declare-fun temp4068_94 () (_ BitVec 64))
(declare-fun temp4068_95 () (_ BitVec 64))
(declare-fun temp4068_96 () (_ BitVec 64))
(declare-fun temp4068_97 () (_ BitVec 64))
(declare-fun temp4068_82 () (_ BitVec 64))
(declare-fun temp4068_98 () (_ BitVec 64))
(declare-fun var406291 () (_ BitVec 64))
(declare-fun temp4068_99 () (_ BitVec 64))
(declare-fun var406293 () (_ BitVec 64))
(declare-fun temp4068_100 () (_ BitVec 64))
(declare-fun temp4068_101 () (_ BitVec 64))
(declare-fun var406294 () (_ BitVec 64))
(declare-fun var406295 () (_ BitVec 64))
(declare-fun var406296 () (_ BitVec 64))
(declare-fun temp4068_105 () (_ BitVec 64))
(declare-fun temp4068_106 () (_ BitVec 64))
(declare-fun temp4068_107 () (_ BitVec 64))
(declare-fun temp4068_108 () (_ BitVec 64))
(declare-fun temp4068_103 () (_ BitVec 64))
(declare-fun temp4068_109 () (_ BitVec 64))
(declare-fun temp4068_110 () (_ BitVec 64))
(declare-fun temp4068_111 () (_ BitVec 64))
(declare-fun temp4068_104 () (_ BitVec 64))
(declare-fun temp4068_113 () (_ BitVec 64))
(declare-fun temp4068_114 () (_ BitVec 64))
(declare-fun temp4068_115 () (_ BitVec 64))
(declare-fun temp4068_116 () (_ BitVec 64))
(declare-fun temp4068_117 () (_ BitVec 64))
(declare-fun temp4068_118 () (_ BitVec 64))
(declare-fun temp4068_102 () (_ BitVec 64))
(declare-fun temp4068_119 () (_ BitVec 64))
(declare-fun var406299 () (_ BitVec 64))
(declare-fun var406301 () (_ BitVec 64))
(declare-fun temp4068_123 () (_ BitVec 64))
(declare-fun temp4068_124 () (_ BitVec 64))
(declare-fun temp4068_125 () (_ BitVec 64))
(declare-fun temp4068_126 () (_ BitVec 64))
(declare-fun temp4068_121 () (_ BitVec 64))
(declare-fun temp4068_127 () (_ BitVec 64))
(declare-fun temp4068_128 () (_ BitVec 64))
(declare-fun temp4068_129 () (_ BitVec 64))
(declare-fun temp4068_122 () (_ BitVec 64))
(declare-fun temp4068_131 () (_ BitVec 64))
(declare-fun temp4068_132 () (_ BitVec 64))
(declare-fun temp4068_133 () (_ BitVec 64))
(declare-fun temp4068_134 () (_ BitVec 64))
(declare-fun temp4068_135 () (_ BitVec 64))
(declare-fun temp4068_136 () (_ BitVec 64))
(declare-fun temp4068_120 () (_ BitVec 64))
(declare-fun temp4068_137 () (_ BitVec 64))
(declare-fun var406304 () (_ BitVec 64))
(declare-fun var406306 () (_ BitVec 64))
(declare-fun temp4068_141 () (_ BitVec 64))
(declare-fun temp4068_142 () (_ BitVec 64))
(declare-fun temp4068_143 () (_ BitVec 64))
(declare-fun temp4068_144 () (_ BitVec 64))
(declare-fun temp4068_139 () (_ BitVec 64))
(declare-fun temp4068_145 () (_ BitVec 64))
(declare-fun temp4068_146 () (_ BitVec 64))
(declare-fun temp4068_147 () (_ BitVec 64))
(declare-fun temp4068_140 () (_ BitVec 64))
(declare-fun temp4068_149 () (_ BitVec 64))
(declare-fun temp4068_150 () (_ BitVec 64))
(declare-fun temp4068_151 () (_ BitVec 64))
(declare-fun temp4068_152 () (_ BitVec 64))
(declare-fun temp4068_138 () (_ BitVec 64))
(declare-fun temp4068_153 () (_ BitVec 64))
(declare-fun var406309 () (_ BitVec 64))
(declare-fun var406311 () (_ BitVec 64))
(declare-fun temp4068_157 () (_ BitVec 64))
(declare-fun temp4068_158 () (_ BitVec 64))
(declare-fun temp4068_159 () (_ BitVec 64))
(declare-fun temp4068_160 () (_ BitVec 64))
(declare-fun temp4068_155 () (_ BitVec 64))
(declare-fun temp4068_161 () (_ BitVec 64))
(declare-fun temp4068_162 () (_ BitVec 64))
(declare-fun temp4068_163 () (_ BitVec 64))
(declare-fun temp4068_156 () (_ BitVec 64))
(declare-fun temp4068_165 () (_ BitVec 64))
(declare-fun temp4068_166 () (_ BitVec 64))
(declare-fun temp4068_167 () (_ BitVec 64))
(declare-fun temp4068_168 () (_ BitVec 64))
(declare-fun temp4068_169 () (_ BitVec 64))
(declare-fun temp4068_170 () (_ BitVec 64))
(declare-fun temp4068_154 () (_ BitVec 64))
(declare-fun temp4068_171 () (_ BitVec 64))
(declare-fun var406314 () (_ BitVec 64))
(declare-fun temp4068_175 () (_ BitVec 64))
(declare-fun temp4068_176 () (_ BitVec 64))
(declare-fun temp4068_177 () (_ BitVec 64))
(declare-fun temp4068_178 () (_ BitVec 64))
(declare-fun temp4068_173 () (_ BitVec 64))
(declare-fun temp4068_179 () (_ BitVec 64))
(declare-fun temp4068_180 () (_ BitVec 64))
(declare-fun temp4068_181 () (_ BitVec 64))
(declare-fun temp4068_174 () (_ BitVec 64))
(declare-fun temp4068_183 () (_ BitVec 64))
(declare-fun temp4068_184 () (_ BitVec 64))
(declare-fun temp4068_185 () (_ BitVec 64))
(declare-fun temp4068_186 () (_ BitVec 64))
(declare-fun temp4068_187 () (_ BitVec 64))
(declare-fun temp4068_188 () (_ BitVec 64))
(declare-fun temp4068_172 () (_ BitVec 64))
(declare-fun temp4068_189 () (_ BitVec 64))
(declare-fun var406319 () (_ BitVec 64))
(declare-fun temp4068_193 () (_ BitVec 64))
(declare-fun temp4068_194 () (_ BitVec 64))
(declare-fun temp4068_195 () (_ BitVec 64))
(declare-fun temp4068_196 () (_ BitVec 64))
(declare-fun temp4068_191 () (_ BitVec 64))
(declare-fun temp4068_197 () (_ BitVec 64))
(declare-fun temp4068_198 () (_ BitVec 64))
(declare-fun temp4068_199 () (_ BitVec 64))
(declare-fun temp4068_192 () (_ BitVec 64))
(declare-fun temp4068_201 () (_ BitVec 64))
(declare-fun temp4068_202 () (_ BitVec 64))
(declare-fun temp4068_203 () (_ BitVec 64))
(declare-fun temp4068_204 () (_ BitVec 64))
(declare-fun temp4068_205 () (_ BitVec 64))
(declare-fun temp4068_190 () (_ BitVec 64))
(declare-fun temp4068_206 () (_ BitVec 64))
(declare-fun var406322 () (_ BitVec 64))
(declare-fun temp4068_210 () (_ BitVec 64))
(declare-fun temp4068_211 () (_ BitVec 64))
(declare-fun temp4068_212 () (_ BitVec 64))
(declare-fun temp4068_213 () (_ BitVec 64))
(declare-fun temp4068_208 () (_ BitVec 64))
(declare-fun temp4068_214 () (_ BitVec 64))
(declare-fun temp4068_215 () (_ BitVec 64))
(declare-fun temp4068_216 () (_ BitVec 64))
(declare-fun temp4068_209 () (_ BitVec 64))
(declare-fun temp4068_218 () (_ BitVec 64))
(declare-fun temp4068_219 () (_ BitVec 64))
(declare-fun temp4068_220 () (_ BitVec 64))
(declare-fun temp4068_221 () (_ BitVec 64))
(declare-fun temp4068_222 () (_ BitVec 64))
(declare-fun temp4068_223 () (_ BitVec 64))
(declare-fun temp4068_207 () (_ BitVec 64))
(declare-fun temp4068_224 () (_ BitVec 64))
(declare-fun var406325 () (_ BitVec 64))
(declare-fun temp4068_228 () (_ BitVec 64))
(declare-fun temp4068_229 () (_ BitVec 64))
(declare-fun temp4068_230 () (_ BitVec 64))
(declare-fun temp4068_231 () (_ BitVec 64))
(declare-fun temp4068_226 () (_ BitVec 64))
(declare-fun temp4068_232 () (_ BitVec 64))
(declare-fun temp4068_233 () (_ BitVec 64))
(declare-fun temp4068_234 () (_ BitVec 64))
(declare-fun temp4068_227 () (_ BitVec 64))
(declare-fun temp4068_236 () (_ BitVec 64))
(declare-fun temp4068_237 () (_ BitVec 64))
(declare-fun temp4068_238 () (_ BitVec 64))
(declare-fun temp4068_239 () (_ BitVec 64))
(declare-fun temp4068_240 () (_ BitVec 64))
(declare-fun temp4068_241 () (_ BitVec 64))
(declare-fun temp4068_225 () (_ BitVec 64))
(declare-fun temp4068_242 () (_ BitVec 64))
(declare-fun var406328 () (_ BitVec 64))
(declare-fun temp4068_246 () (_ BitVec 64))
(declare-fun temp4068_247 () (_ BitVec 64))
(declare-fun temp4068_248 () (_ BitVec 64))
(declare-fun temp4068_249 () (_ BitVec 64))
(declare-fun temp4068_244 () (_ BitVec 64))
(declare-fun temp4068_250 () (_ BitVec 64))
(declare-fun temp4068_251 () (_ BitVec 64))
(declare-fun temp4068_252 () (_ BitVec 64))
(declare-fun temp4068_245 () (_ BitVec 64))
(declare-fun temp4068_254 () (_ BitVec 64))
(declare-fun temp4068_255 () (_ BitVec 64))
(declare-fun temp4068_256 () (_ BitVec 64))
(declare-fun temp4068_257 () (_ BitVec 64))
(declare-fun temp4068_258 () (_ BitVec 64))
(declare-fun temp4068_243 () (_ BitVec 64))
(declare-fun temp4068_259 () (_ BitVec 64))
(declare-fun var406331 () (_ BitVec 64))
(declare-fun var406334 () (_ BitVec 64))
(declare-fun temp4068_260 () (_ BitVec 64))
(declare-fun var406335 () (_ BitVec 64))
(declare-fun temp4068_261 () (_ BitVec 64))
(declare-fun var406337 () (_ BitVec 64))
(declare-fun temp4068_262 () (_ BitVec 64))
(declare-fun var406338 () (_ BitVec 64))
(declare-fun temp4068_263 () (_ BitVec 64))
(declare-fun var406340 () (_ BitVec 64))
(declare-fun temp4068_264 () (_ BitVec 64))
(declare-fun var406341 () (_ BitVec 64))
(declare-fun temp4068_265 () (_ BitVec 64))
(declare-fun temp4068_266 () (_ BitVec 64))
(declare-fun var406360 () (_ BitVec 64))
(declare-fun temp4068_267 () (_ BitVec 64))
(declare-fun temp4068_268 () (_ BitVec 64))
(declare-fun var536134 () (_ BitVec 64))
(declare-fun temp4068_269 () (_ BitVec 64))
(declare-fun var536136 () (_ BitVec 64))
(declare-fun temp4068_270 () (_ BitVec 64))
(declare-fun var536142 () (_ BitVec 64))
(declare-fun temp4068_271 () (_ BitVec 64))
(declare-fun temp4068_272 () (_ BitVec 64))
(declare-fun var536146 () (_ BitVec 64))
(declare-fun temp4068_273 () (_ BitVec 64))
(declare-fun var536181 () (_ BitVec 64))
(declare-fun temp4068_274 () (_ BitVec 64))
(declare-fun var536182 () (_ BitVec 64))
(declare-fun temp4068_276 () (_ BitVec 64))
(declare-fun var536189 () (_ BitVec 64))
(declare-fun temp4068_277 () (_ BitVec 64))
(declare-fun var536192 () (_ BitVec 64))
(declare-fun temp4068_278 () (_ BitVec 64))
(declare-fun var601939 () (_ BitVec 64))
(declare-fun temp4068_279 () (_ BitVec 64))
(declare-fun temp4068_280 () (_ BitVec 64))
(declare-fun temp4068_281 () (_ BitVec 64))
(declare-fun temp4068_282 () (_ BitVec 64))
(declare-fun temp4068_283 () (_ BitVec 64))
(declare-fun var601963 () (_ BitVec 64))
(declare-fun var601938 () (_ BitVec 64))
(declare-fun var536194 () (_ BitVec 64))
(declare-fun var667503 () (_ BitVec 64))
(declare-fun temp4068_284 () (_ BitVec 64))
(declare-fun temp4068_285 () (_ BitVec 64))
(declare-fun temp4068_286 () (_ BitVec 64))
(declare-fun var667526 () (_ BitVec 64))
(declare-fun var667502 () (_ BitVec 64))
(declare-fun var536197 () (_ BitVec 64))
(declare-fun temp4068_287 () (_ BitVec 64))
(declare-fun var536200 () (_ BitVec 64))
(declare-fun var536201 () (_ BitVec 64))
(declare-fun temp4068_288 () (_ BitVec 64))
(declare-fun var536208 () (_ BitVec 64))
(declare-fun var536209 () (_ BitVec 64))
(declare-fun temp4068_289 () (_ BitVec 64))
(declare-fun var536214 () (_ BitVec 64))
(declare-fun var536215 () (_ BitVec 64))
(declare-fun temp4068_290 () (_ BitVec 64))
(declare-fun var536220 () (_ BitVec 64))
(declare-fun var536221 () (_ BitVec 64))
(declare-fun temp4068_291 () (_ BitVec 64))
(declare-fun var536229 () (_ BitVec 64))
(declare-fun temp4068_292 () (_ BitVec 64))
(declare-fun var536230 () (_ BitVec 64))
(declare-fun temp4068_293 () (_ BitVec 64))
(declare-fun temp4068_294 () (_ BitVec 64))
(declare-fun var734482 () (_ BitVec 64))
(declare-fun temp4068_295 () (_ BitVec 64))
(declare-fun var800018 () (_ BitVec 64))
(declare-fun var406390 () (_ BitVec 64))
(declare-fun var406391 () (_ BitVec 64))
(declare-fun var406392 () (_ BitVec 64))
(declare-fun var406393 () (_ BitVec 64))
(declare-fun var864733 () (_ BitVec 64))
(declare-fun var864734 () (_ BitVec 64))
(declare-fun temp2978_279 () (_ BitVec 64))
(declare-fun var864739 () (_ BitVec 64))
(declare-fun temp4068_296 () (_ BitVec 64))
(declare-fun temp2978_277 () (_ BitVec 64))
(declare-fun var864748 () (_ BitVec 64))
(declare-fun temp4068_297 () (_ BitVec 64))
(declare-fun temp1290_294 () (_ BitVec 64))
(declare-fun var864754 () (_ BitVec 64))
(declare-fun temp4068_298 () (_ BitVec 64))
(declare-fun temp1290_292 () (_ BitVec 64))
(declare-fun var864760 () (_ BitVec 64))
(declare-fun temp4068_299 () (_ BitVec 64))
(declare-fun var406416 () (_ BitVec 64))
(declare-fun temp4068_300 () (_ BitVec 64))
(declare-fun var406417 () (_ BitVec 64))
(declare-fun temp4068_301 () (_ BitVec 64))
(declare-fun temp4068_302 () (_ BitVec 64))
(declare-fun var406479 () (_ BitVec 64))
(declare-fun temp4068_303 () (_ BitVec 64))
(declare-fun var406499 () (_ BitVec 64))
(declare-fun var406500 () (_ BitVec 64))
(declare-fun temp4068_304 () (_ BitVec 64))
(declare-fun var406501 () (_ BitVec 64))
(declare-fun temp4068_305 () (_ BitVec 64))
(declare-fun var406521 () (_ BitVec 64))
(declare-fun var406522 () (_ BitVec 64))
(declare-fun temp4068_306 () (_ BitVec 64))
(declare-fun temp4068_308 () (_ BitVec 64))
(declare-fun temp4068_307 () (_ BitVec 64))
(declare-fun var406614 () (_ BitVec 64))
(declare-fun var406615 () (_ BitVec 64))
(declare-fun var406616 () (_ BitVec 64))
(declare-fun var1521207 () (_ BitVec 64))
(declare-fun temp4068_309 () (_ BitVec 64))
(declare-fun var1521208 () (_ BitVec 64))
(declare-fun temp4068_310 () (_ BitVec 64))
(declare-fun var1521231 () (_ BitVec 64))
(declare-fun var1521232 () (_ BitVec 64))
(declare-fun var1521236 () (_ BitVec 64))
(declare-fun var1521237 () (_ BitVec 64))
(declare-fun var1521241 () (_ BitVec 64))
(declare-fun var1521242 () (_ BitVec 64))
(declare-fun var1521246 () (_ BitVec 64))
(declare-fun var1521247 () (_ BitVec 64))
(declare-fun var76509 () (_ BitVec 64))
(declare-fun temp4068_311 () (_ BitVec 64))
(declare-fun var76510 () (_ BitVec 64))
(declare-fun temp4068_312 () (_ BitVec 64))
(declare-fun var76513 () (_ BitVec 64))
(declare-fun var76514 () (_ BitVec 64))
(declare-fun temp4068_313 () (_ BitVec 64))
(declare-fun var76515 () (_ BitVec 64))
(declare-fun temp4068_314 () (_ BitVec 64))
(declare-fun var76554 () (_ BitVec 64))
(declare-fun var76555 () (_ BitVec 64))
(declare-fun temp4068_315 () (_ BitVec 64))
(assert (or (= ARGNAME_padding_NAMEEND #x0000000000000001)
    (= ARGNAME_padding_NAMEEND #x0000000000000002)
    (= ARGNAME_padding_NAMEEND #x0000000000000003)))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp4068_1 #x0000000000000004))
(assert (= var76353
   (ite (= ARGNAME_ksize_NAMEEND_LEN temp4068_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp4068_2 #x0000000000000001))
(assert (= var76353 temp4068_2))
(assert (= temp4068_3 #x0000000000000004))
(assert (= var76383
   (ite (= ARGNAME_strides_NAMEEND_LEN temp4068_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp4068_4 #x0000000000000001))
(assert (= var76383 temp4068_4))
(assert (= temp4068_5 #x0000000000000000))
(assert (= temp4068_6 (select ARGNAME_ksize_NAMEEND_VAL temp4068_5)))
(assert (= temp4068_7 #x0000000000000001))
(assert (= temp4068_8 (select ARGNAME_ksize_NAMEEND_VAL temp4068_7)))
(assert (= temp4068_9 #x0000000000000002))
(assert (= temp4068_10 (select ARGNAME_ksize_NAMEEND_VAL temp4068_9)))
(assert (= temp4068_11 #x0000000000000003))
(assert (= temp4068_12 (select ARGNAME_ksize_NAMEEND_VAL temp4068_11)))
(assert (= temp4068_13 #x0000000000000004))
(assert (= temp4068_14 (select ARGNAME_ksize_NAMEEND_VAL temp4068_13)))
(assert (= temp4068_15 #x0000000000000005))
(assert (= temp4068_16 (select ARGNAME_ksize_NAMEEND_VAL temp4068_15)))
(assert (= temp4068_17 #x0000000000000000))
(assert (= temp4068_19 (select ARGNAME_ksize_NAMEEND_VAL temp4068_17)))
(assert (= temp4068_18 temp4068_19))
(assert (= temp4068_20 #x0000000000000001))
(assert (= var76413
   (ite (= temp4068_18 temp4068_20) #x0000000000000001 #x0000000000000000)))
(assert (= temp4068_21 #x0000000000000001))
(assert (= var76413 temp4068_21))
(assert (= temp4068_22 #x0000000000000000))
(assert (= temp4068_23 (select ARGNAME_strides_NAMEEND_VAL temp4068_22)))
(assert (= temp4068_24 #x0000000000000001))
(assert (= temp4068_25 (select ARGNAME_strides_NAMEEND_VAL temp4068_24)))
(assert (= temp4068_26 #x0000000000000002))
(assert (= temp4068_27 (select ARGNAME_strides_NAMEEND_VAL temp4068_26)))
(assert (= temp4068_28 #x0000000000000003))
(assert (= temp4068_29 (select ARGNAME_strides_NAMEEND_VAL temp4068_28)))
(assert (= temp4068_30 #x0000000000000004))
(assert (= temp4068_31 (select ARGNAME_strides_NAMEEND_VAL temp4068_30)))
(assert (= temp4068_32 #x0000000000000005))
(assert (= temp4068_33 (select ARGNAME_strides_NAMEEND_VAL temp4068_32)))
(assert (= temp4068_34 #x0000000000000000))
(assert (= temp4068_36 (select ARGNAME_strides_NAMEEND_VAL temp4068_34)))
(assert (= temp4068_35 temp4068_36))
(assert (= temp4068_37 #x0000000000000001))
(assert (= var76417
   (ite (= temp4068_35 temp4068_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp4068_38 #x0000000000000001))
(assert (= var76417 temp4068_38))
(assert (= temp4068_40 #x0000000000000000))
(assert (= temp4068_39 temp4068_40))
(assert (= temp4068_42 #x0000000000000000))
(assert (= temp4068_41 temp4068_42))
(assert (= temp4068_44 #x0000000000000000))
(assert (= temp4068_43 temp4068_44))
(assert (= temp4068_45 #x0000000000000006))
(assert (= var463968
   (ite (bvslt ARGNAME_data_format_NAMEEND_STRFMT temp4068_45)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp4068_46 #x0000000000000001))
(assert (= var463968 temp4068_46))
(assert (= temp4068_47 #x0000000000000000))
(assert (= temp4068_48 (select var458765 temp4068_47)))
(assert (= temp4068_49 #x0000000000000001))
(assert (= temp4068_50 (select var458765 temp4068_49)))
(assert (= temp4068_51 #x0000000000000002))
(assert (= temp4068_52 (select var458765 temp4068_51)))
(assert (= temp4068_53 #x0000000000000003))
(assert (= temp4068_54 (select var458765 temp4068_53)))
(assert (= temp4068_55 #x0000000000000004))
(assert (= temp4068_56 (select var458765 temp4068_55)))
(assert (= temp4068_57 #x0000000000000005))
(assert (= temp4068_58 (select var458765 temp4068_57)))
(assert (= temp4068_59 #xfffffffffffffffe))
(assert (= (select var458765 #x0000000000000000) temp4068_59))
(assert (= temp4068_60 #xfffffffffffffffe))
(assert (= (select var458765 #x0000000000000001) temp4068_60))
(assert (= temp4068_61 #xfffffffffffffffd))
(assert (= (select var458765 #x0000000000000002) temp4068_61))
(assert (= temp4068_62 #xfffffffffffffffd))
(assert (= (select var458765 #x0000000000000003) temp4068_62))
(assert (= temp4068_63 #xfffffffffffffffe))
(assert (= (select var458765 #x0000000000000004) temp4068_63))
(assert (= temp4068_64 #xfffffffffffffffe))
(assert (= (select var458765 #x0000000000000005) temp4068_64))
(assert (= temp4068_65 (select var458765 ARGNAME_data_format_NAMEEND_STRFMT)))
(assert (= temp4068_66 #x0000000000000000))
(assert (bvsge ARGNAME_data_format_NAMEEND_STRFMT temp4068_66))
(assert (= temp4068_67 #x0000000000000006))
(assert (bvslt ARGNAME_data_format_NAMEEND_STRFMT temp4068_67))
(assert (= var463989 (bvadd temp4068_65 ARGNAME_input_NAMEEND_DIM)))
(assert (= var463963 var463989))
(assert (= var406262 var463963))
(assert (= temp4068_68 #x0000000000000002))
(assert (= var406263
   (ite (= var406262 temp4068_68) #x0000000000000001 #x0000000000000000)))
(assert (= temp4068_69 #x0000000000000001))
(assert (= var406263 temp4068_69))
(assert (= temp4068_70 #x0000000000000000))
(assert (= temp4068_71 (select ARGNAME_input_NAMEEND_DIMSIZE temp4068_70)))
(assert (= temp4068_72 #x0000000000000001))
(assert (= temp4068_73 (select ARGNAME_input_NAMEEND_DIMSIZE temp4068_72)))
(assert (= temp4068_74 #x0000000000000002))
(assert (= temp4068_75 (select ARGNAME_input_NAMEEND_DIMSIZE temp4068_74)))
(assert (= temp4068_76 #x0000000000000003))
(assert (= temp4068_77 (select ARGNAME_input_NAMEEND_DIMSIZE temp4068_76)))
(assert (= temp4068_78 #x0000000000000004))
(assert (= temp4068_79 (select ARGNAME_input_NAMEEND_DIMSIZE temp4068_78)))
(assert (= temp4068_80 #x0000000000000005))
(assert (= temp4068_81 (select ARGNAME_input_NAMEEND_DIMSIZE temp4068_80)))
(assert (= temp4068_85 #x0000000000000002))
(assert (= temp4068_86 #x0000000000000003))
(assert (= temp4068_87 #x0000000000000002))
(assert (= temp4068_88 #x0000000000000003))
(assert (= temp4068_83
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_87)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_88))
        (bvsub ARGNAME_input_NAMEEND_DIM temp4068_86)
        (bvsub ARGNAME_input_NAMEEND_DIM temp4068_85))))
(assert (= temp4068_89 #x0000000000000002))
(assert (= temp4068_90 #x0000000000000003))
(assert (= temp4068_91 #x0000000000000003))
(assert (= temp4068_84 (ite (= temp4068_83 temp4068_91) temp4068_90 temp4068_89)))
(assert (= temp4068_93 #x0000000000000001))
(assert (= temp4068_94 #x0000000000000005))
(assert (= temp4068_95 #x0000000000000001))
(assert (= temp4068_96 #x0000000000000001))
(assert (= temp4068_97 #x0000000000000002))
(assert (= temp4068_82
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_96)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_97))
        temp4068_95
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_94)
             temp4068_84
             (bvadd temp4068_84 temp4068_93)))))
(assert (= temp4068_98 (select ARGNAME_input_NAMEEND_DIMSIZE temp4068_82)))
(assert (= var406291 temp4068_98))
(assert (= temp4068_99 #x0000000000000002))
(assert (= var406293
   (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_99)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp4068_100 #x0000000000000004))
(assert (= temp4068_101 #x0000000000000001))
(assert (= var406294 (ite (= var406293 #x0000000000000001) temp4068_100 temp4068_101)))
(assert (= var406295 (bvmul var406291 var406294)))
(assert (= var406296 var406295))
(assert (= temp4068_105 #x0000000000000002))
(assert (= temp4068_106 #x0000000000000003))
(assert (= temp4068_107 #x0000000000000002))
(assert (= temp4068_108 #x0000000000000003))
(assert (= temp4068_103
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_107)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_108))
        (bvsub ARGNAME_input_NAMEEND_DIM temp4068_106)
        (bvsub ARGNAME_input_NAMEEND_DIM temp4068_105))))
(assert (= temp4068_109 #x0000000000000002))
(assert (= temp4068_110 #x0000000000000003))
(assert (= temp4068_111 #x0000000000000003))
(assert (= temp4068_104 (ite (= temp4068_103 temp4068_111) temp4068_110 temp4068_109)))
(assert (= temp4068_113 #x0000000000000001))
(assert (= temp4068_114 #x0000000000000001))
(assert (= temp4068_115 #x0000000000000001))
(assert (= temp4068_116 #x0000000000000002))
(assert (= temp4068_117 #x0000000000000000))
(assert (= temp4068_118 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_117)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_118))
                temp4068_104
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_115)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_116))
                     (bvadd temp4068_104 temp4068_114)
                     (bvsub temp4068_104 temp4068_113)))))
  (= temp4068_102 a!1)))
(assert (= temp4068_119 (select ARGNAME_input_NAMEEND_DIMSIZE temp4068_102)))
(assert (= var406299 temp4068_119))
(assert (= var406301 var406299))
(assert (= temp4068_123 #x0000000000000002))
(assert (= temp4068_124 #x0000000000000003))
(assert (= temp4068_125 #x0000000000000002))
(assert (= temp4068_126 #x0000000000000003))
(assert (= temp4068_121
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_125)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_126))
        (bvsub ARGNAME_input_NAMEEND_DIM temp4068_124)
        (bvsub ARGNAME_input_NAMEEND_DIM temp4068_123))))
(assert (= temp4068_127 #x0000000000000002))
(assert (= temp4068_128 #x0000000000000003))
(assert (= temp4068_129 #x0000000000000003))
(assert (= temp4068_122 (ite (= temp4068_121 temp4068_129) temp4068_128 temp4068_127)))
(assert (= temp4068_131 #x0000000000000002))
(assert (= temp4068_132 #x0000000000000001))
(assert (= temp4068_133 #x0000000000000002))
(assert (= temp4068_134 #x0000000000000001))
(assert (= temp4068_135 #x0000000000000000))
(assert (= temp4068_136 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_135)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_136))
                (bvsub temp4068_122 temp4068_134)
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_132)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_133))
                     temp4068_122
                     (bvsub temp4068_122 temp4068_131)))))
  (= temp4068_120 a!1)))
(assert (= temp4068_137 (select ARGNAME_input_NAMEEND_DIMSIZE temp4068_120)))
(assert (= var406304 temp4068_137))
(assert (= var406306 var406304))
(assert (= temp4068_141 #x0000000000000002))
(assert (= temp4068_142 #x0000000000000003))
(assert (= temp4068_143 #x0000000000000002))
(assert (= temp4068_144 #x0000000000000003))
(assert (= temp4068_139
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_143)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_144))
        (bvsub ARGNAME_input_NAMEEND_DIM temp4068_142)
        (bvsub ARGNAME_input_NAMEEND_DIM temp4068_141))))
(assert (= temp4068_145 #x0000000000000002))
(assert (= temp4068_146 #x0000000000000003))
(assert (= temp4068_147 #x0000000000000003))
(assert (= temp4068_140 (ite (= temp4068_139 temp4068_147) temp4068_146 temp4068_145)))
(assert (= temp4068_149 #x0000000000000000))
(assert (= temp4068_150 #x0000000000000001))
(assert (= temp4068_151 #x0000000000000005))
(assert (= temp4068_152 #x0000000000000004))
(assert (= temp4068_138
   (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_152)
        temp4068_140
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_151)
             (bvadd temp4068_140 temp4068_150)
             temp4068_149))))
(assert (= temp4068_153 (select ARGNAME_input_NAMEEND_DIMSIZE temp4068_138)))
(assert (= var406309 temp4068_153))
(assert (= var406311 var406309))
(assert (= temp4068_157 #x0000000000000002))
(assert (= temp4068_158 #x0000000000000003))
(assert (= temp4068_159 #x0000000000000002))
(assert (= temp4068_160 #x0000000000000003))
(assert (= temp4068_155
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_159)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_160))
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp4068_158)
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp4068_157))))
(assert (= temp4068_161 #x0000000000000002))
(assert (= temp4068_162 #x0000000000000003))
(assert (= temp4068_163 #x0000000000000003))
(assert (= temp4068_156 (ite (= temp4068_155 temp4068_163) temp4068_162 temp4068_161)))
(assert (= temp4068_165 #x0000000000000002))
(assert (= temp4068_166 #x0000000000000001))
(assert (= temp4068_167 #x0000000000000002))
(assert (= temp4068_168 #x0000000000000001))
(assert (= temp4068_169 #x0000000000000000))
(assert (= temp4068_170 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_169)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_170))
                (bvsub temp4068_156 temp4068_168)
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_166)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_167))
                     temp4068_156
                     (bvsub temp4068_156 temp4068_165)))))
  (= temp4068_154 a!1)))
(assert (= temp4068_171 (select ARGNAME_ksize_NAMEEND_VAL temp4068_154)))
(assert (= var406314 temp4068_171))
(assert (= temp4068_175 #x0000000000000002))
(assert (= temp4068_176 #x0000000000000003))
(assert (= temp4068_177 #x0000000000000002))
(assert (= temp4068_178 #x0000000000000003))
(assert (= temp4068_173
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_177)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_178))
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp4068_176)
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp4068_175))))
(assert (= temp4068_179 #x0000000000000002))
(assert (= temp4068_180 #x0000000000000003))
(assert (= temp4068_181 #x0000000000000003))
(assert (= temp4068_174 (ite (= temp4068_173 temp4068_181) temp4068_180 temp4068_179)))
(assert (= temp4068_183 #x0000000000000001))
(assert (= temp4068_184 #x0000000000000001))
(assert (= temp4068_185 #x0000000000000001))
(assert (= temp4068_186 #x0000000000000002))
(assert (= temp4068_187 #x0000000000000000))
(assert (= temp4068_188 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_187)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_188))
                temp4068_174
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_185)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_186))
                     (bvadd temp4068_174 temp4068_184)
                     (bvsub temp4068_174 temp4068_183)))))
  (= temp4068_172 a!1)))
(assert (= temp4068_189 (select ARGNAME_ksize_NAMEEND_VAL temp4068_172)))
(assert (= var406319 temp4068_189))
(assert (= temp4068_193 #x0000000000000002))
(assert (= temp4068_194 #x0000000000000003))
(assert (= temp4068_195 #x0000000000000002))
(assert (= temp4068_196 #x0000000000000003))
(assert (= temp4068_191
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_195)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_196))
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp4068_194)
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp4068_193))))
(assert (= temp4068_197 #x0000000000000002))
(assert (= temp4068_198 #x0000000000000003))
(assert (= temp4068_199 #x0000000000000003))
(assert (= temp4068_192 (ite (= temp4068_191 temp4068_199) temp4068_198 temp4068_197)))
(assert (= temp4068_201 #x0000000000000001))
(assert (= temp4068_202 #x0000000000000005))
(assert (= temp4068_203 #x0000000000000001))
(assert (= temp4068_204 #x0000000000000001))
(assert (= temp4068_205 #x0000000000000002))
(assert (= temp4068_190
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_204)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_205))
        temp4068_203
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_202)
             temp4068_192
             (bvadd temp4068_192 temp4068_201)))))
(assert (= temp4068_206 (select ARGNAME_ksize_NAMEEND_VAL temp4068_190)))
(assert (= var406322 temp4068_206))
(assert (= temp4068_210 #x0000000000000002))
(assert (= temp4068_211 #x0000000000000003))
(assert (= temp4068_212 #x0000000000000002))
(assert (= temp4068_213 #x0000000000000003))
(assert (= temp4068_208
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_212)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_213))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp4068_211)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp4068_210))))
(assert (= temp4068_214 #x0000000000000002))
(assert (= temp4068_215 #x0000000000000003))
(assert (= temp4068_216 #x0000000000000003))
(assert (= temp4068_209 (ite (= temp4068_208 temp4068_216) temp4068_215 temp4068_214)))
(assert (= temp4068_218 #x0000000000000002))
(assert (= temp4068_219 #x0000000000000001))
(assert (= temp4068_220 #x0000000000000002))
(assert (= temp4068_221 #x0000000000000001))
(assert (= temp4068_222 #x0000000000000000))
(assert (= temp4068_223 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_222)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_223))
                (bvsub temp4068_209 temp4068_221)
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_219)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_220))
                     temp4068_209
                     (bvsub temp4068_209 temp4068_218)))))
  (= temp4068_207 a!1)))
(assert (= temp4068_224 (select ARGNAME_strides_NAMEEND_VAL temp4068_207)))
(assert (= var406325 temp4068_224))
(assert (= temp4068_228 #x0000000000000002))
(assert (= temp4068_229 #x0000000000000003))
(assert (= temp4068_230 #x0000000000000002))
(assert (= temp4068_231 #x0000000000000003))
(assert (= temp4068_226
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_230)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_231))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp4068_229)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp4068_228))))
(assert (= temp4068_232 #x0000000000000002))
(assert (= temp4068_233 #x0000000000000003))
(assert (= temp4068_234 #x0000000000000003))
(assert (= temp4068_227 (ite (= temp4068_226 temp4068_234) temp4068_233 temp4068_232)))
(assert (= temp4068_236 #x0000000000000001))
(assert (= temp4068_237 #x0000000000000001))
(assert (= temp4068_238 #x0000000000000001))
(assert (= temp4068_239 #x0000000000000002))
(assert (= temp4068_240 #x0000000000000000))
(assert (= temp4068_241 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_240)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_241))
                temp4068_227
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_238)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_239))
                     (bvadd temp4068_227 temp4068_237)
                     (bvsub temp4068_227 temp4068_236)))))
  (= temp4068_225 a!1)))
(assert (= temp4068_242 (select ARGNAME_strides_NAMEEND_VAL temp4068_225)))
(assert (= var406328 temp4068_242))
(assert (= temp4068_246 #x0000000000000002))
(assert (= temp4068_247 #x0000000000000003))
(assert (= temp4068_248 #x0000000000000002))
(assert (= temp4068_249 #x0000000000000003))
(assert (= temp4068_244
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_248)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_249))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp4068_247)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp4068_246))))
(assert (= temp4068_250 #x0000000000000002))
(assert (= temp4068_251 #x0000000000000003))
(assert (= temp4068_252 #x0000000000000003))
(assert (= temp4068_245 (ite (= temp4068_244 temp4068_252) temp4068_251 temp4068_250)))
(assert (= temp4068_254 #x0000000000000001))
(assert (= temp4068_255 #x0000000000000005))
(assert (= temp4068_256 #x0000000000000001))
(assert (= temp4068_257 #x0000000000000001))
(assert (= temp4068_258 #x0000000000000002))
(assert (= temp4068_243
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_257)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_258))
        temp4068_256
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_255)
             temp4068_245
             (bvadd temp4068_245 temp4068_254)))))
(assert (= temp4068_259 (select ARGNAME_strides_NAMEEND_VAL temp4068_243)))
(assert (= var406331 temp4068_259))
(assert (= var406334 var406322))
(assert (= temp4068_260 #x0000000000000001))
(assert (= var406335
   (ite (= var406334 temp4068_260) #x0000000000000001 #x0000000000000000)))
(assert (= temp4068_261 #x0000000000000000))
(assert (= var406335 temp4068_261))
(assert (= var406337 var406314))
(assert (= temp4068_262 #x0000000000000001))
(assert (= var406338
   (ite (= var406337 temp4068_262) #x0000000000000001 #x0000000000000000)))
(assert (= temp4068_263 #x0000000000000001))
(assert (= var406338 temp4068_263))
(assert (= var406340 var406319))
(assert (= temp4068_264 #x0000000000000001))
(assert (= var406341
   (ite (= var406340 temp4068_264) #x0000000000000001 #x0000000000000000)))
(assert (= temp4068_265 #x0000000000000001))
(assert (= var406341 temp4068_265))
(assert (= temp4068_266 #x0000000000000003))
(assert (= var406360
   (ite (= ARGNAME_padding_NAMEEND temp4068_266)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp4068_267 #x0000000000000001))
(assert (= var406360 temp4068_267))
(assert (= temp4068_268 #x0000000000000003))
(assert (= var536134 temp4068_268))
(assert (= temp4068_269 #x0000000000000004))
(assert (= var536136 temp4068_269))
(assert (= temp4068_270 #x0000000000000003))
(assert (= var536142
   (ite (= var536134 temp4068_270) #x0000000000000001 #x0000000000000000)))
(assert (= temp4068_271 #x0000000000000001))
(assert (= var536142 temp4068_271))
(assert (= temp4068_272 #x0000000000000001))
(assert (= var536146 (bvshl var536136 temp4068_272)))
(assert (= temp4068_273 #x0000000000000000))
(assert (= var536181 temp4068_273))
(assert (= temp4068_274 #x0000000000000000))
(assert (= var536182
   (ite (= var536181 temp4068_274) #x0000000000000001 #x0000000000000000)))
(assert (= temp4068_276 #x0000000000000002))
(assert (= var536189 temp4068_276))
(assert (= temp4068_277 #x0000000000000002))
(assert (= var536192
   (ite (= var536189 temp4068_277) #x0000000000000001 #x0000000000000000)))
(assert (= temp4068_278 #x0000000000000001))
(assert (= var536192 temp4068_278))
(assert (= var601939 var536136))
(assert (= temp4068_279 #x0000000000000000))
(assert (= temp4068_280 #x0000000000000001))
(assert (= temp4068_281 #x0000000000000002))
(assert (= temp4068_282 #x0000000000000003))
(assert (or false
    (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_279)
    (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_280)
    (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_281)
    (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_282)))
(assert (= temp4068_283 #x0000000000000000))
(assert (= var601963 temp4068_283))
(assert (= var601938 var601963))
(assert (= var536194 var601938))
(assert (= var667503 var536136))
(assert (= temp4068_284 #x0000000000000001))
(assert (= temp4068_285 #x0000000000000002))
(assert (or false
    (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_284)
    (= ARGNAME_data_format_NAMEEND_STRFMT temp4068_285)))
(assert (= temp4068_286 #x0000000000000001))
(assert (= var667526 temp4068_286))
(assert (= var667502 var667526))
(assert (= var536197 var667502))
(assert (= temp4068_287 #x0000000000000001))
(assert (= var536200 (bvshl var536194 temp4068_287)))
(assert (= var536201 var536200))
(assert (= temp4068_288 #x0000000000000001))
(assert (= var536208 (bvor var536200 temp4068_288)))
(assert (= var536209 var536208))
(assert (= temp4068_289 #x0000000000000001))
(assert (= var536214 (bvshl var536197 temp4068_289)))
(assert (= var536215 var536214))
(assert (= temp4068_290 #x0000000000000001))
(assert (= var536220 (bvor var536214 temp4068_290)))
(assert (= var536221 var536220))
(assert (= temp4068_291 #x0000000000000000))
(assert (= var536229 temp4068_291))
(assert (= temp4068_292 #x0000000000000000))
(assert (= var536230
   (ite (= var536229 temp4068_292) #x0000000000000001 #x0000000000000000)))
(assert (= temp4068_293 #x0000000000000001))
(assert (= var536230 temp4068_293))
(assert (= temp4068_294 #x0000000000000048))
(assert (= var734482 temp4068_294))
(assert (= temp4068_295 #x0000000000000057))
(assert (= var800018 temp4068_295))
(assert (= var406390 var406314))
(assert (= var406391 var406390))
(assert (= var406392 var406319))
(assert (= var406393 var406392))
(assert (= var864733 var406391))
(assert (= var864734 var406393))
(assert (= var864739
   (ite (bvslt temp2978_279 var864733) #x0000000000000001 #x0000000000000000)))
(assert (= temp4068_296 #x0000000000000001))
(assert (= var864739 temp4068_296))
(assert (= var864748
   (ite (bvslt temp2978_277 var864733) #x0000000000000001 #x0000000000000000)))
(assert (= temp4068_297 #x0000000000000001))
(assert (= var864748 temp4068_297))
(assert (= var864754
   (ite (bvslt temp1290_294 var864734) #x0000000000000001 #x0000000000000000)))
(assert (= temp4068_298 #x0000000000000001))
(assert (= var864754 temp4068_298))
(assert (= var864760
   (ite (bvslt temp1290_292 var864734) #x0000000000000001 #x0000000000000000)))
(assert (= temp4068_299 #x0000000000000001))
(assert (= var864760 temp4068_299))
(assert (= var406416 var406322))
(assert (= temp4068_300 #x0000000000000001))
(assert (= var406417
   (ite (= var406416 temp4068_300) #x0000000000000001 #x0000000000000000)))
(assert (= temp4068_301 #x0000000000000000))
(assert (= var406417 temp4068_301))
(assert (= temp4068_302 #x0000000000000000))
(assert (= var406479
   (ite (bvsgt var406416 temp4068_302) #x0000000000000001 #x0000000000000000)))
(assert (= temp4068_303 #x0000000000000001))
(assert (= var406479 temp4068_303))
(assert (= var406499 var406296))
(assert (= var406500 (bvsmod var406499 var406416)))
(assert (= temp4068_304 #x0000000000000000))
(assert (= var406501
   (ite (= var406500 temp4068_304) #x0000000000000001 #x0000000000000000)))
(assert (= temp4068_305 #x0000000000000001))
(assert (= var406501 temp4068_305))
(assert (= var406521 var406331))
(assert (= var406522
   (ite (= var406521 var406416) #x0000000000000001 #x0000000000000000)))
(assert (= temp4068_306 #x0000000000000001))
(assert (= var406522 temp4068_306))
(assert (= temp4068_308 #x0000000000000000))
(assert (= temp4068_307 temp4068_308))
(assert (= var406614 var406296))
(assert (= var406615 var406322))
(assert (= var406616 (bvsdiv var406614 var406615)))
(assert (= var1521207 var406322))
(assert (= temp4068_309 #x0000000000000001))
(assert (= var1521208
   (ite (= var1521207 temp4068_309) #x0000000000000001 #x0000000000000000)))
(assert (= temp4068_310 #x0000000000000000))
(assert (= var1521208 temp4068_310))
(assert (= var1521231 var406311))
(assert (= var1521232 var1521231))
(assert (= var1521236 var406306))
(assert (= var1521237 var1521236))
(assert (= var1521241 var406301))
(assert (= var1521242 var1521241))
(assert (= var1521246 var406616))
(assert (= var1521247 var1521246))
(assert (= var76509 var406322))
(assert (= temp4068_311 #x0000000000000001))
(assert (= var76510
   (ite (bvsgt var76509 temp4068_311) #x0000000000000001 #x0000000000000000)))
(assert (= temp4068_312 #x0000000000000001))
(assert (= var76510 temp4068_312))
(assert (= var76513 var406296))
(assert (= var76514 (bvsmod var76513 var76509)))
(assert (= temp4068_313 #x0000000000000000))
(assert (= var76515
   (ite (= var76514 temp4068_313) #x0000000000000001 #x0000000000000000)))
(assert (= temp4068_314 #x0000000000000001))
(assert (= var76515 temp4068_314))
(assert (= var76554 var406331))
(assert (= var76555 (ite (= var76509 var76554) #x0000000000000001 #x0000000000000000)))
(assert (= temp4068_315 #x0000000000000001))
(assert (= var76555 temp4068_315))
(model-add temp4068_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp4068_2 () (_ BitVec 64) #x0000000000000001)
(model-add var76353 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_ksize_NAMEEND_LEN
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))
























