(declare-fun temp8609_1 () (_ BitVec 64))
(declare-fun temp8609_2 () (_ BitVec 64))
(declare-fun var76353 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_ksize_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp8609_3 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var76383 () (_ BitVec 64))
(declare-fun temp8609_4 () (_ BitVec 64))
(declare-fun temp8609_5 () (_ BitVec 64))
(declare-fun ARGNAME_ksize_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp8609_6 () (_ BitVec 64))
(declare-fun temp8609_7 () (_ BitVec 64))
(declare-fun temp8609_8 () (_ BitVec 64))
(declare-fun temp8609_9 () (_ BitVec 64))
(declare-fun temp8609_10 () (_ BitVec 64))
(declare-fun temp8609_11 () (_ BitVec 64))
(declare-fun temp8609_12 () (_ BitVec 64))
(declare-fun temp8609_13 () (_ BitVec 64))
(declare-fun temp8609_14 () (_ BitVec 64))
(declare-fun temp8609_15 () (_ BitVec 64))
(declare-fun temp8609_16 () (_ BitVec 64))
(declare-fun temp8609_17 () (_ BitVec 64))
(declare-fun temp8609_19 () (_ BitVec 64))
(declare-fun temp8609_18 () (_ BitVec 64))
(declare-fun temp8609_20 () (_ BitVec 64))
(declare-fun var76413 () (_ BitVec 64))
(declare-fun temp8609_21 () (_ BitVec 64))
(declare-fun temp8609_22 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp8609_23 () (_ BitVec 64))
(declare-fun temp8609_24 () (_ BitVec 64))
(declare-fun temp8609_25 () (_ BitVec 64))
(declare-fun temp8609_26 () (_ BitVec 64))
(declare-fun temp8609_27 () (_ BitVec 64))
(declare-fun temp8609_28 () (_ BitVec 64))
(declare-fun temp8609_29 () (_ BitVec 64))
(declare-fun temp8609_30 () (_ BitVec 64))
(declare-fun temp8609_31 () (_ BitVec 64))
(declare-fun temp8609_32 () (_ BitVec 64))
(declare-fun temp8609_33 () (_ BitVec 64))
(declare-fun temp8609_34 () (_ BitVec 64))
(declare-fun temp8609_36 () (_ BitVec 64))
(declare-fun temp8609_35 () (_ BitVec 64))
(declare-fun temp8609_37 () (_ BitVec 64))
(declare-fun var76417 () (_ BitVec 64))
(declare-fun temp8609_38 () (_ BitVec 64))
(declare-fun temp8609_40 () (_ BitVec 64))
(declare-fun temp8609_39 () (_ BitVec 64))
(declare-fun temp8609_42 () (_ BitVec 64))
(declare-fun temp8609_41 () (_ BitVec 64))
(declare-fun temp8609_44 () (_ BitVec 64))
(declare-fun temp8609_43 () (_ BitVec 64))
(declare-fun temp8609_45 () (_ BitVec 64))
(declare-fun var463968 () (_ BitVec 64))
(declare-fun temp8609_46 () (_ BitVec 64))
(declare-fun temp8609_47 () (_ BitVec 64))
(declare-fun var458765 () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp8609_48 () (_ BitVec 64))
(declare-fun temp8609_49 () (_ BitVec 64))
(declare-fun temp8609_50 () (_ BitVec 64))
(declare-fun temp8609_51 () (_ BitVec 64))
(declare-fun temp8609_52 () (_ BitVec 64))
(declare-fun temp8609_53 () (_ BitVec 64))
(declare-fun temp8609_54 () (_ BitVec 64))
(declare-fun temp8609_55 () (_ BitVec 64))
(declare-fun temp8609_56 () (_ BitVec 64))
(declare-fun temp8609_57 () (_ BitVec 64))
(declare-fun temp8609_58 () (_ BitVec 64))
(declare-fun temp8609_59 () (_ BitVec 64))
(declare-fun temp8609_60 () (_ BitVec 64))
(declare-fun temp8609_61 () (_ BitVec 64))
(declare-fun temp8609_62 () (_ BitVec 64))
(declare-fun temp8609_63 () (_ BitVec 64))
(declare-fun temp8609_64 () (_ BitVec 64))
(declare-fun temp8609_65 () (_ BitVec 64))
(declare-fun temp8609_66 () (_ BitVec 64))
(declare-fun temp8609_67 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var463989 () (_ BitVec 64))
(declare-fun var463963 () (_ BitVec 64))
(declare-fun var406262 () (_ BitVec 64))
(declare-fun temp8609_68 () (_ BitVec 64))
(declare-fun var406263 () (_ BitVec 64))
(declare-fun temp8609_69 () (_ BitVec 64))
(declare-fun temp8609_70 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp8609_71 () (_ BitVec 64))
(declare-fun temp8609_72 () (_ BitVec 64))
(declare-fun temp8609_73 () (_ BitVec 64))
(declare-fun temp8609_74 () (_ BitVec 64))
(declare-fun temp8609_75 () (_ BitVec 64))
(declare-fun temp8609_76 () (_ BitVec 64))
(declare-fun temp8609_77 () (_ BitVec 64))
(declare-fun temp8609_78 () (_ BitVec 64))
(declare-fun temp8609_79 () (_ BitVec 64))
(declare-fun temp8609_80 () (_ BitVec 64))
(declare-fun temp8609_81 () (_ BitVec 64))
(declare-fun temp8609_85 () (_ BitVec 64))
(declare-fun temp8609_86 () (_ BitVec 64))
(declare-fun temp8609_87 () (_ BitVec 64))
(declare-fun temp8609_88 () (_ BitVec 64))
(declare-fun temp8609_83 () (_ BitVec 64))
(declare-fun temp8609_89 () (_ BitVec 64))
(declare-fun temp8609_90 () (_ BitVec 64))
(declare-fun temp8609_91 () (_ BitVec 64))
(declare-fun temp8609_84 () (_ BitVec 64))
(declare-fun temp8609_93 () (_ BitVec 64))
(declare-fun temp8609_94 () (_ BitVec 64))
(declare-fun temp8609_95 () (_ BitVec 64))
(declare-fun temp8609_96 () (_ BitVec 64))
(declare-fun temp8609_97 () (_ BitVec 64))
(declare-fun temp8609_82 () (_ BitVec 64))
(declare-fun temp8609_98 () (_ BitVec 64))
(declare-fun var406291 () (_ BitVec 64))
(declare-fun temp8609_99 () (_ BitVec 64))
(declare-fun var406293 () (_ BitVec 64))
(declare-fun temp8609_100 () (_ BitVec 64))
(declare-fun temp8609_101 () (_ BitVec 64))
(declare-fun var406294 () (_ BitVec 64))
(declare-fun var406295 () (_ BitVec 64))
(declare-fun var406296 () (_ BitVec 64))
(declare-fun temp8609_105 () (_ BitVec 64))
(declare-fun temp8609_106 () (_ BitVec 64))
(declare-fun temp8609_107 () (_ BitVec 64))
(declare-fun temp8609_108 () (_ BitVec 64))
(declare-fun temp8609_103 () (_ BitVec 64))
(declare-fun temp8609_109 () (_ BitVec 64))
(declare-fun temp8609_110 () (_ BitVec 64))
(declare-fun temp8609_111 () (_ BitVec 64))
(declare-fun temp8609_104 () (_ BitVec 64))
(declare-fun temp8609_113 () (_ BitVec 64))
(declare-fun temp8609_114 () (_ BitVec 64))
(declare-fun temp8609_115 () (_ BitVec 64))
(declare-fun temp8609_116 () (_ BitVec 64))
(declare-fun temp8609_117 () (_ BitVec 64))
(declare-fun temp8609_118 () (_ BitVec 64))
(declare-fun temp8609_102 () (_ BitVec 64))
(declare-fun temp8609_119 () (_ BitVec 64))
(declare-fun var406299 () (_ BitVec 64))
(declare-fun var406301 () (_ BitVec 64))
(declare-fun temp8609_123 () (_ BitVec 64))
(declare-fun temp8609_124 () (_ BitVec 64))
(declare-fun temp8609_125 () (_ BitVec 64))
(declare-fun temp8609_126 () (_ BitVec 64))
(declare-fun temp8609_121 () (_ BitVec 64))
(declare-fun temp8609_127 () (_ BitVec 64))
(declare-fun temp8609_128 () (_ BitVec 64))
(declare-fun temp8609_129 () (_ BitVec 64))
(declare-fun temp8609_122 () (_ BitVec 64))
(declare-fun temp8609_131 () (_ BitVec 64))
(declare-fun temp8609_132 () (_ BitVec 64))
(declare-fun temp8609_133 () (_ BitVec 64))
(declare-fun temp8609_134 () (_ BitVec 64))
(declare-fun temp8609_135 () (_ BitVec 64))
(declare-fun temp8609_136 () (_ BitVec 64))
(declare-fun temp8609_120 () (_ BitVec 64))
(declare-fun temp8609_137 () (_ BitVec 64))
(declare-fun var406304 () (_ BitVec 64))
(declare-fun var406306 () (_ BitVec 64))
(declare-fun temp8609_141 () (_ BitVec 64))
(declare-fun temp8609_142 () (_ BitVec 64))
(declare-fun temp8609_143 () (_ BitVec 64))
(declare-fun temp8609_144 () (_ BitVec 64))
(declare-fun temp8609_139 () (_ BitVec 64))
(declare-fun temp8609_145 () (_ BitVec 64))
(declare-fun temp8609_146 () (_ BitVec 64))
(declare-fun temp8609_147 () (_ BitVec 64))
(declare-fun temp8609_140 () (_ BitVec 64))
(declare-fun temp8609_149 () (_ BitVec 64))
(declare-fun temp8609_150 () (_ BitVec 64))
(declare-fun temp8609_151 () (_ BitVec 64))
(declare-fun temp8609_152 () (_ BitVec 64))
(declare-fun temp8609_138 () (_ BitVec 64))
(declare-fun temp8609_153 () (_ BitVec 64))
(declare-fun var406309 () (_ BitVec 64))
(declare-fun var406311 () (_ BitVec 64))
(declare-fun temp8609_157 () (_ BitVec 64))
(declare-fun temp8609_158 () (_ BitVec 64))
(declare-fun temp8609_159 () (_ BitVec 64))
(declare-fun temp8609_160 () (_ BitVec 64))
(declare-fun temp8609_155 () (_ BitVec 64))
(declare-fun temp8609_161 () (_ BitVec 64))
(declare-fun temp8609_162 () (_ BitVec 64))
(declare-fun temp8609_163 () (_ BitVec 64))
(declare-fun temp8609_156 () (_ BitVec 64))
(declare-fun temp8609_165 () (_ BitVec 64))
(declare-fun temp8609_166 () (_ BitVec 64))
(declare-fun temp8609_167 () (_ BitVec 64))
(declare-fun temp8609_168 () (_ BitVec 64))
(declare-fun temp8609_169 () (_ BitVec 64))
(declare-fun temp8609_170 () (_ BitVec 64))
(declare-fun temp8609_154 () (_ BitVec 64))
(declare-fun temp8609_171 () (_ BitVec 64))
(declare-fun var406314 () (_ BitVec 64))
(declare-fun temp8609_175 () (_ BitVec 64))
(declare-fun temp8609_176 () (_ BitVec 64))
(declare-fun temp8609_177 () (_ BitVec 64))
(declare-fun temp8609_178 () (_ BitVec 64))
(declare-fun temp8609_173 () (_ BitVec 64))
(declare-fun temp8609_179 () (_ BitVec 64))
(declare-fun temp8609_180 () (_ BitVec 64))
(declare-fun temp8609_181 () (_ BitVec 64))
(declare-fun temp8609_174 () (_ BitVec 64))
(declare-fun temp8609_183 () (_ BitVec 64))
(declare-fun temp8609_184 () (_ BitVec 64))
(declare-fun temp8609_185 () (_ BitVec 64))
(declare-fun temp8609_186 () (_ BitVec 64))
(declare-fun temp8609_187 () (_ BitVec 64))
(declare-fun temp8609_188 () (_ BitVec 64))
(declare-fun temp8609_172 () (_ BitVec 64))
(declare-fun temp8609_189 () (_ BitVec 64))
(declare-fun var406319 () (_ BitVec 64))
(declare-fun temp8609_193 () (_ BitVec 64))
(declare-fun temp8609_194 () (_ BitVec 64))
(declare-fun temp8609_195 () (_ BitVec 64))
(declare-fun temp8609_196 () (_ BitVec 64))
(declare-fun temp8609_191 () (_ BitVec 64))
(declare-fun temp8609_197 () (_ BitVec 64))
(declare-fun temp8609_198 () (_ BitVec 64))
(declare-fun temp8609_199 () (_ BitVec 64))
(declare-fun temp8609_192 () (_ BitVec 64))
(declare-fun temp8609_201 () (_ BitVec 64))
(declare-fun temp8609_202 () (_ BitVec 64))
(declare-fun temp8609_203 () (_ BitVec 64))
(declare-fun temp8609_204 () (_ BitVec 64))
(declare-fun temp8609_205 () (_ BitVec 64))
(declare-fun temp8609_190 () (_ BitVec 64))
(declare-fun temp8609_206 () (_ BitVec 64))
(declare-fun var406322 () (_ BitVec 64))
(declare-fun temp8609_210 () (_ BitVec 64))
(declare-fun temp8609_211 () (_ BitVec 64))
(declare-fun temp8609_212 () (_ BitVec 64))
(declare-fun temp8609_213 () (_ BitVec 64))
(declare-fun temp8609_208 () (_ BitVec 64))
(declare-fun temp8609_214 () (_ BitVec 64))
(declare-fun temp8609_215 () (_ BitVec 64))
(declare-fun temp8609_216 () (_ BitVec 64))
(declare-fun temp8609_209 () (_ BitVec 64))
(declare-fun temp8609_218 () (_ BitVec 64))
(declare-fun temp8609_219 () (_ BitVec 64))
(declare-fun temp8609_220 () (_ BitVec 64))
(declare-fun temp8609_221 () (_ BitVec 64))
(declare-fun temp8609_222 () (_ BitVec 64))
(declare-fun temp8609_223 () (_ BitVec 64))
(declare-fun temp8609_207 () (_ BitVec 64))
(declare-fun temp8609_224 () (_ BitVec 64))
(declare-fun var406325 () (_ BitVec 64))
(declare-fun temp8609_228 () (_ BitVec 64))
(declare-fun temp8609_229 () (_ BitVec 64))
(declare-fun temp8609_230 () (_ BitVec 64))
(declare-fun temp8609_231 () (_ BitVec 64))
(declare-fun temp8609_226 () (_ BitVec 64))
(declare-fun temp8609_232 () (_ BitVec 64))
(declare-fun temp8609_233 () (_ BitVec 64))
(declare-fun temp8609_234 () (_ BitVec 64))
(declare-fun temp8609_227 () (_ BitVec 64))
(declare-fun temp8609_236 () (_ BitVec 64))
(declare-fun temp8609_237 () (_ BitVec 64))
(declare-fun temp8609_238 () (_ BitVec 64))
(declare-fun temp8609_239 () (_ BitVec 64))
(declare-fun temp8609_240 () (_ BitVec 64))
(declare-fun temp8609_241 () (_ BitVec 64))
(declare-fun temp8609_225 () (_ BitVec 64))
(declare-fun temp8609_242 () (_ BitVec 64))
(declare-fun var406328 () (_ BitVec 64))
(declare-fun temp8609_246 () (_ BitVec 64))
(declare-fun temp8609_247 () (_ BitVec 64))
(declare-fun temp8609_248 () (_ BitVec 64))
(declare-fun temp8609_249 () (_ BitVec 64))
(declare-fun temp8609_244 () (_ BitVec 64))
(declare-fun temp8609_250 () (_ BitVec 64))
(declare-fun temp8609_251 () (_ BitVec 64))
(declare-fun temp8609_252 () (_ BitVec 64))
(declare-fun temp8609_245 () (_ BitVec 64))
(declare-fun temp8609_254 () (_ BitVec 64))
(declare-fun temp8609_255 () (_ BitVec 64))
(declare-fun temp8609_256 () (_ BitVec 64))
(declare-fun temp8609_257 () (_ BitVec 64))
(declare-fun temp8609_258 () (_ BitVec 64))
(declare-fun temp8609_243 () (_ BitVec 64))
(declare-fun temp8609_259 () (_ BitVec 64))
(declare-fun var406331 () (_ BitVec 64))
(declare-fun var406334 () (_ BitVec 64))
(declare-fun temp8609_260 () (_ BitVec 64))
(declare-fun var406335 () (_ BitVec 64))
(declare-fun temp8609_261 () (_ BitVec 64))
(declare-fun var406337 () (_ BitVec 64))
(declare-fun temp8609_262 () (_ BitVec 64))
(declare-fun var406338 () (_ BitVec 64))
(declare-fun temp8609_263 () (_ BitVec 64))
(declare-fun var406340 () (_ BitVec 64))
(declare-fun temp8609_264 () (_ BitVec 64))
(declare-fun var406341 () (_ BitVec 64))
(declare-fun temp8609_265 () (_ BitVec 64))
(declare-fun temp8609_266 () (_ BitVec 64))
(declare-fun var406360 () (_ BitVec 64))
(declare-fun temp8609_267 () (_ BitVec 64))
(declare-fun temp8609_268 () (_ BitVec 64))
(declare-fun var536134 () (_ BitVec 64))
(declare-fun temp8609_269 () (_ BitVec 64))
(declare-fun var536136 () (_ BitVec 64))
(declare-fun temp8609_270 () (_ BitVec 64))
(declare-fun var536142 () (_ BitVec 64))
(declare-fun temp8609_271 () (_ BitVec 64))
(declare-fun temp8609_272 () (_ BitVec 64))
(declare-fun var536146 () (_ BitVec 64))
(declare-fun temp8609_273 () (_ BitVec 64))
(declare-fun var536181 () (_ BitVec 64))
(declare-fun temp8609_274 () (_ BitVec 64))
(declare-fun var536182 () (_ BitVec 64))
(declare-fun temp8609_276 () (_ BitVec 64))
(declare-fun var536189 () (_ BitVec 64))
(declare-fun temp8609_277 () (_ BitVec 64))
(declare-fun var536192 () (_ BitVec 64))
(declare-fun temp8609_278 () (_ BitVec 64))
(declare-fun var601939 () (_ BitVec 64))
(declare-fun temp8609_279 () (_ BitVec 64))
(declare-fun temp8609_280 () (_ BitVec 64))
(declare-fun temp8609_281 () (_ BitVec 64))
(declare-fun temp8609_282 () (_ BitVec 64))
(declare-fun temp8609_283 () (_ BitVec 64))
(declare-fun var601963 () (_ BitVec 64))
(declare-fun var601938 () (_ BitVec 64))
(declare-fun var536194 () (_ BitVec 64))
(declare-fun var667503 () (_ BitVec 64))
(declare-fun temp8609_284 () (_ BitVec 64))
(declare-fun temp8609_285 () (_ BitVec 64))
(declare-fun temp8609_286 () (_ BitVec 64))
(declare-fun var667511 () (_ BitVec 64))
(declare-fun var667526 () (_ BitVec 64))
(declare-fun var667502 () (_ BitVec 64))
(declare-fun var536197 () (_ BitVec 64))
(declare-fun temp8609_287 () (_ BitVec 64))
(declare-fun var536200 () (_ BitVec 64))
(declare-fun var536201 () (_ BitVec 64))
(declare-fun temp8609_288 () (_ BitVec 64))
(declare-fun var536208 () (_ BitVec 64))
(declare-fun var536209 () (_ BitVec 64))
(declare-fun temp8609_289 () (_ BitVec 64))
(declare-fun var536214 () (_ BitVec 64))
(declare-fun var536215 () (_ BitVec 64))
(declare-fun temp8609_290 () (_ BitVec 64))
(declare-fun var536220 () (_ BitVec 64))
(declare-fun var536221 () (_ BitVec 64))
(declare-fun temp8609_291 () (_ BitVec 64))
(declare-fun var536229 () (_ BitVec 64))
(declare-fun temp8609_292 () (_ BitVec 64))
(declare-fun var536230 () (_ BitVec 64))
(declare-fun temp8609_293 () (_ BitVec 64))
(declare-fun temp8609_294 () (_ BitVec 64))
(declare-fun var734482 () (_ BitVec 64))
(declare-fun temp8609_295 () (_ BitVec 64))
(declare-fun var800018 () (_ BitVec 64))
(declare-fun var406390 () (_ BitVec 64))
(declare-fun var406391 () (_ BitVec 64))
(declare-fun var406392 () (_ BitVec 64))
(declare-fun var406393 () (_ BitVec 64))
(declare-fun var864733 () (_ BitVec 64))
(declare-fun var864734 () (_ BitVec 64))
(declare-fun temp7012_277 () (_ BitVec 64))
(declare-fun var864739 () (_ BitVec 64))
(declare-fun temp8609_296 () (_ BitVec 64))
(declare-fun temp7012_275 () (_ BitVec 64))
(declare-fun var864748 () (_ BitVec 64))
(declare-fun temp8609_297 () (_ BitVec 64))
(declare-fun temp7012_292 () (_ BitVec 64))
(declare-fun var864754 () (_ BitVec 64))
(declare-fun temp8609_298 () (_ BitVec 64))
(declare-fun temp7012_290 () (_ BitVec 64))
(declare-fun var864760 () (_ BitVec 64))
(declare-fun temp8609_299 () (_ BitVec 64))
(declare-fun var406416 () (_ BitVec 64))
(declare-fun temp8609_300 () (_ BitVec 64))
(declare-fun var406417 () (_ BitVec 64))
(declare-fun temp8609_301 () (_ BitVec 64))
(declare-fun temp8609_302 () (_ BitVec 64))
(declare-fun var406479 () (_ BitVec 64))
(declare-fun temp8609_303 () (_ BitVec 64))
(declare-fun var406499 () (_ BitVec 64))
(declare-fun var406500 () (_ BitVec 64))
(declare-fun temp8609_304 () (_ BitVec 64))
(declare-fun var406501 () (_ BitVec 64))
(declare-fun temp8609_305 () (_ BitVec 64))
(declare-fun var406521 () (_ BitVec 64))
(declare-fun var406522 () (_ BitVec 64))
(declare-fun temp8609_306 () (_ BitVec 64))
(declare-fun temp8609_308 () (_ BitVec 64))
(declare-fun temp8609_307 () (_ BitVec 64))
(declare-fun var406614 () (_ BitVec 64))
(declare-fun var406615 () (_ BitVec 64))
(declare-fun var406616 () (_ BitVec 64))
(declare-fun var1521207 () (_ BitVec 64))
(declare-fun temp8609_309 () (_ BitVec 64))
(declare-fun var1521208 () (_ BitVec 64))
(declare-fun temp8609_310 () (_ BitVec 64))
(declare-fun var1521231 () (_ BitVec 64))
(declare-fun var1521232 () (_ BitVec 64))
(declare-fun var1521236 () (_ BitVec 64))
(declare-fun var1521237 () (_ BitVec 64))
(declare-fun var1521241 () (_ BitVec 64))
(declare-fun var1521242 () (_ BitVec 64))
(declare-fun var1521246 () (_ BitVec 64))
(declare-fun var1521247 () (_ BitVec 64))
(declare-fun var76509 () (_ BitVec 64))
(declare-fun temp8609_311 () (_ BitVec 64))
(declare-fun var76510 () (_ BitVec 64))
(declare-fun temp8609_312 () (_ BitVec 64))
(declare-fun var76513 () (_ BitVec 64))
(declare-fun var76514 () (_ BitVec 64))
(declare-fun temp8609_313 () (_ BitVec 64))
(declare-fun var76515 () (_ BitVec 64))
(declare-fun temp8609_314 () (_ BitVec 64))
(declare-fun var76554 () (_ BitVec 64))
(declare-fun var76555 () (_ BitVec 64))
(declare-fun temp8609_315 () (_ BitVec 64))
(assert (or (= ARGNAME_padding_NAMEEND #x0000000000000001)
    (= ARGNAME_padding_NAMEEND #x0000000000000002)
    (= ARGNAME_padding_NAMEEND #x0000000000000003)))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp8609_1 #x0000000000000004))
(assert (= var76353
   (ite (= ARGNAME_ksize_NAMEEND_LEN temp8609_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8609_2 #x0000000000000001))
(assert (= var76353 temp8609_2))
(assert (= temp8609_3 #x0000000000000004))
(assert (= var76383
   (ite (= ARGNAME_strides_NAMEEND_LEN temp8609_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8609_4 #x0000000000000001))
(assert (= var76383 temp8609_4))
(assert (= temp8609_5 #x0000000000000000))
(assert (= temp8609_6 (select ARGNAME_ksize_NAMEEND_VAL temp8609_5)))
(assert (= temp8609_7 #x0000000000000001))
(assert (= temp8609_8 (select ARGNAME_ksize_NAMEEND_VAL temp8609_7)))
(assert (= temp8609_9 #x0000000000000002))
(assert (= temp8609_10 (select ARGNAME_ksize_NAMEEND_VAL temp8609_9)))
(assert (= temp8609_11 #x0000000000000003))
(assert (= temp8609_12 (select ARGNAME_ksize_NAMEEND_VAL temp8609_11)))
(assert (= temp8609_13 #x0000000000000004))
(assert (= temp8609_14 (select ARGNAME_ksize_NAMEEND_VAL temp8609_13)))
(assert (= temp8609_15 #x0000000000000005))
(assert (= temp8609_16 (select ARGNAME_ksize_NAMEEND_VAL temp8609_15)))
(assert (= temp8609_17 #x0000000000000000))
(assert (= temp8609_19 (select ARGNAME_ksize_NAMEEND_VAL temp8609_17)))
(assert (= temp8609_18 temp8609_19))
(assert (= temp8609_20 #x0000000000000001))
(assert (= var76413
   (ite (= temp8609_18 temp8609_20) #x0000000000000001 #x0000000000000000)))
(assert (= temp8609_21 #x0000000000000001))
(assert (= var76413 temp8609_21))
(assert (= temp8609_22 #x0000000000000000))
(assert (= temp8609_23 (select ARGNAME_strides_NAMEEND_VAL temp8609_22)))
(assert (= temp8609_24 #x0000000000000001))
(assert (= temp8609_25 (select ARGNAME_strides_NAMEEND_VAL temp8609_24)))
(assert (= temp8609_26 #x0000000000000002))
(assert (= temp8609_27 (select ARGNAME_strides_NAMEEND_VAL temp8609_26)))
(assert (= temp8609_28 #x0000000000000003))
(assert (= temp8609_29 (select ARGNAME_strides_NAMEEND_VAL temp8609_28)))
(assert (= temp8609_30 #x0000000000000004))
(assert (= temp8609_31 (select ARGNAME_strides_NAMEEND_VAL temp8609_30)))
(assert (= temp8609_32 #x0000000000000005))
(assert (= temp8609_33 (select ARGNAME_strides_NAMEEND_VAL temp8609_32)))
(assert (= temp8609_34 #x0000000000000000))
(assert (= temp8609_36 (select ARGNAME_strides_NAMEEND_VAL temp8609_34)))
(assert (= temp8609_35 temp8609_36))
(assert (= temp8609_37 #x0000000000000001))
(assert (= var76417
   (ite (= temp8609_35 temp8609_37) #x0000000000000001 #x0000000000000000)))
(assert (= temp8609_38 #x0000000000000001))
(assert (= var76417 temp8609_38))
(assert (= temp8609_40 #x0000000000000000))
(assert (= temp8609_39 temp8609_40))
(assert (= temp8609_42 #x0000000000000000))
(assert (= temp8609_41 temp8609_42))
(assert (= temp8609_44 #x0000000000000000))
(assert (= temp8609_43 temp8609_44))
(assert (= temp8609_45 #x0000000000000006))
(assert (= var463968
   (ite (bvslt ARGNAME_data_format_NAMEEND_STRFMT temp8609_45)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8609_46 #x0000000000000001))
(assert (= var463968 temp8609_46))
(assert (= temp8609_47 #x0000000000000000))
(assert (= temp8609_48 (select var458765 temp8609_47)))
(assert (= temp8609_49 #x0000000000000001))
(assert (= temp8609_50 (select var458765 temp8609_49)))
(assert (= temp8609_51 #x0000000000000002))
(assert (= temp8609_52 (select var458765 temp8609_51)))
(assert (= temp8609_53 #x0000000000000003))
(assert (= temp8609_54 (select var458765 temp8609_53)))
(assert (= temp8609_55 #x0000000000000004))
(assert (= temp8609_56 (select var458765 temp8609_55)))
(assert (= temp8609_57 #x0000000000000005))
(assert (= temp8609_58 (select var458765 temp8609_57)))
(assert (= temp8609_59 #xfffffffffffffffe))
(assert (= (select var458765 #x0000000000000000) temp8609_59))
(assert (= temp8609_60 #xfffffffffffffffe))
(assert (= (select var458765 #x0000000000000001) temp8609_60))
(assert (= temp8609_61 #xfffffffffffffffd))
(assert (= (select var458765 #x0000000000000002) temp8609_61))
(assert (= temp8609_62 #xfffffffffffffffd))
(assert (= (select var458765 #x0000000000000003) temp8609_62))
(assert (= temp8609_63 #xfffffffffffffffe))
(assert (= (select var458765 #x0000000000000004) temp8609_63))
(assert (= temp8609_64 #xfffffffffffffffe))
(assert (= (select var458765 #x0000000000000005) temp8609_64))
(assert (= temp8609_65 (select var458765 ARGNAME_data_format_NAMEEND_STRFMT)))
(assert (= temp8609_66 #x0000000000000000))
(assert (bvsge ARGNAME_data_format_NAMEEND_STRFMT temp8609_66))
(assert (= temp8609_67 #x0000000000000006))
(assert (bvslt ARGNAME_data_format_NAMEEND_STRFMT temp8609_67))
(assert (= var463989 (bvadd temp8609_65 ARGNAME_input_NAMEEND_DIM)))
(assert (= var463963 var463989))
(assert (= var406262 var463963))
(assert (= temp8609_68 #x0000000000000002))
(assert (= var406263
   (ite (= var406262 temp8609_68) #x0000000000000001 #x0000000000000000)))
(assert (= temp8609_69 #x0000000000000001))
(assert (= var406263 temp8609_69))
(assert (= temp8609_70 #x0000000000000000))
(assert (= temp8609_71 (select ARGNAME_input_NAMEEND_DIMSIZE temp8609_70)))
(assert (= temp8609_72 #x0000000000000001))
(assert (= temp8609_73 (select ARGNAME_input_NAMEEND_DIMSIZE temp8609_72)))
(assert (= temp8609_74 #x0000000000000002))
(assert (= temp8609_75 (select ARGNAME_input_NAMEEND_DIMSIZE temp8609_74)))
(assert (= temp8609_76 #x0000000000000003))
(assert (= temp8609_77 (select ARGNAME_input_NAMEEND_DIMSIZE temp8609_76)))
(assert (= temp8609_78 #x0000000000000004))
(assert (= temp8609_79 (select ARGNAME_input_NAMEEND_DIMSIZE temp8609_78)))
(assert (= temp8609_80 #x0000000000000005))
(assert (= temp8609_81 (select ARGNAME_input_NAMEEND_DIMSIZE temp8609_80)))
(assert (= temp8609_85 #x0000000000000002))
(assert (= temp8609_86 #x0000000000000003))
(assert (= temp8609_87 #x0000000000000002))
(assert (= temp8609_88 #x0000000000000003))
(assert (= temp8609_83
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_87)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_88))
        (bvsub ARGNAME_input_NAMEEND_DIM temp8609_86)
        (bvsub ARGNAME_input_NAMEEND_DIM temp8609_85))))
(assert (= temp8609_89 #x0000000000000002))
(assert (= temp8609_90 #x0000000000000003))
(assert (= temp8609_91 #x0000000000000003))
(assert (= temp8609_84 (ite (= temp8609_83 temp8609_91) temp8609_90 temp8609_89)))
(assert (= temp8609_93 #x0000000000000001))
(assert (= temp8609_94 #x0000000000000005))
(assert (= temp8609_95 #x0000000000000001))
(assert (= temp8609_96 #x0000000000000001))
(assert (= temp8609_97 #x0000000000000002))
(assert (= temp8609_82
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_96)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_97))
        temp8609_95
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_94)
             temp8609_84
             (bvadd temp8609_84 temp8609_93)))))
(assert (= temp8609_98 (select ARGNAME_input_NAMEEND_DIMSIZE temp8609_82)))
(assert (= var406291 temp8609_98))
(assert (= temp8609_99 #x0000000000000002))
(assert (= var406293
   (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_99)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8609_100 #x0000000000000004))
(assert (= temp8609_101 #x0000000000000001))
(assert (= var406294 (ite (= var406293 #x0000000000000001) temp8609_100 temp8609_101)))
(assert (= var406295 (bvmul var406291 var406294)))
(assert (= var406296 var406295))
(assert (= temp8609_105 #x0000000000000002))
(assert (= temp8609_106 #x0000000000000003))
(assert (= temp8609_107 #x0000000000000002))
(assert (= temp8609_108 #x0000000000000003))
(assert (= temp8609_103
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_107)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_108))
        (bvsub ARGNAME_input_NAMEEND_DIM temp8609_106)
        (bvsub ARGNAME_input_NAMEEND_DIM temp8609_105))))
(assert (= temp8609_109 #x0000000000000002))
(assert (= temp8609_110 #x0000000000000003))
(assert (= temp8609_111 #x0000000000000003))
(assert (= temp8609_104 (ite (= temp8609_103 temp8609_111) temp8609_110 temp8609_109)))
(assert (= temp8609_113 #x0000000000000001))
(assert (= temp8609_114 #x0000000000000001))
(assert (= temp8609_115 #x0000000000000001))
(assert (= temp8609_116 #x0000000000000002))
(assert (= temp8609_117 #x0000000000000000))
(assert (= temp8609_118 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_117)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_118))
                temp8609_104
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_115)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_116))
                     (bvadd temp8609_104 temp8609_114)
                     (bvsub temp8609_104 temp8609_113)))))
  (= temp8609_102 a!1)))
(assert (= temp8609_119 (select ARGNAME_input_NAMEEND_DIMSIZE temp8609_102)))
(assert (= var406299 temp8609_119))
(assert (= var406301 var406299))
(assert (= temp8609_123 #x0000000000000002))
(assert (= temp8609_124 #x0000000000000003))
(assert (= temp8609_125 #x0000000000000002))
(assert (= temp8609_126 #x0000000000000003))
(assert (= temp8609_121
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_125)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_126))
        (bvsub ARGNAME_input_NAMEEND_DIM temp8609_124)
        (bvsub ARGNAME_input_NAMEEND_DIM temp8609_123))))
(assert (= temp8609_127 #x0000000000000002))
(assert (= temp8609_128 #x0000000000000003))
(assert (= temp8609_129 #x0000000000000003))
(assert (= temp8609_122 (ite (= temp8609_121 temp8609_129) temp8609_128 temp8609_127)))
(assert (= temp8609_131 #x0000000000000002))
(assert (= temp8609_132 #x0000000000000001))
(assert (= temp8609_133 #x0000000000000002))
(assert (= temp8609_134 #x0000000000000001))
(assert (= temp8609_135 #x0000000000000000))
(assert (= temp8609_136 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_135)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_136))
                (bvsub temp8609_122 temp8609_134)
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_132)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_133))
                     temp8609_122
                     (bvsub temp8609_122 temp8609_131)))))
  (= temp8609_120 a!1)))
(assert (= temp8609_137 (select ARGNAME_input_NAMEEND_DIMSIZE temp8609_120)))
(assert (= var406304 temp8609_137))
(assert (= var406306 var406304))
(assert (= temp8609_141 #x0000000000000002))
(assert (= temp8609_142 #x0000000000000003))
(assert (= temp8609_143 #x0000000000000002))
(assert (= temp8609_144 #x0000000000000003))
(assert (= temp8609_139
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_143)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_144))
        (bvsub ARGNAME_input_NAMEEND_DIM temp8609_142)
        (bvsub ARGNAME_input_NAMEEND_DIM temp8609_141))))
(assert (= temp8609_145 #x0000000000000002))
(assert (= temp8609_146 #x0000000000000003))
(assert (= temp8609_147 #x0000000000000003))
(assert (= temp8609_140 (ite (= temp8609_139 temp8609_147) temp8609_146 temp8609_145)))
(assert (= temp8609_149 #x0000000000000000))
(assert (= temp8609_150 #x0000000000000001))
(assert (= temp8609_151 #x0000000000000005))
(assert (= temp8609_152 #x0000000000000004))
(assert (= temp8609_138
   (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_152)
        temp8609_140
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_151)
             (bvadd temp8609_140 temp8609_150)
             temp8609_149))))
(assert (= temp8609_153 (select ARGNAME_input_NAMEEND_DIMSIZE temp8609_138)))
(assert (= var406309 temp8609_153))
(assert (= var406311 var406309))
(assert (= temp8609_157 #x0000000000000002))
(assert (= temp8609_158 #x0000000000000003))
(assert (= temp8609_159 #x0000000000000002))
(assert (= temp8609_160 #x0000000000000003))
(assert (= temp8609_155
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_159)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_160))
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp8609_158)
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp8609_157))))
(assert (= temp8609_161 #x0000000000000002))
(assert (= temp8609_162 #x0000000000000003))
(assert (= temp8609_163 #x0000000000000003))
(assert (= temp8609_156 (ite (= temp8609_155 temp8609_163) temp8609_162 temp8609_161)))
(assert (= temp8609_165 #x0000000000000002))
(assert (= temp8609_166 #x0000000000000001))
(assert (= temp8609_167 #x0000000000000002))
(assert (= temp8609_168 #x0000000000000001))
(assert (= temp8609_169 #x0000000000000000))
(assert (= temp8609_170 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_169)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_170))
                (bvsub temp8609_156 temp8609_168)
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_166)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_167))
                     temp8609_156
                     (bvsub temp8609_156 temp8609_165)))))
  (= temp8609_154 a!1)))
(assert (= temp8609_171 (select ARGNAME_ksize_NAMEEND_VAL temp8609_154)))
(assert (= var406314 temp8609_171))
(assert (= temp8609_175 #x0000000000000002))
(assert (= temp8609_176 #x0000000000000003))
(assert (= temp8609_177 #x0000000000000002))
(assert (= temp8609_178 #x0000000000000003))
(assert (= temp8609_173
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_177)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_178))
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp8609_176)
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp8609_175))))
(assert (= temp8609_179 #x0000000000000002))
(assert (= temp8609_180 #x0000000000000003))
(assert (= temp8609_181 #x0000000000000003))
(assert (= temp8609_174 (ite (= temp8609_173 temp8609_181) temp8609_180 temp8609_179)))
(assert (= temp8609_183 #x0000000000000001))
(assert (= temp8609_184 #x0000000000000001))
(assert (= temp8609_185 #x0000000000000001))
(assert (= temp8609_186 #x0000000000000002))
(assert (= temp8609_187 #x0000000000000000))
(assert (= temp8609_188 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_187)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_188))
                temp8609_174
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_185)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_186))
                     (bvadd temp8609_174 temp8609_184)
                     (bvsub temp8609_174 temp8609_183)))))
  (= temp8609_172 a!1)))
(assert (= temp8609_189 (select ARGNAME_ksize_NAMEEND_VAL temp8609_172)))
(assert (= var406319 temp8609_189))
(assert (= temp8609_193 #x0000000000000002))
(assert (= temp8609_194 #x0000000000000003))
(assert (= temp8609_195 #x0000000000000002))
(assert (= temp8609_196 #x0000000000000003))
(assert (= temp8609_191
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_195)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_196))
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp8609_194)
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp8609_193))))
(assert (= temp8609_197 #x0000000000000002))
(assert (= temp8609_198 #x0000000000000003))
(assert (= temp8609_199 #x0000000000000003))
(assert (= temp8609_192 (ite (= temp8609_191 temp8609_199) temp8609_198 temp8609_197)))
(assert (= temp8609_201 #x0000000000000001))
(assert (= temp8609_202 #x0000000000000005))
(assert (= temp8609_203 #x0000000000000001))
(assert (= temp8609_204 #x0000000000000001))
(assert (= temp8609_205 #x0000000000000002))
(assert (= temp8609_190
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_204)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_205))
        temp8609_203
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_202)
             temp8609_192
             (bvadd temp8609_192 temp8609_201)))))
(assert (= temp8609_206 (select ARGNAME_ksize_NAMEEND_VAL temp8609_190)))
(assert (= var406322 temp8609_206))
(assert (= temp8609_210 #x0000000000000002))
(assert (= temp8609_211 #x0000000000000003))
(assert (= temp8609_212 #x0000000000000002))
(assert (= temp8609_213 #x0000000000000003))
(assert (= temp8609_208
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_212)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_213))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp8609_211)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp8609_210))))
(assert (= temp8609_214 #x0000000000000002))
(assert (= temp8609_215 #x0000000000000003))
(assert (= temp8609_216 #x0000000000000003))
(assert (= temp8609_209 (ite (= temp8609_208 temp8609_216) temp8609_215 temp8609_214)))
(assert (= temp8609_218 #x0000000000000002))
(assert (= temp8609_219 #x0000000000000001))
(assert (= temp8609_220 #x0000000000000002))
(assert (= temp8609_221 #x0000000000000001))
(assert (= temp8609_222 #x0000000000000000))
(assert (= temp8609_223 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_222)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_223))
                (bvsub temp8609_209 temp8609_221)
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_219)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_220))
                     temp8609_209
                     (bvsub temp8609_209 temp8609_218)))))
  (= temp8609_207 a!1)))
(assert (= temp8609_224 (select ARGNAME_strides_NAMEEND_VAL temp8609_207)))
(assert (= var406325 temp8609_224))
(assert (= temp8609_228 #x0000000000000002))
(assert (= temp8609_229 #x0000000000000003))
(assert (= temp8609_230 #x0000000000000002))
(assert (= temp8609_231 #x0000000000000003))
(assert (= temp8609_226
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_230)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_231))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp8609_229)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp8609_228))))
(assert (= temp8609_232 #x0000000000000002))
(assert (= temp8609_233 #x0000000000000003))
(assert (= temp8609_234 #x0000000000000003))
(assert (= temp8609_227 (ite (= temp8609_226 temp8609_234) temp8609_233 temp8609_232)))
(assert (= temp8609_236 #x0000000000000001))
(assert (= temp8609_237 #x0000000000000001))
(assert (= temp8609_238 #x0000000000000001))
(assert (= temp8609_239 #x0000000000000002))
(assert (= temp8609_240 #x0000000000000000))
(assert (= temp8609_241 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_240)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_241))
                temp8609_227
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_238)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_239))
                     (bvadd temp8609_227 temp8609_237)
                     (bvsub temp8609_227 temp8609_236)))))
  (= temp8609_225 a!1)))
(assert (= temp8609_242 (select ARGNAME_strides_NAMEEND_VAL temp8609_225)))
(assert (= var406328 temp8609_242))
(assert (= temp8609_246 #x0000000000000002))
(assert (= temp8609_247 #x0000000000000003))
(assert (= temp8609_248 #x0000000000000002))
(assert (= temp8609_249 #x0000000000000003))
(assert (= temp8609_244
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_248)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_249))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp8609_247)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp8609_246))))
(assert (= temp8609_250 #x0000000000000002))
(assert (= temp8609_251 #x0000000000000003))
(assert (= temp8609_252 #x0000000000000003))
(assert (= temp8609_245 (ite (= temp8609_244 temp8609_252) temp8609_251 temp8609_250)))
(assert (= temp8609_254 #x0000000000000001))
(assert (= temp8609_255 #x0000000000000005))
(assert (= temp8609_256 #x0000000000000001))
(assert (= temp8609_257 #x0000000000000001))
(assert (= temp8609_258 #x0000000000000002))
(assert (= temp8609_243
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_257)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_258))
        temp8609_256
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_255)
             temp8609_245
             (bvadd temp8609_245 temp8609_254)))))
(assert (= temp8609_259 (select ARGNAME_strides_NAMEEND_VAL temp8609_243)))
(assert (= var406331 temp8609_259))
(assert (= var406334 var406322))
(assert (= temp8609_260 #x0000000000000001))
(assert (= var406335
   (ite (= var406334 temp8609_260) #x0000000000000001 #x0000000000000000)))
(assert (= temp8609_261 #x0000000000000000))
(assert (= var406335 temp8609_261))
(assert (= var406337 var406314))
(assert (= temp8609_262 #x0000000000000001))
(assert (= var406338
   (ite (= var406337 temp8609_262) #x0000000000000001 #x0000000000000000)))
(assert (= temp8609_263 #x0000000000000001))
(assert (= var406338 temp8609_263))
(assert (= var406340 var406319))
(assert (= temp8609_264 #x0000000000000001))
(assert (= var406341
   (ite (= var406340 temp8609_264) #x0000000000000001 #x0000000000000000)))
(assert (= temp8609_265 #x0000000000000001))
(assert (= var406341 temp8609_265))
(assert (= temp8609_266 #x0000000000000003))
(assert (= var406360
   (ite (= ARGNAME_padding_NAMEEND temp8609_266)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8609_267 #x0000000000000001))
(assert (= var406360 temp8609_267))
(assert (= temp8609_268 #x0000000000000003))
(assert (= var536134 temp8609_268))
(assert (= temp8609_269 #x0000000000000004))
(assert (= var536136 temp8609_269))
(assert (= temp8609_270 #x0000000000000003))
(assert (= var536142
   (ite (= var536134 temp8609_270) #x0000000000000001 #x0000000000000000)))
(assert (= temp8609_271 #x0000000000000001))
(assert (= var536142 temp8609_271))
(assert (= temp8609_272 #x0000000000000001))
(assert (= var536146 (bvshl var536136 temp8609_272)))
(assert (= temp8609_273 #x0000000000000000))
(assert (= var536181 temp8609_273))
(assert (= temp8609_274 #x0000000000000000))
(assert (= var536182
   (ite (= var536181 temp8609_274) #x0000000000000001 #x0000000000000000)))
(assert (= temp8609_276 #x0000000000000002))
(assert (= var536189 temp8609_276))
(assert (= temp8609_277 #x0000000000000002))
(assert (= var536192
   (ite (= var536189 temp8609_277) #x0000000000000001 #x0000000000000000)))
(assert (= temp8609_278 #x0000000000000001))
(assert (= var536192 temp8609_278))
(assert (= var601939 var536136))
(assert (= temp8609_279 #x0000000000000000))
(assert (= temp8609_280 #x0000000000000001))
(assert (= temp8609_281 #x0000000000000002))
(assert (= temp8609_282 #x0000000000000003))
(assert (or false
    (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_279)
    (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_280)
    (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_281)
    (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_282)))
(assert (= temp8609_283 #x0000000000000000))
(assert (= var601963 temp8609_283))
(assert (= var601938 var601963))
(assert (= var536194 var601938))
(assert (= var667503 var536136))
(assert (= temp8609_284 #x0000000000000003))
(assert (= temp8609_285 #x0000000000000005))
(assert (or false
    (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_284)
    (= ARGNAME_data_format_NAMEEND_STRFMT temp8609_285)))
(assert (= temp8609_286 #xfffffffffffffffe))
(assert (= var667511 (bvadd var667503 temp8609_286)))
(assert (= var667526 var667511))
(assert (= var667502 var667526))
(assert (= var536197 var667502))
(assert (= temp8609_287 #x0000000000000001))
(assert (= var536200 (bvshl var536194 temp8609_287)))
(assert (= var536201 var536200))
(assert (= temp8609_288 #x0000000000000001))
(assert (= var536208 (bvor var536200 temp8609_288)))
(assert (= var536209 var536208))
(assert (= temp8609_289 #x0000000000000001))
(assert (= var536214 (bvshl var536197 temp8609_289)))
(assert (= var536215 var536214))
(assert (= temp8609_290 #x0000000000000001))
(assert (= var536220 (bvor var536214 temp8609_290)))
(assert (= var536221 var536220))
(assert (= temp8609_291 #x0000000000000000))
(assert (= var536229 temp8609_291))
(assert (= temp8609_292 #x0000000000000000))
(assert (= var536230
   (ite (= var536229 temp8609_292) #x0000000000000001 #x0000000000000000)))
(assert (= temp8609_293 #x0000000000000001))
(assert (= var536230 temp8609_293))
(assert (= temp8609_294 #x0000000000000048))
(assert (= var734482 temp8609_294))
(assert (= temp8609_295 #x0000000000000057))
(assert (= var800018 temp8609_295))
(assert (= var406390 var406314))
(assert (= var406391 var406390))
(assert (= var406392 var406319))
(assert (= var406393 var406392))
(assert (= var864733 var406391))
(assert (= var864734 var406393))
(assert (= var864739
   (ite (bvslt temp7012_277 var864733) #x0000000000000001 #x0000000000000000)))
(assert (= temp8609_296 #x0000000000000001))
(assert (= var864739 temp8609_296))
(assert (= var864748
   (ite (bvslt temp7012_275 var864733) #x0000000000000001 #x0000000000000000)))
(assert (= temp8609_297 #x0000000000000001))
(assert (= var864748 temp8609_297))
(assert (= var864754
   (ite (bvslt temp7012_292 var864734) #x0000000000000001 #x0000000000000000)))
(assert (= temp8609_298 #x0000000000000001))
(assert (= var864754 temp8609_298))
(assert (= var864760
   (ite (bvslt temp7012_290 var864734) #x0000000000000001 #x0000000000000000)))
(assert (= temp8609_299 #x0000000000000001))
(assert (= var864760 temp8609_299))
(assert (= var406416 var406322))
(assert (= temp8609_300 #x0000000000000001))
(assert (= var406417
   (ite (= var406416 temp8609_300) #x0000000000000001 #x0000000000000000)))
(assert (= temp8609_301 #x0000000000000000))
(assert (= var406417 temp8609_301))
(assert (= temp8609_302 #x0000000000000000))
(assert (= var406479
   (ite (bvsgt var406416 temp8609_302) #x0000000000000001 #x0000000000000000)))
(assert (= temp8609_303 #x0000000000000001))
(assert (= var406479 temp8609_303))
(assert (= var406499 var406296))
(assert (= var406500 (bvsmod var406499 var406416)))
(assert (= temp8609_304 #x0000000000000000))
(assert (= var406501
   (ite (= var406500 temp8609_304) #x0000000000000001 #x0000000000000000)))
(assert (= temp8609_305 #x0000000000000001))
(assert (= var406501 temp8609_305))
(assert (= var406521 var406331))
(assert (= var406522
   (ite (= var406521 var406416) #x0000000000000001 #x0000000000000000)))
(assert (= temp8609_306 #x0000000000000001))
(assert (= var406522 temp8609_306))
(assert (= temp8609_308 #x0000000000000000))
(assert (= temp8609_307 temp8609_308))
(assert (= var406614 var406296))
(assert (= var406615 var406322))
(assert (= var406616 (bvsdiv var406614 var406615)))
(assert (= var1521207 var406322))
(assert (= temp8609_309 #x0000000000000001))
(assert (= var1521208
   (ite (= var1521207 temp8609_309) #x0000000000000001 #x0000000000000000)))
(assert (= temp8609_310 #x0000000000000000))
(assert (= var1521208 temp8609_310))
(assert (= var1521231 var406311))
(assert (= var1521232 var1521231))
(assert (= var1521236 var406306))
(assert (= var1521237 var1521236))
(assert (= var1521241 var406301))
(assert (= var1521242 var1521241))
(assert (= var1521246 var406616))
(assert (= var1521247 var1521246))
(assert (= var76509 var406322))
(assert (= temp8609_311 #x0000000000000001))
(assert (= var76510
   (ite (bvsgt var76509 temp8609_311) #x0000000000000001 #x0000000000000000)))
(assert (= temp8609_312 #x0000000000000001))
(assert (= var76510 temp8609_312))
(assert (= var76513 var406296))
(assert (= var76514 (bvsmod var76513 var76509)))
(assert (= temp8609_313 #x0000000000000000))
(assert (= var76515
   (ite (= var76514 temp8609_313) #x0000000000000001 #x0000000000000000)))
(assert (= temp8609_314 #x0000000000000001))
(assert (= var76515 temp8609_314))
(assert (= var76554 var406331))
(assert (= var76555 (ite (= var76509 var76554) #x0000000000000001 #x0000000000000000)))
(assert (= temp8609_315 #x0000000000000001))
(assert (= var76555 temp8609_315))
(model-add temp8609_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp8609_2 () (_ BitVec 64) #x0000000000000001)
(model-add var76353 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_ksize_NAMEEND_LEN
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))
























