(declare-fun temp1226_2 () (_ BitVec 64))
(declare-fun temp1226_1 () (_ BitVec 64))
(declare-fun temp1226_3 () (_ BitVec 64))
(declare-fun temp1226_4 () (_ BitVec 64))
(declare-fun var134199 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_axis_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun temp1226_5 () (_ BitVec 64))
(declare-fun var396787 () (_ BitVec 64))
(declare-fun temp1226_6 () (_ BitVec 64))
(declare-fun ARGNAME_size_splits_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var134243 () (_ BitVec 64))
(declare-fun temp1226_7 () (_ BitVec 64))
(declare-fun temp1226_8 () (_ BitVec 64))
(declare-fun ARGNAME_value_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1226_9 () (_ BitVec 64))
(declare-fun temp1226_10 () (_ BitVec 64))
(declare-fun temp1226_11 () (_ BitVec 64))
(declare-fun temp1226_12 () (_ BitVec 64))
(declare-fun temp1226_13 () (_ BitVec 64))
(declare-fun temp1226_14 () (_ BitVec 64))
(declare-fun temp1226_15 () (_ BitVec 64))
(declare-fun temp1226_16 () (_ BitVec 64))
(declare-fun temp1226_17 () (_ BitVec 64))
(declare-fun temp1226_18 () (_ BitVec 64))
(declare-fun temp1226_19 () (_ BitVec 64))
(declare-fun temp1226_20 () (_ BitVec 64))
(declare-fun var134408 () (_ BitVec 64))
(declare-fun temp1226_21 () (_ BitVec 64))
(declare-fun var134406 () (_ BitVec 64))
(declare-fun temp1226_22 () (_ BitVec 64))
(declare-fun var134526 () (_ BitVec 64))
(declare-fun temp1226_23 () (_ BitVec 64))
(declare-fun var134528 () (_ BitVec 64))
(declare-fun temp1226_24 () (_ BitVec 64))
(declare-fun temp1226_25 () (_ BitVec 64))
(declare-fun var68294 () (_ BitVec 64))
(assert (= temp1226_2 #x0000000000000000))
(assert (= temp1226_1 temp1226_2))
(assert (= temp1226_3 #x0000000000000001))
(assert (= var134199
   (ite (= ARGNAME_axis_NAMEEND_NUMELEMENT temp1226_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1226_4 #x0000000000000001))
(assert (= var134199 temp1226_4))
(assert (= temp1226_5 #x0000000000000000))
(assert (= var396787 temp1226_5))
(assert (= temp1226_6 #x0000000000000001))
(assert (= var134243
   (ite (= ARGNAME_size_splits_NAMEEND_DIM temp1226_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1226_7 #x0000000000000001))
(assert (= var134243 temp1226_7))
(assert (= temp1226_8 #x0000000000000000))
(assert (= temp1226_9 (select ARGNAME_value_NAMEEND_DIMSIZE temp1226_8)))
(assert (= temp1226_10 #x0000000000000001))
(assert (= temp1226_11 (select ARGNAME_value_NAMEEND_DIMSIZE temp1226_10)))
(assert (= temp1226_12 #x0000000000000002))
(assert (= temp1226_13 (select ARGNAME_value_NAMEEND_DIMSIZE temp1226_12)))
(assert (= temp1226_14 #x0000000000000003))
(assert (= temp1226_15 (select ARGNAME_value_NAMEEND_DIMSIZE temp1226_14)))
(assert (= temp1226_16 #x0000000000000004))
(assert (= temp1226_17 (select ARGNAME_value_NAMEEND_DIMSIZE temp1226_16)))
(assert (= temp1226_18 #x0000000000000005))
(assert (= temp1226_19 (select ARGNAME_value_NAMEEND_DIMSIZE temp1226_18)))
(assert (= temp1226_20 #x0000000000000000))
(assert (= var134408 temp1226_20))
(assert (= temp1226_21 #x0000000000000001))
(assert (= var134406 (bvadd var134408 temp1226_21)))
(assert (= temp1226_22 #x0000000000000013))
(assert (= var134526 temp1226_22))
(assert (= temp1226_23 #x0000000000000013))
(assert (= var134528
   (ite (= var134526 temp1226_23) #x0000000000000001 #x0000000000000000)))
(assert (= temp1226_24 #x0000000000000001))
(assert (= var134528 temp1226_24))
(assert (= temp1226_25 #x0000000000000000))
(assert (= var68294
   (ite (= temp1226_1 temp1226_25) #x0000000000000001 #x0000000000000000)))
(model-add temp1226_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp1226_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp1226_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp1226_4 () (_ BitVec 64) #x0000000000000001)
(model-add var134199 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_axis_NAMEEND_NUMELEMENT
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))



