(declare-fun temp588_2 () (_ BitVec 64))
(declare-fun temp588_1 () (_ BitVec 64))
(declare-fun temp588_3 () (_ BitVec 64))
(declare-fun temp588_4 () (_ BitVec 64))
(declare-fun var134199 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_axis_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun temp588_5 () (_ BitVec 64))
(declare-fun var396787 () (_ BitVec 64))
(declare-fun temp588_6 () (_ BitVec 64))
(declare-fun ARGNAME_size_splits_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var134243 () (_ BitVec 64))
(declare-fun temp588_7 () (_ BitVec 64))
(declare-fun temp588_8 () (_ BitVec 64))
(declare-fun ARGNAME_value_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp588_9 () (_ BitVec 64))
(declare-fun temp588_10 () (_ BitVec 64))
(declare-fun temp588_11 () (_ BitVec 64))
(declare-fun temp588_12 () (_ BitVec 64))
(declare-fun temp588_13 () (_ BitVec 64))
(declare-fun temp588_14 () (_ BitVec 64))
(declare-fun temp588_15 () (_ BitVec 64))
(declare-fun temp588_16 () (_ BitVec 64))
(declare-fun temp588_17 () (_ BitVec 64))
(declare-fun temp588_18 () (_ BitVec 64))
(declare-fun temp588_19 () (_ BitVec 64))
(declare-fun temp588_20 () (_ BitVec 64))
(declare-fun var134408 () (_ BitVec 64))
(declare-fun temp588_21 () (_ BitVec 64))
(declare-fun var134406 () (_ BitVec 64))
(declare-fun temp588_22 () (_ BitVec 64))
(declare-fun var134494 () (_ BitVec 64))
(declare-fun temp588_23 () (_ BitVec 64))
(declare-fun var134523 () (_ BitVec 64))
(declare-fun temp588_24 () (_ BitVec 64))
(declare-fun var134524 () (_ BitVec 64))
(declare-fun temp588_25 () (_ BitVec 64))
(declare-fun var134492 () (_ BitVec 64))
(declare-fun temp588_27 () (_ BitVec 64))
(declare-fun var134526 () (_ BitVec 64))
(declare-fun temp588_28 () (_ BitVec 64))
(declare-fun var134528 () (_ BitVec 64))
(declare-fun temp588_29 () (_ BitVec 64))
(declare-fun temp588_31 () (_ BitVec 64))
(declare-fun temp588_30 () (_ BitVec 64))
(declare-fun temp588_32 () (_ BitVec 64))
(declare-fun var68294 () (_ BitVec 64))
(declare-fun temp588_33 () (_ BitVec 64))
(declare-fun var1183219 () (_ BitVec 64))
(declare-fun temp588_34 () (_ BitVec 64))
(declare-fun var1248776 () (_ BitVec 64))
(declare-fun var68344 () (_ BitVec 64))
(declare-fun ARGNAME_value_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var68347 () (_ BitVec 64))
(declare-fun temp588_35 () (_ BitVec 64))
(assert (= temp588_2 #x0000000000000000))
(assert (= temp588_1 temp588_2))
(assert (= temp588_3 #x0000000000000001))
(assert (= var134199
   (ite (= ARGNAME_axis_NAMEEND_NUMELEMENT temp588_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp588_4 #x0000000000000001))
(assert (= var134199 temp588_4))
(assert (= temp588_5 #x0000000000000000))
(assert (= var396787 temp588_5))
(assert (= temp588_6 #x0000000000000001))
(assert (= var134243
   (ite (= ARGNAME_size_splits_NAMEEND_DIM temp588_6)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp588_7 #x0000000000000001))
(assert (= var134243 temp588_7))
(assert (= temp588_8 #x0000000000000000))
(assert (= temp588_9 (select ARGNAME_value_NAMEEND_DIMSIZE temp588_8)))
(assert (= temp588_10 #x0000000000000001))
(assert (= temp588_11 (select ARGNAME_value_NAMEEND_DIMSIZE temp588_10)))
(assert (= temp588_12 #x0000000000000002))
(assert (= temp588_13 (select ARGNAME_value_NAMEEND_DIMSIZE temp588_12)))
(assert (= temp588_14 #x0000000000000003))
(assert (= temp588_15 (select ARGNAME_value_NAMEEND_DIMSIZE temp588_14)))
(assert (= temp588_16 #x0000000000000004))
(assert (= temp588_17 (select ARGNAME_value_NAMEEND_DIMSIZE temp588_16)))
(assert (= temp588_18 #x0000000000000005))
(assert (= temp588_19 (select ARGNAME_value_NAMEEND_DIMSIZE temp588_18)))
(assert (= temp588_20 #x0000000000000000))
(assert (= var134408 temp588_20))
(assert (= temp588_21 #x0000000000000001))
(assert (= var134406 (bvadd var134408 temp588_21)))
(assert (= temp588_22 #x0000000000000000))
(assert (= var134494 temp588_22))
(assert (= temp588_23 #x0000000000000000))
(assert (= var134523 temp588_23))
(assert (= temp588_24 #x0000000000000000))
(assert (= var134524
   (ite (= var134523 temp588_24) #x0000000000000001 #x0000000000000000)))
(assert (= temp588_25 #x0000000000000001))
(assert (= var134492 (bvadd var134494 temp588_25)))
(assert (= temp588_27 #x0000000000000013))
(assert (= var134526 temp588_27))
(assert (= temp588_28 #x0000000000000013))
(assert (= var134528
   (ite (= var134526 temp588_28) #x0000000000000001 #x0000000000000000)))
(assert (= temp588_29 #x0000000000000001))
(assert (= var134528 temp588_29))
(assert (= temp588_31 #x0000000000000001))
(assert (= temp588_30 temp588_31))
(assert (= temp588_32 #x0000000000000000))
(assert (= var68294
   (ite (= temp588_30 temp588_32) #x0000000000000001 #x0000000000000000)))
(assert (= temp588_33 #x0000000000000000))
(assert (= var1183219 temp588_33))
(assert (= temp588_34 #xffffffffffffffff))
(assert (= var1248776 temp588_34))
(assert (= var68344 var1248776))
(assert (= var68347
   (ite (bvslt ARGNAME_value_NAMEEND_NUMELEMENT var68344)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp588_35 #x0000000000000001))
(assert (= var68347 temp588_35))
(model-add temp588_2 () (_ BitVec 64) #x0000000000000000)
(model-add temp588_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp588_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp588_4 () (_ BitVec 64) #x0000000000000001)
(model-add var134199 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_axis_NAMEEND_NUMELEMENT
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))



