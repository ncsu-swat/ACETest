(declare-fun temp1_1 () (_ BitVec 64))
(declare-fun temp1_2 () (_ BitVec 64))
(declare-fun var69292 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun extend_974 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp1_3 () (_ BitVec 64))
(declare-fun ARGNAME_orig_input_shape_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var69297 () (_ BitVec 64))
(declare-fun temp1_4 () (_ BitVec 64))
(declare-fun temp1_5 () (_ BitVec 64))
(declare-fun ARGNAME_grad_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var69324 () (_ BitVec 64))
(declare-fun temp1_6 () (_ BitVec 64))
(declare-fun temp1_7 () (_ BitVec 64))
(declare-fun var69362 () (_ BitVec 64))
(declare-fun temp1_8 () (_ BitVec 64))
(declare-fun temp1_9 () (_ BitVec 64))
(declare-fun var69383 () (_ BitVec 64))
(declare-fun var135179 () (_ BitVec 64))
(declare-fun temp1_10 () (_ BitVec 64))
(declare-fun var69384 () (_ BitVec 64))
(declare-fun var69394 () (_ BitVec 64))
(declare-fun temp1_12 () (_ BitVec 64))
(declare-fun ARGNAME_ksize_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1_13 () (_ BitVec 64))
(declare-fun temp1_14 () (_ BitVec 64))
(declare-fun temp1_15 () (_ BitVec 64))
(declare-fun temp1_16 () (_ BitVec 64))
(declare-fun temp1_17 () (_ BitVec 64))
(declare-fun temp1_18 () (_ BitVec 64))
(declare-fun temp1_19 () (_ BitVec 64))
(declare-fun temp1_20 () (_ BitVec 64))
(declare-fun temp1_21 () (_ BitVec 64))
(declare-fun temp1_22 () (_ BitVec 64))
(declare-fun temp1_23 () (_ BitVec 64))
(declare-fun temp1_27 () (_ BitVec 64))
(declare-fun temp1_28 () (_ BitVec 64))
(declare-fun temp1_29 () (_ BitVec 64))
(declare-fun temp1_30 () (_ BitVec 64))
(declare-fun ARGNAME_ksize_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1_25 () (_ BitVec 64))
(declare-fun temp1_31 () (_ BitVec 64))
(declare-fun temp1_32 () (_ BitVec 64))
(declare-fun temp1_33 () (_ BitVec 64))
(declare-fun temp1_26 () (_ BitVec 64))
(declare-fun temp1_35 () (_ BitVec 64))
(declare-fun temp1_36 () (_ BitVec 64))
(declare-fun temp1_37 () (_ BitVec 64))
(declare-fun temp1_38 () (_ BitVec 64))
(declare-fun temp1_39 () (_ BitVec 64))
(declare-fun temp1_40 () (_ BitVec 64))
(declare-fun temp1_41 () (_ BitVec 64))
(declare-fun temp1_24 () (_ BitVec 64))
(declare-fun temp1_42 () (_ BitVec 64))
(declare-fun var69441 () (_ BitVec 64))
(declare-fun var69443 () (_ BitVec 64))
(declare-fun temp1_46 () (_ BitVec 64))
(declare-fun temp1_47 () (_ BitVec 64))
(declare-fun temp1_48 () (_ BitVec 64))
(declare-fun temp1_49 () (_ BitVec 64))
(declare-fun temp1_44 () (_ BitVec 64))
(declare-fun temp1_50 () (_ BitVec 64))
(declare-fun temp1_51 () (_ BitVec 64))
(declare-fun temp1_52 () (_ BitVec 64))
(declare-fun temp1_45 () (_ BitVec 64))
(declare-fun temp1_54 () (_ BitVec 64))
(declare-fun temp1_55 () (_ BitVec 64))
(declare-fun temp1_56 () (_ BitVec 64))
(declare-fun temp1_57 () (_ BitVec 64))
(declare-fun temp1_58 () (_ BitVec 64))
(declare-fun temp1_59 () (_ BitVec 64))
(declare-fun temp1_60 () (_ BitVec 64))
(declare-fun temp1_43 () (_ BitVec 64))
(declare-fun temp1_61 () (_ BitVec 64))
(declare-fun var69446 () (_ BitVec 64))
(declare-fun var69448 () (_ BitVec 64))
(declare-fun temp1_65 () (_ BitVec 64))
(declare-fun temp1_66 () (_ BitVec 64))
(declare-fun temp1_67 () (_ BitVec 64))
(declare-fun temp1_68 () (_ BitVec 64))
(declare-fun temp1_63 () (_ BitVec 64))
(declare-fun temp1_69 () (_ BitVec 64))
(declare-fun temp1_70 () (_ BitVec 64))
(declare-fun temp1_71 () (_ BitVec 64))
(declare-fun temp1_64 () (_ BitVec 64))
(declare-fun temp1_73 () (_ BitVec 64))
(declare-fun temp1_74 () (_ BitVec 64))
(declare-fun temp1_75 () (_ BitVec 64))
(declare-fun temp1_76 () (_ BitVec 64))
(declare-fun temp1_77 () (_ BitVec 64))
(declare-fun temp1_78 () (_ BitVec 64))
(declare-fun temp1_79 () (_ BitVec 64))
(declare-fun temp1_62 () (_ BitVec 64))
(declare-fun temp1_80 () (_ BitVec 64))
(declare-fun var69451 () (_ BitVec 64))
(declare-fun var69453 () (_ BitVec 64))
(declare-fun temp1_81 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1_82 () (_ BitVec 64))
(declare-fun temp1_83 () (_ BitVec 64))
(declare-fun temp1_84 () (_ BitVec 64))
(declare-fun temp1_85 () (_ BitVec 64))
(declare-fun temp1_86 () (_ BitVec 64))
(declare-fun temp1_87 () (_ BitVec 64))
(declare-fun temp1_88 () (_ BitVec 64))
(declare-fun temp1_89 () (_ BitVec 64))
(declare-fun temp1_90 () (_ BitVec 64))
(declare-fun temp1_91 () (_ BitVec 64))
(declare-fun temp1_92 () (_ BitVec 64))
(declare-fun temp1_96 () (_ BitVec 64))
(declare-fun temp1_97 () (_ BitVec 64))
(declare-fun temp1_98 () (_ BitVec 64))
(declare-fun temp1_99 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1_94 () (_ BitVec 64))
(declare-fun temp1_100 () (_ BitVec 64))
(declare-fun temp1_101 () (_ BitVec 64))
(declare-fun temp1_102 () (_ BitVec 64))
(declare-fun temp1_95 () (_ BitVec 64))
(declare-fun temp1_104 () (_ BitVec 64))
(declare-fun temp1_105 () (_ BitVec 64))
(declare-fun temp1_106 () (_ BitVec 64))
(declare-fun temp1_107 () (_ BitVec 64))
(declare-fun temp1_108 () (_ BitVec 64))
(declare-fun temp1_109 () (_ BitVec 64))
(declare-fun temp1_110 () (_ BitVec 64))
(declare-fun temp1_93 () (_ BitVec 64))
(declare-fun temp1_111 () (_ BitVec 64))
(declare-fun var69459 () (_ BitVec 64))
(declare-fun var69461 () (_ BitVec 64))
(declare-fun temp1_115 () (_ BitVec 64))
(declare-fun temp1_116 () (_ BitVec 64))
(declare-fun temp1_117 () (_ BitVec 64))
(declare-fun temp1_118 () (_ BitVec 64))
(declare-fun temp1_113 () (_ BitVec 64))
(declare-fun temp1_119 () (_ BitVec 64))
(declare-fun temp1_120 () (_ BitVec 64))
(declare-fun temp1_121 () (_ BitVec 64))
(declare-fun temp1_114 () (_ BitVec 64))
(declare-fun temp1_123 () (_ BitVec 64))
(declare-fun temp1_124 () (_ BitVec 64))
(declare-fun temp1_125 () (_ BitVec 64))
(declare-fun temp1_126 () (_ BitVec 64))
(declare-fun temp1_127 () (_ BitVec 64))
(declare-fun temp1_128 () (_ BitVec 64))
(declare-fun temp1_129 () (_ BitVec 64))
(declare-fun temp1_112 () (_ BitVec 64))
(declare-fun temp1_130 () (_ BitVec 64))
(declare-fun var69464 () (_ BitVec 64))
(declare-fun var69466 () (_ BitVec 64))
(declare-fun temp1_134 () (_ BitVec 64))
(declare-fun temp1_135 () (_ BitVec 64))
(declare-fun temp1_136 () (_ BitVec 64))
(declare-fun temp1_137 () (_ BitVec 64))
(declare-fun temp1_132 () (_ BitVec 64))
(declare-fun temp1_138 () (_ BitVec 64))
(declare-fun temp1_139 () (_ BitVec 64))
(declare-fun temp1_140 () (_ BitVec 64))
(declare-fun temp1_133 () (_ BitVec 64))
(declare-fun temp1_142 () (_ BitVec 64))
(declare-fun temp1_143 () (_ BitVec 64))
(declare-fun temp1_144 () (_ BitVec 64))
(declare-fun temp1_145 () (_ BitVec 64))
(declare-fun temp1_146 () (_ BitVec 64))
(declare-fun temp1_147 () (_ BitVec 64))
(declare-fun temp1_148 () (_ BitVec 64))
(declare-fun temp1_131 () (_ BitVec 64))
(declare-fun temp1_149 () (_ BitVec 64))
(declare-fun var69469 () (_ BitVec 64))
(declare-fun var69471 () (_ BitVec 64))
(declare-fun temp1_150 () (_ BitVec 64))
(declare-fun var273485 () (_ BitVec 64))
(declare-fun var207923 () (_ BitVec 64))
(declare-fun temp1_151 () (_ BitVec 64))
(declare-fun var207926 () (_ BitVec 64))
(declare-fun temp1_152 () (_ BitVec 64))
(declare-fun temp1_153 () (_ BitVec 64))
(declare-fun var207928 () (_ BitVec 64))
(declare-fun temp1_154 () (_ BitVec 64))
(declare-fun var338918 () (_ BitVec 64))
(declare-fun temp1_155 () (_ BitVec 64))
(assert (or (= ARGNAME_padding_NAMEEND #x0000000000000001)
    (= ARGNAME_padding_NAMEEND #x0000000000000002)
    (= ARGNAME_padding_NAMEEND #x0000000000000003)))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp1_1 #x0000000000000001))
(assert (= var69292
   (ite (= extend_974 temp1_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_2 #x0000000000000001))
(assert (= var69292 temp1_2))
(assert (= temp1_3 #x0000000000000005))
(assert (= var69297
   (ite (= ARGNAME_orig_input_shape_NAMEEND_LEN temp1_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_4 #x0000000000000001))
(assert (= var69297 temp1_4))
(assert (= temp1_5 #x0000000000000005))
(assert (= var69324
   (ite (= ARGNAME_grad_NAMEEND_DIM temp1_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_6 #x0000000000000001))
(assert (= var69324 temp1_6))
(assert (= temp1_7 #x0000000000000000))
(assert (= var69362
   (ite (bvsgt ARGNAME_orig_input_shape_NAMEEND_LEN temp1_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_8 #x0000000000000001))
(assert (= var69362 temp1_8))
(assert (= temp1_9 #x0000000000000000))
(assert (= var69383 temp1_9))
(assert (= var135179 var69383))
(assert (= temp1_10 #x0000000000000001))
(assert (= var69384 (bvadd var69383 temp1_10)))
(assert (= var69394
   (ite (bvslt var69384 ARGNAME_orig_input_shape_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_12 #x0000000000000000))
(assert (= temp1_13 (select ARGNAME_ksize_NAMEEND_VAL temp1_12)))
(assert (= temp1_14 #x0000000000000001))
(assert (= temp1_15 (select ARGNAME_ksize_NAMEEND_VAL temp1_14)))
(assert (= temp1_16 #x0000000000000002))
(assert (= temp1_17 (select ARGNAME_ksize_NAMEEND_VAL temp1_16)))
(assert (= temp1_18 #x0000000000000003))
(assert (= temp1_19 (select ARGNAME_ksize_NAMEEND_VAL temp1_18)))
(assert (= temp1_20 #x0000000000000004))
(assert (= temp1_21 (select ARGNAME_ksize_NAMEEND_VAL temp1_20)))
(assert (= temp1_22 #x0000000000000005))
(assert (= temp1_23 (select ARGNAME_ksize_NAMEEND_VAL temp1_22)))
(assert (= temp1_27 #x0000000000000002))
(assert (= temp1_28 #x0000000000000003))
(assert (= temp1_29 #x0000000000000002))
(assert (= temp1_30 #x0000000000000003))
(assert (= temp1_25
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_29)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp1_30))
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp1_28)
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp1_27))))
(assert (= temp1_31 #x0000000000000002))
(assert (= temp1_32 #x0000000000000003))
(assert (= temp1_33 #x0000000000000003))
(assert (= temp1_26 (ite (= temp1_25 temp1_33) temp1_32 temp1_31)))
(assert (= temp1_35 #x0000000000000002))
(assert (= temp1_36 #x0000000000000004))
(assert (= temp1_37 #x0000000000000001))
(assert (= temp1_38 #x0000000000000002))
(assert (= temp1_39 #x0000000000000003))
(assert (= temp1_40 #x0000000000000000))
(assert (= temp1_41 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_40)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp1_41))
                temp1_39
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_37)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp1_38))
                     temp1_36
                     temp1_35))))
  (= temp1_24 a!1)))
(assert (= temp1_42 (select ARGNAME_ksize_NAMEEND_VAL temp1_24)))
(assert (= var69441 temp1_42))
(assert (= var69443 var69441))
(assert (= temp1_46 #x0000000000000002))
(assert (= temp1_47 #x0000000000000003))
(assert (= temp1_48 #x0000000000000002))
(assert (= temp1_49 #x0000000000000003))
(assert (= temp1_44
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_48)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp1_49))
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp1_47)
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp1_46))))
(assert (= temp1_50 #x0000000000000002))
(assert (= temp1_51 #x0000000000000003))
(assert (= temp1_52 #x0000000000000003))
(assert (= temp1_45 (ite (= temp1_44 temp1_52) temp1_51 temp1_50)))
(assert (= temp1_54 #x0000000000000001))
(assert (= temp1_55 #x0000000000000003))
(assert (= temp1_56 #x0000000000000001))
(assert (= temp1_57 #x0000000000000002))
(assert (= temp1_58 #x0000000000000002))
(assert (= temp1_59 #x0000000000000000))
(assert (= temp1_60 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_59)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp1_60))
                temp1_58
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_56)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp1_57))
                     temp1_55
                     temp1_54))))
  (= temp1_43 a!1)))
(assert (= temp1_61 (select ARGNAME_ksize_NAMEEND_VAL temp1_43)))
(assert (= var69446 temp1_61))
(assert (= var69448 var69446))
(assert (= temp1_65 #x0000000000000002))
(assert (= temp1_66 #x0000000000000003))
(assert (= temp1_67 #x0000000000000002))
(assert (= temp1_68 #x0000000000000003))
(assert (= temp1_63
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_67)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp1_68))
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp1_66)
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp1_65))))
(assert (= temp1_69 #x0000000000000002))
(assert (= temp1_70 #x0000000000000003))
(assert (= temp1_71 #x0000000000000003))
(assert (= temp1_64 (ite (= temp1_63 temp1_71) temp1_70 temp1_69)))
(assert (= temp1_73 #x0000000000000000))
(assert (= temp1_74 #x0000000000000002))
(assert (= temp1_75 #x0000000000000001))
(assert (= temp1_76 #x0000000000000002))
(assert (= temp1_77 #x0000000000000001))
(assert (= temp1_78 #x0000000000000000))
(assert (= temp1_79 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_78)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp1_79))
                temp1_77
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_75)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp1_76))
                     temp1_74
                     temp1_73))))
  (= temp1_62 a!1)))
(assert (= temp1_80 (select ARGNAME_ksize_NAMEEND_VAL temp1_62)))
(assert (= var69451 temp1_80))
(assert (= var69453 var69451))
(assert (= temp1_81 #x0000000000000000))
(assert (= temp1_82 (select ARGNAME_strides_NAMEEND_VAL temp1_81)))
(assert (= temp1_83 #x0000000000000001))
(assert (= temp1_84 (select ARGNAME_strides_NAMEEND_VAL temp1_83)))
(assert (= temp1_85 #x0000000000000002))
(assert (= temp1_86 (select ARGNAME_strides_NAMEEND_VAL temp1_85)))
(assert (= temp1_87 #x0000000000000003))
(assert (= temp1_88 (select ARGNAME_strides_NAMEEND_VAL temp1_87)))
(assert (= temp1_89 #x0000000000000004))
(assert (= temp1_90 (select ARGNAME_strides_NAMEEND_VAL temp1_89)))
(assert (= temp1_91 #x0000000000000005))
(assert (= temp1_92 (select ARGNAME_strides_NAMEEND_VAL temp1_91)))
(assert (= temp1_96 #x0000000000000002))
(assert (= temp1_97 #x0000000000000003))
(assert (= temp1_98 #x0000000000000002))
(assert (= temp1_99 #x0000000000000003))
(assert (= temp1_94
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_98)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp1_99))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp1_97)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp1_96))))
(assert (= temp1_100 #x0000000000000002))
(assert (= temp1_101 #x0000000000000003))
(assert (= temp1_102 #x0000000000000003))
(assert (= temp1_95 (ite (= temp1_94 temp1_102) temp1_101 temp1_100)))
(assert (= temp1_104 #x0000000000000002))
(assert (= temp1_105 #x0000000000000004))
(assert (= temp1_106 #x0000000000000001))
(assert (= temp1_107 #x0000000000000002))
(assert (= temp1_108 #x0000000000000003))
(assert (= temp1_109 #x0000000000000000))
(assert (= temp1_110 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_109)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp1_110))
                temp1_108
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_106)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp1_107))
                     temp1_105
                     temp1_104))))
  (= temp1_93 a!1)))
(assert (= temp1_111 (select ARGNAME_strides_NAMEEND_VAL temp1_93)))
(assert (= var69459 temp1_111))
(assert (= var69461 var69459))
(assert (= temp1_115 #x0000000000000002))
(assert (= temp1_116 #x0000000000000003))
(assert (= temp1_117 #x0000000000000002))
(assert (= temp1_118 #x0000000000000003))
(assert (= temp1_113
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_117)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp1_118))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp1_116)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp1_115))))
(assert (= temp1_119 #x0000000000000002))
(assert (= temp1_120 #x0000000000000003))
(assert (= temp1_121 #x0000000000000003))
(assert (= temp1_114 (ite (= temp1_113 temp1_121) temp1_120 temp1_119)))
(assert (= temp1_123 #x0000000000000001))
(assert (= temp1_124 #x0000000000000003))
(assert (= temp1_125 #x0000000000000001))
(assert (= temp1_126 #x0000000000000002))
(assert (= temp1_127 #x0000000000000002))
(assert (= temp1_128 #x0000000000000000))
(assert (= temp1_129 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_128)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp1_129))
                temp1_127
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_125)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp1_126))
                     temp1_124
                     temp1_123))))
  (= temp1_112 a!1)))
(assert (= temp1_130 (select ARGNAME_strides_NAMEEND_VAL temp1_112)))
(assert (= var69464 temp1_130))
(assert (= var69466 var69464))
(assert (= temp1_134 #x0000000000000002))
(assert (= temp1_135 #x0000000000000003))
(assert (= temp1_136 #x0000000000000002))
(assert (= temp1_137 #x0000000000000003))
(assert (= temp1_132
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_136)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp1_137))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp1_135)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp1_134))))
(assert (= temp1_138 #x0000000000000002))
(assert (= temp1_139 #x0000000000000003))
(assert (= temp1_140 #x0000000000000003))
(assert (= temp1_133 (ite (= temp1_132 temp1_140) temp1_139 temp1_138)))
(assert (= temp1_142 #x0000000000000000))
(assert (= temp1_143 #x0000000000000002))
(assert (= temp1_144 #x0000000000000001))
(assert (= temp1_145 #x0000000000000002))
(assert (= temp1_146 #x0000000000000001))
(assert (= temp1_147 #x0000000000000000))
(assert (= temp1_148 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_147)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp1_148))
                temp1_146
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp1_144)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp1_145))
                     temp1_143
                     temp1_142))))
  (= temp1_131 a!1)))
(assert (= temp1_149 (select ARGNAME_strides_NAMEEND_VAL temp1_131)))
(assert (= var69469 temp1_149))
(assert (= var69471 var69469))
(assert (= temp1_150 #x0000000000000003))
(assert (= var273485 temp1_150))
(assert (= var207923 var273485))
(assert (= temp1_151 #x0000000000000000))
(assert (= var207926
   (ite (= var207923 temp1_151) #x0000000000000001 #x0000000000000000)))
(assert (= temp1_152 #x0000000000000000))
(assert (= var207926 temp1_152))
(assert (= temp1_153 #x0000000000000000))
(assert (= var207928 temp1_153))
(assert (= temp1_154 #x0000000000000003))
(assert (= var338918
   (ite (= ARGNAME_padding_NAMEEND temp1_154)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_155 #x0000000000000001))
(assert (= var338918 temp1_155))
(model-add temp1_1 () (_ BitVec 64) #x0000000000000001)
(model-add temp1_2 () (_ BitVec 64) #x0000000000000001)
(model-add var69292 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add extend_974
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))




















