(declare-fun temp2_1 () (_ BitVec 64))
(declare-fun temp2_2 () (_ BitVec 64))
(declare-fun var69292 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun extend_968 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp2_3 () (_ BitVec 64))
(declare-fun ARGNAME_orig_input_shape_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var69297 () (_ BitVec 64))
(declare-fun temp2_4 () (_ BitVec 64))
(declare-fun temp2_5 () (_ BitVec 64))
(declare-fun ARGNAME_grad_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var69324 () (_ BitVec 64))
(declare-fun temp2_6 () (_ BitVec 64))
(declare-fun temp2_7 () (_ BitVec 64))
(declare-fun var69362 () (_ BitVec 64))
(declare-fun temp2_8 () (_ BitVec 64))
(declare-fun temp2_9 () (_ BitVec 64))
(declare-fun var69383 () (_ BitVec 64))
(declare-fun var135179 () (_ BitVec 64))
(declare-fun temp2_10 () (_ BitVec 64))
(declare-fun var69384 () (_ BitVec 64))
(declare-fun var69394 () (_ BitVec 64))
(declare-fun temp2_12 () (_ BitVec 64))
(declare-fun ARGNAME_ksize_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp2_13 () (_ BitVec 64))
(declare-fun temp2_14 () (_ BitVec 64))
(declare-fun temp2_15 () (_ BitVec 64))
(declare-fun temp2_16 () (_ BitVec 64))
(declare-fun temp2_17 () (_ BitVec 64))
(declare-fun temp2_18 () (_ BitVec 64))
(declare-fun temp2_19 () (_ BitVec 64))
(declare-fun temp2_20 () (_ BitVec 64))
(declare-fun temp2_21 () (_ BitVec 64))
(declare-fun temp2_22 () (_ BitVec 64))
(declare-fun temp2_23 () (_ BitVec 64))
(declare-fun temp2_27 () (_ BitVec 64))
(declare-fun temp2_28 () (_ BitVec 64))
(declare-fun temp2_29 () (_ BitVec 64))
(declare-fun temp2_30 () (_ BitVec 64))
(declare-fun ARGNAME_ksize_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp2_25 () (_ BitVec 64))
(declare-fun temp2_31 () (_ BitVec 64))
(declare-fun temp2_32 () (_ BitVec 64))
(declare-fun temp2_33 () (_ BitVec 64))
(declare-fun temp2_26 () (_ BitVec 64))
(declare-fun temp2_35 () (_ BitVec 64))
(declare-fun temp2_36 () (_ BitVec 64))
(declare-fun temp2_37 () (_ BitVec 64))
(declare-fun temp2_38 () (_ BitVec 64))
(declare-fun temp2_39 () (_ BitVec 64))
(declare-fun temp2_40 () (_ BitVec 64))
(declare-fun temp2_41 () (_ BitVec 64))
(declare-fun temp2_24 () (_ BitVec 64))
(declare-fun temp2_42 () (_ BitVec 64))
(declare-fun var69441 () (_ BitVec 64))
(declare-fun var69443 () (_ BitVec 64))
(declare-fun temp2_46 () (_ BitVec 64))
(declare-fun temp2_47 () (_ BitVec 64))
(declare-fun temp2_48 () (_ BitVec 64))
(declare-fun temp2_49 () (_ BitVec 64))
(declare-fun temp2_44 () (_ BitVec 64))
(declare-fun temp2_50 () (_ BitVec 64))
(declare-fun temp2_51 () (_ BitVec 64))
(declare-fun temp2_52 () (_ BitVec 64))
(declare-fun temp2_45 () (_ BitVec 64))
(declare-fun temp2_54 () (_ BitVec 64))
(declare-fun temp2_55 () (_ BitVec 64))
(declare-fun temp2_56 () (_ BitVec 64))
(declare-fun temp2_57 () (_ BitVec 64))
(declare-fun temp2_58 () (_ BitVec 64))
(declare-fun temp2_59 () (_ BitVec 64))
(declare-fun temp2_60 () (_ BitVec 64))
(declare-fun temp2_43 () (_ BitVec 64))
(declare-fun temp2_61 () (_ BitVec 64))
(declare-fun var69446 () (_ BitVec 64))
(declare-fun var69448 () (_ BitVec 64))
(declare-fun temp2_65 () (_ BitVec 64))
(declare-fun temp2_66 () (_ BitVec 64))
(declare-fun temp2_67 () (_ BitVec 64))
(declare-fun temp2_68 () (_ BitVec 64))
(declare-fun temp2_63 () (_ BitVec 64))
(declare-fun temp2_69 () (_ BitVec 64))
(declare-fun temp2_70 () (_ BitVec 64))
(declare-fun temp2_71 () (_ BitVec 64))
(declare-fun temp2_64 () (_ BitVec 64))
(declare-fun temp2_73 () (_ BitVec 64))
(declare-fun temp2_74 () (_ BitVec 64))
(declare-fun temp2_75 () (_ BitVec 64))
(declare-fun temp2_76 () (_ BitVec 64))
(declare-fun temp2_77 () (_ BitVec 64))
(declare-fun temp2_78 () (_ BitVec 64))
(declare-fun temp2_79 () (_ BitVec 64))
(declare-fun temp2_62 () (_ BitVec 64))
(declare-fun temp2_80 () (_ BitVec 64))
(declare-fun var69451 () (_ BitVec 64))
(declare-fun var69453 () (_ BitVec 64))
(declare-fun temp2_81 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp2_82 () (_ BitVec 64))
(declare-fun temp2_83 () (_ BitVec 64))
(declare-fun temp2_84 () (_ BitVec 64))
(declare-fun temp2_85 () (_ BitVec 64))
(declare-fun temp2_86 () (_ BitVec 64))
(declare-fun temp2_87 () (_ BitVec 64))
(declare-fun temp2_88 () (_ BitVec 64))
(declare-fun temp2_89 () (_ BitVec 64))
(declare-fun temp2_90 () (_ BitVec 64))
(declare-fun temp2_91 () (_ BitVec 64))
(declare-fun temp2_92 () (_ BitVec 64))
(declare-fun temp2_96 () (_ BitVec 64))
(declare-fun temp2_97 () (_ BitVec 64))
(declare-fun temp2_98 () (_ BitVec 64))
(declare-fun temp2_99 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp2_94 () (_ BitVec 64))
(declare-fun temp2_100 () (_ BitVec 64))
(declare-fun temp2_101 () (_ BitVec 64))
(declare-fun temp2_102 () (_ BitVec 64))
(declare-fun temp2_95 () (_ BitVec 64))
(declare-fun temp2_104 () (_ BitVec 64))
(declare-fun temp2_105 () (_ BitVec 64))
(declare-fun temp2_106 () (_ BitVec 64))
(declare-fun temp2_107 () (_ BitVec 64))
(declare-fun temp2_108 () (_ BitVec 64))
(declare-fun temp2_109 () (_ BitVec 64))
(declare-fun temp2_110 () (_ BitVec 64))
(declare-fun temp2_93 () (_ BitVec 64))
(declare-fun temp2_111 () (_ BitVec 64))
(declare-fun var69459 () (_ BitVec 64))
(declare-fun var69461 () (_ BitVec 64))
(declare-fun temp2_115 () (_ BitVec 64))
(declare-fun temp2_116 () (_ BitVec 64))
(declare-fun temp2_117 () (_ BitVec 64))
(declare-fun temp2_118 () (_ BitVec 64))
(declare-fun temp2_113 () (_ BitVec 64))
(declare-fun temp2_119 () (_ BitVec 64))
(declare-fun temp2_120 () (_ BitVec 64))
(declare-fun temp2_121 () (_ BitVec 64))
(declare-fun temp2_114 () (_ BitVec 64))
(declare-fun temp2_123 () (_ BitVec 64))
(declare-fun temp2_124 () (_ BitVec 64))
(declare-fun temp2_125 () (_ BitVec 64))
(declare-fun temp2_126 () (_ BitVec 64))
(declare-fun temp2_127 () (_ BitVec 64))
(declare-fun temp2_128 () (_ BitVec 64))
(declare-fun temp2_129 () (_ BitVec 64))
(declare-fun temp2_112 () (_ BitVec 64))
(declare-fun temp2_130 () (_ BitVec 64))
(declare-fun var69464 () (_ BitVec 64))
(declare-fun var69466 () (_ BitVec 64))
(declare-fun temp2_134 () (_ BitVec 64))
(declare-fun temp2_135 () (_ BitVec 64))
(declare-fun temp2_136 () (_ BitVec 64))
(declare-fun temp2_137 () (_ BitVec 64))
(declare-fun temp2_132 () (_ BitVec 64))
(declare-fun temp2_138 () (_ BitVec 64))
(declare-fun temp2_139 () (_ BitVec 64))
(declare-fun temp2_140 () (_ BitVec 64))
(declare-fun temp2_133 () (_ BitVec 64))
(declare-fun temp2_142 () (_ BitVec 64))
(declare-fun temp2_143 () (_ BitVec 64))
(declare-fun temp2_144 () (_ BitVec 64))
(declare-fun temp2_145 () (_ BitVec 64))
(declare-fun temp2_146 () (_ BitVec 64))
(declare-fun temp2_147 () (_ BitVec 64))
(declare-fun temp2_148 () (_ BitVec 64))
(declare-fun temp2_131 () (_ BitVec 64))
(declare-fun temp2_149 () (_ BitVec 64))
(declare-fun var69469 () (_ BitVec 64))
(declare-fun var69471 () (_ BitVec 64))
(declare-fun temp2_150 () (_ BitVec 64))
(declare-fun var273485 () (_ BitVec 64))
(declare-fun var207923 () (_ BitVec 64))
(declare-fun temp2_151 () (_ BitVec 64))
(declare-fun var207926 () (_ BitVec 64))
(declare-fun temp2_152 () (_ BitVec 64))
(declare-fun temp2_153 () (_ BitVec 64))
(declare-fun var207928 () (_ BitVec 64))
(declare-fun temp2_154 () (_ BitVec 64))
(declare-fun var338918 () (_ BitVec 64))
(declare-fun temp2_155 () (_ BitVec 64))
(declare-fun temp2_156 () (_ BitVec 64))
(declare-fun var469552 () (_ BitVec 64))
(declare-fun temp2_157 () (_ BitVec 64))
(declare-fun var207929 () (_ BitVec 64))
(declare-fun temp2_158 () (_ BitVec 64))
(declare-fun var535629 () (_ BitVec 64))
(declare-fun var207942 () (_ BitVec 64))
(declare-fun var207943 () (_ BitVec 64))
(declare-fun temp2_160 () (_ BitVec 64))
(declare-fun ARGNAME_grad_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp2_161 () (_ BitVec 64))
(declare-fun temp2_162 () (_ BitVec 64))
(declare-fun temp2_163 () (_ BitVec 64))
(declare-fun temp2_164 () (_ BitVec 64))
(declare-fun temp2_165 () (_ BitVec 64))
(declare-fun temp2_166 () (_ BitVec 64))
(declare-fun temp2_167 () (_ BitVec 64))
(declare-fun temp2_168 () (_ BitVec 64))
(declare-fun temp2_169 () (_ BitVec 64))
(declare-fun temp2_170 () (_ BitVec 64))
(declare-fun temp2_171 () (_ BitVec 64))
(declare-fun temp2_172 () (_ BitVec 64))
(declare-fun temp2_173 () (_ BitVec 64))
(declare-fun var594084 () (_ BitVec 64))
(declare-fun temp2_174 () (_ BitVec 64))
(declare-fun temp2_175 () (_ BitVec 64))
(declare-fun var594115 () (_ BitVec 64))
(assert (or (= ARGNAME_padding_NAMEEND #x0000000000000001)
    (= ARGNAME_padding_NAMEEND #x0000000000000002)
    (= ARGNAME_padding_NAMEEND #x0000000000000003)))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp2_1 #x0000000000000001))
(assert (= var69292
   (ite (= extend_968 temp2_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2_2 #x0000000000000001))
(assert (= var69292 temp2_2))
(assert (= temp2_3 #x0000000000000005))
(assert (= var69297
   (ite (= ARGNAME_orig_input_shape_NAMEEND_LEN temp2_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2_4 #x0000000000000001))
(assert (= var69297 temp2_4))
(assert (= temp2_5 #x0000000000000005))
(assert (= var69324
   (ite (= ARGNAME_grad_NAMEEND_DIM temp2_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2_6 #x0000000000000001))
(assert (= var69324 temp2_6))
(assert (= temp2_7 #x0000000000000000))
(assert (= var69362
   (ite (bvsgt ARGNAME_orig_input_shape_NAMEEND_LEN temp2_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2_8 #x0000000000000001))
(assert (= var69362 temp2_8))
(assert (= temp2_9 #x0000000000000000))
(assert (= var69383 temp2_9))
(assert (= var135179 var69383))
(assert (= temp2_10 #x0000000000000001))
(assert (= var69384 (bvadd var69383 temp2_10)))
(assert (= var69394
   (ite (bvslt var69384 ARGNAME_orig_input_shape_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2_12 #x0000000000000000))
(assert (= temp2_13 (select ARGNAME_ksize_NAMEEND_VAL temp2_12)))
(assert (= temp2_14 #x0000000000000001))
(assert (= temp2_15 (select ARGNAME_ksize_NAMEEND_VAL temp2_14)))
(assert (= temp2_16 #x0000000000000002))
(assert (= temp2_17 (select ARGNAME_ksize_NAMEEND_VAL temp2_16)))
(assert (= temp2_18 #x0000000000000003))
(assert (= temp2_19 (select ARGNAME_ksize_NAMEEND_VAL temp2_18)))
(assert (= temp2_20 #x0000000000000004))
(assert (= temp2_21 (select ARGNAME_ksize_NAMEEND_VAL temp2_20)))
(assert (= temp2_22 #x0000000000000005))
(assert (= temp2_23 (select ARGNAME_ksize_NAMEEND_VAL temp2_22)))
(assert (= temp2_27 #x0000000000000002))
(assert (= temp2_28 #x0000000000000003))
(assert (= temp2_29 #x0000000000000002))
(assert (= temp2_30 #x0000000000000003))
(assert (= temp2_25
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_29)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2_30))
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp2_28)
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp2_27))))
(assert (= temp2_31 #x0000000000000002))
(assert (= temp2_32 #x0000000000000003))
(assert (= temp2_33 #x0000000000000003))
(assert (= temp2_26 (ite (= temp2_25 temp2_33) temp2_32 temp2_31)))
(assert (= temp2_35 #x0000000000000002))
(assert (= temp2_36 #x0000000000000004))
(assert (= temp2_37 #x0000000000000001))
(assert (= temp2_38 #x0000000000000002))
(assert (= temp2_39 #x0000000000000003))
(assert (= temp2_40 #x0000000000000000))
(assert (= temp2_41 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_40)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp2_41))
                temp2_39
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_37)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp2_38))
                     temp2_36
                     temp2_35))))
  (= temp2_24 a!1)))
(assert (= temp2_42 (select ARGNAME_ksize_NAMEEND_VAL temp2_24)))
(assert (= var69441 temp2_42))
(assert (= var69443 var69441))
(assert (= temp2_46 #x0000000000000002))
(assert (= temp2_47 #x0000000000000003))
(assert (= temp2_48 #x0000000000000002))
(assert (= temp2_49 #x0000000000000003))
(assert (= temp2_44
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_48)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2_49))
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp2_47)
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp2_46))))
(assert (= temp2_50 #x0000000000000002))
(assert (= temp2_51 #x0000000000000003))
(assert (= temp2_52 #x0000000000000003))
(assert (= temp2_45 (ite (= temp2_44 temp2_52) temp2_51 temp2_50)))
(assert (= temp2_54 #x0000000000000001))
(assert (= temp2_55 #x0000000000000003))
(assert (= temp2_56 #x0000000000000001))
(assert (= temp2_57 #x0000000000000002))
(assert (= temp2_58 #x0000000000000002))
(assert (= temp2_59 #x0000000000000000))
(assert (= temp2_60 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_59)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp2_60))
                temp2_58
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_56)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp2_57))
                     temp2_55
                     temp2_54))))
  (= temp2_43 a!1)))
(assert (= temp2_61 (select ARGNAME_ksize_NAMEEND_VAL temp2_43)))
(assert (= var69446 temp2_61))
(assert (= var69448 var69446))
(assert (= temp2_65 #x0000000000000002))
(assert (= temp2_66 #x0000000000000003))
(assert (= temp2_67 #x0000000000000002))
(assert (= temp2_68 #x0000000000000003))
(assert (= temp2_63
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_67)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2_68))
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp2_66)
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp2_65))))
(assert (= temp2_69 #x0000000000000002))
(assert (= temp2_70 #x0000000000000003))
(assert (= temp2_71 #x0000000000000003))
(assert (= temp2_64 (ite (= temp2_63 temp2_71) temp2_70 temp2_69)))
(assert (= temp2_73 #x0000000000000000))
(assert (= temp2_74 #x0000000000000002))
(assert (= temp2_75 #x0000000000000001))
(assert (= temp2_76 #x0000000000000002))
(assert (= temp2_77 #x0000000000000001))
(assert (= temp2_78 #x0000000000000000))
(assert (= temp2_79 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_78)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp2_79))
                temp2_77
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_75)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp2_76))
                     temp2_74
                     temp2_73))))
  (= temp2_62 a!1)))
(assert (= temp2_80 (select ARGNAME_ksize_NAMEEND_VAL temp2_62)))
(assert (= var69451 temp2_80))
(assert (= var69453 var69451))
(assert (= temp2_81 #x0000000000000000))
(assert (= temp2_82 (select ARGNAME_strides_NAMEEND_VAL temp2_81)))
(assert (= temp2_83 #x0000000000000001))
(assert (= temp2_84 (select ARGNAME_strides_NAMEEND_VAL temp2_83)))
(assert (= temp2_85 #x0000000000000002))
(assert (= temp2_86 (select ARGNAME_strides_NAMEEND_VAL temp2_85)))
(assert (= temp2_87 #x0000000000000003))
(assert (= temp2_88 (select ARGNAME_strides_NAMEEND_VAL temp2_87)))
(assert (= temp2_89 #x0000000000000004))
(assert (= temp2_90 (select ARGNAME_strides_NAMEEND_VAL temp2_89)))
(assert (= temp2_91 #x0000000000000005))
(assert (= temp2_92 (select ARGNAME_strides_NAMEEND_VAL temp2_91)))
(assert (= temp2_96 #x0000000000000002))
(assert (= temp2_97 #x0000000000000003))
(assert (= temp2_98 #x0000000000000002))
(assert (= temp2_99 #x0000000000000003))
(assert (= temp2_94
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_98)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2_99))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp2_97)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp2_96))))
(assert (= temp2_100 #x0000000000000002))
(assert (= temp2_101 #x0000000000000003))
(assert (= temp2_102 #x0000000000000003))
(assert (= temp2_95 (ite (= temp2_94 temp2_102) temp2_101 temp2_100)))
(assert (= temp2_104 #x0000000000000002))
(assert (= temp2_105 #x0000000000000004))
(assert (= temp2_106 #x0000000000000001))
(assert (= temp2_107 #x0000000000000002))
(assert (= temp2_108 #x0000000000000003))
(assert (= temp2_109 #x0000000000000000))
(assert (= temp2_110 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_109)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp2_110))
                temp2_108
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_106)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp2_107))
                     temp2_105
                     temp2_104))))
  (= temp2_93 a!1)))
(assert (= temp2_111 (select ARGNAME_strides_NAMEEND_VAL temp2_93)))
(assert (= var69459 temp2_111))
(assert (= var69461 var69459))
(assert (= temp2_115 #x0000000000000002))
(assert (= temp2_116 #x0000000000000003))
(assert (= temp2_117 #x0000000000000002))
(assert (= temp2_118 #x0000000000000003))
(assert (= temp2_113
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_117)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2_118))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp2_116)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp2_115))))
(assert (= temp2_119 #x0000000000000002))
(assert (= temp2_120 #x0000000000000003))
(assert (= temp2_121 #x0000000000000003))
(assert (= temp2_114 (ite (= temp2_113 temp2_121) temp2_120 temp2_119)))
(assert (= temp2_123 #x0000000000000001))
(assert (= temp2_124 #x0000000000000003))
(assert (= temp2_125 #x0000000000000001))
(assert (= temp2_126 #x0000000000000002))
(assert (= temp2_127 #x0000000000000002))
(assert (= temp2_128 #x0000000000000000))
(assert (= temp2_129 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_128)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp2_129))
                temp2_127
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_125)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp2_126))
                     temp2_124
                     temp2_123))))
  (= temp2_112 a!1)))
(assert (= temp2_130 (select ARGNAME_strides_NAMEEND_VAL temp2_112)))
(assert (= var69464 temp2_130))
(assert (= var69466 var69464))
(assert (= temp2_134 #x0000000000000002))
(assert (= temp2_135 #x0000000000000003))
(assert (= temp2_136 #x0000000000000002))
(assert (= temp2_137 #x0000000000000003))
(assert (= temp2_132
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_136)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp2_137))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp2_135)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp2_134))))
(assert (= temp2_138 #x0000000000000002))
(assert (= temp2_139 #x0000000000000003))
(assert (= temp2_140 #x0000000000000003))
(assert (= temp2_133 (ite (= temp2_132 temp2_140) temp2_139 temp2_138)))
(assert (= temp2_142 #x0000000000000000))
(assert (= temp2_143 #x0000000000000002))
(assert (= temp2_144 #x0000000000000001))
(assert (= temp2_145 #x0000000000000002))
(assert (= temp2_146 #x0000000000000001))
(assert (= temp2_147 #x0000000000000000))
(assert (= temp2_148 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_147)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp2_148))
                temp2_146
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp2_144)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp2_145))
                     temp2_143
                     temp2_142))))
  (= temp2_131 a!1)))
(assert (= temp2_149 (select ARGNAME_strides_NAMEEND_VAL temp2_131)))
(assert (= var69469 temp2_149))
(assert (= var69471 var69469))
(assert (= temp2_150 #x0000000000000003))
(assert (= var273485 temp2_150))
(assert (= var207923 var273485))
(assert (= temp2_151 #x0000000000000000))
(assert (= var207926
   (ite (= var207923 temp2_151) #x0000000000000001 #x0000000000000000)))
(assert (= temp2_152 #x0000000000000000))
(assert (= var207926 temp2_152))
(assert (= temp2_153 #x0000000000000000))
(assert (= var207928 temp2_153))
(assert (= temp2_154 #x0000000000000003))
(assert (= var338918
   (ite (= ARGNAME_padding_NAMEEND temp2_154)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp2_155 #x0000000000000000))
(assert (= var338918 temp2_155))
(assert (= temp2_156 #x0000000000000001))
(assert (= var469552 temp2_156))
(assert (= temp2_157 #x0000000000000001))
(assert (= var207929 (bvadd var207928 temp2_157)))
(assert (= temp2_158 #x0000000000000003))
(assert (= var535629 temp2_158))
(assert (= var207942 var535629))
(assert (= var207943
   (ite (bvslt var207929 var207942) #x0000000000000001 #x0000000000000000)))
(assert (= temp2_160 #x0000000000000000))
(assert (= temp2_161 (select ARGNAME_grad_NAMEEND_DIMSIZE temp2_160)))
(assert (= temp2_162 #x0000000000000001))
(assert (= temp2_163 (select ARGNAME_grad_NAMEEND_DIMSIZE temp2_162)))
(assert (= temp2_164 #x0000000000000002))
(assert (= temp2_165 (select ARGNAME_grad_NAMEEND_DIMSIZE temp2_164)))
(assert (= temp2_166 #x0000000000000003))
(assert (= temp2_167 (select ARGNAME_grad_NAMEEND_DIMSIZE temp2_166)))
(assert (= temp2_168 #x0000000000000004))
(assert (= temp2_169 (select ARGNAME_grad_NAMEEND_DIMSIZE temp2_168)))
(assert (= temp2_170 #x0000000000000005))
(assert (= temp2_171 (select ARGNAME_grad_NAMEEND_DIMSIZE temp2_170)))
(assert (= temp2_172 #x0000000000000000))
(assert (= temp2_173 (select ARGNAME_grad_NAMEEND_DIMSIZE temp2_172)))
(assert (= var594084 temp2_173))
(assert (= temp2_174 #x0000000000000004))
(assert (= temp2_175 (select ARGNAME_grad_NAMEEND_DIMSIZE temp2_174)))
(assert (= var594115 temp2_175))
(model-add temp2_1 () (_ BitVec 64) #x0000000000000001)
(model-add temp2_2 () (_ BitVec 64) #x0000000000000001)
(model-add var69292 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add extend_968
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))




















