(declare-fun temp0_1 () (_ BitVec 64))
(declare-fun var131866 () (_ BitVec 64))
(declare-fun var131860 () (_ BitVec 64))
(declare-fun temp0_2 () (_ BitVec 64))
(declare-fun var66054 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_min_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp0_3 () (_ BitVec 64))
(declare-fun var197488 () (_ BitVec 64))
(declare-fun temp0_4 () (_ BitVec 64))
(declare-fun ARGNAME_max_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var262938 () (_ BitVec 64))
(declare-fun var262932 () (_ BitVec 64))
(declare-fun var66103 () (_ BitVec 64))
(declare-fun temp0_5 () (_ BitVec 64))
(declare-fun temp0_6 () (_ BitVec 64))
(declare-fun var328560 () (_ BitVec 64))
(declare-fun temp0_7 () (_ BitVec 64))
(declare-fun var394104 () (_ BitVec 64))
(declare-fun var394106 () (_ BitVec 64))
(declare-fun var525904 () (_ BitVec 64))
(declare-fun temp0_8 () (_ BitVec 64))
(declare-fun var525905 () (_ BitVec 64))
(declare-fun temp0_9 () (_ BitVec 64))
(declare-fun temp0_10 () (_ BitVec 64))
(declare-fun var525914 () (_ BitVec 64))
(declare-fun temp0_11 () (_ BitVec 64))
(declare-fun var525915 () (_ BitVec 64))
(declare-fun temp0_12 () (_ BitVec 64))
(declare-fun var525916 () (_ BitVec 64))
(declare-fun temp0_13 () (_ BitVec 64))
(declare-fun temp0_14 () (_ BitVec 64))
(declare-fun ARGNAME_images_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var525942 () (_ BitVec 64))
(declare-fun temp0_15 () (_ BitVec 64))
(declare-fun temp0_16 () (_ BitVec 64))
(declare-fun ARGNAME_images_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp0_17 () (_ BitVec 64))
(declare-fun temp0_18 () (_ BitVec 64))
(declare-fun temp0_19 () (_ BitVec 64))
(declare-fun temp0_20 () (_ BitVec 64))
(declare-fun temp0_21 () (_ BitVec 64))
(declare-fun temp0_22 () (_ BitVec 64))
(declare-fun temp0_23 () (_ BitVec 64))
(declare-fun temp0_24 () (_ BitVec 64))
(declare-fun temp0_25 () (_ BitVec 64))
(declare-fun temp0_26 () (_ BitVec 64))
(declare-fun temp0_27 () (_ BitVec 64))
(declare-fun temp0_28 () (_ BitVec 64))
(declare-fun temp0_29 () (_ BitVec 64))
(declare-fun var525979 () (_ BitVec 64))
(declare-fun temp0_30 () (_ BitVec 64))
(declare-fun temp0_31 () (_ BitVec 64))
(declare-fun var525982 () (_ BitVec 64))
(declare-fun temp0_32 () (_ BitVec 64))
(declare-fun var525985 () (_ BitVec 64))
(declare-fun temp0_33 () (_ BitVec 64))
(declare-fun temp0_34 () (_ BitVec 64))
(declare-fun temp0_35 () (_ BitVec 64))
(declare-fun var526005 () (_ BitVec 64))
(declare-fun temp0_36 () (_ BitVec 64))
(declare-fun var526006 () (_ BitVec 64))
(declare-fun temp0_37 () (_ BitVec 64))
(declare-fun temp0_38 () (_ BitVec 64))
(declare-fun temp0_39 () (_ BitVec 64))
(declare-fun var526008 () (_ BitVec 64))
(declare-fun temp0_40 () (_ BitVec 64))
(declare-fun var526009 () (_ BitVec 64))
(declare-fun temp0_41 () (_ BitVec 64))
(declare-fun temp0_42 () (_ BitVec 64))
(declare-fun temp0_43 () (_ BitVec 64))
(declare-fun var526029 () (_ BitVec 64))
(declare-fun temp0_44 () (_ BitVec 64))
(declare-fun var591893 () (_ BitVec 64))
(declare-fun var526030 () (_ BitVec 64))
(declare-fun var526033 () (_ BitVec 64))
(declare-fun var526034 () (_ BitVec 64))
(declare-fun temp0_45 () (_ BitVec 64))
(declare-fun temp0_46 () (_ BitVec 64))
(declare-fun temp0_47 () (_ BitVec 64))
(declare-fun var526036 () (_ BitVec 64))
(declare-fun temp0_48 () (_ BitVec 64))
(declare-fun var657429 () (_ BitVec 64))
(declare-fun var526037 () (_ BitVec 64))
(declare-fun var526038 () (_ BitVec 64))
(declare-fun var526039 () (_ BitVec 64))
(declare-fun temp0_49 () (_ BitVec 64))
(declare-fun temp0_50 () (_ BitVec 64))
(declare-fun temp0_51 () (_ BitVec 64))
(declare-fun var526059 () (_ BitVec 64))
(declare-fun temp0_52 () (_ BitVec 64))
(declare-fun var526060 () (_ BitVec 64))
(declare-fun temp0_53 () (_ BitVec 64))
(declare-fun var526061 () (_ BitVec 64))
(declare-fun temp0_54 () (_ BitVec 64))
(declare-fun temp0_55 () (_ BitVec 64))
(declare-fun var526064 () (_ BitVec 64))
(declare-fun temp0_56 () (_ BitVec 64))
(declare-fun var526065 () (_ BitVec 64))
(declare-fun temp0_57 () (_ BitVec 64))
(declare-fun var526066 () (_ BitVec 64))
(declare-fun temp0_58 () (_ BitVec 64))
(declare-fun ARGNAME_size_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var526073 () (_ BitVec 64))
(declare-fun temp0_59 () (_ BitVec 64))
(declare-fun temp0_60 () (_ BitVec 64))
(declare-fun ARGNAME_size_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var526107 () (_ BitVec 64))
(declare-fun temp0_61 () (_ BitVec 64))
(declare-fun temp0_62 () (_ BitVec 64))
(declare-fun var722982 () (_ BitVec 64))
(declare-fun temp0_63 () (_ BitVec 64))
(declare-fun var788518 () (_ BitVec 64))
(declare-fun var526189 () (_ BitVec 64))
(declare-fun var854060 () (_ BitVec 64))
(declare-fun var526198 () (_ BitVec 64))
(declare-fun var919596 () (_ BitVec 64))
(declare-fun temp0_64 () (_ BitVec 64))
(declare-fun var985145 () (_ BitVec 64))
(declare-fun var526212 () (_ BitVec 64))
(declare-fun var526215 () (_ BitVec 64))
(assert (= temp0_1 #x0000000000000000))
(assert (= var131866
   (ite (= ARGNAME_min_NAMEEND_DIM temp0_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var131860 var131866))
(assert (= var66054 var131860))
(assert (= temp0_2 #x0000000000000001))
(assert (= var66054 temp0_2))
(assert (= temp0_3 #x0000000000000000))
(assert (= var197488 temp0_3))
(assert (= temp0_4 #x0000000000000000))
(assert (= var262938
   (ite (= ARGNAME_max_NAMEEND_DIM temp0_4)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var262932 var262938))
(assert (= var66103 var262932))
(assert (= temp0_5 #x0000000000000001))
(assert (= var66103 temp0_5))
(assert (= temp0_6 #x0000000000000000))
(assert (= var328560 temp0_6))
(assert (= temp0_7 #x0000000000000000))
(assert (= var394104 temp0_7))
(assert (= var394106 var394104))
(assert (= var525904 var394106))
(assert (= temp0_8 #x0000000000000000))
(assert (= var525905 (ite (= var525904 temp0_8) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_9 #x0000000000000001))
(assert (= var525905 temp0_9))
(assert (= temp0_10 #x0000000000000001))
(assert (= var525914 temp0_10))
(assert (= temp0_11 #x0000000000000001))
(assert (= var525915 (bvand var525914 temp0_11)))
(assert (= temp0_12 #x0000000000000000))
(assert (= var525916 (ite (= var525915 temp0_12) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_13 #x0000000000000000))
(assert (= var525916 temp0_13))
(assert (= temp0_14 #x0000000000000004))
(assert (= var525942
   (ite (= ARGNAME_images_NAMEEND_DIM temp0_14)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_15 #x0000000000000001))
(assert (= var525942 temp0_15))
(assert (= temp0_16 #x0000000000000000))
(assert (= temp0_17 (select ARGNAME_images_NAMEEND_DIMSIZE temp0_16)))
(assert (= temp0_18 #x0000000000000001))
(assert (= temp0_19 (select ARGNAME_images_NAMEEND_DIMSIZE temp0_18)))
(assert (= temp0_20 #x0000000000000002))
(assert (= temp0_21 (select ARGNAME_images_NAMEEND_DIMSIZE temp0_20)))
(assert (= temp0_22 #x0000000000000003))
(assert (= temp0_23 (select ARGNAME_images_NAMEEND_DIMSIZE temp0_22)))
(assert (= temp0_24 #x0000000000000004))
(assert (= temp0_25 (select ARGNAME_images_NAMEEND_DIMSIZE temp0_24)))
(assert (= temp0_26 #x0000000000000005))
(assert (= temp0_27 (select ARGNAME_images_NAMEEND_DIMSIZE temp0_26)))
(assert (= temp0_28 #x0000000000000000))
(assert (= temp0_29 (select ARGNAME_images_NAMEEND_DIMSIZE temp0_28)))
(assert (= var525979 temp0_29))
(assert (= temp0_30 #x0000000000000003))
(assert (= temp0_31 (select ARGNAME_images_NAMEEND_DIMSIZE temp0_30)))
(assert (= var525982 temp0_31))
(assert (= temp0_32 #x0000000000000000))
(assert (= var525985
   (ite (bvsgt var525982 temp0_32) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_33 #x0000000000000001))
(assert (= var525985 temp0_33))
(assert (= temp0_34 #x0000000000000001))
(assert (= temp0_35 (select ARGNAME_images_NAMEEND_DIMSIZE temp0_34)))
(assert (= var526005 temp0_35))
(assert (= temp0_36 #x0000000000000000))
(assert (= var526006
   (ite (bvsgt var526005 temp0_36) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_37 #x0000000000000001))
(assert (= var526006 temp0_37))
(assert (= temp0_38 #x0000000000000002))
(assert (= temp0_39 (select ARGNAME_images_NAMEEND_DIMSIZE temp0_38)))
(assert (= var526008 temp0_39))
(assert (= temp0_40 #x0000000000000000))
(assert (= var526009
   (ite (bvsgt var526008 temp0_40) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_41 #x0000000000000001))
(assert (= var526009 temp0_41))
(assert (= temp0_42 #x0000000000000001))
(assert (= temp0_43 (select ARGNAME_images_NAMEEND_DIMSIZE temp0_42)))
(assert (= var526029 temp0_43))
(assert (= temp0_44 #x000000007fffffff))
(assert (= var591893 temp0_44))
(assert (= var526030 var591893))
(assert (= var526033 var526030))
(assert (= var526034
   (ite (bvslt var526029 var526033) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_45 #x0000000000000001))
(assert (= var526034 temp0_45))
(assert (= temp0_46 #x0000000000000002))
(assert (= temp0_47 (select ARGNAME_images_NAMEEND_DIMSIZE temp0_46)))
(assert (= var526036 temp0_47))
(assert (= temp0_48 #x000000007fffffff))
(assert (= var657429 temp0_48))
(assert (= var526037 var657429))
(assert (= var526038 var526037))
(assert (= var526039
   (ite (bvslt var526036 var526038) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_49 #x0000000000000001))
(assert (= var526039 temp0_49))
(assert (= temp0_50 #x0000000000000001))
(assert (= temp0_51 (select ARGNAME_images_NAMEEND_DIMSIZE temp0_50)))
(assert (= var526059 temp0_51))
(assert (= temp0_52 #x0000000000000020))
(assert (= var526060 (bvshl var526059 temp0_52)))
(assert (= temp0_53 #x0000000000000020))
(assert (= var526061 (bvashr var526060 temp0_53)))
(assert (= temp0_54 #x0000000000000002))
(assert (= temp0_55 (select ARGNAME_images_NAMEEND_DIMSIZE temp0_54)))
(assert (= var526064 temp0_55))
(assert (= temp0_56 #x0000000000000020))
(assert (= var526065 (bvshl var526064 temp0_56)))
(assert (= temp0_57 #x0000000000000020))
(assert (= var526066 (bvashr var526065 temp0_57)))
(assert (= temp0_58 #x0000000000000001))
(assert (= var526073
   (ite (= ARGNAME_size_NAMEEND_DIM temp0_58)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_59 #x0000000000000001))
(assert (= var526073 temp0_59))
(assert (= temp0_60 #x0000000000000002))
(assert (= var526107
   (ite (= ARGNAME_size_NAMEEND_NUMELEMENT temp0_60)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_61 #x0000000000000001))
(assert (= var526107 temp0_61))
(assert (= temp0_62 #x0000000000000000))
(assert (= var722982 temp0_62))
(assert (= temp0_63 #x0000000000000001))
(assert (= var788518 temp0_63))
(assert (= var526189 var526061))
(assert (= var854060 var526189))
(assert (= var526198 var526066))
(assert (= var919596 var526198))
(assert (= temp0_64 #xffffffffffffffff))
(assert (= var985145 temp0_64))
(assert (= var526212 var985145))
(assert (= var526215 var526212))
(model-add temp0_1 () (_ BitVec 64) #x0000000000000000)
(model-add var131866 () (_ BitVec 64) #x0000000000000001)
(model-add var131860 () (_ BitVec 64) #x0000000000000001)
(model-add temp0_2 () (_ BitVec 64) #x0000000000000001)
(model-add var66054 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_min_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000000 (bvnot #x0000000000000000)))

























