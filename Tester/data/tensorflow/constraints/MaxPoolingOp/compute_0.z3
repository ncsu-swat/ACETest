(declare-fun temp50_1 () (_ BitVec 64))
(declare-fun var930499 () (_ BitVec 64))
(declare-fun var988232 () (_ BitVec 64))
(declare-fun temp50_2 () (_ BitVec 64))
(declare-fun var988235 () (_ BitVec 64))
(declare-fun temp50_3 () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND () (_ BitVec 64))
(declare-fun var988253 () (_ BitVec 64))
(declare-fun temp50_4 () (_ BitVec 64))
(declare-fun temp50_5 () (_ BitVec 64))
(declare-fun var983053 () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp50_6 () (_ BitVec 64))
(declare-fun temp50_7 () (_ BitVec 64))
(declare-fun temp50_8 () (_ BitVec 64))
(declare-fun temp50_9 () (_ BitVec 64))
(declare-fun temp50_10 () (_ BitVec 64))
(declare-fun temp50_11 () (_ BitVec 64))
(declare-fun temp50_12 () (_ BitVec 64))
(declare-fun temp50_13 () (_ BitVec 64))
(declare-fun temp50_14 () (_ BitVec 64))
(declare-fun temp50_15 () (_ BitVec 64))
(declare-fun temp50_16 () (_ BitVec 64))
(declare-fun temp50_17 () (_ BitVec 64))
(declare-fun temp50_18 () (_ BitVec 64))
(declare-fun temp50_19 () (_ BitVec 64))
(declare-fun temp50_20 () (_ BitVec 64))
(declare-fun temp50_21 () (_ BitVec 64))
(declare-fun temp50_22 () (_ BitVec 64))
(declare-fun temp50_23 () (_ BitVec 64))
(declare-fun temp50_24 () (_ BitVec 64))
(declare-fun temp50_25 () (_ BitVec 64))
(declare-fun temp50_26 () (_ BitVec 64))
(declare-fun temp50_27 () (_ BitVec 64))
(declare-fun temp50_28 () (_ BitVec 64))
(declare-fun temp50_29 () (_ BitVec 64))
(declare-fun temp50_30 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var988256 () (_ BitVec 64))
(declare-fun var988230 () (_ BitVec 64))
(declare-fun var930529 () (_ BitVec 64))
(declare-fun temp50_31 () (_ BitVec 64))
(declare-fun var930530 () (_ BitVec 64))
(declare-fun temp50_32 () (_ BitVec 64))
(declare-fun temp50_33 () (_ BitVec 64))
(declare-fun temp50_34 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp50_35 () (_ BitVec 64))
(declare-fun temp50_36 () (_ BitVec 64))
(declare-fun temp50_37 () (_ BitVec 64))
(declare-fun temp50_38 () (_ BitVec 64))
(declare-fun temp50_39 () (_ BitVec 64))
(declare-fun temp50_40 () (_ BitVec 64))
(declare-fun temp50_41 () (_ BitVec 64))
(declare-fun temp50_42 () (_ BitVec 64))
(declare-fun temp50_43 () (_ BitVec 64))
(declare-fun temp50_44 () (_ BitVec 64))
(declare-fun temp50_45 () (_ BitVec 64))
(declare-fun temp50_46 () (_ BitVec 64))
(declare-fun temp50_47 () (_ BitVec 64))
(declare-fun temp50_48 () (_ BitVec 64))
(declare-fun temp50_49 () (_ BitVec 64))
(declare-fun temp50_50 () (_ BitVec 64))
(declare-fun temp50_54 () (_ BitVec 64))
(declare-fun temp50_55 () (_ BitVec 64))
(declare-fun temp50_56 () (_ BitVec 64))
(declare-fun temp50_57 () (_ BitVec 64))
(declare-fun temp50_52 () (_ BitVec 64))
(declare-fun temp50_58 () (_ BitVec 64))
(declare-fun temp50_59 () (_ BitVec 64))
(declare-fun temp50_60 () (_ BitVec 64))
(declare-fun temp50_53 () (_ BitVec 64))
(declare-fun temp50_62 () (_ BitVec 64))
(declare-fun temp50_63 () (_ BitVec 64))
(declare-fun temp50_64 () (_ BitVec 64))
(declare-fun temp50_65 () (_ BitVec 64))
(declare-fun temp50_66 () (_ BitVec 64))
(declare-fun temp50_51 () (_ BitVec 64))
(declare-fun temp50_67 () (_ BitVec 64))
(declare-fun temp50_68 () (_ BitVec 64))
(declare-fun var930558 () (_ BitVec 64))
(declare-fun temp50_69 () (_ BitVec 64))
(declare-fun var930560 () (_ BitVec 64))
(declare-fun temp50_70 () (_ BitVec 64))
(declare-fun temp50_71 () (_ BitVec 64))
(declare-fun var930561 () (_ BitVec 64))
(declare-fun var930562 () (_ BitVec 64))
(declare-fun var930563 () (_ BitVec 64))
(declare-fun temp50_75 () (_ BitVec 64))
(declare-fun temp50_76 () (_ BitVec 64))
(declare-fun temp50_77 () (_ BitVec 64))
(declare-fun temp50_78 () (_ BitVec 64))
(declare-fun temp50_73 () (_ BitVec 64))
(declare-fun temp50_79 () (_ BitVec 64))
(declare-fun temp50_80 () (_ BitVec 64))
(declare-fun temp50_81 () (_ BitVec 64))
(declare-fun temp50_74 () (_ BitVec 64))
(declare-fun temp50_83 () (_ BitVec 64))
(declare-fun temp50_84 () (_ BitVec 64))
(declare-fun temp50_85 () (_ BitVec 64))
(declare-fun temp50_86 () (_ BitVec 64))
(declare-fun temp50_87 () (_ BitVec 64))
(declare-fun temp50_88 () (_ BitVec 64))
(declare-fun temp50_72 () (_ BitVec 64))
(declare-fun temp50_89 () (_ BitVec 64))
(declare-fun temp50_90 () (_ BitVec 64))
(declare-fun var930566 () (_ BitVec 64))
(declare-fun var930568 () (_ BitVec 64))
(declare-fun temp50_94 () (_ BitVec 64))
(declare-fun temp50_95 () (_ BitVec 64))
(declare-fun temp50_96 () (_ BitVec 64))
(declare-fun temp50_97 () (_ BitVec 64))
(declare-fun temp50_92 () (_ BitVec 64))
(declare-fun temp50_98 () (_ BitVec 64))
(declare-fun temp50_99 () (_ BitVec 64))
(declare-fun temp50_100 () (_ BitVec 64))
(declare-fun temp50_93 () (_ BitVec 64))
(declare-fun temp50_102 () (_ BitVec 64))
(declare-fun temp50_103 () (_ BitVec 64))
(declare-fun temp50_104 () (_ BitVec 64))
(declare-fun temp50_105 () (_ BitVec 64))
(declare-fun temp50_106 () (_ BitVec 64))
(declare-fun temp50_107 () (_ BitVec 64))
(declare-fun temp50_91 () (_ BitVec 64))
(declare-fun temp50_108 () (_ BitVec 64))
(declare-fun temp50_109 () (_ BitVec 64))
(declare-fun var930571 () (_ BitVec 64))
(declare-fun var930573 () (_ BitVec 64))
(declare-fun temp50_113 () (_ BitVec 64))
(declare-fun temp50_114 () (_ BitVec 64))
(declare-fun temp50_115 () (_ BitVec 64))
(declare-fun temp50_116 () (_ BitVec 64))
(declare-fun temp50_111 () (_ BitVec 64))
(declare-fun temp50_117 () (_ BitVec 64))
(declare-fun temp50_118 () (_ BitVec 64))
(declare-fun temp50_119 () (_ BitVec 64))
(declare-fun temp50_112 () (_ BitVec 64))
(declare-fun temp50_121 () (_ BitVec 64))
(declare-fun temp50_122 () (_ BitVec 64))
(declare-fun temp50_123 () (_ BitVec 64))
(declare-fun temp50_124 () (_ BitVec 64))
(declare-fun temp50_110 () (_ BitVec 64))
(declare-fun temp50_125 () (_ BitVec 64))
(declare-fun temp50_126 () (_ BitVec 64))
(declare-fun var930576 () (_ BitVec 64))
(declare-fun var930578 () (_ BitVec 64))
(declare-fun temp50_127 () (_ BitVec 64))
(declare-fun temp50_128 () (_ BitVec 64))
(declare-fun ARGNAME_ksize_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp50_129 () (_ BitVec 64))
(declare-fun temp50_130 () (_ BitVec 64))
(declare-fun temp50_131 () (_ BitVec 64))
(declare-fun temp50_132 () (_ BitVec 64))
(declare-fun temp50_133 () (_ BitVec 64))
(declare-fun temp50_134 () (_ BitVec 64))
(declare-fun temp50_135 () (_ BitVec 64))
(declare-fun temp50_136 () (_ BitVec 64))
(declare-fun temp50_137 () (_ BitVec 64))
(declare-fun temp50_138 () (_ BitVec 64))
(declare-fun temp50_139 () (_ BitVec 64))
(declare-fun temp50_140 () (_ BitVec 64))
(declare-fun temp50_141 () (_ BitVec 64))
(declare-fun temp50_142 () (_ BitVec 64))
(declare-fun temp50_143 () (_ BitVec 64))
(declare-fun temp50_144 () (_ BitVec 64))
(declare-fun temp50_148 () (_ BitVec 64))
(declare-fun temp50_149 () (_ BitVec 64))
(declare-fun temp50_150 () (_ BitVec 64))
(declare-fun temp50_151 () (_ BitVec 64))
(declare-fun ARGNAME_ksize_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp50_146 () (_ BitVec 64))
(declare-fun temp50_152 () (_ BitVec 64))
(declare-fun temp50_153 () (_ BitVec 64))
(declare-fun temp50_154 () (_ BitVec 64))
(declare-fun temp50_147 () (_ BitVec 64))
(declare-fun temp50_156 () (_ BitVec 64))
(declare-fun temp50_157 () (_ BitVec 64))
(declare-fun temp50_158 () (_ BitVec 64))
(declare-fun temp50_159 () (_ BitVec 64))
(declare-fun temp50_160 () (_ BitVec 64))
(declare-fun temp50_161 () (_ BitVec 64))
(declare-fun temp50_145 () (_ BitVec 64))
(declare-fun temp50_162 () (_ BitVec 64))
(declare-fun temp50_163 () (_ BitVec 64))
(declare-fun var930581 () (_ BitVec 64))
(declare-fun temp50_167 () (_ BitVec 64))
(declare-fun temp50_168 () (_ BitVec 64))
(declare-fun temp50_169 () (_ BitVec 64))
(declare-fun temp50_170 () (_ BitVec 64))
(declare-fun temp50_165 () (_ BitVec 64))
(declare-fun temp50_171 () (_ BitVec 64))
(declare-fun temp50_172 () (_ BitVec 64))
(declare-fun temp50_173 () (_ BitVec 64))
(declare-fun temp50_166 () (_ BitVec 64))
(declare-fun temp50_175 () (_ BitVec 64))
(declare-fun temp50_176 () (_ BitVec 64))
(declare-fun temp50_177 () (_ BitVec 64))
(declare-fun temp50_178 () (_ BitVec 64))
(declare-fun temp50_179 () (_ BitVec 64))
(declare-fun temp50_180 () (_ BitVec 64))
(declare-fun temp50_164 () (_ BitVec 64))
(declare-fun temp50_181 () (_ BitVec 64))
(declare-fun temp50_182 () (_ BitVec 64))
(declare-fun var930586 () (_ BitVec 64))
(declare-fun temp50_186 () (_ BitVec 64))
(declare-fun temp50_187 () (_ BitVec 64))
(declare-fun temp50_188 () (_ BitVec 64))
(declare-fun temp50_189 () (_ BitVec 64))
(declare-fun temp50_184 () (_ BitVec 64))
(declare-fun temp50_190 () (_ BitVec 64))
(declare-fun temp50_191 () (_ BitVec 64))
(declare-fun temp50_192 () (_ BitVec 64))
(declare-fun temp50_185 () (_ BitVec 64))
(declare-fun temp50_194 () (_ BitVec 64))
(declare-fun temp50_195 () (_ BitVec 64))
(declare-fun temp50_196 () (_ BitVec 64))
(declare-fun temp50_197 () (_ BitVec 64))
(declare-fun temp50_198 () (_ BitVec 64))
(declare-fun temp50_183 () (_ BitVec 64))
(declare-fun temp50_199 () (_ BitVec 64))
(declare-fun temp50_200 () (_ BitVec 64))
(declare-fun var930589 () (_ BitVec 64))
(declare-fun temp50_201 () (_ BitVec 64))
(declare-fun temp50_202 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp50_203 () (_ BitVec 64))
(declare-fun temp50_204 () (_ BitVec 64))
(declare-fun temp50_205 () (_ BitVec 64))
(declare-fun temp50_206 () (_ BitVec 64))
(declare-fun temp50_207 () (_ BitVec 64))
(declare-fun temp50_208 () (_ BitVec 64))
(declare-fun temp50_209 () (_ BitVec 64))
(declare-fun temp50_210 () (_ BitVec 64))
(declare-fun temp50_211 () (_ BitVec 64))
(declare-fun temp50_212 () (_ BitVec 64))
(declare-fun temp50_213 () (_ BitVec 64))
(declare-fun temp50_214 () (_ BitVec 64))
(declare-fun temp50_215 () (_ BitVec 64))
(declare-fun temp50_216 () (_ BitVec 64))
(declare-fun temp50_217 () (_ BitVec 64))
(declare-fun temp50_218 () (_ BitVec 64))
(declare-fun temp50_222 () (_ BitVec 64))
(declare-fun temp50_223 () (_ BitVec 64))
(declare-fun temp50_224 () (_ BitVec 64))
(declare-fun temp50_225 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp50_220 () (_ BitVec 64))
(declare-fun temp50_226 () (_ BitVec 64))
(declare-fun temp50_227 () (_ BitVec 64))
(declare-fun temp50_228 () (_ BitVec 64))
(declare-fun temp50_221 () (_ BitVec 64))
(declare-fun temp50_230 () (_ BitVec 64))
(declare-fun temp50_231 () (_ BitVec 64))
(declare-fun temp50_232 () (_ BitVec 64))
(declare-fun temp50_233 () (_ BitVec 64))
(declare-fun temp50_234 () (_ BitVec 64))
(declare-fun temp50_235 () (_ BitVec 64))
(declare-fun temp50_219 () (_ BitVec 64))
(declare-fun temp50_236 () (_ BitVec 64))
(declare-fun temp50_237 () (_ BitVec 64))
(declare-fun var930592 () (_ BitVec 64))
(declare-fun temp50_241 () (_ BitVec 64))
(declare-fun temp50_242 () (_ BitVec 64))
(declare-fun temp50_243 () (_ BitVec 64))
(declare-fun temp50_244 () (_ BitVec 64))
(declare-fun temp50_239 () (_ BitVec 64))
(declare-fun temp50_245 () (_ BitVec 64))
(declare-fun temp50_246 () (_ BitVec 64))
(declare-fun temp50_247 () (_ BitVec 64))
(declare-fun temp50_240 () (_ BitVec 64))
(declare-fun temp50_249 () (_ BitVec 64))
(declare-fun temp50_250 () (_ BitVec 64))
(declare-fun temp50_251 () (_ BitVec 64))
(declare-fun temp50_252 () (_ BitVec 64))
(declare-fun temp50_253 () (_ BitVec 64))
(declare-fun temp50_254 () (_ BitVec 64))
(declare-fun temp50_238 () (_ BitVec 64))
(declare-fun temp50_255 () (_ BitVec 64))
(declare-fun temp50_256 () (_ BitVec 64))
(declare-fun var930595 () (_ BitVec 64))
(declare-fun temp50_260 () (_ BitVec 64))
(declare-fun temp50_261 () (_ BitVec 64))
(declare-fun temp50_262 () (_ BitVec 64))
(declare-fun temp50_263 () (_ BitVec 64))
(declare-fun temp50_258 () (_ BitVec 64))
(declare-fun temp50_264 () (_ BitVec 64))
(declare-fun temp50_265 () (_ BitVec 64))
(declare-fun temp50_266 () (_ BitVec 64))
(declare-fun temp50_259 () (_ BitVec 64))
(declare-fun temp50_268 () (_ BitVec 64))
(declare-fun temp50_269 () (_ BitVec 64))
(declare-fun temp50_270 () (_ BitVec 64))
(declare-fun temp50_271 () (_ BitVec 64))
(declare-fun temp50_272 () (_ BitVec 64))
(declare-fun temp50_257 () (_ BitVec 64))
(declare-fun temp50_273 () (_ BitVec 64))
(declare-fun temp50_274 () (_ BitVec 64))
(declare-fun var930598 () (_ BitVec 64))
(declare-fun var930601 () (_ BitVec 64))
(declare-fun temp50_275 () (_ BitVec 64))
(declare-fun var930602 () (_ BitVec 64))
(declare-fun temp50_276 () (_ BitVec 64))
(declare-fun temp50_277 () (_ BitVec 64))
(declare-fun var930627 () (_ BitVec 64))
(declare-fun temp50_278 () (_ BitVec 64))
(declare-fun temp50_279 () (_ BitVec 64))
(declare-fun var1060401 () (_ BitVec 64))
(declare-fun temp50_280 () (_ BitVec 64))
(declare-fun var1060403 () (_ BitVec 64))
(declare-fun var1060404 () (_ BitVec 64))
(declare-fun temp50_281 () (_ BitVec 64))
(declare-fun var1060409 () (_ BitVec 64))
(declare-fun temp50_282 () (_ BitVec 64))
(declare-fun temp50_283 () (_ BitVec 64))
(declare-fun var1060413 () (_ BitVec 64))
(declare-fun temp50_284 () (_ BitVec 64))
(declare-fun var1060448 () (_ BitVec 64))
(declare-fun temp50_285 () (_ BitVec 64))
(declare-fun var1060449 () (_ BitVec 64))
(declare-fun temp50_287 () (_ BitVec 64))
(declare-fun var1060456 () (_ BitVec 64))
(declare-fun temp50_288 () (_ BitVec 64))
(declare-fun var1060459 () (_ BitVec 64))
(declare-fun temp50_289 () (_ BitVec 64))
(declare-fun var1322814 () (_ BitVec 64))
(declare-fun var1322815 () (_ BitVec 64))
(declare-fun temp50_290 () (_ BitVec 64))
(declare-fun temp50_291 () (_ BitVec 64))
(declare-fun temp50_292 () (_ BitVec 64))
(declare-fun temp50_293 () (_ BitVec 64))
(declare-fun temp50_294 () (_ BitVec 64))
(declare-fun var1322838 () (_ BitVec 64))
(declare-fun var1322813 () (_ BitVec 64))
(declare-fun var1060461 () (_ BitVec 64))
(declare-fun var1388378 () (_ BitVec 64))
(declare-fun var1388379 () (_ BitVec 64))
(declare-fun temp50_295 () (_ BitVec 64))
(declare-fun temp50_296 () (_ BitVec 64))
(declare-fun temp50_297 () (_ BitVec 64))
(declare-fun var1388383 () (_ BitVec 64))
(declare-fun var1388401 () (_ BitVec 64))
(declare-fun var1388377 () (_ BitVec 64))
(declare-fun var1060464 () (_ BitVec 64))
(declare-fun temp50_298 () (_ BitVec 64))
(declare-fun var1060467 () (_ BitVec 64))
(declare-fun var1060468 () (_ BitVec 64))
(declare-fun temp50_299 () (_ BitVec 64))
(declare-fun var1060475 () (_ BitVec 64))
(declare-fun var1060476 () (_ BitVec 64))
(declare-fun temp50_300 () (_ BitVec 64))
(declare-fun var1060481 () (_ BitVec 64))
(declare-fun var1060482 () (_ BitVec 64))
(declare-fun temp50_301 () (_ BitVec 64))
(declare-fun var1060487 () (_ BitVec 64))
(declare-fun var1060488 () (_ BitVec 64))
(declare-fun temp50_302 () (_ BitVec 64))
(declare-fun var1060496 () (_ BitVec 64))
(declare-fun temp50_303 () (_ BitVec 64))
(declare-fun var1060497 () (_ BitVec 64))
(declare-fun temp50_304 () (_ BitVec 64))
(declare-fun var1586428 () (_ BitVec 64))
(declare-fun temp50_305 () (_ BitVec 64))
(declare-fun var1586429 () (_ BitVec 64))
(declare-fun var1651964 () (_ BitVec 64))
(declare-fun temp50_306 () (_ BitVec 64))
(declare-fun var1651965 () (_ BitVec 64))
(declare-fun var930657 () (_ BitVec 64))
(declare-fun var930658 () (_ BitVec 64))
(declare-fun var930659 () (_ BitVec 64))
(declare-fun var930660 () (_ BitVec 64))
(declare-fun var1716680 () (_ BitVec 64))
(declare-fun var1716681 () (_ BitVec 64))
(declare-fun var930683 () (_ BitVec 64))
(declare-fun temp50_307 () (_ BitVec 64))
(declare-fun var930684 () (_ BitVec 64))
(declare-fun temp50_308 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (or (= ARGNAME_padding_NAMEEND #x0000000000000001)
    (= ARGNAME_padding_NAMEEND #x0000000000000002)
    (= ARGNAME_padding_NAMEEND #x0000000000000003)))
(assert (= temp50_1 #x0000000000000000))
(assert (= var930499 temp50_1))
(assert (= var988232 var930499))
(assert (= temp50_2 #x0000000000000006))
(assert (= var988235
   (ite (bvslt var988232 temp50_2) #x0000000000000001 #x0000000000000000)))
(assert (= temp50_3 #x0000000000000001))
(assert (= var988235 temp50_3))
(assert (= var988253 var988232))
(assert (= temp50_4 #x0000000000000000))
(assert (= temp50_5 temp50_4))
(assert (= temp50_6 (select var983053 temp50_5)))
(assert (= temp50_7 #x0000000000000001))
(assert (= temp50_8 temp50_7))
(assert (= temp50_9 (select var983053 temp50_8)))
(assert (= temp50_10 #x0000000000000002))
(assert (= temp50_11 temp50_10))
(assert (= temp50_12 (select var983053 temp50_11)))
(assert (= temp50_13 #x0000000000000003))
(assert (= temp50_14 temp50_13))
(assert (= temp50_15 (select var983053 temp50_14)))
(assert (= temp50_16 #x0000000000000004))
(assert (= temp50_17 temp50_16))
(assert (= temp50_18 (select var983053 temp50_17)))
(assert (= temp50_19 #x0000000000000005))
(assert (= temp50_20 temp50_19))
(assert (= temp50_21 (select var983053 temp50_20)))
(assert (= temp50_22 #xfffffffffffffffe))
(assert (= (select var983053 #x0000000000000000) temp50_22))
(assert (= temp50_23 #xfffffffffffffffe))
(assert (= (select var983053 #x0000000000000001) temp50_23))
(assert (= temp50_24 #xfffffffffffffffd))
(assert (= (select var983053 #x0000000000000002) temp50_24))
(assert (= temp50_25 #xfffffffffffffffd))
(assert (= (select var983053 #x0000000000000003) temp50_25))
(assert (= temp50_26 #xfffffffffffffffe))
(assert (= (select var983053 #x0000000000000004) temp50_26))
(assert (= temp50_27 #xfffffffffffffffe))
(assert (= (select var983053 #x0000000000000005) temp50_27))
(assert (= temp50_28 (select var983053 var988253)))
(assert (= temp50_29 #x0000000000000000))
(assert (bvsge var988253 temp50_29))
(assert (= temp50_30 #x0000000000000006))
(assert (bvslt var988253 temp50_30))
(assert (= var988256 (bvadd temp50_28 ARGNAME_input_NAMEEND_DIM)))
(assert (= var988230 var988256))
(assert (= var930529 var988230))
(assert (= temp50_31 #x0000000000000002))
(assert (= var930530
   (ite (= var930529 temp50_31) #x0000000000000001 #x0000000000000000)))
(assert (= temp50_32 #x0000000000000001))
(assert (= var930530 temp50_32))
(assert (= temp50_33 #x0000000000000000))
(assert (= temp50_34 temp50_33))
(assert (= temp50_35 (select ARGNAME_input_NAMEEND_DIMSIZE temp50_34)))
(assert (= temp50_36 #x0000000000000001))
(assert (= temp50_37 temp50_36))
(assert (= temp50_38 (select ARGNAME_input_NAMEEND_DIMSIZE temp50_37)))
(assert (= temp50_39 #x0000000000000002))
(assert (= temp50_40 temp50_39))
(assert (= temp50_41 (select ARGNAME_input_NAMEEND_DIMSIZE temp50_40)))
(assert (= temp50_42 #x0000000000000003))
(assert (= temp50_43 temp50_42))
(assert (= temp50_44 (select ARGNAME_input_NAMEEND_DIMSIZE temp50_43)))
(assert (= temp50_45 #x0000000000000004))
(assert (= temp50_46 temp50_45))
(assert (= temp50_47 (select ARGNAME_input_NAMEEND_DIMSIZE temp50_46)))
(assert (= temp50_48 #x0000000000000005))
(assert (= temp50_49 temp50_48))
(assert (= temp50_50 (select ARGNAME_input_NAMEEND_DIMSIZE temp50_49)))
(assert (= temp50_54 #x0000000000000002))
(assert (= temp50_55 #x0000000000000003))
(assert (= temp50_56 #x0000000000000002))
(assert (= temp50_57 #x0000000000000003))
(assert (= temp50_52
   (ite (or (= var930499 temp50_56) (= var930499 temp50_57))
        (bvsub ARGNAME_input_NAMEEND_DIM temp50_55)
        (bvsub ARGNAME_input_NAMEEND_DIM temp50_54))))
(assert (= temp50_58 #x0000000000000002))
(assert (= temp50_59 #x0000000000000003))
(assert (= temp50_60 #x0000000000000003))
(assert (= temp50_53 (ite (= temp50_52 temp50_60) temp50_59 temp50_58)))
(assert (= temp50_62 #x0000000000000001))
(assert (= temp50_63 #x0000000000000005))
(assert (= temp50_64 #x0000000000000001))
(assert (= temp50_65 #x0000000000000001))
(assert (= temp50_66 #x0000000000000002))
(assert (= temp50_51
   (ite (or (= var930499 temp50_65) (= var930499 temp50_66))
        temp50_64
        (ite (= var930499 temp50_63) temp50_53 (bvadd temp50_53 temp50_62)))))
(assert (= temp50_67 temp50_51))
(assert (= temp50_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp50_67)))
(assert (= var930558 temp50_68))
(assert (= temp50_69 #x0000000000000002))
(assert (= var930560
   (ite (= var930499 temp50_69) #x0000000000000001 #x0000000000000000)))
(assert (= temp50_70 #x0000000000000004))
(assert (= temp50_71 #x0000000000000001))
(assert (= var930561 (ite (= var930560 #x0000000000000001) temp50_70 temp50_71)))
(assert (= var930562 (bvmul var930558 var930561)))
(assert (= var930563 var930562))
(assert (= temp50_75 #x0000000000000002))
(assert (= temp50_76 #x0000000000000003))
(assert (= temp50_77 #x0000000000000002))
(assert (= temp50_78 #x0000000000000003))
(assert (= temp50_73
   (ite (or (= var930499 temp50_77) (= var930499 temp50_78))
        (bvsub ARGNAME_input_NAMEEND_DIM temp50_76)
        (bvsub ARGNAME_input_NAMEEND_DIM temp50_75))))
(assert (= temp50_79 #x0000000000000002))
(assert (= temp50_80 #x0000000000000003))
(assert (= temp50_81 #x0000000000000003))
(assert (= temp50_74 (ite (= temp50_73 temp50_81) temp50_80 temp50_79)))
(assert (= temp50_83 #x0000000000000001))
(assert (= temp50_84 #x0000000000000001))
(assert (= temp50_85 #x0000000000000001))
(assert (= temp50_86 #x0000000000000002))
(assert (= temp50_87 #x0000000000000000))
(assert (= temp50_88 #x0000000000000003))
(assert (let ((a!1 (ite (or (= var930499 temp50_87) (= var930499 temp50_88))
                temp50_74
                (ite (or (= var930499 temp50_85) (= var930499 temp50_86))
                     (bvadd temp50_74 temp50_84)
                     (bvsub temp50_74 temp50_83)))))
  (= temp50_72 a!1)))
(assert (= temp50_89 temp50_72))
(assert (= temp50_90 (select ARGNAME_input_NAMEEND_DIMSIZE temp50_89)))
(assert (= var930566 temp50_90))
(assert (= var930568 var930566))
(assert (= temp50_94 #x0000000000000002))
(assert (= temp50_95 #x0000000000000003))
(assert (= temp50_96 #x0000000000000002))
(assert (= temp50_97 #x0000000000000003))
(assert (= temp50_92
   (ite (or (= var930499 temp50_96) (= var930499 temp50_97))
        (bvsub ARGNAME_input_NAMEEND_DIM temp50_95)
        (bvsub ARGNAME_input_NAMEEND_DIM temp50_94))))
(assert (= temp50_98 #x0000000000000002))
(assert (= temp50_99 #x0000000000000003))
(assert (= temp50_100 #x0000000000000003))
(assert (= temp50_93 (ite (= temp50_92 temp50_100) temp50_99 temp50_98)))
(assert (= temp50_102 #x0000000000000002))
(assert (= temp50_103 #x0000000000000001))
(assert (= temp50_104 #x0000000000000002))
(assert (= temp50_105 #x0000000000000001))
(assert (= temp50_106 #x0000000000000000))
(assert (= temp50_107 #x0000000000000003))
(assert (let ((a!1 (ite (or (= var930499 temp50_106) (= var930499 temp50_107))
                (bvsub temp50_93 temp50_105)
                (ite (or (= var930499 temp50_103) (= var930499 temp50_104))
                     temp50_93
                     (bvsub temp50_93 temp50_102)))))
  (= temp50_91 a!1)))
(assert (= temp50_108 temp50_91))
(assert (= temp50_109 (select ARGNAME_input_NAMEEND_DIMSIZE temp50_108)))
(assert (= var930571 temp50_109))
(assert (= var930573 var930571))
(assert (= temp50_113 #x0000000000000002))
(assert (= temp50_114 #x0000000000000003))
(assert (= temp50_115 #x0000000000000002))
(assert (= temp50_116 #x0000000000000003))
(assert (= temp50_111
   (ite (or (= var930499 temp50_115) (= var930499 temp50_116))
        (bvsub ARGNAME_input_NAMEEND_DIM temp50_114)
        (bvsub ARGNAME_input_NAMEEND_DIM temp50_113))))
(assert (= temp50_117 #x0000000000000002))
(assert (= temp50_118 #x0000000000000003))
(assert (= temp50_119 #x0000000000000003))
(assert (= temp50_112 (ite (= temp50_111 temp50_119) temp50_118 temp50_117)))
(assert (= temp50_121 #x0000000000000000))
(assert (= temp50_122 #x0000000000000001))
(assert (= temp50_123 #x0000000000000005))
(assert (= temp50_124 #x0000000000000004))
(assert (= temp50_110
   (ite (= var930499 temp50_124)
        temp50_112
        (ite (= var930499 temp50_123) (bvadd temp50_112 temp50_122) temp50_121))))
(assert (= temp50_125 temp50_110))
(assert (= temp50_126 (select ARGNAME_input_NAMEEND_DIMSIZE temp50_125)))
(assert (= var930576 temp50_126))
(assert (= var930578 var930576))
(assert (= temp50_127 #x0000000000000000))
(assert (= temp50_128 temp50_127))
(assert (= temp50_129 (select ARGNAME_ksize_NAMEEND_VAL temp50_128)))
(assert (= temp50_130 #x0000000000000001))
(assert (= temp50_131 temp50_130))
(assert (= temp50_132 (select ARGNAME_ksize_NAMEEND_VAL temp50_131)))
(assert (= temp50_133 #x0000000000000002))
(assert (= temp50_134 temp50_133))
(assert (= temp50_135 (select ARGNAME_ksize_NAMEEND_VAL temp50_134)))
(assert (= temp50_136 #x0000000000000003))
(assert (= temp50_137 temp50_136))
(assert (= temp50_138 (select ARGNAME_ksize_NAMEEND_VAL temp50_137)))
(assert (= temp50_139 #x0000000000000004))
(assert (= temp50_140 temp50_139))
(assert (= temp50_141 (select ARGNAME_ksize_NAMEEND_VAL temp50_140)))
(assert (= temp50_142 #x0000000000000005))
(assert (= temp50_143 temp50_142))
(assert (= temp50_144 (select ARGNAME_ksize_NAMEEND_VAL temp50_143)))
(assert (= temp50_148 #x0000000000000002))
(assert (= temp50_149 #x0000000000000003))
(assert (= temp50_150 #x0000000000000002))
(assert (= temp50_151 #x0000000000000003))
(assert (= temp50_146
   (ite (or (= var930499 temp50_150) (= var930499 temp50_151))
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp50_149)
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp50_148))))
(assert (= temp50_152 #x0000000000000002))
(assert (= temp50_153 #x0000000000000003))
(assert (= temp50_154 #x0000000000000003))
(assert (= temp50_147 (ite (= temp50_146 temp50_154) temp50_153 temp50_152)))
(assert (= temp50_156 #x0000000000000002))
(assert (= temp50_157 #x0000000000000001))
(assert (= temp50_158 #x0000000000000002))
(assert (= temp50_159 #x0000000000000001))
(assert (= temp50_160 #x0000000000000000))
(assert (= temp50_161 #x0000000000000003))
(assert (let ((a!1 (ite (or (= var930499 temp50_160) (= var930499 temp50_161))
                (bvsub temp50_147 temp50_159)
                (ite (or (= var930499 temp50_157) (= var930499 temp50_158))
                     temp50_147
                     (bvsub temp50_147 temp50_156)))))
  (= temp50_145 a!1)))
(assert (= temp50_162 temp50_145))
(assert (= temp50_163 (select ARGNAME_ksize_NAMEEND_VAL temp50_162)))
(assert (= var930581 temp50_163))
(assert (= temp50_167 #x0000000000000002))
(assert (= temp50_168 #x0000000000000003))
(assert (= temp50_169 #x0000000000000002))
(assert (= temp50_170 #x0000000000000003))
(assert (= temp50_165
   (ite (or (= var930499 temp50_169) (= var930499 temp50_170))
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp50_168)
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp50_167))))
(assert (= temp50_171 #x0000000000000002))
(assert (= temp50_172 #x0000000000000003))
(assert (= temp50_173 #x0000000000000003))
(assert (= temp50_166 (ite (= temp50_165 temp50_173) temp50_172 temp50_171)))
(assert (= temp50_175 #x0000000000000001))
(assert (= temp50_176 #x0000000000000001))
(assert (= temp50_177 #x0000000000000001))
(assert (= temp50_178 #x0000000000000002))
(assert (= temp50_179 #x0000000000000000))
(assert (= temp50_180 #x0000000000000003))
(assert (let ((a!1 (ite (or (= var930499 temp50_179) (= var930499 temp50_180))
                temp50_166
                (ite (or (= var930499 temp50_177) (= var930499 temp50_178))
                     (bvadd temp50_166 temp50_176)
                     (bvsub temp50_166 temp50_175)))))
  (= temp50_164 a!1)))
(assert (= temp50_181 temp50_164))
(assert (= temp50_182 (select ARGNAME_ksize_NAMEEND_VAL temp50_181)))
(assert (= var930586 temp50_182))
(assert (= temp50_186 #x0000000000000002))
(assert (= temp50_187 #x0000000000000003))
(assert (= temp50_188 #x0000000000000002))
(assert (= temp50_189 #x0000000000000003))
(assert (= temp50_184
   (ite (or (= var930499 temp50_188) (= var930499 temp50_189))
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp50_187)
        (bvsub ARGNAME_ksize_NAMEEND_LEN temp50_186))))
(assert (= temp50_190 #x0000000000000002))
(assert (= temp50_191 #x0000000000000003))
(assert (= temp50_192 #x0000000000000003))
(assert (= temp50_185 (ite (= temp50_184 temp50_192) temp50_191 temp50_190)))
(assert (= temp50_194 #x0000000000000001))
(assert (= temp50_195 #x0000000000000005))
(assert (= temp50_196 #x0000000000000001))
(assert (= temp50_197 #x0000000000000001))
(assert (= temp50_198 #x0000000000000002))
(assert (= temp50_183
   (ite (or (= var930499 temp50_197) (= var930499 temp50_198))
        temp50_196
        (ite (= var930499 temp50_195) temp50_185 (bvadd temp50_185 temp50_194)))))
(assert (= temp50_199 temp50_183))
(assert (= temp50_200 (select ARGNAME_ksize_NAMEEND_VAL temp50_199)))
(assert (= var930589 temp50_200))
(assert (= temp50_201 #x0000000000000000))
(assert (= temp50_202 temp50_201))
(assert (= temp50_203 (select ARGNAME_strides_NAMEEND_VAL temp50_202)))
(assert (= temp50_204 #x0000000000000001))
(assert (= temp50_205 temp50_204))
(assert (= temp50_206 (select ARGNAME_strides_NAMEEND_VAL temp50_205)))
(assert (= temp50_207 #x0000000000000002))
(assert (= temp50_208 temp50_207))
(assert (= temp50_209 (select ARGNAME_strides_NAMEEND_VAL temp50_208)))
(assert (= temp50_210 #x0000000000000003))
(assert (= temp50_211 temp50_210))
(assert (= temp50_212 (select ARGNAME_strides_NAMEEND_VAL temp50_211)))
(assert (= temp50_213 #x0000000000000004))
(assert (= temp50_214 temp50_213))
(assert (= temp50_215 (select ARGNAME_strides_NAMEEND_VAL temp50_214)))
(assert (= temp50_216 #x0000000000000005))
(assert (= temp50_217 temp50_216))
(assert (= temp50_218 (select ARGNAME_strides_NAMEEND_VAL temp50_217)))
(assert (= temp50_222 #x0000000000000002))
(assert (= temp50_223 #x0000000000000003))
(assert (= temp50_224 #x0000000000000002))
(assert (= temp50_225 #x0000000000000003))
(assert (= temp50_220
   (ite (or (= var930499 temp50_224) (= var930499 temp50_225))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp50_223)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp50_222))))
(assert (= temp50_226 #x0000000000000002))
(assert (= temp50_227 #x0000000000000003))
(assert (= temp50_228 #x0000000000000003))
(assert (= temp50_221 (ite (= temp50_220 temp50_228) temp50_227 temp50_226)))
(assert (= temp50_230 #x0000000000000002))
(assert (= temp50_231 #x0000000000000001))
(assert (= temp50_232 #x0000000000000002))
(assert (= temp50_233 #x0000000000000001))
(assert (= temp50_234 #x0000000000000000))
(assert (= temp50_235 #x0000000000000003))
(assert (let ((a!1 (ite (or (= var930499 temp50_234) (= var930499 temp50_235))
                (bvsub temp50_221 temp50_233)
                (ite (or (= var930499 temp50_231) (= var930499 temp50_232))
                     temp50_221
                     (bvsub temp50_221 temp50_230)))))
  (= temp50_219 a!1)))
(assert (= temp50_236 temp50_219))
(assert (= temp50_237 (select ARGNAME_strides_NAMEEND_VAL temp50_236)))
(assert (= var930592 temp50_237))
(assert (= temp50_241 #x0000000000000002))
(assert (= temp50_242 #x0000000000000003))
(assert (= temp50_243 #x0000000000000002))
(assert (= temp50_244 #x0000000000000003))
(assert (= temp50_239
   (ite (or (= var930499 temp50_243) (= var930499 temp50_244))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp50_242)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp50_241))))
(assert (= temp50_245 #x0000000000000002))
(assert (= temp50_246 #x0000000000000003))
(assert (= temp50_247 #x0000000000000003))
(assert (= temp50_240 (ite (= temp50_239 temp50_247) temp50_246 temp50_245)))
(assert (= temp50_249 #x0000000000000001))
(assert (= temp50_250 #x0000000000000001))
(assert (= temp50_251 #x0000000000000001))
(assert (= temp50_252 #x0000000000000002))
(assert (= temp50_253 #x0000000000000000))
(assert (= temp50_254 #x0000000000000003))
(assert (let ((a!1 (ite (or (= var930499 temp50_253) (= var930499 temp50_254))
                temp50_240
                (ite (or (= var930499 temp50_251) (= var930499 temp50_252))
                     (bvadd temp50_240 temp50_250)
                     (bvsub temp50_240 temp50_249)))))
  (= temp50_238 a!1)))
(assert (= temp50_255 temp50_238))
(assert (= temp50_256 (select ARGNAME_strides_NAMEEND_VAL temp50_255)))
(assert (= var930595 temp50_256))
(assert (= temp50_260 #x0000000000000002))
(assert (= temp50_261 #x0000000000000003))
(assert (= temp50_262 #x0000000000000002))
(assert (= temp50_263 #x0000000000000003))
(assert (= temp50_258
   (ite (or (= var930499 temp50_262) (= var930499 temp50_263))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp50_261)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp50_260))))
(assert (= temp50_264 #x0000000000000002))
(assert (= temp50_265 #x0000000000000003))
(assert (= temp50_266 #x0000000000000003))
(assert (= temp50_259 (ite (= temp50_258 temp50_266) temp50_265 temp50_264)))
(assert (= temp50_268 #x0000000000000001))
(assert (= temp50_269 #x0000000000000005))
(assert (= temp50_270 #x0000000000000001))
(assert (= temp50_271 #x0000000000000001))
(assert (= temp50_272 #x0000000000000002))
(assert (= temp50_257
   (ite (or (= var930499 temp50_271) (= var930499 temp50_272))
        temp50_270
        (ite (= var930499 temp50_269) temp50_259 (bvadd temp50_259 temp50_268)))))
(assert (= temp50_273 temp50_257))
(assert (= temp50_274 (select ARGNAME_strides_NAMEEND_VAL temp50_273)))
(assert (= var930598 temp50_274))
(assert (= var930601 var930589))
(assert (= temp50_275 #x0000000000000001))
(assert (= var930602
   (ite (= var930601 temp50_275) #x0000000000000001 #x0000000000000000)))
(assert (= temp50_276 #x0000000000000001))
(assert (= var930602 temp50_276))
(assert (= temp50_277 #x0000000000000003))
(assert (= var930627
   (ite (= ARGNAME_padding_NAMEEND temp50_277)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp50_278 #x0000000000000001))
(assert (= var930627 temp50_278))
(assert (= temp50_279 #x0000000000000003))
(assert (= var1060401 temp50_279))
(assert (= temp50_280 #x0000000000000004))
(assert (= var1060403 temp50_280))
(assert (= var1060404 var930499))
(assert (= temp50_281 #x0000000000000003))
(assert (= var1060409
   (ite (= var1060401 temp50_281) #x0000000000000001 #x0000000000000000)))
(assert (= temp50_282 #x0000000000000001))
(assert (= var1060409 temp50_282))
(assert (= temp50_283 #x0000000000000001))
(assert (= var1060413 (bvshl var1060403 temp50_283)))
(assert (= temp50_284 #x0000000000000000))
(assert (= var1060448 temp50_284))
(assert (= temp50_285 #x0000000000000000))
(assert (= var1060449
   (ite (= var1060448 temp50_285) #x0000000000000001 #x0000000000000000)))
(assert (= temp50_287 #x0000000000000002))
(assert (= var1060456 temp50_287))
(assert (= temp50_288 #x0000000000000002))
(assert (= var1060459
   (ite (= var1060456 temp50_288) #x0000000000000001 #x0000000000000000)))
(assert (= temp50_289 #x0000000000000001))
(assert (= var1060459 temp50_289))
(assert (= var1322814 var1060403))
(assert (= var1322815 var1060404))
(assert (= temp50_290 #x0000000000000000))
(assert (= temp50_291 #x0000000000000001))
(assert (= temp50_292 #x0000000000000002))
(assert (= temp50_293 #x0000000000000003))
(assert (or false
    (= var1322815 temp50_290)
    (= var1322815 temp50_291)
    (= var1322815 temp50_292)
    (= var1322815 temp50_293)))
(assert (= temp50_294 #x0000000000000000))
(assert (= var1322838 temp50_294))
(assert (= var1322813 var1322838))
(assert (= var1060461 var1322813))
(assert (= var1388378 var1060403))
(assert (= var1388379 var1060404))
(assert (= temp50_295 #x0000000000000000))
(assert (= temp50_296 #x0000000000000004))
(assert (or false (= var1388379 temp50_295) (= var1388379 temp50_296)))
(assert (= temp50_297 #xffffffffffffffff))
(assert (= var1388383 (bvadd var1388378 temp50_297)))
(assert (= var1388401 var1388383))
(assert (= var1388377 var1388401))
(assert (= var1060464 var1388377))
(assert (= temp50_298 #x0000000000000001))
(assert (= var1060467 (bvshl var1060461 temp50_298)))
(assert (= var1060468 var1060467))
(assert (= temp50_299 #x0000000000000001))
(assert (= var1060475 (bvor var1060467 temp50_299)))
(assert (= var1060476 var1060475))
(assert (= temp50_300 #x0000000000000001))
(assert (= var1060481 (bvshl var1060464 temp50_300)))
(assert (= var1060482 var1060481))
(assert (= temp50_301 #x0000000000000001))
(assert (= var1060487 (bvor var1060481 temp50_301)))
(assert (= var1060488 var1060487))
(assert (= temp50_302 #x0000000000000000))
(assert (= var1060496 temp50_302))
(assert (= temp50_303 #x0000000000000000))
(assert (= var1060497
   (ite (= var1060496 temp50_303) #x0000000000000001 #x0000000000000000)))
(assert (= temp50_304 #x0000000000000001))
(assert (= var1060497 temp50_304))
(assert (= var1586428 var930499))
(assert (= temp50_305 #x0000000000000048))
(assert (= var1586429 temp50_305))
(assert (= var1651964 var930499))
(assert (= temp50_306 #x0000000000000057))
(assert (= var1651965 temp50_306))
(assert (= var930657 var930581))
(assert (= var930658 var930657))
(assert (= var930659 var930586))
(assert (= var930660 var930659))
(assert (= var1716680 var930658))
(assert (= var1716681 var930660))
(assert (= var930683 var930589))
(assert (= temp50_307 #x0000000000000001))
(assert (= var930684
   (ite (= var930683 temp50_307) #x0000000000000001 #x0000000000000000)))
(assert (= temp50_308 #x0000000000000001))
(assert (= var930684 temp50_308))
(model-add temp50_1 () (_ BitVec 64) #x0000000000000000)
(model-add var930499 () (_ BitVec 64) #x0000000000000000)
(model-add var988232 () (_ BitVec 64) #x0000000000000000)
(model-add temp50_2 () (_ BitVec 64) #x0000000000000006)
(model-add var988235 () (_ BitVec 64) #x0000000000000001)
(model-add temp50_3 () (_ BitVec 64) #x0000000000000001)













