(declare-fun temp128_1 () (_ BitVec 64))
(declare-fun temp128_2 () (_ BitVec 64))
(declare-fun extend_5935
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp128_3 () (_ BitVec 64))
(declare-fun temp128_4 () (_ BitVec 64))
(declare-fun temp128_5 () (_ BitVec 64))
(declare-fun temp128_6 () (_ BitVec 64))
(declare-fun temp128_7 () (_ BitVec 64))
(declare-fun temp128_8 () (_ BitVec 64))
(declare-fun temp128_9 () (_ BitVec 64))
(declare-fun temp128_10 () (_ BitVec 64))
(declare-fun temp128_11 () (_ BitVec 64))
(declare-fun temp128_12 () (_ BitVec 64))
(declare-fun temp128_13 () (_ BitVec 64))
(declare-fun temp128_14 () (_ BitVec 64))
(declare-fun extend_5938
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp128_15 () (_ BitVec 64))
(declare-fun temp128_16 () (_ BitVec 64))
(declare-fun temp128_17 () (_ BitVec 64))
(declare-fun temp128_18 () (_ BitVec 64))
(declare-fun temp128_19 () (_ BitVec 64))
(declare-fun temp128_20 () (_ BitVec 64))
(declare-fun temp128_21 () (_ BitVec 64))
(declare-fun temp128_22 () (_ BitVec 64))
(declare-fun temp128_23 () (_ BitVec 64))
(declare-fun temp128_24 () (_ BitVec 64))
(declare-fun temp128_25 () (_ BitVec 64))
(declare-fun temp128_26 () (_ BitVec 64))
(declare-fun temp128_27 () (_ BitVec 64))
(declare-fun temp128_28 () (_ BitVec 64))
(declare-fun temp128_29 () (_ BitVec 64))
(declare-fun temp128_30 () (_ BitVec 64))
(declare-fun temp128_31 () (_ BitVec 64))
(declare-fun temp128_32 () (_ BitVec 64))
(declare-fun temp128_33 () (_ BitVec 64))
(declare-fun temp128_34 () (_ BitVec 64))
(declare-fun temp128_35 () (_ BitVec 64))
(declare-fun temp128_36 () (_ BitVec 64))
(declare-fun temp128_37 () (_ BitVec 64))
(declare-fun var66500 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun extend_5936 () (_ BitVec 64))
(declare-fun extend_5939 () (_ BitVec 64))
(declare-fun k!1 () Bool)
(declare-fun temp128_38 () (_ BitVec 64))
(declare-fun var133870 () (_ BitVec 64))
(declare-fun var133866 () (_ BitVec 64))
(declare-fun var66555 () (_ BitVec 64))
(declare-fun temp128_39 () (_ BitVec 64))
(declare-fun temp128_40 () (_ BitVec 64))
(declare-fun temp128_41 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var66641 () (_ BitVec 64))
(declare-fun temp128_42 () (_ BitVec 64))
(declare-fun temp128_43 () (_ BitVec 64))
(declare-fun var66654 () (_ BitVec 64))
(declare-fun var330558 () (_ BitVec 64))
(declare-fun temp128_44 () (_ BitVec 64))
(declare-fun ARGNAME_pos_NAMEEND () (_ BitVec 64))
(declare-fun var723805 () (_ BitVec 64))
(declare-fun temp128_45 () (_ BitVec 64))
(declare-fun temp128_47 () (_ BitVec 64))
(declare-fun temp128_46 () (_ BitVec 64))
(declare-fun temp128_48 () (_ BitVec 64))
(declare-fun var870654 () (_ BitVec 64))
(declare-fun temp128_49 () (_ BitVec 64))
(declare-fun temp128_50 () (_ BitVec 64))
(declare-fun var870656 () (_ BitVec 64))
(declare-fun temp128_51 () (_ BitVec 64))
(declare-fun var870662 () (_ BitVec 64))
(declare-fun var870668 () (_ BitVec 64))
(declare-fun temp128_52 () (_ BitVec 64))
(declare-fun var870657 () (_ BitVec 64))
(declare-fun var870671 () (_ BitVec 64))
(declare-fun var870674 () (_ BitVec 64))
(declare-fun var870642 () (_ BitVec 64))
(declare-fun var804981 () (_ BitVec 64))
(declare-fun temp128_54 () (_ BitVec 64))
(declare-fun var804985 () (_ BitVec 64))
(declare-fun temp128_55 () (_ BitVec 64))
(declare-fun ARGNAME_len_NAMEEND () (_ BitVec 64))
(declare-fun var1067262 () (_ BitVec 64))
(declare-fun temp128_56 () (_ BitVec 64))
(declare-fun temp128_57 () (_ BitVec 64))
(declare-fun var1067281 () (_ BitVec 64))
(declare-fun var1067282 () (_ BitVec 64))
(declare-fun var1067250 () (_ BitVec 64))
(declare-fun var804987 () (_ BitVec 64))
(declare-fun var804988 () (_ BitVec 64))
(declare-fun var804989 () (_ BitVec 64))
(declare-fun var804990 () (_ BitVec 64))
(declare-fun temp128_58 () (_ BitVec 64))
(declare-fun var804994 () (_ BitVec 64))
(declare-fun var804973 () (_ BitVec 64))
(declare-fun var723809 () (_ BitVec 64))
(declare-fun var723818 () (_ BitVec 64))
(declare-fun var723799 () (_ BitVec 64))
(declare-fun var66673 () (_ BitVec 64))
(declare-fun var66742 () (_ BitVec 64))
(declare-fun var66743 () (_ BitVec 64))
(declare-fun temp128_60 () (_ BitVec 64))
(declare-fun var66655 () (_ BitVec 64))
(declare-fun var66758 () (_ BitVec 64))
(assert (= temp128_1 #x0000000000000000))
(assert (= temp128_2 (select extend_5935 temp128_1)))
(assert (= temp128_3 #x0000000000000001))
(assert (= temp128_4 (select extend_5935 temp128_3)))
(assert (= temp128_5 #x0000000000000002))
(assert (= temp128_6 (select extend_5935 temp128_5)))
(assert (= temp128_7 #x0000000000000003))
(assert (= temp128_8 (select extend_5935 temp128_7)))
(assert (= temp128_9 #x0000000000000004))
(assert (= temp128_10 (select extend_5935 temp128_9)))
(assert (= temp128_11 #x0000000000000005))
(assert (= temp128_12 (select extend_5935 temp128_11)))
(assert (= temp128_13 #x0000000000000000))
(assert (= temp128_14 (select extend_5938 temp128_13)))
(assert (= temp128_15 #x0000000000000001))
(assert (= temp128_16 (select extend_5938 temp128_15)))
(assert (= temp128_17 #x0000000000000002))
(assert (= temp128_18 (select extend_5938 temp128_17)))
(assert (= temp128_19 #x0000000000000003))
(assert (= temp128_20 (select extend_5938 temp128_19)))
(assert (= temp128_21 #x0000000000000004))
(assert (= temp128_22 (select extend_5938 temp128_21)))
(assert (= temp128_23 #x0000000000000005))
(assert (= temp128_24 (select extend_5938 temp128_23)))
(assert (= temp128_25 (select extend_5938 temp128_1)))
(assert (= temp128_26 (select extend_5938 temp128_11)))
(assert (= temp128_27 (select extend_5938 temp128_3)))
(assert (= temp128_28 (select extend_5938 temp128_5)))
(assert (= temp128_29 (select extend_5938 temp128_7)))
(assert (= temp128_30 (select extend_5938 temp128_9)))
(assert (= temp128_31 (select extend_5935 temp128_13)))
(assert (= temp128_32 (select extend_5935 temp128_15)))
(assert (= temp128_33 (select extend_5935 temp128_17)))
(assert (= temp128_34 (select extend_5935 temp128_19)))
(assert (= temp128_35 (select extend_5935 temp128_21)))
(assert (= temp128_36 (select extend_5935 temp128_23)))
(assert (= var66500
   (ite (and true
             (= temp128_25 temp128_2)
             (= temp128_26 temp128_12)
             (= temp128_27 temp128_4)
             (= temp128_28 temp128_6)
             (= temp128_29 temp128_8)
             (= temp128_30 temp128_10)
             (= temp128_2 temp128_25)
             (= temp128_12 temp128_26)
             (= temp128_31 temp128_14)
             (= temp128_32 temp128_16)
             (= temp128_33 temp128_18)
             (= temp128_34 temp128_20)
             (= temp128_35 temp128_22)
             (= temp128_36 temp128_24)
             (= temp128_4 temp128_27)
             (= temp128_6 temp128_28)
             (= temp128_8 temp128_29)
             (= temp128_10 temp128_30)
             (= extend_5936 extend_5939))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp128_37 #x0000000000000001))
(assert (= var66500 temp128_37))
(assert (= temp128_38 #x0000000000000000))
(assert (= var133870
   (ite (= extend_5936 temp128_38)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var133866 var133870))
(assert (= var66555 var133866))
(assert (= temp128_39 #x0000000000000001))
(assert (= var66555 temp128_39))
(assert (= temp128_40 #x0000000000000001))
(assert (= var66555 temp128_40))
(assert (= temp128_41 #x0000000000000000))
(assert (= var66641
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp128_41)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp128_42 #x0000000000000000))
(assert (= var66641 temp128_42))
(assert (= temp128_43 #x0000000000000000))
(assert (= var66654 temp128_43))
(assert (= var330558 var66654))
(assert (= temp128_44 #xffffffffffffffff))
(assert (= var723805
   (ite (bvsgt ARGNAME_pos_NAMEEND temp128_44)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp128_45 #x0000000000000001))
(assert (= var723805 temp128_45))
(assert (= temp128_47 #x0000000000000000))
(assert (= temp128_46 temp128_47))
(assert (= temp128_48 #x0000000000000000))
(assert (= var870654
   (ite (bvsgt ARGNAME_pos_NAMEEND temp128_48)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp128_49 #x0000000000000001))
(assert (= var870654 temp128_49))
(assert (= temp128_50 #x0000000000000000))
(assert (= var870656 temp128_50))
(assert (= temp128_51 #x0000000000000001))
(assert (= var870662 (bvadd temp128_46 temp128_51)))
(assert (= var870668 var870662))
(assert (= temp128_52 #x0000000000000001))
(assert (= var870657 (bvadd var870656 temp128_52)))
(assert (= var870671
   (ite (= var870657 ARGNAME_pos_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var870674
   (ite (= ARGNAME_pos_NAMEEND ARGNAME_pos_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var870642 var870674))
(assert (= var804981 var870642))
(assert (= temp128_54 #x0000000000000001))
(assert (= var804981 temp128_54))
(assert (= var804985 var870662))
(assert (= temp128_55 #x0000000000000000))
(assert (= var1067262
   (ite (bvsgt ARGNAME_len_NAMEEND temp128_55)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp128_56 #x0000000000000000))
(assert (= var1067262 temp128_56))
(assert (= temp128_57 #x0000000000000000))
(assert (= var1067281 temp128_57))
(assert (= var1067282
   (ite (= var1067281 ARGNAME_len_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1067250 var1067282))
(assert (= var804987 var1067250))
(assert (= var804988 var804985))
(assert (= var804989 var870662))
(assert (= var804990 (bvsub var804988 var804989)))
(assert (= temp128_58 #x0000000000000001))
(assert (= var804994 temp128_58))
(assert (= var804973 var804994))
(assert (= var723809 var804973))
(assert (= var723818 var723809))
(assert (= var723799 var723818))
(assert (= var66673 var723799))
(assert (= var66742 var870662))
(assert (= var66743 var804990))
(assert (= temp128_60 #x0000000000000001))
(assert (= var66655 (bvadd var66654 temp128_60)))
(assert (= var66758
   (ite (bvslt var66655 ARGNAME_input_NAMEEND_NUMELEMENT)
        #x0000000000000001
        #x0000000000000000)))
(model-add temp128_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp128_2
           ()
           (_ BitVec 64)
           (select extend_5935 #x0000000000000000))
(model-add temp128_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp128_4
           ()
           (_ BitVec 64)
           (select extend_5935 #x0000000000000001))
(model-add temp128_5 () (_ BitVec 64) #x0000000000000002)
(model-add temp128_6
           ()
           (_ BitVec 64)
           (select extend_5935 #x0000000000000002))
(model-add temp128_7 () (_ BitVec 64) #x0000000000000003)
(model-add temp128_8
           ()
           (_ BitVec 64)
           (select extend_5935 #x0000000000000003))
(model-add temp128_9 () (_ BitVec 64) #x0000000000000004)
(model-add temp128_10
           ()
           (_ BitVec 64)
           (select extend_5935 #x0000000000000004))
(model-add temp128_11 () (_ BitVec 64) #x0000000000000005)
(model-add temp128_12
           ()
           (_ BitVec 64)
           (select extend_5935 #x0000000000000005))
(model-add temp128_13 () (_ BitVec 64) #x0000000000000000)
(model-add temp128_14
           ()
           (_ BitVec 64)
           (select extend_5938 #x0000000000000000))
(model-add temp128_15 () (_ BitVec 64) #x0000000000000001)
(model-add temp128_16
           ()
           (_ BitVec 64)
           (select extend_5938 #x0000000000000001))
(model-add temp128_17 () (_ BitVec 64) #x0000000000000002)
(model-add temp128_18
           ()
           (_ BitVec 64)
           (select extend_5938 #x0000000000000002))
(model-add temp128_19 () (_ BitVec 64) #x0000000000000003)
(model-add temp128_20
           ()
           (_ BitVec 64)
           (select extend_5938 #x0000000000000003))
(model-add temp128_21 () (_ BitVec 64) #x0000000000000004)
(model-add temp128_22
           ()
           (_ BitVec 64)
           (select extend_5938 #x0000000000000004))
(model-add temp128_23 () (_ BitVec 64) #x0000000000000005)
(model-add temp128_24
           ()
           (_ BitVec 64)
           (select extend_5938 #x0000000000000005))
(model-add temp128_25
           ()
           (_ BitVec 64)
           (select extend_5938 #x0000000000000000))
(model-add temp128_26
           ()
           (_ BitVec 64)
           (select extend_5938 #x0000000000000005))
(model-add temp128_27
           ()
           (_ BitVec 64)
           (select extend_5938 #x0000000000000001))
(model-add temp128_28
           ()
           (_ BitVec 64)
           (select extend_5938 #x0000000000000002))
(model-add temp128_29
           ()
           (_ BitVec 64)
           (select extend_5938 #x0000000000000003))
(model-add temp128_30
           ()
           (_ BitVec 64)
           (select extend_5938 #x0000000000000004))
(model-add temp128_31
           ()
           (_ BitVec 64)
           (select extend_5935 #x0000000000000000))
(model-add temp128_32
           ()
           (_ BitVec 64)
           (select extend_5935 #x0000000000000001))
(model-add temp128_33
           ()
           (_ BitVec 64)
           (select extend_5935 #x0000000000000002))
(model-add temp128_34
           ()
           (_ BitVec 64)
           (select extend_5935 #x0000000000000003))
(model-add temp128_35
           ()
           (_ BitVec 64)
           (select extend_5935 #x0000000000000004))
(model-add temp128_36
           ()
           (_ BitVec 64)
           (select extend_5935 #x0000000000000005))
(model-add temp128_37 () (_ BitVec 64) #x0000000000000001)
(model-add var66500 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add extend_5936
           ()
           (_ BitVec 64)
           (ite k!0
                extend_5939
                (bvnot extend_5939)))
(model-del k!1)
(model-add k!0 () Bool (not k!1))



