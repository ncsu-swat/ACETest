(declare-fun temp28_1 () (_ BitVec 64))
(declare-fun temp28_2 () (_ BitVec 64))
(declare-fun extend_6139
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp28_3 () (_ BitVec 64))
(declare-fun temp28_4 () (_ BitVec 64))
(declare-fun temp28_5 () (_ BitVec 64))
(declare-fun temp28_6 () (_ BitVec 64))
(declare-fun temp28_7 () (_ BitVec 64))
(declare-fun temp28_8 () (_ BitVec 64))
(declare-fun temp28_9 () (_ BitVec 64))
(declare-fun temp28_10 () (_ BitVec 64))
(declare-fun temp28_11 () (_ BitVec 64))
(declare-fun temp28_12 () (_ BitVec 64))
(declare-fun temp28_13 () (_ BitVec 64))
(declare-fun temp28_14 () (_ BitVec 64))
(declare-fun extend_6142
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp28_15 () (_ BitVec 64))
(declare-fun temp28_16 () (_ BitVec 64))
(declare-fun temp28_17 () (_ BitVec 64))
(declare-fun temp28_18 () (_ BitVec 64))
(declare-fun temp28_19 () (_ BitVec 64))
(declare-fun temp28_20 () (_ BitVec 64))
(declare-fun temp28_21 () (_ BitVec 64))
(declare-fun temp28_22 () (_ BitVec 64))
(declare-fun temp28_23 () (_ BitVec 64))
(declare-fun temp28_24 () (_ BitVec 64))
(declare-fun temp28_25 () (_ BitVec 64))
(declare-fun temp28_26 () (_ BitVec 64))
(declare-fun temp28_27 () (_ BitVec 64))
(declare-fun temp28_28 () (_ BitVec 64))
(declare-fun temp28_29 () (_ BitVec 64))
(declare-fun temp28_30 () (_ BitVec 64))
(declare-fun temp28_31 () (_ BitVec 64))
(declare-fun temp28_32 () (_ BitVec 64))
(declare-fun temp28_33 () (_ BitVec 64))
(declare-fun temp28_34 () (_ BitVec 64))
(declare-fun temp28_35 () (_ BitVec 64))
(declare-fun temp28_36 () (_ BitVec 64))
(declare-fun temp28_37 () (_ BitVec 64))
(declare-fun var66500 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun extend_6140 () (_ BitVec 64))
(declare-fun extend_6143 () (_ BitVec 64))
(declare-fun k!1 () Bool)
(declare-fun temp28_38 () (_ BitVec 64))
(declare-fun var133870 () (_ BitVec 64))
(declare-fun var133866 () (_ BitVec 64))
(declare-fun var66555 () (_ BitVec 64))
(declare-fun temp28_39 () (_ BitVec 64))
(declare-fun temp28_40 () (_ BitVec 64))
(declare-fun temp28_41 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var66641 () (_ BitVec 64))
(declare-fun temp28_42 () (_ BitVec 64))
(declare-fun temp28_43 () (_ BitVec 64))
(declare-fun var66654 () (_ BitVec 64))
(declare-fun var330558 () (_ BitVec 64))
(declare-fun temp28_44 () (_ BitVec 64))
(declare-fun var542754 () (_ BitVec 64))
(declare-fun var542726 () (_ BitVec 64))
(declare-fun var477468 () (_ BitVec 64))
(declare-fun var477465 () (_ BitVec 64))
(declare-fun var396106 () (_ BitVec 64))
(declare-fun temp28_45 () (_ BitVec 64))
(declare-fun ARGNAME_pos_NAMEEND () (_ BitVec 64))
(declare-fun var658269 () (_ BitVec 64))
(declare-fun temp28_46 () (_ BitVec 64))
(declare-fun temp28_47 () (_ BitVec 64))
(declare-fun var870585 () (_ BitVec 64))
(declare-fun temp28_48 () (_ BitVec 64))
(declare-fun ARGNAME_len_NAMEEND () (_ BitVec 64))
(declare-fun var870588 () (_ BitVec 64))
(declare-fun var870606 () (_ BitVec 64))
(declare-fun temp28_50 () (_ BitVec 64))
(declare-fun var936142 () (_ BitVec 64))
(declare-fun temp28_51 () (_ BitVec 64))
(declare-fun var739498 () (_ BitVec 64))
(declare-fun var739460 () (_ BitVec 64))
(declare-fun var658278 () (_ BitVec 64))
(declare-fun var658282 () (_ BitVec 64))
(declare-fun var658263 () (_ BitVec 64))
(declare-fun var66673 () (_ BitVec 64))
(declare-fun temp28_53 () (_ BitVec 64))
(declare-fun var66655 () (_ BitVec 64))
(declare-fun var66758 () (_ BitVec 64))
(assert (= temp28_1 #x0000000000000000))
(assert (= temp28_2 (select extend_6139 temp28_1)))
(assert (= temp28_3 #x0000000000000001))
(assert (= temp28_4 (select extend_6139 temp28_3)))
(assert (= temp28_5 #x0000000000000002))
(assert (= temp28_6 (select extend_6139 temp28_5)))
(assert (= temp28_7 #x0000000000000003))
(assert (= temp28_8 (select extend_6139 temp28_7)))
(assert (= temp28_9 #x0000000000000004))
(assert (= temp28_10 (select extend_6139 temp28_9)))
(assert (= temp28_11 #x0000000000000005))
(assert (= temp28_12 (select extend_6139 temp28_11)))
(assert (= temp28_13 #x0000000000000000))
(assert (= temp28_14 (select extend_6142 temp28_13)))
(assert (= temp28_15 #x0000000000000001))
(assert (= temp28_16 (select extend_6142 temp28_15)))
(assert (= temp28_17 #x0000000000000002))
(assert (= temp28_18 (select extend_6142 temp28_17)))
(assert (= temp28_19 #x0000000000000003))
(assert (= temp28_20 (select extend_6142 temp28_19)))
(assert (= temp28_21 #x0000000000000004))
(assert (= temp28_22 (select extend_6142 temp28_21)))
(assert (= temp28_23 #x0000000000000005))
(assert (= temp28_24 (select extend_6142 temp28_23)))
(assert (= temp28_25 (select extend_6142 temp28_1)))
(assert (= temp28_26 (select extend_6142 temp28_11)))
(assert (= temp28_27 (select extend_6142 temp28_3)))
(assert (= temp28_28 (select extend_6142 temp28_5)))
(assert (= temp28_29 (select extend_6142 temp28_7)))
(assert (= temp28_30 (select extend_6142 temp28_9)))
(assert (= temp28_31 (select extend_6139 temp28_13)))
(assert (= temp28_32 (select extend_6139 temp28_15)))
(assert (= temp28_33 (select extend_6139 temp28_17)))
(assert (= temp28_34 (select extend_6139 temp28_19)))
(assert (= temp28_35 (select extend_6139 temp28_21)))
(assert (= temp28_36 (select extend_6139 temp28_23)))
(assert (= var66500
   (ite (and true
             (= temp28_25 temp28_2)
             (= temp28_26 temp28_12)
             (= temp28_27 temp28_4)
             (= temp28_28 temp28_6)
             (= temp28_29 temp28_8)
             (= temp28_30 temp28_10)
             (= temp28_2 temp28_25)
             (= temp28_12 temp28_26)
             (= temp28_31 temp28_14)
             (= temp28_32 temp28_16)
             (= temp28_33 temp28_18)
             (= temp28_34 temp28_20)
             (= temp28_35 temp28_22)
             (= temp28_36 temp28_24)
             (= temp28_4 temp28_27)
             (= temp28_6 temp28_28)
             (= temp28_8 temp28_29)
             (= temp28_10 temp28_30)
             (= extend_6140 extend_6143))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp28_37 #x0000000000000001))
(assert (= var66500 temp28_37))
(assert (= temp28_38 #x0000000000000000))
(assert (= var133870
   (ite (= extend_6140 temp28_38)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var133866 var133870))
(assert (= var66555 var133866))
(assert (= temp28_39 #x0000000000000001))
(assert (= var66555 temp28_39))
(assert (= temp28_40 #x0000000000000001))
(assert (= var66555 temp28_40))
(assert (= temp28_41 #x0000000000000000))
(assert (= var66641
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp28_41)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp28_42 #x0000000000000000))
(assert (= var66641 temp28_42))
(assert (= temp28_43 #x0000000000000000))
(assert (= var66654 temp28_43))
(assert (= var330558 var66654))
(assert (= temp28_44 #x0000000000000000))
(assert (= var542754 temp28_44))
(assert (= var542726 var542754))
(assert (= var477468 var542726))
(assert (= var477465 var477468))
(assert (= var396106 var477465))
(assert (= temp28_45 #xffffffffffffffff))
(assert (= var658269
   (ite (bvsgt ARGNAME_pos_NAMEEND temp28_45)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp28_46 #x0000000000000000))
(assert (= var658269 temp28_46))
(assert (= temp28_47 #x0000000000000000))
(assert (= var870585 temp28_47))
(assert (= temp28_48 #x0000000000000000))
(assert (= var870588
   (ite (= ARGNAME_len_NAMEEND temp28_48)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var870606 var870585))
(assert (= temp28_50 #x0000000000000000))
(assert (= var936142 temp28_50))
(assert (= temp28_51 #x0000000000000000))
(assert (= var739498 temp28_51))
(assert (= var739460 var739498))
(assert (= var658278 var739460))
(assert (= var658282 var658278))
(assert (= var658263 var658282))
(assert (= var66673 var658263))
(assert (= temp28_53 #x0000000000000001))
(assert (= var66655 (bvadd var66654 temp28_53)))
(assert (= var66758
   (ite (bvslt var66655 ARGNAME_input_NAMEEND_NUMELEMENT)
        #x0000000000000001
        #x0000000000000000)))
(model-add temp28_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp28_2
           ()
           (_ BitVec 64)
           (select extend_6139 #x0000000000000000))
(model-add temp28_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp28_4
           ()
           (_ BitVec 64)
           (select extend_6139 #x0000000000000001))
(model-add temp28_5 () (_ BitVec 64) #x0000000000000002)
(model-add temp28_6
           ()
           (_ BitVec 64)
           (select extend_6139 #x0000000000000002))
(model-add temp28_7 () (_ BitVec 64) #x0000000000000003)
(model-add temp28_8
           ()
           (_ BitVec 64)
           (select extend_6139 #x0000000000000003))
(model-add temp28_9 () (_ BitVec 64) #x0000000000000004)
(model-add temp28_10
           ()
           (_ BitVec 64)
           (select extend_6139 #x0000000000000004))
(model-add temp28_11 () (_ BitVec 64) #x0000000000000005)
(model-add temp28_12
           ()
           (_ BitVec 64)
           (select extend_6139 #x0000000000000005))
(model-add temp28_13 () (_ BitVec 64) #x0000000000000000)
(model-add temp28_14
           ()
           (_ BitVec 64)
           (select extend_6142 #x0000000000000000))
(model-add temp28_15 () (_ BitVec 64) #x0000000000000001)
(model-add temp28_16
           ()
           (_ BitVec 64)
           (select extend_6142 #x0000000000000001))
(model-add temp28_17 () (_ BitVec 64) #x0000000000000002)
(model-add temp28_18
           ()
           (_ BitVec 64)
           (select extend_6142 #x0000000000000002))
(model-add temp28_19 () (_ BitVec 64) #x0000000000000003)
(model-add temp28_20
           ()
           (_ BitVec 64)
           (select extend_6142 #x0000000000000003))
(model-add temp28_21 () (_ BitVec 64) #x0000000000000004)
(model-add temp28_22
           ()
           (_ BitVec 64)
           (select extend_6142 #x0000000000000004))
(model-add temp28_23 () (_ BitVec 64) #x0000000000000005)
(model-add temp28_24
           ()
           (_ BitVec 64)
           (select extend_6142 #x0000000000000005))
(model-add temp28_25
           ()
           (_ BitVec 64)
           (select extend_6142 #x0000000000000000))
(model-add temp28_26
           ()
           (_ BitVec 64)
           (select extend_6142 #x0000000000000005))
(model-add temp28_27
           ()
           (_ BitVec 64)
           (select extend_6142 #x0000000000000001))
(model-add temp28_28
           ()
           (_ BitVec 64)
           (select extend_6142 #x0000000000000002))
(model-add temp28_29
           ()
           (_ BitVec 64)
           (select extend_6142 #x0000000000000003))
(model-add temp28_30
           ()
           (_ BitVec 64)
           (select extend_6142 #x0000000000000004))
(model-add temp28_31
           ()
           (_ BitVec 64)
           (select extend_6139 #x0000000000000000))
(model-add temp28_32
           ()
           (_ BitVec 64)
           (select extend_6139 #x0000000000000001))
(model-add temp28_33
           ()
           (_ BitVec 64)
           (select extend_6139 #x0000000000000002))
(model-add temp28_34
           ()
           (_ BitVec 64)
           (select extend_6139 #x0000000000000003))
(model-add temp28_35
           ()
           (_ BitVec 64)
           (select extend_6139 #x0000000000000004))
(model-add temp28_36
           ()
           (_ BitVec 64)
           (select extend_6139 #x0000000000000005))
(model-add temp28_37 () (_ BitVec 64) #x0000000000000001)
(model-add var66500 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add extend_6140
           ()
           (_ BitVec 64)
           (ite k!0
                extend_6143
                (bvnot extend_6143)))
(model-del k!1)
(model-add k!0 () Bool (not k!1))


