(declare-fun temp140_1 () (_ BitVec 64))
(declare-fun temp140_2 () (_ BitVec 64))
(declare-fun extend_6175
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp140_3 () (_ BitVec 64))
(declare-fun temp140_4 () (_ BitVec 64))
(declare-fun temp140_5 () (_ BitVec 64))
(declare-fun temp140_6 () (_ BitVec 64))
(declare-fun temp140_7 () (_ BitVec 64))
(declare-fun temp140_8 () (_ BitVec 64))
(declare-fun temp140_9 () (_ BitVec 64))
(declare-fun temp140_10 () (_ BitVec 64))
(declare-fun temp140_11 () (_ BitVec 64))
(declare-fun temp140_12 () (_ BitVec 64))
(declare-fun temp140_13 () (_ BitVec 64))
(declare-fun temp140_14 () (_ BitVec 64))
(declare-fun extend_6178
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp140_15 () (_ BitVec 64))
(declare-fun temp140_16 () (_ BitVec 64))
(declare-fun temp140_17 () (_ BitVec 64))
(declare-fun temp140_18 () (_ BitVec 64))
(declare-fun temp140_19 () (_ BitVec 64))
(declare-fun temp140_20 () (_ BitVec 64))
(declare-fun temp140_21 () (_ BitVec 64))
(declare-fun temp140_22 () (_ BitVec 64))
(declare-fun temp140_23 () (_ BitVec 64))
(declare-fun temp140_24 () (_ BitVec 64))
(declare-fun temp140_25 () (_ BitVec 64))
(declare-fun temp140_26 () (_ BitVec 64))
(declare-fun temp140_27 () (_ BitVec 64))
(declare-fun temp140_28 () (_ BitVec 64))
(declare-fun temp140_29 () (_ BitVec 64))
(declare-fun temp140_30 () (_ BitVec 64))
(declare-fun temp140_31 () (_ BitVec 64))
(declare-fun temp140_32 () (_ BitVec 64))
(declare-fun temp140_33 () (_ BitVec 64))
(declare-fun temp140_34 () (_ BitVec 64))
(declare-fun temp140_35 () (_ BitVec 64))
(declare-fun temp140_36 () (_ BitVec 64))
(declare-fun temp140_37 () (_ BitVec 64))
(declare-fun var66500 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun extend_6176 () (_ BitVec 64))
(declare-fun extend_6179 () (_ BitVec 64))
(declare-fun k!1 () Bool)
(declare-fun temp140_38 () (_ BitVec 64))
(declare-fun var133870 () (_ BitVec 64))
(declare-fun var133866 () (_ BitVec 64))
(declare-fun var66555 () (_ BitVec 64))
(declare-fun temp140_39 () (_ BitVec 64))
(declare-fun temp140_40 () (_ BitVec 64))
(declare-fun temp140_41 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var66641 () (_ BitVec 64))
(declare-fun temp140_42 () (_ BitVec 64))
(declare-fun temp140_43 () (_ BitVec 64))
(declare-fun var66654 () (_ BitVec 64))
(declare-fun var330558 () (_ BitVec 64))
(declare-fun temp140_44 () (_ BitVec 64))
(declare-fun ARGNAME_pos_NAMEEND () (_ BitVec 64))
(declare-fun var723805 () (_ BitVec 64))
(declare-fun temp140_45 () (_ BitVec 64))
(declare-fun temp140_46 () (_ BitVec 64))
(declare-fun var936121 () (_ BitVec 64))
(declare-fun temp140_47 () (_ BitVec 64))
(declare-fun ARGNAME_len_NAMEEND () (_ BitVec 64))
(declare-fun var936124 () (_ BitVec 64))
(declare-fun var936142 () (_ BitVec 64))
(declare-fun temp140_49 () (_ BitVec 64))
(declare-fun var1001657 () (_ BitVec 64))
(declare-fun temp140_50 () (_ BitVec 64))
(declare-fun var1001660 () (_ BitVec 64))
(declare-fun var1001678 () (_ BitVec 64))
(declare-fun temp140_52 () (_ BitVec 64))
(declare-fun var805034 () (_ BitVec 64))
(declare-fun var804996 () (_ BitVec 64))
(declare-fun var723814 () (_ BitVec 64))
(declare-fun var723818 () (_ BitVec 64))
(declare-fun var723799 () (_ BitVec 64))
(declare-fun var66673 () (_ BitVec 64))
(declare-fun temp140_54 () (_ BitVec 64))
(declare-fun var66655 () (_ BitVec 64))
(declare-fun var66758 () (_ BitVec 64))
(assert (= temp140_1 #x0000000000000000))
(assert (= temp140_2 (select extend_6175 temp140_1)))
(assert (= temp140_3 #x0000000000000001))
(assert (= temp140_4 (select extend_6175 temp140_3)))
(assert (= temp140_5 #x0000000000000002))
(assert (= temp140_6 (select extend_6175 temp140_5)))
(assert (= temp140_7 #x0000000000000003))
(assert (= temp140_8 (select extend_6175 temp140_7)))
(assert (= temp140_9 #x0000000000000004))
(assert (= temp140_10 (select extend_6175 temp140_9)))
(assert (= temp140_11 #x0000000000000005))
(assert (= temp140_12 (select extend_6175 temp140_11)))
(assert (= temp140_13 #x0000000000000000))
(assert (= temp140_14 (select extend_6178 temp140_13)))
(assert (= temp140_15 #x0000000000000001))
(assert (= temp140_16 (select extend_6178 temp140_15)))
(assert (= temp140_17 #x0000000000000002))
(assert (= temp140_18 (select extend_6178 temp140_17)))
(assert (= temp140_19 #x0000000000000003))
(assert (= temp140_20 (select extend_6178 temp140_19)))
(assert (= temp140_21 #x0000000000000004))
(assert (= temp140_22 (select extend_6178 temp140_21)))
(assert (= temp140_23 #x0000000000000005))
(assert (= temp140_24 (select extend_6178 temp140_23)))
(assert (= temp140_25 (select extend_6178 temp140_1)))
(assert (= temp140_26 (select extend_6178 temp140_11)))
(assert (= temp140_27 (select extend_6178 temp140_3)))
(assert (= temp140_28 (select extend_6178 temp140_5)))
(assert (= temp140_29 (select extend_6178 temp140_7)))
(assert (= temp140_30 (select extend_6178 temp140_9)))
(assert (= temp140_31 (select extend_6175 temp140_13)))
(assert (= temp140_32 (select extend_6175 temp140_15)))
(assert (= temp140_33 (select extend_6175 temp140_17)))
(assert (= temp140_34 (select extend_6175 temp140_19)))
(assert (= temp140_35 (select extend_6175 temp140_21)))
(assert (= temp140_36 (select extend_6175 temp140_23)))
(assert (= var66500
   (ite (and true
             (= temp140_25 temp140_2)
             (= temp140_26 temp140_12)
             (= temp140_27 temp140_4)
             (= temp140_28 temp140_6)
             (= temp140_29 temp140_8)
             (= temp140_30 temp140_10)
             (= temp140_2 temp140_25)
             (= temp140_12 temp140_26)
             (= temp140_31 temp140_14)
             (= temp140_32 temp140_16)
             (= temp140_33 temp140_18)
             (= temp140_34 temp140_20)
             (= temp140_35 temp140_22)
             (= temp140_36 temp140_24)
             (= temp140_4 temp140_27)
             (= temp140_6 temp140_28)
             (= temp140_8 temp140_29)
             (= temp140_10 temp140_30)
             (= extend_6176 extend_6179))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp140_37 #x0000000000000001))
(assert (= var66500 temp140_37))
(assert (= temp140_38 #x0000000000000000))
(assert (= var133870
   (ite (= extend_6176 temp140_38)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var133866 var133870))
(assert (= var66555 var133866))
(assert (= temp140_39 #x0000000000000001))
(assert (= var66555 temp140_39))
(assert (= temp140_40 #x0000000000000001))
(assert (= var66555 temp140_40))
(assert (= temp140_41 #x0000000000000000))
(assert (= var66641
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp140_41)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp140_42 #x0000000000000000))
(assert (= var66641 temp140_42))
(assert (= temp140_43 #x0000000000000000))
(assert (= var66654 temp140_43))
(assert (= var330558 var66654))
(assert (= temp140_44 #xffffffffffffffff))
(assert (= var723805
   (ite (bvsgt ARGNAME_pos_NAMEEND temp140_44)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp140_45 #x0000000000000000))
(assert (= var723805 temp140_45))
(assert (= temp140_46 #x0000000000000000))
(assert (= var936121 temp140_46))
(assert (= temp140_47 #x0000000000000000))
(assert (= var936124
   (ite (= ARGNAME_len_NAMEEND temp140_47)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var936142 var936121))
(assert (= temp140_49 #x0000000000000000))
(assert (= var1001657 temp140_49))
(assert (= temp140_50 #x0000000000000000))
(assert (= var1001660
   (ite (= ARGNAME_len_NAMEEND temp140_50)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var1001678 var1001657))
(assert (= temp140_52 #x0000000000000000))
(assert (= var805034 temp140_52))
(assert (= var804996 var805034))
(assert (= var723814 var804996))
(assert (= var723818 var723814))
(assert (= var723799 var723818))
(assert (= var66673 var723799))
(assert (= temp140_54 #x0000000000000001))
(assert (= var66655 (bvadd var66654 temp140_54)))
(assert (= var66758
   (ite (bvslt var66655 ARGNAME_input_NAMEEND_NUMELEMENT)
        #x0000000000000001
        #x0000000000000000)))
(model-add temp140_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp140_2
           ()
           (_ BitVec 64)
           (select extend_6175 #x0000000000000000))
(model-add temp140_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp140_4
           ()
           (_ BitVec 64)
           (select extend_6175 #x0000000000000001))
(model-add temp140_5 () (_ BitVec 64) #x0000000000000002)
(model-add temp140_6
           ()
           (_ BitVec 64)
           (select extend_6175 #x0000000000000002))
(model-add temp140_7 () (_ BitVec 64) #x0000000000000003)
(model-add temp140_8
           ()
           (_ BitVec 64)
           (select extend_6175 #x0000000000000003))
(model-add temp140_9 () (_ BitVec 64) #x0000000000000004)
(model-add temp140_10
           ()
           (_ BitVec 64)
           (select extend_6175 #x0000000000000004))
(model-add temp140_11 () (_ BitVec 64) #x0000000000000005)
(model-add temp140_12
           ()
           (_ BitVec 64)
           (select extend_6175 #x0000000000000005))
(model-add temp140_13 () (_ BitVec 64) #x0000000000000000)
(model-add temp140_14
           ()
           (_ BitVec 64)
           (select extend_6178 #x0000000000000000))
(model-add temp140_15 () (_ BitVec 64) #x0000000000000001)
(model-add temp140_16
           ()
           (_ BitVec 64)
           (select extend_6178 #x0000000000000001))
(model-add temp140_17 () (_ BitVec 64) #x0000000000000002)
(model-add temp140_18
           ()
           (_ BitVec 64)
           (select extend_6178 #x0000000000000002))
(model-add temp140_19 () (_ BitVec 64) #x0000000000000003)
(model-add temp140_20
           ()
           (_ BitVec 64)
           (select extend_6178 #x0000000000000003))
(model-add temp140_21 () (_ BitVec 64) #x0000000000000004)
(model-add temp140_22
           ()
           (_ BitVec 64)
           (select extend_6178 #x0000000000000004))
(model-add temp140_23 () (_ BitVec 64) #x0000000000000005)
(model-add temp140_24
           ()
           (_ BitVec 64)
           (select extend_6178 #x0000000000000005))
(model-add temp140_25
           ()
           (_ BitVec 64)
           (select extend_6178 #x0000000000000000))
(model-add temp140_26
           ()
           (_ BitVec 64)
           (select extend_6178 #x0000000000000005))
(model-add temp140_27
           ()
           (_ BitVec 64)
           (select extend_6178 #x0000000000000001))
(model-add temp140_28
           ()
           (_ BitVec 64)
           (select extend_6178 #x0000000000000002))
(model-add temp140_29
           ()
           (_ BitVec 64)
           (select extend_6178 #x0000000000000003))
(model-add temp140_30
           ()
           (_ BitVec 64)
           (select extend_6178 #x0000000000000004))
(model-add temp140_31
           ()
           (_ BitVec 64)
           (select extend_6175 #x0000000000000000))
(model-add temp140_32
           ()
           (_ BitVec 64)
           (select extend_6175 #x0000000000000001))
(model-add temp140_33
           ()
           (_ BitVec 64)
           (select extend_6175 #x0000000000000002))
(model-add temp140_34
           ()
           (_ BitVec 64)
           (select extend_6175 #x0000000000000003))
(model-add temp140_35
           ()
           (_ BitVec 64)
           (select extend_6175 #x0000000000000004))
(model-add temp140_36
           ()
           (_ BitVec 64)
           (select extend_6175 #x0000000000000005))
(model-add temp140_37 () (_ BitVec 64) #x0000000000000001)
(model-add var66500 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add extend_6176
           ()
           (_ BitVec 64)
           (ite k!0
                extend_6179
                (bvnot extend_6179)))
(model-del k!1)
(model-add k!0 () Bool (not k!1))





