(declare-fun temp1082_1 () (_ BitVec 64))
(declare-fun temp1082_2 () (_ BitVec 64))
(declare-fun extend_37609
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1082_3 () (_ BitVec 64))
(declare-fun temp1082_4 () (_ BitVec 64))
(declare-fun temp1082_5 () (_ BitVec 64))
(declare-fun temp1082_6 () (_ BitVec 64))
(declare-fun temp1082_7 () (_ BitVec 64))
(declare-fun temp1082_8 () (_ BitVec 64))
(declare-fun temp1082_9 () (_ BitVec 64))
(declare-fun temp1082_10 () (_ BitVec 64))
(declare-fun temp1082_11 () (_ BitVec 64))
(declare-fun temp1082_12 () (_ BitVec 64))
(declare-fun temp1082_13 () (_ BitVec 64))
(declare-fun temp1082_14 () (_ BitVec 64))
(declare-fun extend_37612
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1082_15 () (_ BitVec 64))
(declare-fun temp1082_16 () (_ BitVec 64))
(declare-fun temp1082_17 () (_ BitVec 64))
(declare-fun temp1082_18 () (_ BitVec 64))
(declare-fun temp1082_19 () (_ BitVec 64))
(declare-fun temp1082_20 () (_ BitVec 64))
(declare-fun temp1082_21 () (_ BitVec 64))
(declare-fun temp1082_22 () (_ BitVec 64))
(declare-fun temp1082_23 () (_ BitVec 64))
(declare-fun temp1082_24 () (_ BitVec 64))
(declare-fun temp1082_25 () (_ BitVec 64))
(declare-fun temp1082_26 () (_ BitVec 64))
(declare-fun temp1082_27 () (_ BitVec 64))
(declare-fun temp1082_28 () (_ BitVec 64))
(declare-fun temp1082_29 () (_ BitVec 64))
(declare-fun temp1082_30 () (_ BitVec 64))
(declare-fun temp1082_31 () (_ BitVec 64))
(declare-fun temp1082_32 () (_ BitVec 64))
(declare-fun temp1082_33 () (_ BitVec 64))
(declare-fun temp1082_34 () (_ BitVec 64))
(declare-fun temp1082_35 () (_ BitVec 64))
(declare-fun temp1082_36 () (_ BitVec 64))
(declare-fun temp1082_37 () (_ BitVec 64))
(declare-fun var66500 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun extend_37610 () (_ BitVec 64))
(declare-fun extend_37613 () (_ BitVec 64))
(declare-fun k!1 () Bool)
(declare-fun temp1082_38 () (_ BitVec 64))
(declare-fun var133870 () (_ BitVec 64))
(declare-fun var133866 () (_ BitVec 64))
(declare-fun var66555 () (_ BitVec 64))
(declare-fun temp1082_39 () (_ BitVec 64))
(declare-fun temp1082_40 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1082_41 () (_ BitVec 64))
(declare-fun temp1082_42 () (_ BitVec 64))
(declare-fun temp1082_43 () (_ BitVec 64))
(declare-fun temp1082_44 () (_ BitVec 64))
(declare-fun temp1082_45 () (_ BitVec 64))
(declare-fun temp1082_46 () (_ BitVec 64))
(declare-fun temp1082_47 () (_ BitVec 64))
(declare-fun temp1082_48 () (_ BitVec 64))
(declare-fun temp1082_49 () (_ BitVec 64))
(declare-fun temp1082_50 () (_ BitVec 64))
(declare-fun temp1082_51 () (_ BitVec 64))
(declare-fun temp1082_52 () (_ BitVec 64))
(declare-fun temp1082_53 () (_ BitVec 64))
(declare-fun temp1082_54 () (_ BitVec 64))
(declare-fun temp1082_55 () (_ BitVec 64))
(declare-fun temp1082_56 () (_ BitVec 64))
(declare-fun temp1082_57 () (_ BitVec 64))
(declare-fun temp1082_58 () (_ BitVec 64))
(declare-fun temp1082_59 () (_ BitVec 64))
(declare-fun temp1082_60 () (_ BitVec 64))
(declare-fun temp1082_61 () (_ BitVec 64))
(declare-fun temp1082_62 () (_ BitVec 64))
(declare-fun temp1082_63 () (_ BitVec 64))
(declare-fun temp1082_64 () (_ BitVec 64))
(declare-fun temp1082_65 () (_ BitVec 64))
(declare-fun temp1082_66 () (_ BitVec 64))
(declare-fun temp1082_67 () (_ BitVec 64))
(declare-fun temp1082_68 () (_ BitVec 64))
(declare-fun temp1082_69 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var66559 () (_ BitVec 64))
(declare-fun temp1082_70 () (_ BitVec 64))
(declare-fun temp1082_71 () (_ BitVec 64))
(declare-fun temp1082_72 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var66799 () (_ BitVec 64))
(declare-fun temp1082_73 () (_ BitVec 64))
(declare-fun temp1082_74 () (_ BitVec 64))
(declare-fun var66812 () (_ BitVec 64))
(declare-fun var199486 () (_ BitVec 64))
(declare-fun var527627 () (_ BitVec 64))
(declare-fun var593163 () (_ BitVec 64))
(declare-fun temp1082_76 () (_ BitVec 64))
(declare-fun temp1082_75 () (_ BitVec 64))
(declare-fun temp1082_77 () (_ BitVec 64))
(declare-fun var805137 () (_ BitVec 64))
(declare-fun temp1082_78 () (_ BitVec 64))
(declare-fun var936192 () (_ BitVec 64))
(declare-fun var936209 () (_ BitVec 64))
(declare-fun var739454 () (_ BitVec 64))
(declare-fun temp1082_79 () (_ BitVec 64))
(declare-fun var739458 () (_ BitVec 64))
(declare-fun var739437 () (_ BitVec 64))
(declare-fun var658273 () (_ BitVec 64))
(declare-fun var658282 () (_ BitVec 64))
(declare-fun var658263 () (_ BitVec 64))
(declare-fun var66835 () (_ BitVec 64))
(declare-fun var66896 () (_ BitVec 64))
(declare-fun temp1082_81 () (_ BitVec 64))
(declare-fun var66813 () (_ BitVec 64))
(declare-fun var66911 () (_ BitVec 64))
(assert (= temp1082_1 #x0000000000000000))
(assert (= temp1082_2 (select extend_37609 temp1082_1)))
(assert (= temp1082_3 #x0000000000000001))
(assert (= temp1082_4 (select extend_37609 temp1082_3)))
(assert (= temp1082_5 #x0000000000000002))
(assert (= temp1082_6 (select extend_37609 temp1082_5)))
(assert (= temp1082_7 #x0000000000000003))
(assert (= temp1082_8 (select extend_37609 temp1082_7)))
(assert (= temp1082_9 #x0000000000000004))
(assert (= temp1082_10 (select extend_37609 temp1082_9)))
(assert (= temp1082_11 #x0000000000000005))
(assert (= temp1082_12 (select extend_37609 temp1082_11)))
(assert (= temp1082_13 #x0000000000000000))
(assert (= temp1082_14 (select extend_37612 temp1082_13)))
(assert (= temp1082_15 #x0000000000000001))
(assert (= temp1082_16 (select extend_37612 temp1082_15)))
(assert (= temp1082_17 #x0000000000000002))
(assert (= temp1082_18 (select extend_37612 temp1082_17)))
(assert (= temp1082_19 #x0000000000000003))
(assert (= temp1082_20 (select extend_37612 temp1082_19)))
(assert (= temp1082_21 #x0000000000000004))
(assert (= temp1082_22 (select extend_37612 temp1082_21)))
(assert (= temp1082_23 #x0000000000000005))
(assert (= temp1082_24 (select extend_37612 temp1082_23)))
(assert (= temp1082_25 (select extend_37612 temp1082_1)))
(assert (= temp1082_26 (select extend_37612 temp1082_11)))
(assert (= temp1082_27 (select extend_37612 temp1082_3)))
(assert (= temp1082_28 (select extend_37612 temp1082_5)))
(assert (= temp1082_29 (select extend_37612 temp1082_7)))
(assert (= temp1082_30 (select extend_37612 temp1082_9)))
(assert (= temp1082_31 (select extend_37609 temp1082_13)))
(assert (= temp1082_32 (select extend_37609 temp1082_15)))
(assert (= temp1082_33 (select extend_37609 temp1082_17)))
(assert (= temp1082_34 (select extend_37609 temp1082_19)))
(assert (= temp1082_35 (select extend_37609 temp1082_21)))
(assert (= temp1082_36 (select extend_37609 temp1082_23)))
(assert (= var66500
   (ite (and true
             (= temp1082_25 temp1082_2)
             (= temp1082_26 temp1082_12)
             (= temp1082_27 temp1082_4)
             (= temp1082_28 temp1082_6)
             (= temp1082_29 temp1082_8)
             (= temp1082_30 temp1082_10)
             (= temp1082_2 temp1082_25)
             (= temp1082_12 temp1082_26)
             (= temp1082_31 temp1082_14)
             (= temp1082_32 temp1082_16)
             (= temp1082_33 temp1082_18)
             (= temp1082_34 temp1082_20)
             (= temp1082_35 temp1082_22)
             (= temp1082_36 temp1082_24)
             (= temp1082_4 temp1082_27)
             (= temp1082_6 temp1082_28)
             (= temp1082_8 temp1082_29)
             (= temp1082_10 temp1082_30)
             (= extend_37610 extend_37613))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1082_37 #x0000000000000001))
(assert (= var66500 temp1082_37))
(assert (= temp1082_38 #x0000000000000000))
(assert (= var133870
   (ite (= extend_37610 temp1082_38)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var133866 var133870))
(assert (= var66555 var133866))
(assert (= temp1082_39 #x0000000000000000))
(assert (= var66555 temp1082_39))
(assert (= temp1082_40 #x0000000000000000))
(assert (= temp1082_41 (select ARGNAME_input_NAMEEND_DIMSIZE temp1082_40)))
(assert (= temp1082_42 #x0000000000000001))
(assert (= temp1082_43 (select ARGNAME_input_NAMEEND_DIMSIZE temp1082_42)))
(assert (= temp1082_44 #x0000000000000002))
(assert (= temp1082_45 (select ARGNAME_input_NAMEEND_DIMSIZE temp1082_44)))
(assert (= temp1082_46 #x0000000000000003))
(assert (= temp1082_47 (select ARGNAME_input_NAMEEND_DIMSIZE temp1082_46)))
(assert (= temp1082_48 #x0000000000000004))
(assert (= temp1082_49 (select ARGNAME_input_NAMEEND_DIMSIZE temp1082_48)))
(assert (= temp1082_50 #x0000000000000005))
(assert (= temp1082_51 (select ARGNAME_input_NAMEEND_DIMSIZE temp1082_50)))
(assert (= temp1082_52 (select extend_37609 temp1082_40)))
(assert (= temp1082_53 (select extend_37609 temp1082_42)))
(assert (= temp1082_54 (select extend_37609 temp1082_44)))
(assert (= temp1082_55 (select extend_37609 temp1082_46)))
(assert (= temp1082_56 (select extend_37609 temp1082_48)))
(assert (= temp1082_57 (select extend_37609 temp1082_50)))
(assert (= temp1082_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp1082_1)))
(assert (= temp1082_59 (select ARGNAME_input_NAMEEND_DIMSIZE temp1082_11)))
(assert (= temp1082_60 (select ARGNAME_input_NAMEEND_DIMSIZE temp1082_13)))
(assert (= temp1082_61 (select ARGNAME_input_NAMEEND_DIMSIZE temp1082_15)))
(assert (= temp1082_62 (select ARGNAME_input_NAMEEND_DIMSIZE temp1082_17)))
(assert (= temp1082_63 (select ARGNAME_input_NAMEEND_DIMSIZE temp1082_19)))
(assert (= temp1082_64 (select ARGNAME_input_NAMEEND_DIMSIZE temp1082_21)))
(assert (= temp1082_65 (select ARGNAME_input_NAMEEND_DIMSIZE temp1082_23)))
(assert (= temp1082_66 (select ARGNAME_input_NAMEEND_DIMSIZE temp1082_3)))
(assert (= temp1082_67 (select ARGNAME_input_NAMEEND_DIMSIZE temp1082_5)))
(assert (= temp1082_68 (select ARGNAME_input_NAMEEND_DIMSIZE temp1082_7)))
(assert (= temp1082_69 (select ARGNAME_input_NAMEEND_DIMSIZE temp1082_9)))
(assert (= var66559
   (ite (and true
             (= temp1082_52 temp1082_41)
             (= temp1082_53 temp1082_43)
             (= temp1082_54 temp1082_45)
             (= temp1082_55 temp1082_47)
             (= temp1082_56 temp1082_49)
             (= temp1082_57 temp1082_51)
             (= temp1082_58 temp1082_2)
             (= temp1082_59 temp1082_12)
             (= temp1082_60 temp1082_31)
             (= temp1082_61 temp1082_32)
             (= temp1082_62 temp1082_33)
             (= temp1082_63 temp1082_34)
             (= temp1082_64 temp1082_35)
             (= temp1082_65 temp1082_36)
             (= temp1082_66 temp1082_4)
             (= temp1082_41 temp1082_52)
             (= temp1082_43 temp1082_53)
             (= temp1082_45 temp1082_54)
             (= temp1082_47 temp1082_55)
             (= temp1082_49 temp1082_56)
             (= temp1082_67 temp1082_6)
             (= temp1082_51 temp1082_57)
             (= temp1082_68 temp1082_8)
             (= temp1082_69 temp1082_10)
             (= ARGNAME_input_NAMEEND_DIM extend_37610))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1082_70 #x0000000000000001))
(assert (= var66559 temp1082_70))
(assert (= temp1082_71 #x0000000000000000))
(assert (= var66555 temp1082_71))
(assert (= temp1082_72 #x0000000000000000))
(assert (= var66799
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp1082_72)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1082_73 #x0000000000000000))
(assert (= var66799 temp1082_73))
(assert (= temp1082_74 #x0000000000000000))
(assert (= var66812 temp1082_74))
(assert (= var199486 var66812))
(assert (= var527627 var66812))
(assert (= var593163 var66812))
(assert (= temp1082_76 #x0000000000000000))
(assert (= temp1082_75 temp1082_76))
(assert (= temp1082_77 #x0000000000000000))
(assert (= var805137 temp1082_77))
(assert (= temp1082_78 #x0000000000000000))
(assert (= var936192 temp1082_78))
(assert (= var936209 var936192))
(assert (= var739454 (bvsub temp1082_75 temp1082_75)))
(assert (= temp1082_79 #x0000000000000001))
(assert (= var739458 temp1082_79))
(assert (= var739437 var739458))
(assert (= var658273 var739437))
(assert (= var658282 var658273))
(assert (= var658263 var658282))
(assert (= var66835 var658263))
(assert (= var66896 var739454))
(assert (= temp1082_81 #x0000000000000001))
(assert (= var66813 (bvadd var66812 temp1082_81)))
(assert (= var66911
   (ite (bvslt var66813 ARGNAME_input_NAMEEND_NUMELEMENT)
        #x0000000000000001
        #x0000000000000000)))
(model-add temp1082_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp1082_2
           ()
           (_ BitVec 64)
           (select extend_37609 #x0000000000000000))
(model-add temp1082_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp1082_4
           ()
           (_ BitVec 64)
           (select extend_37609 #x0000000000000001))
(model-add temp1082_5 () (_ BitVec 64) #x0000000000000002)
(model-add temp1082_6
           ()
           (_ BitVec 64)
           (select extend_37609 #x0000000000000002))
(model-add temp1082_7 () (_ BitVec 64) #x0000000000000003)
(model-add temp1082_8
           ()
           (_ BitVec 64)
           (select extend_37609 #x0000000000000003))
(model-add temp1082_9 () (_ BitVec 64) #x0000000000000004)
(model-add temp1082_10
           ()
           (_ BitVec 64)
           (select extend_37609 #x0000000000000004))
(model-add temp1082_11 () (_ BitVec 64) #x0000000000000005)
(model-add temp1082_12
           ()
           (_ BitVec 64)
           (select extend_37609 #x0000000000000005))
(model-add temp1082_13 () (_ BitVec 64) #x0000000000000000)
(model-add temp1082_14
           ()
           (_ BitVec 64)
           (select extend_37612 #x0000000000000000))
(model-add temp1082_15 () (_ BitVec 64) #x0000000000000001)
(model-add temp1082_16
           ()
           (_ BitVec 64)
           (select extend_37612 #x0000000000000001))
(model-add temp1082_17 () (_ BitVec 64) #x0000000000000002)
(model-add temp1082_18
           ()
           (_ BitVec 64)
           (select extend_37612 #x0000000000000002))
(model-add temp1082_19 () (_ BitVec 64) #x0000000000000003)
(model-add temp1082_20
           ()
           (_ BitVec 64)
           (select extend_37612 #x0000000000000003))
(model-add temp1082_21 () (_ BitVec 64) #x0000000000000004)
(model-add temp1082_22
           ()
           (_ BitVec 64)
           (select extend_37612 #x0000000000000004))
(model-add temp1082_23 () (_ BitVec 64) #x0000000000000005)
(model-add temp1082_24
           ()
           (_ BitVec 64)
           (select extend_37612 #x0000000000000005))
(model-add temp1082_25
           ()
           (_ BitVec 64)
           (select extend_37612 #x0000000000000000))
(model-add temp1082_26
           ()
           (_ BitVec 64)
           (select extend_37612 #x0000000000000005))
(model-add temp1082_27
           ()
           (_ BitVec 64)
           (select extend_37612 #x0000000000000001))
(model-add temp1082_28
           ()
           (_ BitVec 64)
           (select extend_37612 #x0000000000000002))
(model-add temp1082_29
           ()
           (_ BitVec 64)
           (select extend_37612 #x0000000000000003))
(model-add temp1082_30
           ()
           (_ BitVec 64)
           (select extend_37612 #x0000000000000004))
(model-add temp1082_31
           ()
           (_ BitVec 64)
           (select extend_37609 #x0000000000000000))
(model-add temp1082_32
           ()
           (_ BitVec 64)
           (select extend_37609 #x0000000000000001))
(model-add temp1082_33
           ()
           (_ BitVec 64)
           (select extend_37609 #x0000000000000002))
(model-add temp1082_34
           ()
           (_ BitVec 64)
           (select extend_37609 #x0000000000000003))
(model-add temp1082_35
           ()
           (_ BitVec 64)
           (select extend_37609 #x0000000000000004))
(model-add temp1082_36
           ()
           (_ BitVec 64)
           (select extend_37609 #x0000000000000005))
(model-add temp1082_37 () (_ BitVec 64) #x0000000000000001)
(model-add var66500 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add extend_37610
           ()
           (_ BitVec 64)
           (ite k!0
                extend_37613
                (bvnot extend_37613)))
(model-del k!1)
(model-add k!0 () Bool (not k!1))




