(declare-fun temp98_1 () (_ BitVec 64))
(declare-fun temp98_2 () (_ BitVec 64))
(declare-fun extend_5212
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp98_3 () (_ BitVec 64))
(declare-fun temp98_4 () (_ BitVec 64))
(declare-fun temp98_5 () (_ BitVec 64))
(declare-fun temp98_6 () (_ BitVec 64))
(declare-fun temp98_7 () (_ BitVec 64))
(declare-fun temp98_8 () (_ BitVec 64))
(declare-fun temp98_9 () (_ BitVec 64))
(declare-fun temp98_10 () (_ BitVec 64))
(declare-fun temp98_11 () (_ BitVec 64))
(declare-fun temp98_12 () (_ BitVec 64))
(declare-fun temp98_13 () (_ BitVec 64))
(declare-fun temp98_14 () (_ BitVec 64))
(declare-fun extend_5215
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp98_15 () (_ BitVec 64))
(declare-fun temp98_16 () (_ BitVec 64))
(declare-fun temp98_17 () (_ BitVec 64))
(declare-fun temp98_18 () (_ BitVec 64))
(declare-fun temp98_19 () (_ BitVec 64))
(declare-fun temp98_20 () (_ BitVec 64))
(declare-fun temp98_21 () (_ BitVec 64))
(declare-fun temp98_22 () (_ BitVec 64))
(declare-fun temp98_23 () (_ BitVec 64))
(declare-fun temp98_24 () (_ BitVec 64))
(declare-fun temp98_25 () (_ BitVec 64))
(declare-fun temp98_26 () (_ BitVec 64))
(declare-fun temp98_27 () (_ BitVec 64))
(declare-fun temp98_28 () (_ BitVec 64))
(declare-fun temp98_29 () (_ BitVec 64))
(declare-fun temp98_30 () (_ BitVec 64))
(declare-fun temp98_31 () (_ BitVec 64))
(declare-fun temp98_32 () (_ BitVec 64))
(declare-fun temp98_33 () (_ BitVec 64))
(declare-fun temp98_34 () (_ BitVec 64))
(declare-fun temp98_35 () (_ BitVec 64))
(declare-fun temp98_36 () (_ BitVec 64))
(declare-fun temp98_37 () (_ BitVec 64))
(declare-fun var66500 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun extend_5213 () (_ BitVec 64))
(declare-fun extend_5216 () (_ BitVec 64))
(declare-fun k!1 () Bool)
(declare-fun temp98_38 () (_ BitVec 64))
(declare-fun var133870 () (_ BitVec 64))
(declare-fun var133866 () (_ BitVec 64))
(declare-fun var66555 () (_ BitVec 64))
(declare-fun temp98_39 () (_ BitVec 64))
(declare-fun temp98_40 () (_ BitVec 64))
(declare-fun temp98_41 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var66641 () (_ BitVec 64))
(declare-fun temp98_42 () (_ BitVec 64))
(declare-fun temp98_43 () (_ BitVec 64))
(declare-fun var66654 () (_ BitVec 64))
(declare-fun var330558 () (_ BitVec 64))
(declare-fun temp98_44 () (_ BitVec 64))
(declare-fun ARGNAME_pos_NAMEEND () (_ BitVec 64))
(declare-fun var658269 () (_ BitVec 64))
(declare-fun temp98_45 () (_ BitVec 64))
(declare-fun temp98_46 () (_ BitVec 64))
(declare-fun var870585 () (_ BitVec 64))
(declare-fun temp98_47 () (_ BitVec 64))
(declare-fun ARGNAME_len_NAMEEND () (_ BitVec 64))
(declare-fun var870588 () (_ BitVec 64))
(declare-fun temp98_49 () (_ BitVec 64))
(declare-fun var870591 () (_ BitVec 64))
(declare-fun var870601 () (_ BitVec 64))
(declare-fun temp98_50 () (_ BitVec 64))
(declare-fun var870602 () (_ BitVec 64))
(declare-fun temp98_52 () (_ BitVec 64))
(declare-fun var870586 () (_ BitVec 64))
(declare-fun temp98_53 () (_ BitVec 64))
(declare-fun var739498 () (_ BitVec 64))
(declare-fun var739460 () (_ BitVec 64))
(declare-fun var658278 () (_ BitVec 64))
(declare-fun var658282 () (_ BitVec 64))
(declare-fun var658263 () (_ BitVec 64))
(declare-fun var66673 () (_ BitVec 64))
(declare-fun var66743 () (_ BitVec 64))
(declare-fun temp98_55 () (_ BitVec 64))
(declare-fun var66655 () (_ BitVec 64))
(declare-fun var66758 () (_ BitVec 64))
(assert (= temp98_1 #x0000000000000000))
(assert (= temp98_2 (select extend_5212 temp98_1)))
(assert (= temp98_3 #x0000000000000001))
(assert (= temp98_4 (select extend_5212 temp98_3)))
(assert (= temp98_5 #x0000000000000002))
(assert (= temp98_6 (select extend_5212 temp98_5)))
(assert (= temp98_7 #x0000000000000003))
(assert (= temp98_8 (select extend_5212 temp98_7)))
(assert (= temp98_9 #x0000000000000004))
(assert (= temp98_10 (select extend_5212 temp98_9)))
(assert (= temp98_11 #x0000000000000005))
(assert (= temp98_12 (select extend_5212 temp98_11)))
(assert (= temp98_13 #x0000000000000000))
(assert (= temp98_14 (select extend_5215 temp98_13)))
(assert (= temp98_15 #x0000000000000001))
(assert (= temp98_16 (select extend_5215 temp98_15)))
(assert (= temp98_17 #x0000000000000002))
(assert (= temp98_18 (select extend_5215 temp98_17)))
(assert (= temp98_19 #x0000000000000003))
(assert (= temp98_20 (select extend_5215 temp98_19)))
(assert (= temp98_21 #x0000000000000004))
(assert (= temp98_22 (select extend_5215 temp98_21)))
(assert (= temp98_23 #x0000000000000005))
(assert (= temp98_24 (select extend_5215 temp98_23)))
(assert (= temp98_25 (select extend_5215 temp98_1)))
(assert (= temp98_26 (select extend_5215 temp98_11)))
(assert (= temp98_27 (select extend_5215 temp98_3)))
(assert (= temp98_28 (select extend_5215 temp98_5)))
(assert (= temp98_29 (select extend_5215 temp98_7)))
(assert (= temp98_30 (select extend_5215 temp98_9)))
(assert (= temp98_31 (select extend_5212 temp98_13)))
(assert (= temp98_32 (select extend_5212 temp98_15)))
(assert (= temp98_33 (select extend_5212 temp98_17)))
(assert (= temp98_34 (select extend_5212 temp98_19)))
(assert (= temp98_35 (select extend_5212 temp98_21)))
(assert (= temp98_36 (select extend_5212 temp98_23)))
(assert (= var66500
   (ite (and true
             (= temp98_25 temp98_2)
             (= temp98_26 temp98_12)
             (= temp98_27 temp98_4)
             (= temp98_28 temp98_6)
             (= temp98_29 temp98_8)
             (= temp98_30 temp98_10)
             (= temp98_2 temp98_25)
             (= temp98_12 temp98_26)
             (= temp98_31 temp98_14)
             (= temp98_32 temp98_16)
             (= temp98_33 temp98_18)
             (= temp98_34 temp98_20)
             (= temp98_35 temp98_22)
             (= temp98_36 temp98_24)
             (= temp98_4 temp98_27)
             (= temp98_6 temp98_28)
             (= temp98_8 temp98_29)
             (= temp98_10 temp98_30)
             (= extend_5213 extend_5216))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_37 #x0000000000000001))
(assert (= var66500 temp98_37))
(assert (= temp98_38 #x0000000000000000))
(assert (= var133870
   (ite (= extend_5213 temp98_38)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var133866 var133870))
(assert (= var66555 var133866))
(assert (= temp98_39 #x0000000000000001))
(assert (= var66555 temp98_39))
(assert (= temp98_40 #x0000000000000001))
(assert (= var66555 temp98_40))
(assert (= temp98_41 #x0000000000000000))
(assert (= var66641
   (ite (= ARGNAME_input_NAMEEND_NUMELEMENT temp98_41)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_42 #x0000000000000000))
(assert (= var66641 temp98_42))
(assert (= temp98_43 #x0000000000000000))
(assert (= var66654 temp98_43))
(assert (= var330558 var66654))
(assert (= temp98_44 #xffffffffffffffff))
(assert (= var658269
   (ite (bvsgt ARGNAME_pos_NAMEEND temp98_44)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_45 #x0000000000000000))
(assert (= var658269 temp98_45))
(assert (= temp98_46 #x0000000000000000))
(assert (= var870585 temp98_46))
(assert (= temp98_47 #x0000000000000000))
(assert (= var870588
   (ite (= ARGNAME_len_NAMEEND temp98_47)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp98_49 #xffffffffffffffff))
(assert (= var870591 (bvadd ARGNAME_len_NAMEEND temp98_49)))
(assert (= var870601 var870591))
(assert (= temp98_50 #x0000000000000000))
(assert (= var870602
   (ite (= var870601 temp98_50) #x0000000000000001 #x0000000000000000)))
(assert (= temp98_52 #x0000000000000001))
(assert (= var870586 (bvadd var870585 temp98_52)))
(assert (= temp98_53 #x0000000000000000))
(assert (= var739498 temp98_53))
(assert (= var739460 var739498))
(assert (= var658278 var739460))
(assert (= var658282 var658278))
(assert (= var658263 var658282))
(assert (= var66673 var658263))
(assert (= var66743 var870591))
(assert (= temp98_55 #x0000000000000001))
(assert (= var66655 (bvadd var66654 temp98_55)))
(assert (= var66758
   (ite (bvslt var66655 ARGNAME_input_NAMEEND_NUMELEMENT)
        #x0000000000000001
        #x0000000000000000)))
(model-add temp98_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp98_2
           ()
           (_ BitVec 64)
           (select extend_5212 #x0000000000000000))
(model-add temp98_3 () (_ BitVec 64) #x0000000000000001)
(model-add temp98_4
           ()
           (_ BitVec 64)
           (select extend_5212 #x0000000000000001))
(model-add temp98_5 () (_ BitVec 64) #x0000000000000002)
(model-add temp98_6
           ()
           (_ BitVec 64)
           (select extend_5212 #x0000000000000002))
(model-add temp98_7 () (_ BitVec 64) #x0000000000000003)
(model-add temp98_8
           ()
           (_ BitVec 64)
           (select extend_5212 #x0000000000000003))
(model-add temp98_9 () (_ BitVec 64) #x0000000000000004)
(model-add temp98_10
           ()
           (_ BitVec 64)
           (select extend_5212 #x0000000000000004))
(model-add temp98_11 () (_ BitVec 64) #x0000000000000005)
(model-add temp98_12
           ()
           (_ BitVec 64)
           (select extend_5212 #x0000000000000005))
(model-add temp98_13 () (_ BitVec 64) #x0000000000000000)
(model-add temp98_14
           ()
           (_ BitVec 64)
           (select extend_5215 #x0000000000000000))
(model-add temp98_15 () (_ BitVec 64) #x0000000000000001)
(model-add temp98_16
           ()
           (_ BitVec 64)
           (select extend_5215 #x0000000000000001))
(model-add temp98_17 () (_ BitVec 64) #x0000000000000002)
(model-add temp98_18
           ()
           (_ BitVec 64)
           (select extend_5215 #x0000000000000002))
(model-add temp98_19 () (_ BitVec 64) #x0000000000000003)
(model-add temp98_20
           ()
           (_ BitVec 64)
           (select extend_5215 #x0000000000000003))
(model-add temp98_21 () (_ BitVec 64) #x0000000000000004)
(model-add temp98_22
           ()
           (_ BitVec 64)
           (select extend_5215 #x0000000000000004))
(model-add temp98_23 () (_ BitVec 64) #x0000000000000005)
(model-add temp98_24
           ()
           (_ BitVec 64)
           (select extend_5215 #x0000000000000005))
(model-add temp98_25
           ()
           (_ BitVec 64)
           (select extend_5215 #x0000000000000000))
(model-add temp98_26
           ()
           (_ BitVec 64)
           (select extend_5215 #x0000000000000005))
(model-add temp98_27
           ()
           (_ BitVec 64)
           (select extend_5215 #x0000000000000001))
(model-add temp98_28
           ()
           (_ BitVec 64)
           (select extend_5215 #x0000000000000002))
(model-add temp98_29
           ()
           (_ BitVec 64)
           (select extend_5215 #x0000000000000003))
(model-add temp98_30
           ()
           (_ BitVec 64)
           (select extend_5215 #x0000000000000004))
(model-add temp98_31
           ()
           (_ BitVec 64)
           (select extend_5212 #x0000000000000000))
(model-add temp98_32
           ()
           (_ BitVec 64)
           (select extend_5212 #x0000000000000001))
(model-add temp98_33
           ()
           (_ BitVec 64)
           (select extend_5212 #x0000000000000002))
(model-add temp98_34
           ()
           (_ BitVec 64)
           (select extend_5212 #x0000000000000003))
(model-add temp98_35
           ()
           (_ BitVec 64)
           (select extend_5212 #x0000000000000004))
(model-add temp98_36
           ()
           (_ BitVec 64)
           (select extend_5212 #x0000000000000005))
(model-add temp98_37 () (_ BitVec 64) #x0000000000000001)
(model-add var66500 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add extend_5213
           ()
           (_ BitVec 64)
           (ite k!0
                extend_5216
                (bvnot extend_5216)))
(model-del k!1)
(model-add k!0 () Bool (not k!1))


