(declare-fun temp61_1 () (_ BitVec 64))
(declare-fun temp61_2 () (_ BitVec 64))
(declare-fun var75456 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp61_3 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var75513 () (_ BitVec 64))
(declare-fun temp61_4 () (_ BitVec 64))
(declare-fun temp61_5 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp61_6 () (_ BitVec 64))
(declare-fun temp61_7 () (_ BitVec 64))
(declare-fun temp61_8 () (_ BitVec 64))
(declare-fun temp61_9 () (_ BitVec 64))
(declare-fun temp61_10 () (_ BitVec 64))
(declare-fun temp61_11 () (_ BitVec 64))
(declare-fun temp61_12 () (_ BitVec 64))
(declare-fun temp61_13 () (_ BitVec 64))
(declare-fun temp61_14 () (_ BitVec 64))
(declare-fun temp61_15 () (_ BitVec 64))
(declare-fun temp61_16 () (_ BitVec 64))
(declare-fun temp61_17 () (_ BitVec 64))
(declare-fun temp61_19 () (_ BitVec 64))
(declare-fun temp61_18 () (_ BitVec 64))
(declare-fun temp61_20 () (_ BitVec 64))
(declare-fun var75548 () (_ BitVec 64))
(declare-fun temp61_21 () (_ BitVec 64))
(declare-fun temp61_22 () (_ BitVec 64))
(declare-fun temp61_24 () (_ BitVec 64))
(declare-fun temp61_23 () (_ BitVec 64))
(declare-fun temp61_25 () (_ BitVec 64))
(declare-fun var75552 () (_ BitVec 64))
(declare-fun temp61_26 () (_ BitVec 64))
(declare-fun temp61_27 () (_ BitVec 64))
(declare-fun temp61_29 () (_ BitVec 64))
(declare-fun temp61_28 () (_ BitVec 64))
(declare-fun temp61_30 () (_ BitVec 64))
(declare-fun var75582 () (_ BitVec 64))
(declare-fun temp61_31 () (_ BitVec 64))
(declare-fun temp61_32 () (_ BitVec 64))
(declare-fun temp61_34 () (_ BitVec 64))
(declare-fun temp61_33 () (_ BitVec 64))
(declare-fun temp61_35 () (_ BitVec 64))
(declare-fun var75586 () (_ BitVec 64))
(declare-fun temp61_36 () (_ BitVec 64))
(declare-fun temp61_37 () (_ BitVec 64))
(declare-fun var142504 () (_ BitVec 64))
(declare-fun temp61_38 () (_ BitVec 64))
(declare-fun var142510 () (_ BitVec 64))
(declare-fun temp61_39 () (_ BitVec 64))
(declare-fun temp61_40 () (_ BitVec 64))
(declare-fun var142514 () (_ BitVec 64))
(declare-fun ARGNAME_explicit_paddings_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var142515 () (_ BitVec 64))
(declare-fun temp61_41 () (_ BitVec 64))
(declare-fun temp61_42 () (_ BitVec 64))
(declare-fun ARGNAME_explicit_paddings_NAMEEND_ITERATOR_VAL () (_ BitVec 64))
(declare-fun var142547 () (_ BitVec 64))
(declare-fun temp61_43 () (_ BitVec 64))
(declare-fun temp61_44 () (_ BitVec 64))
(declare-fun var142553 () (_ BitVec 64))
(declare-fun temp61_45 () (_ BitVec 64))
(declare-fun var142554 () (_ BitVec 64))
(declare-fun temp61_47 () (_ BitVec 64))
(declare-fun var142561 () (_ BitVec 64))
(declare-fun temp61_48 () (_ BitVec 64))
(declare-fun var142564 () (_ BitVec 64))
(declare-fun temp61_49 () (_ BitVec 64))
(declare-fun var208331 () (_ BitVec 64))
(declare-fun temp61_50 () (_ BitVec 64))
(declare-fun temp61_51 () (_ BitVec 64))
(declare-fun temp61_52 () (_ BitVec 64))
(declare-fun temp61_53 () (_ BitVec 64))
(declare-fun temp61_54 () (_ BitVec 64))
(declare-fun var208357 () (_ BitVec 64))
(declare-fun var208330 () (_ BitVec 64))
(declare-fun var142566 () (_ BitVec 64))
(declare-fun var273897 () (_ BitVec 64))
(declare-fun temp61_55 () (_ BitVec 64))
(declare-fun temp61_56 () (_ BitVec 64))
(declare-fun temp61_57 () (_ BitVec 64))
(declare-fun var273902 () (_ BitVec 64))
(declare-fun var273920 () (_ BitVec 64))
(declare-fun var273896 () (_ BitVec 64))
(declare-fun var142569 () (_ BitVec 64))
(declare-fun temp61_58 () (_ BitVec 64))
(declare-fun var142572 () (_ BitVec 64))
(declare-fun var142573 () (_ BitVec 64))
(declare-fun temp61_59 () (_ BitVec 64))
(declare-fun ARGNAME_explicit_paddings_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp61_60 () (_ BitVec 64))
(declare-fun temp61_61 () (_ BitVec 64))
(declare-fun temp61_62 () (_ BitVec 64))
(declare-fun temp61_63 () (_ BitVec 64))
(declare-fun temp61_64 () (_ BitVec 64))
(declare-fun temp61_65 () (_ BitVec 64))
(declare-fun temp61_66 () (_ BitVec 64))
(declare-fun temp61_67 () (_ BitVec 64))
(declare-fun temp61_68 () (_ BitVec 64))
(declare-fun temp61_69 () (_ BitVec 64))
(declare-fun temp61_70 () (_ BitVec 64))
(declare-fun temp61_72 () (_ BitVec 64))
(declare-fun temp61_71 () (_ BitVec 64))
(declare-fun temp61_73 () (_ BitVec 64))
(declare-fun var142576 () (_ BitVec 64))
(declare-fun temp61_74 () (_ BitVec 64))
(declare-fun temp61_75 () (_ BitVec 64))
(declare-fun var142578 () (_ BitVec 64))
(declare-fun var142579 () (_ BitVec 64))
(declare-fun temp61_77 () (_ BitVec 64))
(declare-fun temp61_76 () (_ BitVec 64))
(declare-fun temp61_78 () (_ BitVec 64))
(declare-fun var142582 () (_ BitVec 64))
(declare-fun temp61_79 () (_ BitVec 64))
(declare-fun temp61_80 () (_ BitVec 64))
(declare-fun var142584 () (_ BitVec 64))
(declare-fun var142585 () (_ BitVec 64))
(declare-fun temp61_82 () (_ BitVec 64))
(declare-fun temp61_81 () (_ BitVec 64))
(declare-fun temp61_83 () (_ BitVec 64))
(declare-fun var142588 () (_ BitVec 64))
(declare-fun temp61_84 () (_ BitVec 64))
(declare-fun temp61_85 () (_ BitVec 64))
(declare-fun var142590 () (_ BitVec 64))
(declare-fun var142591 () (_ BitVec 64))
(declare-fun temp61_87 () (_ BitVec 64))
(declare-fun temp61_86 () (_ BitVec 64))
(declare-fun temp61_88 () (_ BitVec 64))
(declare-fun var142594 () (_ BitVec 64))
(declare-fun temp61_89 () (_ BitVec 64))
(declare-fun temp61_90 () (_ BitVec 64))
(declare-fun var142599 () (_ BitVec 64))
(declare-fun temp61_91 () (_ BitVec 64))
(declare-fun var142600 () (_ BitVec 64))
(declare-fun temp61_92 () (_ BitVec 64))
(declare-fun temp61_93 () (_ BitVec 64))
(declare-fun ARGNAME_dilations_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var75739 () (_ BitVec 64))
(declare-fun temp61_94 () (_ BitVec 64))
(declare-fun temp61_95 () (_ BitVec 64))
(declare-fun ARGNAME_dilations_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp61_96 () (_ BitVec 64))
(declare-fun temp61_97 () (_ BitVec 64))
(declare-fun temp61_98 () (_ BitVec 64))
(declare-fun temp61_99 () (_ BitVec 64))
(declare-fun temp61_100 () (_ BitVec 64))
(declare-fun temp61_101 () (_ BitVec 64))
(declare-fun temp61_102 () (_ BitVec 64))
(declare-fun temp61_103 () (_ BitVec 64))
(declare-fun temp61_104 () (_ BitVec 64))
(declare-fun temp61_105 () (_ BitVec 64))
(declare-fun temp61_106 () (_ BitVec 64))
(declare-fun temp61_107 () (_ BitVec 64))
(declare-fun temp61_109 () (_ BitVec 64))
(declare-fun temp61_108 () (_ BitVec 64))
(declare-fun temp61_110 () (_ BitVec 64))
(declare-fun var75773 () (_ BitVec 64))
(declare-fun temp61_111 () (_ BitVec 64))
(declare-fun temp61_112 () (_ BitVec 64))
(declare-fun temp61_114 () (_ BitVec 64))
(declare-fun temp61_113 () (_ BitVec 64))
(declare-fun temp61_115 () (_ BitVec 64))
(declare-fun var75777 () (_ BitVec 64))
(declare-fun temp61_116 () (_ BitVec 64))
(declare-fun temp61_117 () (_ BitVec 64))
(declare-fun temp61_119 () (_ BitVec 64))
(declare-fun temp61_118 () (_ BitVec 64))
(declare-fun temp61_120 () (_ BitVec 64))
(declare-fun var75807 () (_ BitVec 64))
(declare-fun temp61_121 () (_ BitVec 64))
(declare-fun temp61_122 () (_ BitVec 64))
(declare-fun temp61_124 () (_ BitVec 64))
(declare-fun temp61_123 () (_ BitVec 64))
(declare-fun temp61_125 () (_ BitVec 64))
(declare-fun var75811 () (_ BitVec 64))
(declare-fun temp61_126 () (_ BitVec 64))
(assert (or (= ARGNAME_padding_NAMEEND #x0000000000000001)
    (= ARGNAME_padding_NAMEEND #x0000000000000002)
    (= ARGNAME_padding_NAMEEND #x0000000000000003)))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp61_1 #x0000000000000000))
(assert (= var75456
   (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp61_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp61_2 #x0000000000000001))
(assert (= var75456 temp61_2))
(assert (= temp61_3 #x0000000000000004))
(assert (= var75513
   (ite (= ARGNAME_strides_NAMEEND_LEN temp61_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp61_4 #x0000000000000001))
(assert (= var75513 temp61_4))
(assert (= temp61_5 #x0000000000000000))
(assert (= temp61_6 (select ARGNAME_strides_NAMEEND_VAL temp61_5)))
(assert (= temp61_7 #x0000000000000001))
(assert (= temp61_8 (select ARGNAME_strides_NAMEEND_VAL temp61_7)))
(assert (= temp61_9 #x0000000000000002))
(assert (= temp61_10 (select ARGNAME_strides_NAMEEND_VAL temp61_9)))
(assert (= temp61_11 #x0000000000000003))
(assert (= temp61_12 (select ARGNAME_strides_NAMEEND_VAL temp61_11)))
(assert (= temp61_13 #x0000000000000004))
(assert (= temp61_14 (select ARGNAME_strides_NAMEEND_VAL temp61_13)))
(assert (= temp61_15 #x0000000000000005))
(assert (= temp61_16 (select ARGNAME_strides_NAMEEND_VAL temp61_15)))
(assert (= temp61_17 #x0000000000000000))
(assert (= temp61_19 (select ARGNAME_strides_NAMEEND_VAL temp61_17)))
(assert (= temp61_18 temp61_19))
(assert (= temp61_20 #x0000000000000001))
(assert (= var75548 (ite (= temp61_18 temp61_20) #x0000000000000001 #x0000000000000000)))
(assert (= temp61_21 #x0000000000000001))
(assert (= var75548 temp61_21))
(assert (= temp61_22 #x0000000000000003))
(assert (= temp61_24 (select ARGNAME_strides_NAMEEND_VAL temp61_22)))
(assert (= temp61_23 temp61_24))
(assert (= temp61_25 #x0000000000000001))
(assert (= var75552 (ite (= temp61_23 temp61_25) #x0000000000000001 #x0000000000000000)))
(assert (= temp61_26 #x0000000000000001))
(assert (= var75552 temp61_26))
(assert (= temp61_27 #x0000000000000001))
(assert (= temp61_29 (select ARGNAME_strides_NAMEEND_VAL temp61_27)))
(assert (= temp61_28 temp61_29))
(assert (= temp61_30 #x0000000000000000))
(assert (= var75582
   (ite (bvsgt temp61_28 temp61_30) #x0000000000000001 #x0000000000000000)))
(assert (= temp61_31 #x0000000000000001))
(assert (= var75582 temp61_31))
(assert (= temp61_32 #x0000000000000002))
(assert (= temp61_34 (select ARGNAME_strides_NAMEEND_VAL temp61_32)))
(assert (= temp61_33 temp61_34))
(assert (= temp61_35 #x0000000000000000))
(assert (= var75586
   (ite (bvsgt temp61_33 temp61_35) #x0000000000000001 #x0000000000000000)))
(assert (= temp61_36 #x0000000000000001))
(assert (= var75586 temp61_36))
(assert (= temp61_37 #x0000000000000004))
(assert (= var142504 temp61_37))
(assert (= temp61_38 #x0000000000000003))
(assert (= var142510
   (ite (= ARGNAME_padding_NAMEEND temp61_38)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp61_39 #x0000000000000001))
(assert (= var142510 temp61_39))
(assert (= temp61_40 #x0000000000000001))
(assert (= var142514 (bvshl var142504 temp61_40)))
(assert (= var142515
   (ite (= var142514 ARGNAME_explicit_paddings_NAMEEND_LEN)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp61_41 #x0000000000000001))
(assert (= var142515 temp61_41))
(assert (= temp61_42 #x0000000000000000))
(assert (= var142547
   (ite (bvslt ARGNAME_explicit_paddings_NAMEEND_ITERATOR_VAL temp61_42)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp61_43 #x0000000000000000))
(assert (= var142547 temp61_43))
(assert (= temp61_44 #x0000000000000000))
(assert (= var142553 temp61_44))
(assert (= temp61_45 #x0000000000000000))
(assert (= var142554
   (ite (= var142553 temp61_45) #x0000000000000001 #x0000000000000000)))
(assert (= temp61_47 #x0000000000000002))
(assert (= var142561 temp61_47))
(assert (= temp61_48 #x0000000000000002))
(assert (= var142564
   (ite (= var142561 temp61_48) #x0000000000000001 #x0000000000000000)))
(assert (= temp61_49 #x0000000000000001))
(assert (= var142564 temp61_49))
(assert (= var208331 var142504))
(assert (= temp61_50 #x0000000000000000))
(assert (= temp61_51 #x0000000000000001))
(assert (= temp61_52 #x0000000000000002))
(assert (= temp61_53 #x0000000000000003))
(assert (or false
    (= ARGNAME_data_format_NAMEEND_STRFMT temp61_50)
    (= ARGNAME_data_format_NAMEEND_STRFMT temp61_51)
    (= ARGNAME_data_format_NAMEEND_STRFMT temp61_52)
    (= ARGNAME_data_format_NAMEEND_STRFMT temp61_53)))
(assert (= temp61_54 #x0000000000000000))
(assert (= var208357 temp61_54))
(assert (= var208330 var208357))
(assert (= var142566 var208330))
(assert (= var273897 var142504))
(assert (= temp61_55 #x0000000000000000))
(assert (= temp61_56 #x0000000000000004))
(assert (or false
    (= ARGNAME_data_format_NAMEEND_STRFMT temp61_55)
    (= ARGNAME_data_format_NAMEEND_STRFMT temp61_56)))
(assert (= temp61_57 #xffffffffffffffff))
(assert (= var273902 (bvadd var273897 temp61_57)))
(assert (= var273920 var273902))
(assert (= var273896 var273920))
(assert (= var142569 var273896))
(assert (= temp61_58 #x0000000000000001))
(assert (= var142572 (bvshl var142566 temp61_58)))
(assert (= var142573 var142572))
(assert (= temp61_59 #x0000000000000000))
(assert (= temp61_60 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp61_59)))
(assert (= temp61_61 #x0000000000000001))
(assert (= temp61_62 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp61_61)))
(assert (= temp61_63 #x0000000000000002))
(assert (= temp61_64 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp61_63)))
(assert (= temp61_65 #x0000000000000003))
(assert (= temp61_66 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp61_65)))
(assert (= temp61_67 #x0000000000000004))
(assert (= temp61_68 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp61_67)))
(assert (= temp61_69 #x0000000000000005))
(assert (= temp61_70 (select ARGNAME_explicit_paddings_NAMEEND_VAL temp61_69)))
(assert (= temp61_72 (select ARGNAME_explicit_paddings_NAMEEND_VAL var142573)))
(assert (= temp61_71 temp61_72))
(assert (= temp61_73 #x0000000000000000))
(assert (= var142576
   (ite (= temp61_71 temp61_73) #x0000000000000001 #x0000000000000000)))
(assert (= temp61_74 #x0000000000000001))
(assert (= var142576 temp61_74))
(assert (= temp61_75 #x0000000000000001))
(assert (= var142578 (bvor var142572 temp61_75)))
(assert (= var142579 var142578))
(assert (= temp61_77 (select ARGNAME_explicit_paddings_NAMEEND_VAL var142579)))
(assert (= temp61_76 temp61_77))
(assert (= temp61_78 #x0000000000000000))
(assert (= var142582
   (ite (= temp61_76 temp61_78) #x0000000000000001 #x0000000000000000)))
(assert (= temp61_79 #x0000000000000001))
(assert (= var142582 temp61_79))
(assert (= temp61_80 #x0000000000000001))
(assert (= var142584 (bvshl var142569 temp61_80)))
(assert (= var142585 var142584))
(assert (= temp61_82 (select ARGNAME_explicit_paddings_NAMEEND_VAL var142585)))
(assert (= temp61_81 temp61_82))
(assert (= temp61_83 #x0000000000000000))
(assert (= var142588
   (ite (= temp61_81 temp61_83) #x0000000000000001 #x0000000000000000)))
(assert (= temp61_84 #x0000000000000001))
(assert (= var142588 temp61_84))
(assert (= temp61_85 #x0000000000000001))
(assert (= var142590 (bvor var142584 temp61_85)))
(assert (= var142591 var142590))
(assert (= temp61_87 (select ARGNAME_explicit_paddings_NAMEEND_VAL var142591)))
(assert (= temp61_86 temp61_87))
(assert (= temp61_88 #x0000000000000000))
(assert (= var142594
   (ite (= temp61_86 temp61_88) #x0000000000000001 #x0000000000000000)))
(assert (= temp61_89 #x0000000000000001))
(assert (= var142594 temp61_89))
(assert (= temp61_90 #x0000000000000000))
(assert (= var142599 temp61_90))
(assert (= temp61_91 #x0000000000000000))
(assert (= var142600
   (ite (= var142599 temp61_91) #x0000000000000001 #x0000000000000000)))
(assert (= temp61_92 #x0000000000000001))
(assert (= var142600 temp61_92))
(assert (= temp61_93 #x0000000000000004))
(assert (= var75739
   (ite (= ARGNAME_dilations_NAMEEND_LEN temp61_93)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp61_94 #x0000000000000001))
(assert (= var75739 temp61_94))
(assert (= temp61_95 #x0000000000000000))
(assert (= temp61_96 (select ARGNAME_dilations_NAMEEND_VAL temp61_95)))
(assert (= temp61_97 #x0000000000000001))
(assert (= temp61_98 (select ARGNAME_dilations_NAMEEND_VAL temp61_97)))
(assert (= temp61_99 #x0000000000000002))
(assert (= temp61_100 (select ARGNAME_dilations_NAMEEND_VAL temp61_99)))
(assert (= temp61_101 #x0000000000000003))
(assert (= temp61_102 (select ARGNAME_dilations_NAMEEND_VAL temp61_101)))
(assert (= temp61_103 #x0000000000000004))
(assert (= temp61_104 (select ARGNAME_dilations_NAMEEND_VAL temp61_103)))
(assert (= temp61_105 #x0000000000000005))
(assert (= temp61_106 (select ARGNAME_dilations_NAMEEND_VAL temp61_105)))
(assert (= temp61_107 #x0000000000000000))
(assert (= temp61_109 (select ARGNAME_dilations_NAMEEND_VAL temp61_107)))
(assert (= temp61_108 temp61_109))
(assert (= temp61_110 #x0000000000000001))
(assert (= var75773
   (ite (= temp61_108 temp61_110) #x0000000000000001 #x0000000000000000)))
(assert (= temp61_111 #x0000000000000001))
(assert (= var75773 temp61_111))
(assert (= temp61_112 #x0000000000000003))
(assert (= temp61_114 (select ARGNAME_dilations_NAMEEND_VAL temp61_112)))
(assert (= temp61_113 temp61_114))
(assert (= temp61_115 #x0000000000000001))
(assert (= var75777
   (ite (= temp61_113 temp61_115) #x0000000000000001 #x0000000000000000)))
(assert (= temp61_116 #x0000000000000001))
(assert (= var75777 temp61_116))
(assert (= temp61_117 #x0000000000000001))
(assert (= temp61_119 (select ARGNAME_dilations_NAMEEND_VAL temp61_117)))
(assert (= temp61_118 temp61_119))
(assert (= temp61_120 #x0000000000000001))
(assert (= var75807
   (ite (= temp61_118 temp61_120) #x0000000000000001 #x0000000000000000)))
(assert (= temp61_121 #x0000000000000001))
(assert (= var75807 temp61_121))
(assert (= temp61_122 #x0000000000000002))
(assert (= temp61_124 (select ARGNAME_dilations_NAMEEND_VAL temp61_122)))
(assert (= temp61_123 temp61_124))
(assert (= temp61_125 #x0000000000000001))
(assert (= var75811
   (ite (= temp61_123 temp61_125) #x0000000000000001 #x0000000000000000)))
(assert (= temp61_126 #x0000000000000001))
(assert (= var75811 temp61_126))
(model-add temp61_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp61_2 () (_ BitVec 64) #x0000000000000001)
(model-add var75456 () (_ BitVec 64) #x0000000000000001)



















