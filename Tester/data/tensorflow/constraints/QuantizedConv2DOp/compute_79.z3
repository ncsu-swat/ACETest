(declare-fun temp78_1 () (_ BitVec 64))
(declare-fun temp78_2 () (_ BitVec 64))
(declare-fun var68041 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp78_3 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var68076 () (_ BitVec 64))
(declare-fun temp78_4 () (_ BitVec 64))
(declare-fun temp78_5 () (_ BitVec 64))
(declare-fun ARGNAME_min_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var134499 () (_ BitVec 64))
(declare-fun var134495 () (_ BitVec 64))
(declare-fun var68102 () (_ BitVec 64))
(declare-fun temp78_6 () (_ BitVec 64))
(declare-fun temp78_7 () (_ BitVec 64))
(declare-fun ARGNAME_max_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var200035 () (_ BitVec 64))
(declare-fun var200031 () (_ BitVec 64))
(declare-fun var68130 () (_ BitVec 64))
(declare-fun temp78_8 () (_ BitVec 64))
(declare-fun temp78_9 () (_ BitVec 64))
(declare-fun ARGNAME_min_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var265571 () (_ BitVec 64))
(declare-fun var265567 () (_ BitVec 64))
(declare-fun var68156 () (_ BitVec 64))
(declare-fun temp78_10 () (_ BitVec 64))
(declare-fun temp78_11 () (_ BitVec 64))
(declare-fun ARGNAME_max_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var331107 () (_ BitVec 64))
(declare-fun var331103 () (_ BitVec 64))
(declare-fun var68183 () (_ BitVec 64))
(declare-fun temp78_12 () (_ BitVec 64))
(declare-fun temp78_13 () (_ BitVec 64))
(declare-fun var396672 () (_ BitVec 64))
(declare-fun temp78_14 () (_ BitVec 64))
(declare-fun var462208 () (_ BitVec 64))
(declare-fun temp78_15 () (_ BitVec 64))
(declare-fun var527744 () (_ BitVec 64))
(declare-fun temp78_16 () (_ BitVec 64))
(declare-fun var593280 () (_ BitVec 64))
(declare-fun temp78_17 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp78_18 () (_ BitVec 64))
(declare-fun temp78_19 () (_ BitVec 64))
(declare-fun temp78_20 () (_ BitVec 64))
(declare-fun temp78_21 () (_ BitVec 64))
(declare-fun temp78_22 () (_ BitVec 64))
(declare-fun temp78_23 () (_ BitVec 64))
(declare-fun temp78_24 () (_ BitVec 64))
(declare-fun temp78_25 () (_ BitVec 64))
(declare-fun temp78_26 () (_ BitVec 64))
(declare-fun temp78_27 () (_ BitVec 64))
(declare-fun temp78_28 () (_ BitVec 64))
(declare-fun temp78_29 () (_ BitVec 64))
(declare-fun temp78_30 () (_ BitVec 64))
(declare-fun var68270 () (_ BitVec 64))
(declare-fun temp78_31 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp78_32 () (_ BitVec 64))
(declare-fun temp78_33 () (_ BitVec 64))
(declare-fun temp78_34 () (_ BitVec 64))
(declare-fun temp78_35 () (_ BitVec 64))
(declare-fun temp78_36 () (_ BitVec 64))
(declare-fun temp78_37 () (_ BitVec 64))
(declare-fun temp78_38 () (_ BitVec 64))
(declare-fun temp78_39 () (_ BitVec 64))
(declare-fun temp78_40 () (_ BitVec 64))
(declare-fun temp78_41 () (_ BitVec 64))
(declare-fun temp78_42 () (_ BitVec 64))
(declare-fun temp78_43 () (_ BitVec 64))
(declare-fun temp78_44 () (_ BitVec 64))
(declare-fun var68273 () (_ BitVec 64))
(declare-fun var68274 () (_ BitVec 64))
(declare-fun temp78_45 () (_ BitVec 64))
(declare-fun temp78_46 () (_ BitVec 64))
(declare-fun temp78_47 () (_ BitVec 64))
(declare-fun var68298 () (_ BitVec 64))
(declare-fun temp78_48 () (_ BitVec 64))
(declare-fun temp78_49 () (_ BitVec 64))
(declare-fun var68299 () (_ BitVec 64))
(declare-fun temp78_50 () (_ BitVec 64))
(declare-fun temp78_51 () (_ BitVec 64))
(declare-fun var68300 () (_ BitVec 64))
(declare-fun temp78_52 () (_ BitVec 64))
(declare-fun temp78_53 () (_ BitVec 64))
(declare-fun var68301 () (_ BitVec 64))
(declare-fun temp78_54 () (_ BitVec 64))
(declare-fun temp78_55 () (_ BitVec 64))
(declare-fun var68302 () (_ BitVec 64))
(declare-fun temp78_56 () (_ BitVec 64))
(declare-fun temp78_57 () (_ BitVec 64))
(declare-fun var68303 () (_ BitVec 64))
(declare-fun temp78_58 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp78_59 () (_ BitVec 64))
(declare-fun temp78_60 () (_ BitVec 64))
(declare-fun temp78_61 () (_ BitVec 64))
(declare-fun temp78_62 () (_ BitVec 64))
(declare-fun temp78_63 () (_ BitVec 64))
(declare-fun temp78_64 () (_ BitVec 64))
(declare-fun temp78_65 () (_ BitVec 64))
(declare-fun temp78_66 () (_ BitVec 64))
(declare-fun temp78_67 () (_ BitVec 64))
(declare-fun temp78_68 () (_ BitVec 64))
(declare-fun temp78_69 () (_ BitVec 64))
(declare-fun temp78_70 () (_ BitVec 64))
(declare-fun temp78_72 () (_ BitVec 64))
(declare-fun temp78_71 () (_ BitVec 64))
(declare-fun temp78_74 () (_ BitVec 64))
(declare-fun temp78_73 () (_ BitVec 64))
(declare-fun temp78_76 () (_ BitVec 64))
(declare-fun temp78_75 () (_ BitVec 64))
(declare-fun temp78_78 () (_ BitVec 64))
(declare-fun temp78_77 () (_ BitVec 64))
(declare-fun temp78_80 () (_ BitVec 64))
(declare-fun temp78_79 () (_ BitVec 64))
(declare-fun var792081 () (_ BitVec 64))
(declare-fun var792082 () (_ BitVec 64))
(declare-fun var857606 () (_ BitVec 64))
(declare-fun var857607 () (_ BitVec 64))
(declare-fun var922711 () (_ BitVec 64))
(declare-fun var922712 () (_ BitVec 64))
(declare-fun temp78_81 () (_ BitVec 64))
(declare-fun var922713 () (_ BitVec 64))
(declare-fun temp78_82 () (_ BitVec 64))
(declare-fun var922723 () (_ BitVec 64))
(declare-fun temp78_83 () (_ BitVec 64))
(declare-fun temp78_84 () (_ BitVec 64))
(declare-fun var922731 () (_ BitVec 64))
(declare-fun temp78_85 () (_ BitVec 64))
(declare-fun temp78_86 () (_ BitVec 64))
(declare-fun var922736 () (_ BitVec 64))
(declare-fun var922737 () (_ BitVec 64))
(declare-fun temp78_87 () (_ BitVec 64))
(declare-fun var922738 () (_ BitVec 64))
(declare-fun temp78_88 () (_ BitVec 64))
(declare-fun var922739 () (_ BitVec 64))
(declare-fun var922751 () (_ BitVec 64))
(declare-fun var922752 () (_ BitVec 64))
(declare-fun var922753 () (_ BitVec 64))
(declare-fun temp78_89 () (_ BitVec 64))
(declare-fun var922784 () (_ BitVec 64))
(declare-fun temp78_90 () (_ BitVec 64))
(declare-fun var988689 () (_ BitVec 64))
(declare-fun var988690 () (_ BitVec 64))
(declare-fun var1054214 () (_ BitVec 64))
(declare-fun var1054215 () (_ BitVec 64))
(declare-fun var1119319 () (_ BitVec 64))
(declare-fun var1119320 () (_ BitVec 64))
(declare-fun temp78_91 () (_ BitVec 64))
(declare-fun var1119321 () (_ BitVec 64))
(declare-fun temp78_92 () (_ BitVec 64))
(declare-fun var1119331 () (_ BitVec 64))
(declare-fun temp78_93 () (_ BitVec 64))
(declare-fun temp78_94 () (_ BitVec 64))
(declare-fun var1119339 () (_ BitVec 64))
(declare-fun temp78_95 () (_ BitVec 64))
(declare-fun temp78_96 () (_ BitVec 64))
(declare-fun var1119344 () (_ BitVec 64))
(declare-fun var1119345 () (_ BitVec 64))
(declare-fun temp78_97 () (_ BitVec 64))
(declare-fun var1119346 () (_ BitVec 64))
(declare-fun temp78_98 () (_ BitVec 64))
(declare-fun var1119347 () (_ BitVec 64))
(declare-fun temp78_99 () (_ BitVec 64))
(declare-fun var1119366 () (_ BitVec 64))
(declare-fun var1119367 () (_ BitVec 64))
(declare-fun var1119368 () (_ BitVec 64))
(declare-fun temp78_101 () (_ BitVec 64))
(declare-fun temp78_100 () (_ BitVec 64))
(declare-fun temp78_102 () (_ BitVec 64))
(declare-fun var1119375 () (_ BitVec 64))
(declare-fun var1119376 () (_ BitVec 64))
(declare-fun var1119377 () (_ BitVec 64))
(declare-fun var1119378 () (_ BitVec 64))
(declare-fun var1119391 () (_ BitVec 64))
(declare-fun temp78_103 () (_ BitVec 64))
(declare-fun var1119392 () (_ BitVec 64))
(declare-fun temp78_104 () (_ BitVec 64))
(assert (= temp78_1 #x0000000000000004))
(assert (= var68041
   (ite (= ARGNAME_input_NAMEEND_DIM temp78_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp78_2 #x0000000000000001))
(assert (= var68041 temp78_2))
(assert (= temp78_3 #x0000000000000004))
(assert (= var68076
   (ite (= ARGNAME_filter_NAMEEND_DIM temp78_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp78_4 #x0000000000000001))
(assert (= var68076 temp78_4))
(assert (= temp78_5 #x0000000000000000))
(assert (= var134499
   (ite (= ARGNAME_min_input_NAMEEND_DIM temp78_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var134495 var134499))
(assert (= var68102 var134495))
(assert (= temp78_6 #x0000000000000001))
(assert (= var68102 temp78_6))
(assert (= temp78_7 #x0000000000000000))
(assert (= var200035
   (ite (= ARGNAME_max_input_NAMEEND_DIM temp78_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var200031 var200035))
(assert (= var68130 var200031))
(assert (= temp78_8 #x0000000000000001))
(assert (= var68130 temp78_8))
(assert (= temp78_9 #x0000000000000000))
(assert (= var265571
   (ite (= ARGNAME_min_filter_NAMEEND_DIM temp78_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var265567 var265571))
(assert (= var68156 var265567))
(assert (= temp78_10 #x0000000000000001))
(assert (= var68156 temp78_10))
(assert (= temp78_11 #x0000000000000000))
(assert (= var331107
   (ite (= ARGNAME_max_filter_NAMEEND_DIM temp78_11)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var331103 var331107))
(assert (= var68183 var331103))
(assert (= temp78_12 #x0000000000000001))
(assert (= var68183 temp78_12))
(assert (= temp78_13 #x0000000000000000))
(assert (= var396672 temp78_13))
(assert (= temp78_14 #x0000000000000000))
(assert (= var462208 temp78_14))
(assert (= temp78_15 #x0000000000000000))
(assert (= var527744 temp78_15))
(assert (= temp78_16 #x0000000000000000))
(assert (= var593280 temp78_16))
(assert (= temp78_17 #x0000000000000000))
(assert (= temp78_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp78_17)))
(assert (= temp78_19 #x0000000000000001))
(assert (= temp78_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp78_19)))
(assert (= temp78_21 #x0000000000000002))
(assert (= temp78_22 (select ARGNAME_input_NAMEEND_DIMSIZE temp78_21)))
(assert (= temp78_23 #x0000000000000003))
(assert (= temp78_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp78_23)))
(assert (= temp78_25 #x0000000000000004))
(assert (= temp78_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp78_25)))
(assert (= temp78_27 #x0000000000000005))
(assert (= temp78_28 (select ARGNAME_input_NAMEEND_DIMSIZE temp78_27)))
(assert (= temp78_29 #x0000000000000003))
(assert (= temp78_30 (select ARGNAME_input_NAMEEND_DIMSIZE temp78_29)))
(assert (= var68270 temp78_30))
(assert (= temp78_31 #x0000000000000000))
(assert (= temp78_32 (select ARGNAME_filter_NAMEEND_DIMSIZE temp78_31)))
(assert (= temp78_33 #x0000000000000001))
(assert (= temp78_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp78_33)))
(assert (= temp78_35 #x0000000000000002))
(assert (= temp78_36 (select ARGNAME_filter_NAMEEND_DIMSIZE temp78_35)))
(assert (= temp78_37 #x0000000000000003))
(assert (= temp78_38 (select ARGNAME_filter_NAMEEND_DIMSIZE temp78_37)))
(assert (= temp78_39 #x0000000000000004))
(assert (= temp78_40 (select ARGNAME_filter_NAMEEND_DIMSIZE temp78_39)))
(assert (= temp78_41 #x0000000000000005))
(assert (= temp78_42 (select ARGNAME_filter_NAMEEND_DIMSIZE temp78_41)))
(assert (= temp78_43 #x0000000000000002))
(assert (= temp78_44 (select ARGNAME_filter_NAMEEND_DIMSIZE temp78_43)))
(assert (= var68273 temp78_44))
(assert (= var68274 (ite (= var68270 var68273) #x0000000000000001 #x0000000000000000)))
(assert (= temp78_45 #x0000000000000001))
(assert (= var68274 temp78_45))
(assert (= temp78_46 #x0000000000000003))
(assert (= temp78_47 (select ARGNAME_filter_NAMEEND_DIMSIZE temp78_46)))
(assert (= var68298 temp78_47))
(assert (= temp78_48 #x0000000000000001))
(assert (= temp78_49 (select ARGNAME_input_NAMEEND_DIMSIZE temp78_48)))
(assert (= var68299 temp78_49))
(assert (= temp78_50 #x0000000000000000))
(assert (= temp78_51 (select ARGNAME_filter_NAMEEND_DIMSIZE temp78_50)))
(assert (= var68300 temp78_51))
(assert (= temp78_52 #x0000000000000002))
(assert (= temp78_53 (select ARGNAME_input_NAMEEND_DIMSIZE temp78_52)))
(assert (= var68301 temp78_53))
(assert (= temp78_54 #x0000000000000001))
(assert (= temp78_55 (select ARGNAME_filter_NAMEEND_DIMSIZE temp78_54)))
(assert (= var68302 temp78_55))
(assert (= temp78_56 #x0000000000000000))
(assert (= temp78_57 (select ARGNAME_input_NAMEEND_DIMSIZE temp78_56)))
(assert (= var68303 temp78_57))
(assert (= temp78_58 #x0000000000000000))
(assert (= temp78_59 (select ARGNAME_strides_NAMEEND_VAL temp78_58)))
(assert (= temp78_60 #x0000000000000001))
(assert (= temp78_61 (select ARGNAME_strides_NAMEEND_VAL temp78_60)))
(assert (= temp78_62 #x0000000000000002))
(assert (= temp78_63 (select ARGNAME_strides_NAMEEND_VAL temp78_62)))
(assert (= temp78_64 #x0000000000000003))
(assert (= temp78_65 (select ARGNAME_strides_NAMEEND_VAL temp78_64)))
(assert (= temp78_66 #x0000000000000004))
(assert (= temp78_67 (select ARGNAME_strides_NAMEEND_VAL temp78_66)))
(assert (= temp78_68 #x0000000000000005))
(assert (= temp78_69 (select ARGNAME_strides_NAMEEND_VAL temp78_68)))
(assert (= temp78_70 #x0000000000000001))
(assert (= temp78_72 (select ARGNAME_strides_NAMEEND_VAL temp78_70)))
(assert (= temp78_71 temp78_72))
(assert (= temp78_74 #x0000000000000000))
(assert (= temp78_73 temp78_74))
(assert (= temp78_76 #x0000000000000000))
(assert (= temp78_75 temp78_76))
(assert (= temp78_78 #x0000000000000000))
(assert (= temp78_77 temp78_78))
(assert (= temp78_80 #x0000000000000000))
(assert (= temp78_79 temp78_80))
(assert (= var792081 var68299))
(assert (= var792082 var68300))
(assert (= var857606 var792081))
(assert (= var857607 var792082))
(assert (= var922711 var857606))
(assert (= var922712 var857607))
(assert (= temp78_81 #x0000000000000001))
(assert (= var922713 temp78_81))
(assert (= temp78_82 #x0000000000000001))
(assert (= var922723
   (ite (bvslt temp78_71 temp78_82) #x0000000000000001 #x0000000000000000)))
(assert (= temp78_83 #x0000000000000000))
(assert (= var922723 temp78_83))
(assert (= temp78_84 #x0000000000000001))
(assert (= var922731
   (ite (bvslt var922713 temp78_84) #x0000000000000001 #x0000000000000000)))
(assert (= temp78_85 #x0000000000000000))
(assert (= var922731 temp78_85))
(assert (= temp78_86 #xffffffffffffffff))
(assert (= var922736 (bvadd var922712 temp78_86)))
(assert (= var922737 (bvmul var922736 var922713)))
(assert (= temp78_87 #x0000000000000001))
(assert (= var922738 (bvadd var922737 temp78_87)))
(assert (= temp78_88 #xffffffffffffffff))
(assert (= var922739 (bvxor var922737 temp78_88)))
(assert (= var922751 (bvadd temp78_71 var922711)))
(assert (= var922752 (bvadd var922751 var922739)))
(assert (= var922753 (bvadd var922752 temp78_77)))
(assert (= temp78_89 #x0000000000000000))
(assert (= var922784
   (ite (bvslt temp78_73 temp78_89) #x0000000000000001 #x0000000000000000)))
(assert (= temp78_90 #x0000000000000000))
(assert (= var922784 temp78_90))
(assert (= var988689 var68301))
(assert (= var988690 var68302))
(assert (= var1054214 var988689))
(assert (= var1054215 var988690))
(assert (= var1119319 var1054214))
(assert (= var1119320 var1054215))
(assert (= temp78_91 #x0000000000000001))
(assert (= var1119321 temp78_91))
(assert (= temp78_92 #x0000000000000001))
(assert (= var1119331
   (ite (bvslt temp78_71 temp78_92) #x0000000000000001 #x0000000000000000)))
(assert (= temp78_93 #x0000000000000000))
(assert (= var1119331 temp78_93))
(assert (= temp78_94 #x0000000000000001))
(assert (= var1119339
   (ite (bvslt var1119321 temp78_94) #x0000000000000001 #x0000000000000000)))
(assert (= temp78_95 #x0000000000000000))
(assert (= var1119339 temp78_95))
(assert (= temp78_96 #xffffffffffffffff))
(assert (= var1119344 (bvadd var1119320 temp78_96)))
(assert (= var1119345 (bvmul var1119344 var1119321)))
(assert (= temp78_97 #x0000000000000001))
(assert (= var1119346 (bvadd var1119345 temp78_97)))
(assert (= temp78_98 #xffffffffffffffff))
(assert (= var1119347 (bvxor var1119345 temp78_98)))
(assert (= temp78_99 #xffffffffffffffff))
(assert (= var1119366 (bvadd var1119319 temp78_99)))
(assert (= var1119367 (bvadd var1119366 temp78_71)))
(assert (= var1119368 (bvsdiv var1119367 temp78_71)))
(assert (= temp78_101 #x0000000000000000))
(assert (= temp78_100 temp78_101))
(assert (= temp78_102 #xffffffffffffffff))
(assert (= var1119375 (bvadd var1119368 temp78_102)))
(assert (= var1119376 (bvmul var1119375 temp78_71)))
(assert (= var1119377 (bvsub var1119346 var1119319)))
(assert (= var1119378 (bvadd var1119377 var1119376)))
(assert (= var1119391 var1119368))
(assert (= temp78_103 #x0000000000000000))
(assert (= var1119392
   (ite (bvslt var1119391 temp78_103) #x0000000000000001 #x0000000000000000)))
(assert (= temp78_104 #x0000000000000000))
(assert (= var1119392 temp78_104))
(model-add temp78_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp78_2 () (_ BitVec 64) #x0000000000000001)
(model-add var68041 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))















