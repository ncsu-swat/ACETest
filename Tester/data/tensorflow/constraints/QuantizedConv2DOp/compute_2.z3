(declare-fun temp1_1 () (_ BitVec 64))
(declare-fun temp1_2 () (_ BitVec 64))
(declare-fun var68041 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1_3 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var68076 () (_ BitVec 64))
(declare-fun temp1_4 () (_ BitVec 64))
(declare-fun temp1_5 () (_ BitVec 64))
(declare-fun ARGNAME_min_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var134499 () (_ BitVec 64))
(declare-fun var134495 () (_ BitVec 64))
(declare-fun var68102 () (_ BitVec 64))
(declare-fun temp1_6 () (_ BitVec 64))
(declare-fun temp1_7 () (_ BitVec 64))
(declare-fun ARGNAME_max_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var200035 () (_ BitVec 64))
(declare-fun var200031 () (_ BitVec 64))
(declare-fun var68130 () (_ BitVec 64))
(declare-fun temp1_8 () (_ BitVec 64))
(declare-fun temp1_9 () (_ BitVec 64))
(declare-fun ARGNAME_min_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var265571 () (_ BitVec 64))
(declare-fun var265567 () (_ BitVec 64))
(declare-fun var68156 () (_ BitVec 64))
(declare-fun temp1_10 () (_ BitVec 64))
(declare-fun temp1_11 () (_ BitVec 64))
(declare-fun ARGNAME_max_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var331107 () (_ BitVec 64))
(declare-fun var331103 () (_ BitVec 64))
(declare-fun var68183 () (_ BitVec 64))
(declare-fun temp1_12 () (_ BitVec 64))
(declare-fun temp1_13 () (_ BitVec 64))
(declare-fun var396672 () (_ BitVec 64))
(declare-fun temp1_14 () (_ BitVec 64))
(declare-fun var462208 () (_ BitVec 64))
(declare-fun temp1_15 () (_ BitVec 64))
(declare-fun var527744 () (_ BitVec 64))
(declare-fun temp1_16 () (_ BitVec 64))
(declare-fun var593280 () (_ BitVec 64))
(declare-fun temp1_17 () (_ BitVec 64))
(declare-fun var658845 () (_ BitVec 64))
(declare-fun var658821 () (_ BitVec 64))
(declare-fun var68263 () (_ BitVec 64))
(declare-fun var68267 () (_ BitVec 64))
(declare-fun temp1_18 () (_ BitVec 64))
(declare-fun var724381 () (_ BitVec 64))
(declare-fun var724357 () (_ BitVec 64))
(declare-fun var68268 () (_ BitVec 64))
(declare-fun var68269 () (_ BitVec 64))
(declare-fun temp1_19 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1_20 () (_ BitVec 64))
(declare-fun temp1_21 () (_ BitVec 64))
(declare-fun temp1_22 () (_ BitVec 64))
(declare-fun temp1_23 () (_ BitVec 64))
(declare-fun temp1_24 () (_ BitVec 64))
(declare-fun temp1_25 () (_ BitVec 64))
(declare-fun temp1_26 () (_ BitVec 64))
(declare-fun temp1_27 () (_ BitVec 64))
(declare-fun temp1_28 () (_ BitVec 64))
(declare-fun temp1_29 () (_ BitVec 64))
(declare-fun temp1_30 () (_ BitVec 64))
(declare-fun temp1_31 () (_ BitVec 64))
(declare-fun temp1_32 () (_ BitVec 64))
(declare-fun var68270 () (_ BitVec 64))
(declare-fun temp1_33 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1_34 () (_ BitVec 64))
(declare-fun temp1_35 () (_ BitVec 64))
(declare-fun temp1_36 () (_ BitVec 64))
(declare-fun temp1_37 () (_ BitVec 64))
(declare-fun temp1_38 () (_ BitVec 64))
(declare-fun temp1_39 () (_ BitVec 64))
(declare-fun temp1_40 () (_ BitVec 64))
(declare-fun temp1_41 () (_ BitVec 64))
(declare-fun temp1_42 () (_ BitVec 64))
(declare-fun temp1_43 () (_ BitVec 64))
(declare-fun temp1_44 () (_ BitVec 64))
(declare-fun temp1_45 () (_ BitVec 64))
(declare-fun temp1_46 () (_ BitVec 64))
(declare-fun var68273 () (_ BitVec 64))
(declare-fun var68274 () (_ BitVec 64))
(declare-fun temp1_47 () (_ BitVec 64))
(declare-fun temp1_48 () (_ BitVec 64))
(declare-fun temp1_49 () (_ BitVec 64))
(declare-fun var68298 () (_ BitVec 64))
(declare-fun temp1_50 () (_ BitVec 64))
(declare-fun temp1_51 () (_ BitVec 64))
(declare-fun var68299 () (_ BitVec 64))
(declare-fun temp1_52 () (_ BitVec 64))
(declare-fun temp1_53 () (_ BitVec 64))
(declare-fun var68300 () (_ BitVec 64))
(declare-fun temp1_54 () (_ BitVec 64))
(declare-fun temp1_55 () (_ BitVec 64))
(declare-fun var68301 () (_ BitVec 64))
(declare-fun temp1_56 () (_ BitVec 64))
(declare-fun temp1_57 () (_ BitVec 64))
(declare-fun var68302 () (_ BitVec 64))
(declare-fun temp1_58 () (_ BitVec 64))
(declare-fun temp1_59 () (_ BitVec 64))
(declare-fun var68303 () (_ BitVec 64))
(declare-fun temp1_60 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1_61 () (_ BitVec 64))
(declare-fun temp1_62 () (_ BitVec 64))
(declare-fun temp1_63 () (_ BitVec 64))
(declare-fun temp1_64 () (_ BitVec 64))
(declare-fun temp1_65 () (_ BitVec 64))
(declare-fun temp1_66 () (_ BitVec 64))
(declare-fun temp1_67 () (_ BitVec 64))
(declare-fun temp1_68 () (_ BitVec 64))
(declare-fun temp1_69 () (_ BitVec 64))
(declare-fun temp1_70 () (_ BitVec 64))
(declare-fun temp1_71 () (_ BitVec 64))
(declare-fun temp1_72 () (_ BitVec 64))
(declare-fun temp1_74 () (_ BitVec 64))
(declare-fun temp1_73 () (_ BitVec 64))
(declare-fun temp1_76 () (_ BitVec 64))
(declare-fun temp1_75 () (_ BitVec 64))
(declare-fun temp1_78 () (_ BitVec 64))
(declare-fun temp1_77 () (_ BitVec 64))
(declare-fun temp1_80 () (_ BitVec 64))
(declare-fun temp1_79 () (_ BitVec 64))
(declare-fun temp1_82 () (_ BitVec 64))
(declare-fun temp1_81 () (_ BitVec 64))
(declare-fun var792081 () (_ BitVec 64))
(declare-fun var792082 () (_ BitVec 64))
(declare-fun var857606 () (_ BitVec 64))
(declare-fun var857607 () (_ BitVec 64))
(declare-fun var922711 () (_ BitVec 64))
(declare-fun var922712 () (_ BitVec 64))
(declare-fun temp1_83 () (_ BitVec 64))
(declare-fun var922713 () (_ BitVec 64))
(declare-fun temp1_84 () (_ BitVec 64))
(declare-fun var922723 () (_ BitVec 64))
(declare-fun temp1_85 () (_ BitVec 64))
(declare-fun temp1_86 () (_ BitVec 64))
(declare-fun var922731 () (_ BitVec 64))
(declare-fun temp1_87 () (_ BitVec 64))
(declare-fun temp1_88 () (_ BitVec 64))
(declare-fun var922736 () (_ BitVec 64))
(declare-fun var922737 () (_ BitVec 64))
(declare-fun temp1_89 () (_ BitVec 64))
(declare-fun var922738 () (_ BitVec 64))
(declare-fun temp1_90 () (_ BitVec 64))
(declare-fun var922739 () (_ BitVec 64))
(declare-fun temp1_91 () (_ BitVec 64))
(declare-fun var922784 () (_ BitVec 64))
(declare-fun temp1_92 () (_ BitVec 64))
(declare-fun var988689 () (_ BitVec 64))
(declare-fun var988690 () (_ BitVec 64))
(assert (= temp1_1 #x0000000000000004))
(assert (= var68041
   (ite (= ARGNAME_input_NAMEEND_DIM temp1_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_2 #x0000000000000001))
(assert (= var68041 temp1_2))
(assert (= temp1_3 #x0000000000000004))
(assert (= var68076
   (ite (= ARGNAME_filter_NAMEEND_DIM temp1_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_4 #x0000000000000001))
(assert (= var68076 temp1_4))
(assert (= temp1_5 #x0000000000000000))
(assert (= var134499
   (ite (= ARGNAME_min_input_NAMEEND_DIM temp1_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var134495 var134499))
(assert (= var68102 var134495))
(assert (= temp1_6 #x0000000000000001))
(assert (= var68102 temp1_6))
(assert (= temp1_7 #x0000000000000000))
(assert (= var200035
   (ite (= ARGNAME_max_input_NAMEEND_DIM temp1_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var200031 var200035))
(assert (= var68130 var200031))
(assert (= temp1_8 #x0000000000000001))
(assert (= var68130 temp1_8))
(assert (= temp1_9 #x0000000000000000))
(assert (= var265571
   (ite (= ARGNAME_min_filter_NAMEEND_DIM temp1_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var265567 var265571))
(assert (= var68156 var265567))
(assert (= temp1_10 #x0000000000000001))
(assert (= var68156 temp1_10))
(assert (= temp1_11 #x0000000000000000))
(assert (= var331107
   (ite (= ARGNAME_max_filter_NAMEEND_DIM temp1_11)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var331103 var331107))
(assert (= var68183 var331103))
(assert (= temp1_12 #x0000000000000001))
(assert (= var68183 temp1_12))
(assert (= temp1_13 #x0000000000000000))
(assert (= var396672 temp1_13))
(assert (= temp1_14 #x0000000000000000))
(assert (= var462208 temp1_14))
(assert (= temp1_15 #x0000000000000000))
(assert (= var527744 temp1_15))
(assert (= temp1_16 #x0000000000000000))
(assert (= var593280 temp1_16))
(assert (= temp1_17 #x0000000000000000))
(assert (= var658845 temp1_17))
(assert (= var658821 var658845))
(assert (= var68263 var658821))
(assert (= var68267 var68263))
(assert (= temp1_18 #x0000000000000000))
(assert (= var724381 temp1_18))
(assert (= var724357 var724381))
(assert (= var68268 var724357))
(assert (= var68269 var68268))
(assert (= temp1_19 #x0000000000000000))
(assert (= temp1_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_19)))
(assert (= temp1_21 #x0000000000000001))
(assert (= temp1_22 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_21)))
(assert (= temp1_23 #x0000000000000002))
(assert (= temp1_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_23)))
(assert (= temp1_25 #x0000000000000003))
(assert (= temp1_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_25)))
(assert (= temp1_27 #x0000000000000004))
(assert (= temp1_28 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_27)))
(assert (= temp1_29 #x0000000000000005))
(assert (= temp1_30 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_29)))
(assert (= temp1_31 #x0000000000000003))
(assert (= temp1_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_31)))
(assert (= var68270 temp1_32))
(assert (= temp1_33 #x0000000000000000))
(assert (= temp1_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp1_33)))
(assert (= temp1_35 #x0000000000000001))
(assert (= temp1_36 (select ARGNAME_filter_NAMEEND_DIMSIZE temp1_35)))
(assert (= temp1_37 #x0000000000000002))
(assert (= temp1_38 (select ARGNAME_filter_NAMEEND_DIMSIZE temp1_37)))
(assert (= temp1_39 #x0000000000000003))
(assert (= temp1_40 (select ARGNAME_filter_NAMEEND_DIMSIZE temp1_39)))
(assert (= temp1_41 #x0000000000000004))
(assert (= temp1_42 (select ARGNAME_filter_NAMEEND_DIMSIZE temp1_41)))
(assert (= temp1_43 #x0000000000000005))
(assert (= temp1_44 (select ARGNAME_filter_NAMEEND_DIMSIZE temp1_43)))
(assert (= temp1_45 #x0000000000000002))
(assert (= temp1_46 (select ARGNAME_filter_NAMEEND_DIMSIZE temp1_45)))
(assert (= var68273 temp1_46))
(assert (= var68274 (ite (= var68270 var68273) #x0000000000000001 #x0000000000000000)))
(assert (= temp1_47 #x0000000000000001))
(assert (= var68274 temp1_47))
(assert (= temp1_48 #x0000000000000003))
(assert (= temp1_49 (select ARGNAME_filter_NAMEEND_DIMSIZE temp1_48)))
(assert (= var68298 temp1_49))
(assert (= temp1_50 #x0000000000000001))
(assert (= temp1_51 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_50)))
(assert (= var68299 temp1_51))
(assert (= temp1_52 #x0000000000000000))
(assert (= temp1_53 (select ARGNAME_filter_NAMEEND_DIMSIZE temp1_52)))
(assert (= var68300 temp1_53))
(assert (= temp1_54 #x0000000000000002))
(assert (= temp1_55 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_54)))
(assert (= var68301 temp1_55))
(assert (= temp1_56 #x0000000000000001))
(assert (= temp1_57 (select ARGNAME_filter_NAMEEND_DIMSIZE temp1_56)))
(assert (= var68302 temp1_57))
(assert (= temp1_58 #x0000000000000000))
(assert (= temp1_59 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_58)))
(assert (= var68303 temp1_59))
(assert (= temp1_60 #x0000000000000000))
(assert (= temp1_61 (select ARGNAME_strides_NAMEEND_VAL temp1_60)))
(assert (= temp1_62 #x0000000000000001))
(assert (= temp1_63 (select ARGNAME_strides_NAMEEND_VAL temp1_62)))
(assert (= temp1_64 #x0000000000000002))
(assert (= temp1_65 (select ARGNAME_strides_NAMEEND_VAL temp1_64)))
(assert (= temp1_66 #x0000000000000003))
(assert (= temp1_67 (select ARGNAME_strides_NAMEEND_VAL temp1_66)))
(assert (= temp1_68 #x0000000000000004))
(assert (= temp1_69 (select ARGNAME_strides_NAMEEND_VAL temp1_68)))
(assert (= temp1_70 #x0000000000000005))
(assert (= temp1_71 (select ARGNAME_strides_NAMEEND_VAL temp1_70)))
(assert (= temp1_72 #x0000000000000001))
(assert (= temp1_74 (select ARGNAME_strides_NAMEEND_VAL temp1_72)))
(assert (= temp1_73 temp1_74))
(assert (= temp1_76 #x0000000000000000))
(assert (= temp1_75 temp1_76))
(assert (= temp1_78 #x0000000000000000))
(assert (= temp1_77 temp1_78))
(assert (= temp1_80 #x0000000000000000))
(assert (= temp1_79 temp1_80))
(assert (= temp1_82 #x0000000000000000))
(assert (= temp1_81 temp1_82))
(assert (= var792081 var68299))
(assert (= var792082 var68300))
(assert (= var857606 var792081))
(assert (= var857607 var792082))
(assert (= var922711 var857606))
(assert (= var922712 var857607))
(assert (= temp1_83 #x0000000000000001))
(assert (= var922713 temp1_83))
(assert (= temp1_84 #x0000000000000001))
(assert (= var922723
   (ite (bvslt temp1_73 temp1_84) #x0000000000000001 #x0000000000000000)))
(assert (= temp1_85 #x0000000000000000))
(assert (= var922723 temp1_85))
(assert (= temp1_86 #x0000000000000001))
(assert (= var922731
   (ite (bvslt var922713 temp1_86) #x0000000000000001 #x0000000000000000)))
(assert (= temp1_87 #x0000000000000000))
(assert (= var922731 temp1_87))
(assert (= temp1_88 #xffffffffffffffff))
(assert (= var922736 (bvadd var922712 temp1_88)))
(assert (= var922737 (bvmul var922736 var922713)))
(assert (= temp1_89 #x0000000000000001))
(assert (= var922738 (bvadd var922737 temp1_89)))
(assert (= temp1_90 #xffffffffffffffff))
(assert (= var922739 (bvxor var922737 temp1_90)))
(assert (= temp1_91 #x0000000000000000))
(assert (= var922784
   (ite (bvslt temp1_75 temp1_91) #x0000000000000001 #x0000000000000000)))
(assert (= temp1_92 #x0000000000000000))
(assert (= var922784 temp1_92))
(assert (= var988689 var68301))
(assert (= var988690 var68302))
(model-add temp1_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp1_2 () (_ BitVec 64) #x0000000000000001)
(model-add var68041 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))
















