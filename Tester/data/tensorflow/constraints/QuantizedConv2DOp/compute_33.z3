(declare-fun temp32_1 () (_ BitVec 64))
(declare-fun temp32_2 () (_ BitVec 64))
(declare-fun var68041 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp32_3 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var68076 () (_ BitVec 64))
(declare-fun temp32_4 () (_ BitVec 64))
(declare-fun temp32_5 () (_ BitVec 64))
(declare-fun ARGNAME_min_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var134499 () (_ BitVec 64))
(declare-fun var134495 () (_ BitVec 64))
(declare-fun var68102 () (_ BitVec 64))
(declare-fun temp32_6 () (_ BitVec 64))
(declare-fun temp32_7 () (_ BitVec 64))
(declare-fun ARGNAME_max_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var200035 () (_ BitVec 64))
(declare-fun var200031 () (_ BitVec 64))
(declare-fun var68130 () (_ BitVec 64))
(declare-fun temp32_8 () (_ BitVec 64))
(declare-fun temp32_9 () (_ BitVec 64))
(declare-fun ARGNAME_min_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var265571 () (_ BitVec 64))
(declare-fun var265567 () (_ BitVec 64))
(declare-fun var68156 () (_ BitVec 64))
(declare-fun temp32_10 () (_ BitVec 64))
(declare-fun temp32_11 () (_ BitVec 64))
(declare-fun ARGNAME_max_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var331107 () (_ BitVec 64))
(declare-fun var331103 () (_ BitVec 64))
(declare-fun var68183 () (_ BitVec 64))
(declare-fun temp32_12 () (_ BitVec 64))
(declare-fun temp32_13 () (_ BitVec 64))
(declare-fun var396672 () (_ BitVec 64))
(declare-fun temp32_14 () (_ BitVec 64))
(declare-fun var462208 () (_ BitVec 64))
(declare-fun temp32_15 () (_ BitVec 64))
(declare-fun var527744 () (_ BitVec 64))
(declare-fun temp32_16 () (_ BitVec 64))
(declare-fun var593280 () (_ BitVec 64))
(declare-fun temp32_17 () (_ BitVec 64))
(declare-fun var658845 () (_ BitVec 64))
(declare-fun var658821 () (_ BitVec 64))
(declare-fun var68263 () (_ BitVec 64))
(declare-fun var68267 () (_ BitVec 64))
(declare-fun temp32_18 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp32_19 () (_ BitVec 64))
(declare-fun temp32_20 () (_ BitVec 64))
(declare-fun temp32_21 () (_ BitVec 64))
(declare-fun temp32_22 () (_ BitVec 64))
(declare-fun temp32_23 () (_ BitVec 64))
(declare-fun temp32_24 () (_ BitVec 64))
(declare-fun temp32_25 () (_ BitVec 64))
(declare-fun temp32_26 () (_ BitVec 64))
(declare-fun temp32_27 () (_ BitVec 64))
(declare-fun temp32_28 () (_ BitVec 64))
(declare-fun temp32_29 () (_ BitVec 64))
(declare-fun temp32_30 () (_ BitVec 64))
(declare-fun temp32_31 () (_ BitVec 64))
(declare-fun var68270 () (_ BitVec 64))
(declare-fun temp32_32 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp32_33 () (_ BitVec 64))
(declare-fun temp32_34 () (_ BitVec 64))
(declare-fun temp32_35 () (_ BitVec 64))
(declare-fun temp32_36 () (_ BitVec 64))
(declare-fun temp32_37 () (_ BitVec 64))
(declare-fun temp32_38 () (_ BitVec 64))
(declare-fun temp32_39 () (_ BitVec 64))
(declare-fun temp32_40 () (_ BitVec 64))
(declare-fun temp32_41 () (_ BitVec 64))
(declare-fun temp32_42 () (_ BitVec 64))
(declare-fun temp32_43 () (_ BitVec 64))
(declare-fun temp32_44 () (_ BitVec 64))
(declare-fun temp32_45 () (_ BitVec 64))
(declare-fun var68273 () (_ BitVec 64))
(declare-fun var68274 () (_ BitVec 64))
(declare-fun temp32_46 () (_ BitVec 64))
(declare-fun temp32_47 () (_ BitVec 64))
(declare-fun temp32_48 () (_ BitVec 64))
(declare-fun var68298 () (_ BitVec 64))
(declare-fun temp32_49 () (_ BitVec 64))
(declare-fun temp32_50 () (_ BitVec 64))
(declare-fun var68299 () (_ BitVec 64))
(declare-fun temp32_51 () (_ BitVec 64))
(declare-fun temp32_52 () (_ BitVec 64))
(declare-fun var68300 () (_ BitVec 64))
(declare-fun temp32_53 () (_ BitVec 64))
(declare-fun temp32_54 () (_ BitVec 64))
(declare-fun var68301 () (_ BitVec 64))
(declare-fun temp32_55 () (_ BitVec 64))
(declare-fun temp32_56 () (_ BitVec 64))
(declare-fun var68302 () (_ BitVec 64))
(declare-fun temp32_57 () (_ BitVec 64))
(declare-fun temp32_58 () (_ BitVec 64))
(declare-fun var68303 () (_ BitVec 64))
(declare-fun temp32_59 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp32_60 () (_ BitVec 64))
(declare-fun temp32_61 () (_ BitVec 64))
(declare-fun temp32_62 () (_ BitVec 64))
(declare-fun temp32_63 () (_ BitVec 64))
(declare-fun temp32_64 () (_ BitVec 64))
(declare-fun temp32_65 () (_ BitVec 64))
(declare-fun temp32_66 () (_ BitVec 64))
(declare-fun temp32_67 () (_ BitVec 64))
(declare-fun temp32_68 () (_ BitVec 64))
(declare-fun temp32_69 () (_ BitVec 64))
(declare-fun temp32_70 () (_ BitVec 64))
(declare-fun temp32_71 () (_ BitVec 64))
(declare-fun temp32_73 () (_ BitVec 64))
(declare-fun temp32_72 () (_ BitVec 64))
(declare-fun temp32_75 () (_ BitVec 64))
(declare-fun temp32_74 () (_ BitVec 64))
(declare-fun temp32_77 () (_ BitVec 64))
(declare-fun temp32_76 () (_ BitVec 64))
(declare-fun temp32_79 () (_ BitVec 64))
(declare-fun temp32_78 () (_ BitVec 64))
(declare-fun temp32_81 () (_ BitVec 64))
(declare-fun temp32_80 () (_ BitVec 64))
(declare-fun var792081 () (_ BitVec 64))
(declare-fun var792082 () (_ BitVec 64))
(declare-fun var857606 () (_ BitVec 64))
(declare-fun var857607 () (_ BitVec 64))
(declare-fun var922711 () (_ BitVec 64))
(declare-fun var922712 () (_ BitVec 64))
(declare-fun temp32_82 () (_ BitVec 64))
(declare-fun var922713 () (_ BitVec 64))
(declare-fun temp32_83 () (_ BitVec 64))
(declare-fun var922723 () (_ BitVec 64))
(declare-fun temp32_84 () (_ BitVec 64))
(declare-fun temp32_85 () (_ BitVec 64))
(declare-fun var922731 () (_ BitVec 64))
(declare-fun temp32_86 () (_ BitVec 64))
(declare-fun temp32_87 () (_ BitVec 64))
(declare-fun var922736 () (_ BitVec 64))
(declare-fun var922737 () (_ BitVec 64))
(declare-fun temp32_88 () (_ BitVec 64))
(declare-fun var922738 () (_ BitVec 64))
(declare-fun temp32_89 () (_ BitVec 64))
(declare-fun var922739 () (_ BitVec 64))
(declare-fun var922751 () (_ BitVec 64))
(declare-fun var922752 () (_ BitVec 64))
(declare-fun var922753 () (_ BitVec 64))
(declare-fun temp32_90 () (_ BitVec 64))
(declare-fun var922784 () (_ BitVec 64))
(declare-fun temp32_91 () (_ BitVec 64))
(declare-fun var988689 () (_ BitVec 64))
(declare-fun var988690 () (_ BitVec 64))
(assert (= temp32_1 #x0000000000000004))
(assert (= var68041
   (ite (= ARGNAME_input_NAMEEND_DIM temp32_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_2 #x0000000000000001))
(assert (= var68041 temp32_2))
(assert (= temp32_3 #x0000000000000004))
(assert (= var68076
   (ite (= ARGNAME_filter_NAMEEND_DIM temp32_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_4 #x0000000000000001))
(assert (= var68076 temp32_4))
(assert (= temp32_5 #x0000000000000000))
(assert (= var134499
   (ite (= ARGNAME_min_input_NAMEEND_DIM temp32_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var134495 var134499))
(assert (= var68102 var134495))
(assert (= temp32_6 #x0000000000000001))
(assert (= var68102 temp32_6))
(assert (= temp32_7 #x0000000000000000))
(assert (= var200035
   (ite (= ARGNAME_max_input_NAMEEND_DIM temp32_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var200031 var200035))
(assert (= var68130 var200031))
(assert (= temp32_8 #x0000000000000001))
(assert (= var68130 temp32_8))
(assert (= temp32_9 #x0000000000000000))
(assert (= var265571
   (ite (= ARGNAME_min_filter_NAMEEND_DIM temp32_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var265567 var265571))
(assert (= var68156 var265567))
(assert (= temp32_10 #x0000000000000001))
(assert (= var68156 temp32_10))
(assert (= temp32_11 #x0000000000000000))
(assert (= var331107
   (ite (= ARGNAME_max_filter_NAMEEND_DIM temp32_11)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var331103 var331107))
(assert (= var68183 var331103))
(assert (= temp32_12 #x0000000000000001))
(assert (= var68183 temp32_12))
(assert (= temp32_13 #x0000000000000000))
(assert (= var396672 temp32_13))
(assert (= temp32_14 #x0000000000000000))
(assert (= var462208 temp32_14))
(assert (= temp32_15 #x0000000000000000))
(assert (= var527744 temp32_15))
(assert (= temp32_16 #x0000000000000000))
(assert (= var593280 temp32_16))
(assert (= temp32_17 #x0000000000000000))
(assert (= var658845 temp32_17))
(assert (= var658821 var658845))
(assert (= var68263 var658821))
(assert (= var68267 var68263))
(assert (= temp32_18 #x0000000000000000))
(assert (= temp32_19 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_18)))
(assert (= temp32_20 #x0000000000000001))
(assert (= temp32_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_20)))
(assert (= temp32_22 #x0000000000000002))
(assert (= temp32_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_22)))
(assert (= temp32_24 #x0000000000000003))
(assert (= temp32_25 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_24)))
(assert (= temp32_26 #x0000000000000004))
(assert (= temp32_27 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_26)))
(assert (= temp32_28 #x0000000000000005))
(assert (= temp32_29 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_28)))
(assert (= temp32_30 #x0000000000000003))
(assert (= temp32_31 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_30)))
(assert (= var68270 temp32_31))
(assert (= temp32_32 #x0000000000000000))
(assert (= temp32_33 (select ARGNAME_filter_NAMEEND_DIMSIZE temp32_32)))
(assert (= temp32_34 #x0000000000000001))
(assert (= temp32_35 (select ARGNAME_filter_NAMEEND_DIMSIZE temp32_34)))
(assert (= temp32_36 #x0000000000000002))
(assert (= temp32_37 (select ARGNAME_filter_NAMEEND_DIMSIZE temp32_36)))
(assert (= temp32_38 #x0000000000000003))
(assert (= temp32_39 (select ARGNAME_filter_NAMEEND_DIMSIZE temp32_38)))
(assert (= temp32_40 #x0000000000000004))
(assert (= temp32_41 (select ARGNAME_filter_NAMEEND_DIMSIZE temp32_40)))
(assert (= temp32_42 #x0000000000000005))
(assert (= temp32_43 (select ARGNAME_filter_NAMEEND_DIMSIZE temp32_42)))
(assert (= temp32_44 #x0000000000000002))
(assert (= temp32_45 (select ARGNAME_filter_NAMEEND_DIMSIZE temp32_44)))
(assert (= var68273 temp32_45))
(assert (= var68274 (ite (= var68270 var68273) #x0000000000000001 #x0000000000000000)))
(assert (= temp32_46 #x0000000000000001))
(assert (= var68274 temp32_46))
(assert (= temp32_47 #x0000000000000003))
(assert (= temp32_48 (select ARGNAME_filter_NAMEEND_DIMSIZE temp32_47)))
(assert (= var68298 temp32_48))
(assert (= temp32_49 #x0000000000000001))
(assert (= temp32_50 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_49)))
(assert (= var68299 temp32_50))
(assert (= temp32_51 #x0000000000000000))
(assert (= temp32_52 (select ARGNAME_filter_NAMEEND_DIMSIZE temp32_51)))
(assert (= var68300 temp32_52))
(assert (= temp32_53 #x0000000000000002))
(assert (= temp32_54 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_53)))
(assert (= var68301 temp32_54))
(assert (= temp32_55 #x0000000000000001))
(assert (= temp32_56 (select ARGNAME_filter_NAMEEND_DIMSIZE temp32_55)))
(assert (= var68302 temp32_56))
(assert (= temp32_57 #x0000000000000000))
(assert (= temp32_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_57)))
(assert (= var68303 temp32_58))
(assert (= temp32_59 #x0000000000000000))
(assert (= temp32_60 (select ARGNAME_strides_NAMEEND_VAL temp32_59)))
(assert (= temp32_61 #x0000000000000001))
(assert (= temp32_62 (select ARGNAME_strides_NAMEEND_VAL temp32_61)))
(assert (= temp32_63 #x0000000000000002))
(assert (= temp32_64 (select ARGNAME_strides_NAMEEND_VAL temp32_63)))
(assert (= temp32_65 #x0000000000000003))
(assert (= temp32_66 (select ARGNAME_strides_NAMEEND_VAL temp32_65)))
(assert (= temp32_67 #x0000000000000004))
(assert (= temp32_68 (select ARGNAME_strides_NAMEEND_VAL temp32_67)))
(assert (= temp32_69 #x0000000000000005))
(assert (= temp32_70 (select ARGNAME_strides_NAMEEND_VAL temp32_69)))
(assert (= temp32_71 #x0000000000000001))
(assert (= temp32_73 (select ARGNAME_strides_NAMEEND_VAL temp32_71)))
(assert (= temp32_72 temp32_73))
(assert (= temp32_75 #x0000000000000000))
(assert (= temp32_74 temp32_75))
(assert (= temp32_77 #x0000000000000000))
(assert (= temp32_76 temp32_77))
(assert (= temp32_79 #x0000000000000000))
(assert (= temp32_78 temp32_79))
(assert (= temp32_81 #x0000000000000000))
(assert (= temp32_80 temp32_81))
(assert (= var792081 var68299))
(assert (= var792082 var68300))
(assert (= var857606 var792081))
(assert (= var857607 var792082))
(assert (= var922711 var857606))
(assert (= var922712 var857607))
(assert (= temp32_82 #x0000000000000001))
(assert (= var922713 temp32_82))
(assert (= temp32_83 #x0000000000000001))
(assert (= var922723
   (ite (bvslt temp32_72 temp32_83) #x0000000000000001 #x0000000000000000)))
(assert (= temp32_84 #x0000000000000000))
(assert (= var922723 temp32_84))
(assert (= temp32_85 #x0000000000000001))
(assert (= var922731
   (ite (bvslt var922713 temp32_85) #x0000000000000001 #x0000000000000000)))
(assert (= temp32_86 #x0000000000000000))
(assert (= var922731 temp32_86))
(assert (= temp32_87 #xffffffffffffffff))
(assert (= var922736 (bvadd var922712 temp32_87)))
(assert (= var922737 (bvmul var922736 var922713)))
(assert (= temp32_88 #x0000000000000001))
(assert (= var922738 (bvadd var922737 temp32_88)))
(assert (= temp32_89 #xffffffffffffffff))
(assert (= var922739 (bvxor var922737 temp32_89)))
(assert (= var922751 (bvadd temp32_72 var922711)))
(assert (= var922752 (bvadd var922751 var922739)))
(assert (= var922753 (bvadd var922752 temp32_78)))
(assert (= temp32_90 #x0000000000000000))
(assert (= var922784
   (ite (bvslt temp32_74 temp32_90) #x0000000000000001 #x0000000000000000)))
(assert (= temp32_91 #x0000000000000000))
(assert (= var922784 temp32_91))
(assert (= var988689 var68301))
(assert (= var988690 var68302))
(model-add temp32_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp32_2 () (_ BitVec 64) #x0000000000000001)
(model-add var68041 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))















