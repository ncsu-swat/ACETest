(declare-fun temp18_1 () (_ BitVec 64))
(declare-fun temp18_2 () (_ BitVec 64))
(declare-fun var68041 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp18_3 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var68076 () (_ BitVec 64))
(declare-fun temp18_4 () (_ BitVec 64))
(declare-fun temp18_5 () (_ BitVec 64))
(declare-fun ARGNAME_min_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var134499 () (_ BitVec 64))
(declare-fun var134495 () (_ BitVec 64))
(declare-fun var68102 () (_ BitVec 64))
(declare-fun temp18_6 () (_ BitVec 64))
(declare-fun temp18_7 () (_ BitVec 64))
(declare-fun ARGNAME_max_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var200035 () (_ BitVec 64))
(declare-fun var200031 () (_ BitVec 64))
(declare-fun var68130 () (_ BitVec 64))
(declare-fun temp18_8 () (_ BitVec 64))
(declare-fun temp18_9 () (_ BitVec 64))
(declare-fun ARGNAME_min_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var265571 () (_ BitVec 64))
(declare-fun var265567 () (_ BitVec 64))
(declare-fun var68156 () (_ BitVec 64))
(declare-fun temp18_10 () (_ BitVec 64))
(declare-fun temp18_11 () (_ BitVec 64))
(declare-fun ARGNAME_max_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var331107 () (_ BitVec 64))
(declare-fun var331103 () (_ BitVec 64))
(declare-fun var68183 () (_ BitVec 64))
(declare-fun temp18_12 () (_ BitVec 64))
(declare-fun temp18_13 () (_ BitVec 64))
(declare-fun var396672 () (_ BitVec 64))
(declare-fun temp18_14 () (_ BitVec 64))
(declare-fun var462208 () (_ BitVec 64))
(declare-fun temp18_15 () (_ BitVec 64))
(declare-fun var527744 () (_ BitVec 64))
(declare-fun temp18_16 () (_ BitVec 64))
(declare-fun var593280 () (_ BitVec 64))
(declare-fun temp18_17 () (_ BitVec 64))
(declare-fun var658845 () (_ BitVec 64))
(declare-fun var658821 () (_ BitVec 64))
(declare-fun var68263 () (_ BitVec 64))
(declare-fun var68267 () (_ BitVec 64))
(declare-fun temp18_18 () (_ BitVec 64))
(declare-fun var724381 () (_ BitVec 64))
(declare-fun var724357 () (_ BitVec 64))
(declare-fun var68268 () (_ BitVec 64))
(declare-fun var68269 () (_ BitVec 64))
(declare-fun temp18_19 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp18_20 () (_ BitVec 64))
(declare-fun temp18_21 () (_ BitVec 64))
(declare-fun temp18_22 () (_ BitVec 64))
(declare-fun temp18_23 () (_ BitVec 64))
(declare-fun temp18_24 () (_ BitVec 64))
(declare-fun temp18_25 () (_ BitVec 64))
(declare-fun temp18_26 () (_ BitVec 64))
(declare-fun temp18_27 () (_ BitVec 64))
(declare-fun temp18_28 () (_ BitVec 64))
(declare-fun temp18_29 () (_ BitVec 64))
(declare-fun temp18_30 () (_ BitVec 64))
(declare-fun temp18_31 () (_ BitVec 64))
(declare-fun temp18_32 () (_ BitVec 64))
(declare-fun var68270 () (_ BitVec 64))
(declare-fun temp18_33 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp18_34 () (_ BitVec 64))
(declare-fun temp18_35 () (_ BitVec 64))
(declare-fun temp18_36 () (_ BitVec 64))
(declare-fun temp18_37 () (_ BitVec 64))
(declare-fun temp18_38 () (_ BitVec 64))
(declare-fun temp18_39 () (_ BitVec 64))
(declare-fun temp18_40 () (_ BitVec 64))
(declare-fun temp18_41 () (_ BitVec 64))
(declare-fun temp18_42 () (_ BitVec 64))
(declare-fun temp18_43 () (_ BitVec 64))
(declare-fun temp18_44 () (_ BitVec 64))
(declare-fun temp18_45 () (_ BitVec 64))
(declare-fun temp18_46 () (_ BitVec 64))
(declare-fun var68273 () (_ BitVec 64))
(declare-fun var68274 () (_ BitVec 64))
(declare-fun temp18_47 () (_ BitVec 64))
(declare-fun temp18_48 () (_ BitVec 64))
(declare-fun temp18_49 () (_ BitVec 64))
(declare-fun var68298 () (_ BitVec 64))
(declare-fun temp18_50 () (_ BitVec 64))
(declare-fun temp18_51 () (_ BitVec 64))
(declare-fun var68299 () (_ BitVec 64))
(declare-fun temp18_52 () (_ BitVec 64))
(declare-fun temp18_53 () (_ BitVec 64))
(declare-fun var68300 () (_ BitVec 64))
(declare-fun temp18_54 () (_ BitVec 64))
(declare-fun temp18_55 () (_ BitVec 64))
(declare-fun var68301 () (_ BitVec 64))
(declare-fun temp18_56 () (_ BitVec 64))
(declare-fun temp18_57 () (_ BitVec 64))
(declare-fun var68302 () (_ BitVec 64))
(declare-fun temp18_58 () (_ BitVec 64))
(declare-fun temp18_59 () (_ BitVec 64))
(declare-fun var68303 () (_ BitVec 64))
(declare-fun temp18_60 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp18_61 () (_ BitVec 64))
(declare-fun temp18_62 () (_ BitVec 64))
(declare-fun temp18_63 () (_ BitVec 64))
(declare-fun temp18_64 () (_ BitVec 64))
(declare-fun temp18_65 () (_ BitVec 64))
(declare-fun temp18_66 () (_ BitVec 64))
(declare-fun temp18_67 () (_ BitVec 64))
(declare-fun temp18_68 () (_ BitVec 64))
(declare-fun temp18_69 () (_ BitVec 64))
(declare-fun temp18_70 () (_ BitVec 64))
(declare-fun temp18_71 () (_ BitVec 64))
(declare-fun temp18_72 () (_ BitVec 64))
(declare-fun temp18_74 () (_ BitVec 64))
(declare-fun temp18_73 () (_ BitVec 64))
(declare-fun temp18_76 () (_ BitVec 64))
(declare-fun temp18_75 () (_ BitVec 64))
(declare-fun temp18_78 () (_ BitVec 64))
(declare-fun temp18_77 () (_ BitVec 64))
(declare-fun temp18_80 () (_ BitVec 64))
(declare-fun temp18_79 () (_ BitVec 64))
(declare-fun temp18_82 () (_ BitVec 64))
(declare-fun temp18_81 () (_ BitVec 64))
(declare-fun var792081 () (_ BitVec 64))
(declare-fun var792082 () (_ BitVec 64))
(declare-fun var857606 () (_ BitVec 64))
(declare-fun var857607 () (_ BitVec 64))
(declare-fun var922711 () (_ BitVec 64))
(declare-fun var922712 () (_ BitVec 64))
(declare-fun temp18_83 () (_ BitVec 64))
(declare-fun var922713 () (_ BitVec 64))
(declare-fun temp18_84 () (_ BitVec 64))
(declare-fun var922723 () (_ BitVec 64))
(declare-fun temp18_85 () (_ BitVec 64))
(declare-fun temp18_86 () (_ BitVec 64))
(declare-fun var922731 () (_ BitVec 64))
(declare-fun temp18_87 () (_ BitVec 64))
(declare-fun temp18_88 () (_ BitVec 64))
(declare-fun var922736 () (_ BitVec 64))
(declare-fun var922737 () (_ BitVec 64))
(declare-fun temp18_89 () (_ BitVec 64))
(declare-fun var922738 () (_ BitVec 64))
(declare-fun temp18_90 () (_ BitVec 64))
(declare-fun var922739 () (_ BitVec 64))
(declare-fun temp18_91 () (_ BitVec 64))
(declare-fun var922758 () (_ BitVec 64))
(declare-fun var922759 () (_ BitVec 64))
(declare-fun var922760 () (_ BitVec 64))
(declare-fun temp18_93 () (_ BitVec 64))
(declare-fun temp18_92 () (_ BitVec 64))
(declare-fun temp18_94 () (_ BitVec 64))
(declare-fun var922767 () (_ BitVec 64))
(declare-fun var922768 () (_ BitVec 64))
(declare-fun var922769 () (_ BitVec 64))
(declare-fun var922770 () (_ BitVec 64))
(declare-fun var922783 () (_ BitVec 64))
(declare-fun temp18_95 () (_ BitVec 64))
(declare-fun var922784 () (_ BitVec 64))
(declare-fun temp18_96 () (_ BitVec 64))
(declare-fun var1054225 () (_ BitVec 64))
(declare-fun var1054226 () (_ BitVec 64))
(declare-fun var1119750 () (_ BitVec 64))
(declare-fun var1119751 () (_ BitVec 64))
(declare-fun var1184855 () (_ BitVec 64))
(declare-fun var1184856 () (_ BitVec 64))
(declare-fun temp18_97 () (_ BitVec 64))
(declare-fun var1184857 () (_ BitVec 64))
(declare-fun temp18_98 () (_ BitVec 64))
(declare-fun var1184867 () (_ BitVec 64))
(declare-fun temp18_99 () (_ BitVec 64))
(declare-fun temp18_100 () (_ BitVec 64))
(declare-fun var1184875 () (_ BitVec 64))
(declare-fun temp18_101 () (_ BitVec 64))
(declare-fun temp18_102 () (_ BitVec 64))
(declare-fun var1184880 () (_ BitVec 64))
(declare-fun var1184881 () (_ BitVec 64))
(declare-fun temp18_103 () (_ BitVec 64))
(declare-fun var1184882 () (_ BitVec 64))
(declare-fun temp18_104 () (_ BitVec 64))
(declare-fun var1184883 () (_ BitVec 64))
(declare-fun var1184885 () (_ BitVec 64))
(declare-fun var1184886 () (_ BitVec 64))
(declare-fun var1184887 () (_ BitVec 64))
(declare-fun temp18_106 () (_ BitVec 64))
(declare-fun temp18_105 () (_ BitVec 64))
(declare-fun temp18_108 () (_ BitVec 64))
(declare-fun temp18_107 () (_ BitVec 64))
(declare-fun var1184927 () (_ BitVec 64))
(declare-fun temp18_109 () (_ BitVec 64))
(declare-fun var1184928 () (_ BitVec 64))
(declare-fun temp18_110 () (_ BitVec 64))
(assert (= temp18_1 #x0000000000000004))
(assert (= var68041
   (ite (= ARGNAME_input_NAMEEND_DIM temp18_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp18_2 #x0000000000000001))
(assert (= var68041 temp18_2))
(assert (= temp18_3 #x0000000000000004))
(assert (= var68076
   (ite (= ARGNAME_filter_NAMEEND_DIM temp18_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp18_4 #x0000000000000001))
(assert (= var68076 temp18_4))
(assert (= temp18_5 #x0000000000000000))
(assert (= var134499
   (ite (= ARGNAME_min_input_NAMEEND_DIM temp18_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var134495 var134499))
(assert (= var68102 var134495))
(assert (= temp18_6 #x0000000000000001))
(assert (= var68102 temp18_6))
(assert (= temp18_7 #x0000000000000000))
(assert (= var200035
   (ite (= ARGNAME_max_input_NAMEEND_DIM temp18_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var200031 var200035))
(assert (= var68130 var200031))
(assert (= temp18_8 #x0000000000000001))
(assert (= var68130 temp18_8))
(assert (= temp18_9 #x0000000000000000))
(assert (= var265571
   (ite (= ARGNAME_min_filter_NAMEEND_DIM temp18_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var265567 var265571))
(assert (= var68156 var265567))
(assert (= temp18_10 #x0000000000000001))
(assert (= var68156 temp18_10))
(assert (= temp18_11 #x0000000000000000))
(assert (= var331107
   (ite (= ARGNAME_max_filter_NAMEEND_DIM temp18_11)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var331103 var331107))
(assert (= var68183 var331103))
(assert (= temp18_12 #x0000000000000001))
(assert (= var68183 temp18_12))
(assert (= temp18_13 #x0000000000000000))
(assert (= var396672 temp18_13))
(assert (= temp18_14 #x0000000000000000))
(assert (= var462208 temp18_14))
(assert (= temp18_15 #x0000000000000000))
(assert (= var527744 temp18_15))
(assert (= temp18_16 #x0000000000000000))
(assert (= var593280 temp18_16))
(assert (= temp18_17 #x0000000000000000))
(assert (= var658845 temp18_17))
(assert (= var658821 var658845))
(assert (= var68263 var658821))
(assert (= var68267 var68263))
(assert (= temp18_18 #x0000000000000000))
(assert (= var724381 temp18_18))
(assert (= var724357 var724381))
(assert (= var68268 var724357))
(assert (= var68269 var68268))
(assert (= temp18_19 #x0000000000000000))
(assert (= temp18_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp18_19)))
(assert (= temp18_21 #x0000000000000001))
(assert (= temp18_22 (select ARGNAME_input_NAMEEND_DIMSIZE temp18_21)))
(assert (= temp18_23 #x0000000000000002))
(assert (= temp18_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp18_23)))
(assert (= temp18_25 #x0000000000000003))
(assert (= temp18_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp18_25)))
(assert (= temp18_27 #x0000000000000004))
(assert (= temp18_28 (select ARGNAME_input_NAMEEND_DIMSIZE temp18_27)))
(assert (= temp18_29 #x0000000000000005))
(assert (= temp18_30 (select ARGNAME_input_NAMEEND_DIMSIZE temp18_29)))
(assert (= temp18_31 #x0000000000000003))
(assert (= temp18_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp18_31)))
(assert (= var68270 temp18_32))
(assert (= temp18_33 #x0000000000000000))
(assert (= temp18_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp18_33)))
(assert (= temp18_35 #x0000000000000001))
(assert (= temp18_36 (select ARGNAME_filter_NAMEEND_DIMSIZE temp18_35)))
(assert (= temp18_37 #x0000000000000002))
(assert (= temp18_38 (select ARGNAME_filter_NAMEEND_DIMSIZE temp18_37)))
(assert (= temp18_39 #x0000000000000003))
(assert (= temp18_40 (select ARGNAME_filter_NAMEEND_DIMSIZE temp18_39)))
(assert (= temp18_41 #x0000000000000004))
(assert (= temp18_42 (select ARGNAME_filter_NAMEEND_DIMSIZE temp18_41)))
(assert (= temp18_43 #x0000000000000005))
(assert (= temp18_44 (select ARGNAME_filter_NAMEEND_DIMSIZE temp18_43)))
(assert (= temp18_45 #x0000000000000002))
(assert (= temp18_46 (select ARGNAME_filter_NAMEEND_DIMSIZE temp18_45)))
(assert (= var68273 temp18_46))
(assert (= var68274 (ite (= var68270 var68273) #x0000000000000001 #x0000000000000000)))
(assert (= temp18_47 #x0000000000000001))
(assert (= var68274 temp18_47))
(assert (= temp18_48 #x0000000000000003))
(assert (= temp18_49 (select ARGNAME_filter_NAMEEND_DIMSIZE temp18_48)))
(assert (= var68298 temp18_49))
(assert (= temp18_50 #x0000000000000001))
(assert (= temp18_51 (select ARGNAME_input_NAMEEND_DIMSIZE temp18_50)))
(assert (= var68299 temp18_51))
(assert (= temp18_52 #x0000000000000000))
(assert (= temp18_53 (select ARGNAME_filter_NAMEEND_DIMSIZE temp18_52)))
(assert (= var68300 temp18_53))
(assert (= temp18_54 #x0000000000000002))
(assert (= temp18_55 (select ARGNAME_input_NAMEEND_DIMSIZE temp18_54)))
(assert (= var68301 temp18_55))
(assert (= temp18_56 #x0000000000000001))
(assert (= temp18_57 (select ARGNAME_filter_NAMEEND_DIMSIZE temp18_56)))
(assert (= var68302 temp18_57))
(assert (= temp18_58 #x0000000000000000))
(assert (= temp18_59 (select ARGNAME_input_NAMEEND_DIMSIZE temp18_58)))
(assert (= var68303 temp18_59))
(assert (= temp18_60 #x0000000000000000))
(assert (= temp18_61 (select ARGNAME_strides_NAMEEND_VAL temp18_60)))
(assert (= temp18_62 #x0000000000000001))
(assert (= temp18_63 (select ARGNAME_strides_NAMEEND_VAL temp18_62)))
(assert (= temp18_64 #x0000000000000002))
(assert (= temp18_65 (select ARGNAME_strides_NAMEEND_VAL temp18_64)))
(assert (= temp18_66 #x0000000000000003))
(assert (= temp18_67 (select ARGNAME_strides_NAMEEND_VAL temp18_66)))
(assert (= temp18_68 #x0000000000000004))
(assert (= temp18_69 (select ARGNAME_strides_NAMEEND_VAL temp18_68)))
(assert (= temp18_70 #x0000000000000005))
(assert (= temp18_71 (select ARGNAME_strides_NAMEEND_VAL temp18_70)))
(assert (= temp18_72 #x0000000000000001))
(assert (= temp18_74 (select ARGNAME_strides_NAMEEND_VAL temp18_72)))
(assert (= temp18_73 temp18_74))
(assert (= temp18_76 #x0000000000000000))
(assert (= temp18_75 temp18_76))
(assert (= temp18_78 #x0000000000000000))
(assert (= temp18_77 temp18_78))
(assert (= temp18_80 #x0000000000000000))
(assert (= temp18_79 temp18_80))
(assert (= temp18_82 #x0000000000000000))
(assert (= temp18_81 temp18_82))
(assert (= var792081 var68299))
(assert (= var792082 var68300))
(assert (= var857606 var792081))
(assert (= var857607 var792082))
(assert (= var922711 var857606))
(assert (= var922712 var857607))
(assert (= temp18_83 #x0000000000000001))
(assert (= var922713 temp18_83))
(assert (= temp18_84 #x0000000000000001))
(assert (= var922723
   (ite (bvslt temp18_73 temp18_84) #x0000000000000001 #x0000000000000000)))
(assert (= temp18_85 #x0000000000000000))
(assert (= var922723 temp18_85))
(assert (= temp18_86 #x0000000000000001))
(assert (= var922731
   (ite (bvslt var922713 temp18_86) #x0000000000000001 #x0000000000000000)))
(assert (= temp18_87 #x0000000000000000))
(assert (= var922731 temp18_87))
(assert (= temp18_88 #xffffffffffffffff))
(assert (= var922736 (bvadd var922712 temp18_88)))
(assert (= var922737 (bvmul var922736 var922713)))
(assert (= temp18_89 #x0000000000000001))
(assert (= var922738 (bvadd var922737 temp18_89)))
(assert (= temp18_90 #xffffffffffffffff))
(assert (= var922739 (bvxor var922737 temp18_90)))
(assert (= temp18_91 #xffffffffffffffff))
(assert (= var922758 (bvadd var922711 temp18_91)))
(assert (= var922759 (bvadd var922758 temp18_73)))
(assert (= var922760 (bvsdiv var922759 temp18_73)))
(assert (= temp18_93 #x0000000000000000))
(assert (= temp18_92 temp18_93))
(assert (= temp18_94 #xffffffffffffffff))
(assert (= var922767 (bvadd var922760 temp18_94)))
(assert (= var922768 (bvmul var922767 temp18_73)))
(assert (= var922769 (bvsub var922738 var922711)))
(assert (= var922770 (bvadd var922769 var922768)))
(assert (= var922783 var922760))
(assert (= temp18_95 #x0000000000000000))
(assert (= var922784
   (ite (bvslt var922783 temp18_95) #x0000000000000001 #x0000000000000000)))
(assert (= temp18_96 #x0000000000000000))
(assert (= var922784 temp18_96))
(assert (= var1054225 var68301))
(assert (= var1054226 var68302))
(assert (= var1119750 var1054225))
(assert (= var1119751 var1054226))
(assert (= var1184855 var1119750))
(assert (= var1184856 var1119751))
(assert (= temp18_97 #x0000000000000001))
(assert (= var1184857 temp18_97))
(assert (= temp18_98 #x0000000000000001))
(assert (= var1184867
   (ite (bvslt temp18_73 temp18_98) #x0000000000000001 #x0000000000000000)))
(assert (= temp18_99 #x0000000000000000))
(assert (= var1184867 temp18_99))
(assert (= temp18_100 #x0000000000000001))
(assert (= var1184875
   (ite (bvslt var1184857 temp18_100) #x0000000000000001 #x0000000000000000)))
(assert (= temp18_101 #x0000000000000000))
(assert (= var1184875 temp18_101))
(assert (= temp18_102 #xffffffffffffffff))
(assert (= var1184880 (bvadd var1184856 temp18_102)))
(assert (= var1184881 (bvmul var1184880 var1184857)))
(assert (= temp18_103 #x0000000000000001))
(assert (= var1184882 (bvadd var1184881 temp18_103)))
(assert (= temp18_104 #xffffffffffffffff))
(assert (= var1184883 (bvxor var1184881 temp18_104)))
(assert (= var1184885 (bvadd temp18_73 var1184855)))
(assert (= var1184886 (bvadd var1184885 var1184883)))
(assert (= var1184887 (bvsdiv var1184886 temp18_73)))
(assert (= temp18_106 #x0000000000000000))
(assert (= temp18_105 temp18_106))
(assert (= temp18_108 #x0000000000000000))
(assert (= temp18_107 temp18_108))
(assert (= var1184927 var1184887))
(assert (= temp18_109 #x0000000000000000))
(assert (= var1184928
   (ite (bvslt var1184927 temp18_109) #x0000000000000001 #x0000000000000000)))
(assert (= temp18_110 #x0000000000000000))
(assert (= var1184928 temp18_110))
(model-add temp18_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp18_2 () (_ BitVec 64) #x0000000000000001)
(model-add var68041 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))
















