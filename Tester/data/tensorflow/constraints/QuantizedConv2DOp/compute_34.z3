(declare-fun temp33_1 () (_ BitVec 64))
(declare-fun temp33_2 () (_ BitVec 64))
(declare-fun var68041 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp33_3 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var68076 () (_ BitVec 64))
(declare-fun temp33_4 () (_ BitVec 64))
(declare-fun temp33_5 () (_ BitVec 64))
(declare-fun ARGNAME_min_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var134499 () (_ BitVec 64))
(declare-fun var134495 () (_ BitVec 64))
(declare-fun var68102 () (_ BitVec 64))
(declare-fun temp33_6 () (_ BitVec 64))
(declare-fun temp33_7 () (_ BitVec 64))
(declare-fun ARGNAME_max_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var200035 () (_ BitVec 64))
(declare-fun var200031 () (_ BitVec 64))
(declare-fun var68130 () (_ BitVec 64))
(declare-fun temp33_8 () (_ BitVec 64))
(declare-fun temp33_9 () (_ BitVec 64))
(declare-fun ARGNAME_min_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var265571 () (_ BitVec 64))
(declare-fun var265567 () (_ BitVec 64))
(declare-fun var68156 () (_ BitVec 64))
(declare-fun temp33_10 () (_ BitVec 64))
(declare-fun temp33_11 () (_ BitVec 64))
(declare-fun ARGNAME_max_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var331107 () (_ BitVec 64))
(declare-fun var331103 () (_ BitVec 64))
(declare-fun var68183 () (_ BitVec 64))
(declare-fun temp33_12 () (_ BitVec 64))
(declare-fun temp33_13 () (_ BitVec 64))
(declare-fun var396672 () (_ BitVec 64))
(declare-fun temp33_14 () (_ BitVec 64))
(declare-fun var462208 () (_ BitVec 64))
(declare-fun temp33_15 () (_ BitVec 64))
(declare-fun var527744 () (_ BitVec 64))
(declare-fun temp33_16 () (_ BitVec 64))
(declare-fun var593280 () (_ BitVec 64))
(declare-fun temp33_17 () (_ BitVec 64))
(declare-fun var658845 () (_ BitVec 64))
(declare-fun var658821 () (_ BitVec 64))
(declare-fun var68263 () (_ BitVec 64))
(declare-fun var68267 () (_ BitVec 64))
(declare-fun temp33_18 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp33_19 () (_ BitVec 64))
(declare-fun temp33_20 () (_ BitVec 64))
(declare-fun temp33_21 () (_ BitVec 64))
(declare-fun temp33_22 () (_ BitVec 64))
(declare-fun temp33_23 () (_ BitVec 64))
(declare-fun temp33_24 () (_ BitVec 64))
(declare-fun temp33_25 () (_ BitVec 64))
(declare-fun temp33_26 () (_ BitVec 64))
(declare-fun temp33_27 () (_ BitVec 64))
(declare-fun temp33_28 () (_ BitVec 64))
(declare-fun temp33_29 () (_ BitVec 64))
(declare-fun temp33_30 () (_ BitVec 64))
(declare-fun temp33_31 () (_ BitVec 64))
(declare-fun var68270 () (_ BitVec 64))
(declare-fun temp33_32 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp33_33 () (_ BitVec 64))
(declare-fun temp33_34 () (_ BitVec 64))
(declare-fun temp33_35 () (_ BitVec 64))
(declare-fun temp33_36 () (_ BitVec 64))
(declare-fun temp33_37 () (_ BitVec 64))
(declare-fun temp33_38 () (_ BitVec 64))
(declare-fun temp33_39 () (_ BitVec 64))
(declare-fun temp33_40 () (_ BitVec 64))
(declare-fun temp33_41 () (_ BitVec 64))
(declare-fun temp33_42 () (_ BitVec 64))
(declare-fun temp33_43 () (_ BitVec 64))
(declare-fun temp33_44 () (_ BitVec 64))
(declare-fun temp33_45 () (_ BitVec 64))
(declare-fun var68273 () (_ BitVec 64))
(declare-fun var68274 () (_ BitVec 64))
(declare-fun temp33_46 () (_ BitVec 64))
(declare-fun temp33_47 () (_ BitVec 64))
(declare-fun temp33_48 () (_ BitVec 64))
(declare-fun var68298 () (_ BitVec 64))
(declare-fun temp33_49 () (_ BitVec 64))
(declare-fun temp33_50 () (_ BitVec 64))
(declare-fun var68299 () (_ BitVec 64))
(declare-fun temp33_51 () (_ BitVec 64))
(declare-fun temp33_52 () (_ BitVec 64))
(declare-fun var68300 () (_ BitVec 64))
(declare-fun temp33_53 () (_ BitVec 64))
(declare-fun temp33_54 () (_ BitVec 64))
(declare-fun var68301 () (_ BitVec 64))
(declare-fun temp33_55 () (_ BitVec 64))
(declare-fun temp33_56 () (_ BitVec 64))
(declare-fun var68302 () (_ BitVec 64))
(declare-fun temp33_57 () (_ BitVec 64))
(declare-fun temp33_58 () (_ BitVec 64))
(declare-fun var68303 () (_ BitVec 64))
(declare-fun temp33_59 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp33_60 () (_ BitVec 64))
(declare-fun temp33_61 () (_ BitVec 64))
(declare-fun temp33_62 () (_ BitVec 64))
(declare-fun temp33_63 () (_ BitVec 64))
(declare-fun temp33_64 () (_ BitVec 64))
(declare-fun temp33_65 () (_ BitVec 64))
(declare-fun temp33_66 () (_ BitVec 64))
(declare-fun temp33_67 () (_ BitVec 64))
(declare-fun temp33_68 () (_ BitVec 64))
(declare-fun temp33_69 () (_ BitVec 64))
(declare-fun temp33_70 () (_ BitVec 64))
(declare-fun temp33_71 () (_ BitVec 64))
(declare-fun temp33_73 () (_ BitVec 64))
(declare-fun temp33_72 () (_ BitVec 64))
(declare-fun temp33_75 () (_ BitVec 64))
(declare-fun temp33_74 () (_ BitVec 64))
(declare-fun temp33_77 () (_ BitVec 64))
(declare-fun temp33_76 () (_ BitVec 64))
(declare-fun temp33_79 () (_ BitVec 64))
(declare-fun temp33_78 () (_ BitVec 64))
(declare-fun temp33_81 () (_ BitVec 64))
(declare-fun temp33_80 () (_ BitVec 64))
(declare-fun var792081 () (_ BitVec 64))
(declare-fun var792082 () (_ BitVec 64))
(declare-fun var857606 () (_ BitVec 64))
(declare-fun var857607 () (_ BitVec 64))
(declare-fun var922711 () (_ BitVec 64))
(declare-fun var922712 () (_ BitVec 64))
(declare-fun temp33_82 () (_ BitVec 64))
(declare-fun var922713 () (_ BitVec 64))
(declare-fun temp33_83 () (_ BitVec 64))
(declare-fun var922723 () (_ BitVec 64))
(declare-fun temp33_84 () (_ BitVec 64))
(declare-fun temp33_85 () (_ BitVec 64))
(declare-fun var922731 () (_ BitVec 64))
(declare-fun temp33_86 () (_ BitVec 64))
(declare-fun temp33_87 () (_ BitVec 64))
(declare-fun var922736 () (_ BitVec 64))
(declare-fun var922737 () (_ BitVec 64))
(declare-fun temp33_88 () (_ BitVec 64))
(declare-fun var922738 () (_ BitVec 64))
(declare-fun temp33_89 () (_ BitVec 64))
(declare-fun var922739 () (_ BitVec 64))
(declare-fun var922751 () (_ BitVec 64))
(declare-fun var922752 () (_ BitVec 64))
(declare-fun var922753 () (_ BitVec 64))
(declare-fun temp33_90 () (_ BitVec 64))
(declare-fun var922784 () (_ BitVec 64))
(declare-fun temp33_91 () (_ BitVec 64))
(declare-fun var988689 () (_ BitVec 64))
(declare-fun var988690 () (_ BitVec 64))
(declare-fun var1054214 () (_ BitVec 64))
(declare-fun var1054215 () (_ BitVec 64))
(declare-fun var1119319 () (_ BitVec 64))
(declare-fun var1119320 () (_ BitVec 64))
(declare-fun temp33_92 () (_ BitVec 64))
(declare-fun var1119321 () (_ BitVec 64))
(declare-fun temp33_93 () (_ BitVec 64))
(declare-fun var1119331 () (_ BitVec 64))
(declare-fun temp33_94 () (_ BitVec 64))
(declare-fun temp33_95 () (_ BitVec 64))
(declare-fun var1119339 () (_ BitVec 64))
(declare-fun temp33_96 () (_ BitVec 64))
(declare-fun temp33_97 () (_ BitVec 64))
(declare-fun var1119344 () (_ BitVec 64))
(declare-fun var1119345 () (_ BitVec 64))
(declare-fun temp33_98 () (_ BitVec 64))
(declare-fun var1119346 () (_ BitVec 64))
(declare-fun temp33_99 () (_ BitVec 64))
(declare-fun var1119347 () (_ BitVec 64))
(declare-fun temp33_100 () (_ BitVec 64))
(declare-fun var1119392 () (_ BitVec 64))
(declare-fun temp33_101 () (_ BitVec 64))
(assert (= temp33_1 #x0000000000000004))
(assert (= var68041
   (ite (= ARGNAME_input_NAMEEND_DIM temp33_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp33_2 #x0000000000000001))
(assert (= var68041 temp33_2))
(assert (= temp33_3 #x0000000000000004))
(assert (= var68076
   (ite (= ARGNAME_filter_NAMEEND_DIM temp33_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp33_4 #x0000000000000001))
(assert (= var68076 temp33_4))
(assert (= temp33_5 #x0000000000000000))
(assert (= var134499
   (ite (= ARGNAME_min_input_NAMEEND_DIM temp33_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var134495 var134499))
(assert (= var68102 var134495))
(assert (= temp33_6 #x0000000000000001))
(assert (= var68102 temp33_6))
(assert (= temp33_7 #x0000000000000000))
(assert (= var200035
   (ite (= ARGNAME_max_input_NAMEEND_DIM temp33_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var200031 var200035))
(assert (= var68130 var200031))
(assert (= temp33_8 #x0000000000000001))
(assert (= var68130 temp33_8))
(assert (= temp33_9 #x0000000000000000))
(assert (= var265571
   (ite (= ARGNAME_min_filter_NAMEEND_DIM temp33_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var265567 var265571))
(assert (= var68156 var265567))
(assert (= temp33_10 #x0000000000000001))
(assert (= var68156 temp33_10))
(assert (= temp33_11 #x0000000000000000))
(assert (= var331107
   (ite (= ARGNAME_max_filter_NAMEEND_DIM temp33_11)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var331103 var331107))
(assert (= var68183 var331103))
(assert (= temp33_12 #x0000000000000001))
(assert (= var68183 temp33_12))
(assert (= temp33_13 #x0000000000000000))
(assert (= var396672 temp33_13))
(assert (= temp33_14 #x0000000000000000))
(assert (= var462208 temp33_14))
(assert (= temp33_15 #x0000000000000000))
(assert (= var527744 temp33_15))
(assert (= temp33_16 #x0000000000000000))
(assert (= var593280 temp33_16))
(assert (= temp33_17 #x0000000000000000))
(assert (= var658845 temp33_17))
(assert (= var658821 var658845))
(assert (= var68263 var658821))
(assert (= var68267 var68263))
(assert (= temp33_18 #x0000000000000000))
(assert (= temp33_19 (select ARGNAME_input_NAMEEND_DIMSIZE temp33_18)))
(assert (= temp33_20 #x0000000000000001))
(assert (= temp33_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp33_20)))
(assert (= temp33_22 #x0000000000000002))
(assert (= temp33_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp33_22)))
(assert (= temp33_24 #x0000000000000003))
(assert (= temp33_25 (select ARGNAME_input_NAMEEND_DIMSIZE temp33_24)))
(assert (= temp33_26 #x0000000000000004))
(assert (= temp33_27 (select ARGNAME_input_NAMEEND_DIMSIZE temp33_26)))
(assert (= temp33_28 #x0000000000000005))
(assert (= temp33_29 (select ARGNAME_input_NAMEEND_DIMSIZE temp33_28)))
(assert (= temp33_30 #x0000000000000003))
(assert (= temp33_31 (select ARGNAME_input_NAMEEND_DIMSIZE temp33_30)))
(assert (= var68270 temp33_31))
(assert (= temp33_32 #x0000000000000000))
(assert (= temp33_33 (select ARGNAME_filter_NAMEEND_DIMSIZE temp33_32)))
(assert (= temp33_34 #x0000000000000001))
(assert (= temp33_35 (select ARGNAME_filter_NAMEEND_DIMSIZE temp33_34)))
(assert (= temp33_36 #x0000000000000002))
(assert (= temp33_37 (select ARGNAME_filter_NAMEEND_DIMSIZE temp33_36)))
(assert (= temp33_38 #x0000000000000003))
(assert (= temp33_39 (select ARGNAME_filter_NAMEEND_DIMSIZE temp33_38)))
(assert (= temp33_40 #x0000000000000004))
(assert (= temp33_41 (select ARGNAME_filter_NAMEEND_DIMSIZE temp33_40)))
(assert (= temp33_42 #x0000000000000005))
(assert (= temp33_43 (select ARGNAME_filter_NAMEEND_DIMSIZE temp33_42)))
(assert (= temp33_44 #x0000000000000002))
(assert (= temp33_45 (select ARGNAME_filter_NAMEEND_DIMSIZE temp33_44)))
(assert (= var68273 temp33_45))
(assert (= var68274 (ite (= var68270 var68273) #x0000000000000001 #x0000000000000000)))
(assert (= temp33_46 #x0000000000000001))
(assert (= var68274 temp33_46))
(assert (= temp33_47 #x0000000000000003))
(assert (= temp33_48 (select ARGNAME_filter_NAMEEND_DIMSIZE temp33_47)))
(assert (= var68298 temp33_48))
(assert (= temp33_49 #x0000000000000001))
(assert (= temp33_50 (select ARGNAME_input_NAMEEND_DIMSIZE temp33_49)))
(assert (= var68299 temp33_50))
(assert (= temp33_51 #x0000000000000000))
(assert (= temp33_52 (select ARGNAME_filter_NAMEEND_DIMSIZE temp33_51)))
(assert (= var68300 temp33_52))
(assert (= temp33_53 #x0000000000000002))
(assert (= temp33_54 (select ARGNAME_input_NAMEEND_DIMSIZE temp33_53)))
(assert (= var68301 temp33_54))
(assert (= temp33_55 #x0000000000000001))
(assert (= temp33_56 (select ARGNAME_filter_NAMEEND_DIMSIZE temp33_55)))
(assert (= var68302 temp33_56))
(assert (= temp33_57 #x0000000000000000))
(assert (= temp33_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp33_57)))
(assert (= var68303 temp33_58))
(assert (= temp33_59 #x0000000000000000))
(assert (= temp33_60 (select ARGNAME_strides_NAMEEND_VAL temp33_59)))
(assert (= temp33_61 #x0000000000000001))
(assert (= temp33_62 (select ARGNAME_strides_NAMEEND_VAL temp33_61)))
(assert (= temp33_63 #x0000000000000002))
(assert (= temp33_64 (select ARGNAME_strides_NAMEEND_VAL temp33_63)))
(assert (= temp33_65 #x0000000000000003))
(assert (= temp33_66 (select ARGNAME_strides_NAMEEND_VAL temp33_65)))
(assert (= temp33_67 #x0000000000000004))
(assert (= temp33_68 (select ARGNAME_strides_NAMEEND_VAL temp33_67)))
(assert (= temp33_69 #x0000000000000005))
(assert (= temp33_70 (select ARGNAME_strides_NAMEEND_VAL temp33_69)))
(assert (= temp33_71 #x0000000000000001))
(assert (= temp33_73 (select ARGNAME_strides_NAMEEND_VAL temp33_71)))
(assert (= temp33_72 temp33_73))
(assert (= temp33_75 #x0000000000000000))
(assert (= temp33_74 temp33_75))
(assert (= temp33_77 #x0000000000000000))
(assert (= temp33_76 temp33_77))
(assert (= temp33_79 #x0000000000000000))
(assert (= temp33_78 temp33_79))
(assert (= temp33_81 #x0000000000000000))
(assert (= temp33_80 temp33_81))
(assert (= var792081 var68299))
(assert (= var792082 var68300))
(assert (= var857606 var792081))
(assert (= var857607 var792082))
(assert (= var922711 var857606))
(assert (= var922712 var857607))
(assert (= temp33_82 #x0000000000000001))
(assert (= var922713 temp33_82))
(assert (= temp33_83 #x0000000000000001))
(assert (= var922723
   (ite (bvslt temp33_72 temp33_83) #x0000000000000001 #x0000000000000000)))
(assert (= temp33_84 #x0000000000000000))
(assert (= var922723 temp33_84))
(assert (= temp33_85 #x0000000000000001))
(assert (= var922731
   (ite (bvslt var922713 temp33_85) #x0000000000000001 #x0000000000000000)))
(assert (= temp33_86 #x0000000000000000))
(assert (= var922731 temp33_86))
(assert (= temp33_87 #xffffffffffffffff))
(assert (= var922736 (bvadd var922712 temp33_87)))
(assert (= var922737 (bvmul var922736 var922713)))
(assert (= temp33_88 #x0000000000000001))
(assert (= var922738 (bvadd var922737 temp33_88)))
(assert (= temp33_89 #xffffffffffffffff))
(assert (= var922739 (bvxor var922737 temp33_89)))
(assert (= var922751 (bvadd temp33_72 var922711)))
(assert (= var922752 (bvadd var922751 var922739)))
(assert (= var922753 (bvadd var922752 temp33_78)))
(assert (= temp33_90 #x0000000000000000))
(assert (= var922784
   (ite (bvslt temp33_74 temp33_90) #x0000000000000001 #x0000000000000000)))
(assert (= temp33_91 #x0000000000000000))
(assert (= var922784 temp33_91))
(assert (= var988689 var68301))
(assert (= var988690 var68302))
(assert (= var1054214 var988689))
(assert (= var1054215 var988690))
(assert (= var1119319 var1054214))
(assert (= var1119320 var1054215))
(assert (= temp33_92 #x0000000000000001))
(assert (= var1119321 temp33_92))
(assert (= temp33_93 #x0000000000000001))
(assert (= var1119331
   (ite (bvslt temp33_72 temp33_93) #x0000000000000001 #x0000000000000000)))
(assert (= temp33_94 #x0000000000000000))
(assert (= var1119331 temp33_94))
(assert (= temp33_95 #x0000000000000001))
(assert (= var1119339
   (ite (bvslt var1119321 temp33_95) #x0000000000000001 #x0000000000000000)))
(assert (= temp33_96 #x0000000000000000))
(assert (= var1119339 temp33_96))
(assert (= temp33_97 #xffffffffffffffff))
(assert (= var1119344 (bvadd var1119320 temp33_97)))
(assert (= var1119345 (bvmul var1119344 var1119321)))
(assert (= temp33_98 #x0000000000000001))
(assert (= var1119346 (bvadd var1119345 temp33_98)))
(assert (= temp33_99 #xffffffffffffffff))
(assert (= var1119347 (bvxor var1119345 temp33_99)))
(assert (= temp33_100 #x0000000000000000))
(assert (= var1119392
   (ite (bvslt temp33_76 temp33_100) #x0000000000000001 #x0000000000000000)))
(assert (= temp33_101 #x0000000000000000))
(assert (= var1119392 temp33_101))
(model-add temp33_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp33_2 () (_ BitVec 64) #x0000000000000001)
(model-add var68041 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))















