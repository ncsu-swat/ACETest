(declare-fun temp8_1 () (_ BitVec 64))
(declare-fun temp8_2 () (_ BitVec 64))
(declare-fun var68041 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp8_3 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var68076 () (_ BitVec 64))
(declare-fun temp8_4 () (_ BitVec 64))
(declare-fun temp8_5 () (_ BitVec 64))
(declare-fun ARGNAME_min_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var134499 () (_ BitVec 64))
(declare-fun var134495 () (_ BitVec 64))
(declare-fun var68102 () (_ BitVec 64))
(declare-fun temp8_6 () (_ BitVec 64))
(declare-fun temp8_7 () (_ BitVec 64))
(declare-fun ARGNAME_max_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var200035 () (_ BitVec 64))
(declare-fun var200031 () (_ BitVec 64))
(declare-fun var68130 () (_ BitVec 64))
(declare-fun temp8_8 () (_ BitVec 64))
(declare-fun temp8_9 () (_ BitVec 64))
(declare-fun ARGNAME_min_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var265571 () (_ BitVec 64))
(declare-fun var265567 () (_ BitVec 64))
(declare-fun var68156 () (_ BitVec 64))
(declare-fun temp8_10 () (_ BitVec 64))
(declare-fun temp8_11 () (_ BitVec 64))
(declare-fun ARGNAME_max_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var331107 () (_ BitVec 64))
(declare-fun var331103 () (_ BitVec 64))
(declare-fun var68183 () (_ BitVec 64))
(declare-fun temp8_12 () (_ BitVec 64))
(declare-fun temp8_13 () (_ BitVec 64))
(declare-fun var396672 () (_ BitVec 64))
(declare-fun temp8_14 () (_ BitVec 64))
(declare-fun var462208 () (_ BitVec 64))
(declare-fun temp8_15 () (_ BitVec 64))
(declare-fun var527744 () (_ BitVec 64))
(declare-fun temp8_16 () (_ BitVec 64))
(declare-fun var593280 () (_ BitVec 64))
(declare-fun temp8_17 () (_ BitVec 64))
(declare-fun var658845 () (_ BitVec 64))
(declare-fun var658821 () (_ BitVec 64))
(declare-fun var68263 () (_ BitVec 64))
(declare-fun var68267 () (_ BitVec 64))
(declare-fun temp8_18 () (_ BitVec 64))
(declare-fun var724381 () (_ BitVec 64))
(declare-fun var724357 () (_ BitVec 64))
(declare-fun var68268 () (_ BitVec 64))
(declare-fun var68269 () (_ BitVec 64))
(declare-fun temp8_19 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp8_20 () (_ BitVec 64))
(declare-fun temp8_21 () (_ BitVec 64))
(declare-fun temp8_22 () (_ BitVec 64))
(declare-fun temp8_23 () (_ BitVec 64))
(declare-fun temp8_24 () (_ BitVec 64))
(declare-fun temp8_25 () (_ BitVec 64))
(declare-fun temp8_26 () (_ BitVec 64))
(declare-fun temp8_27 () (_ BitVec 64))
(declare-fun temp8_28 () (_ BitVec 64))
(declare-fun temp8_29 () (_ BitVec 64))
(declare-fun temp8_30 () (_ BitVec 64))
(declare-fun temp8_31 () (_ BitVec 64))
(declare-fun temp8_32 () (_ BitVec 64))
(declare-fun var68270 () (_ BitVec 64))
(declare-fun temp8_33 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp8_34 () (_ BitVec 64))
(declare-fun temp8_35 () (_ BitVec 64))
(declare-fun temp8_36 () (_ BitVec 64))
(declare-fun temp8_37 () (_ BitVec 64))
(declare-fun temp8_38 () (_ BitVec 64))
(declare-fun temp8_39 () (_ BitVec 64))
(declare-fun temp8_40 () (_ BitVec 64))
(declare-fun temp8_41 () (_ BitVec 64))
(declare-fun temp8_42 () (_ BitVec 64))
(declare-fun temp8_43 () (_ BitVec 64))
(declare-fun temp8_44 () (_ BitVec 64))
(declare-fun temp8_45 () (_ BitVec 64))
(declare-fun temp8_46 () (_ BitVec 64))
(declare-fun var68273 () (_ BitVec 64))
(declare-fun var68274 () (_ BitVec 64))
(declare-fun temp8_47 () (_ BitVec 64))
(declare-fun temp8_48 () (_ BitVec 64))
(declare-fun temp8_49 () (_ BitVec 64))
(declare-fun var68298 () (_ BitVec 64))
(declare-fun temp8_50 () (_ BitVec 64))
(declare-fun temp8_51 () (_ BitVec 64))
(declare-fun var68299 () (_ BitVec 64))
(declare-fun temp8_52 () (_ BitVec 64))
(declare-fun temp8_53 () (_ BitVec 64))
(declare-fun var68300 () (_ BitVec 64))
(declare-fun temp8_54 () (_ BitVec 64))
(declare-fun temp8_55 () (_ BitVec 64))
(declare-fun var68301 () (_ BitVec 64))
(declare-fun temp8_56 () (_ BitVec 64))
(declare-fun temp8_57 () (_ BitVec 64))
(declare-fun var68302 () (_ BitVec 64))
(declare-fun temp8_58 () (_ BitVec 64))
(declare-fun temp8_59 () (_ BitVec 64))
(declare-fun var68303 () (_ BitVec 64))
(declare-fun temp8_60 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp8_61 () (_ BitVec 64))
(declare-fun temp8_62 () (_ BitVec 64))
(declare-fun temp8_63 () (_ BitVec 64))
(declare-fun temp8_64 () (_ BitVec 64))
(declare-fun temp8_65 () (_ BitVec 64))
(declare-fun temp8_66 () (_ BitVec 64))
(declare-fun temp8_67 () (_ BitVec 64))
(declare-fun temp8_68 () (_ BitVec 64))
(declare-fun temp8_69 () (_ BitVec 64))
(declare-fun temp8_70 () (_ BitVec 64))
(declare-fun temp8_71 () (_ BitVec 64))
(declare-fun temp8_72 () (_ BitVec 64))
(declare-fun temp8_74 () (_ BitVec 64))
(declare-fun temp8_73 () (_ BitVec 64))
(declare-fun temp8_76 () (_ BitVec 64))
(declare-fun temp8_75 () (_ BitVec 64))
(declare-fun temp8_78 () (_ BitVec 64))
(declare-fun temp8_77 () (_ BitVec 64))
(declare-fun temp8_80 () (_ BitVec 64))
(declare-fun temp8_79 () (_ BitVec 64))
(declare-fun temp8_82 () (_ BitVec 64))
(declare-fun temp8_81 () (_ BitVec 64))
(declare-fun var792081 () (_ BitVec 64))
(declare-fun var792082 () (_ BitVec 64))
(declare-fun var857606 () (_ BitVec 64))
(declare-fun var857607 () (_ BitVec 64))
(declare-fun var922711 () (_ BitVec 64))
(declare-fun var922712 () (_ BitVec 64))
(declare-fun temp8_83 () (_ BitVec 64))
(declare-fun var922713 () (_ BitVec 64))
(declare-fun temp8_84 () (_ BitVec 64))
(declare-fun var922723 () (_ BitVec 64))
(declare-fun temp8_85 () (_ BitVec 64))
(declare-fun temp8_86 () (_ BitVec 64))
(declare-fun var922731 () (_ BitVec 64))
(declare-fun temp8_87 () (_ BitVec 64))
(declare-fun temp8_88 () (_ BitVec 64))
(declare-fun var922736 () (_ BitVec 64))
(declare-fun var922737 () (_ BitVec 64))
(declare-fun temp8_89 () (_ BitVec 64))
(declare-fun var922738 () (_ BitVec 64))
(declare-fun temp8_90 () (_ BitVec 64))
(declare-fun var922739 () (_ BitVec 64))
(declare-fun var922741 () (_ BitVec 64))
(declare-fun var922742 () (_ BitVec 64))
(declare-fun var922743 () (_ BitVec 64))
(declare-fun temp8_92 () (_ BitVec 64))
(declare-fun temp8_91 () (_ BitVec 64))
(declare-fun temp8_94 () (_ BitVec 64))
(declare-fun temp8_93 () (_ BitVec 64))
(declare-fun var922783 () (_ BitVec 64))
(declare-fun temp8_95 () (_ BitVec 64))
(declare-fun var922784 () (_ BitVec 64))
(declare-fun temp8_96 () (_ BitVec 64))
(declare-fun var988689 () (_ BitVec 64))
(declare-fun var988690 () (_ BitVec 64))
(declare-fun var1054214 () (_ BitVec 64))
(declare-fun var1054215 () (_ BitVec 64))
(declare-fun var1119319 () (_ BitVec 64))
(declare-fun var1119320 () (_ BitVec 64))
(declare-fun temp8_97 () (_ BitVec 64))
(declare-fun var1119321 () (_ BitVec 64))
(declare-fun temp8_98 () (_ BitVec 64))
(declare-fun var1119331 () (_ BitVec 64))
(declare-fun temp8_99 () (_ BitVec 64))
(declare-fun temp8_100 () (_ BitVec 64))
(declare-fun var1119339 () (_ BitVec 64))
(declare-fun temp8_101 () (_ BitVec 64))
(declare-fun temp8_102 () (_ BitVec 64))
(declare-fun var1119344 () (_ BitVec 64))
(declare-fun var1119345 () (_ BitVec 64))
(declare-fun temp8_103 () (_ BitVec 64))
(declare-fun var1119346 () (_ BitVec 64))
(declare-fun temp8_104 () (_ BitVec 64))
(declare-fun var1119347 () (_ BitVec 64))
(declare-fun var1119349 () (_ BitVec 64))
(declare-fun var1119350 () (_ BitVec 64))
(declare-fun var1119351 () (_ BitVec 64))
(declare-fun temp8_106 () (_ BitVec 64))
(declare-fun temp8_105 () (_ BitVec 64))
(declare-fun temp8_108 () (_ BitVec 64))
(declare-fun temp8_107 () (_ BitVec 64))
(declare-fun var1119391 () (_ BitVec 64))
(declare-fun temp8_109 () (_ BitVec 64))
(declare-fun var1119392 () (_ BitVec 64))
(declare-fun temp8_110 () (_ BitVec 64))
(assert (= temp8_1 #x0000000000000004))
(assert (= var68041
   (ite (= ARGNAME_input_NAMEEND_DIM temp8_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8_2 #x0000000000000001))
(assert (= var68041 temp8_2))
(assert (= temp8_3 #x0000000000000004))
(assert (= var68076
   (ite (= ARGNAME_filter_NAMEEND_DIM temp8_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8_4 #x0000000000000001))
(assert (= var68076 temp8_4))
(assert (= temp8_5 #x0000000000000000))
(assert (= var134499
   (ite (= ARGNAME_min_input_NAMEEND_DIM temp8_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var134495 var134499))
(assert (= var68102 var134495))
(assert (= temp8_6 #x0000000000000001))
(assert (= var68102 temp8_6))
(assert (= temp8_7 #x0000000000000000))
(assert (= var200035
   (ite (= ARGNAME_max_input_NAMEEND_DIM temp8_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var200031 var200035))
(assert (= var68130 var200031))
(assert (= temp8_8 #x0000000000000001))
(assert (= var68130 temp8_8))
(assert (= temp8_9 #x0000000000000000))
(assert (= var265571
   (ite (= ARGNAME_min_filter_NAMEEND_DIM temp8_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var265567 var265571))
(assert (= var68156 var265567))
(assert (= temp8_10 #x0000000000000001))
(assert (= var68156 temp8_10))
(assert (= temp8_11 #x0000000000000000))
(assert (= var331107
   (ite (= ARGNAME_max_filter_NAMEEND_DIM temp8_11)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var331103 var331107))
(assert (= var68183 var331103))
(assert (= temp8_12 #x0000000000000001))
(assert (= var68183 temp8_12))
(assert (= temp8_13 #x0000000000000000))
(assert (= var396672 temp8_13))
(assert (= temp8_14 #x0000000000000000))
(assert (= var462208 temp8_14))
(assert (= temp8_15 #x0000000000000000))
(assert (= var527744 temp8_15))
(assert (= temp8_16 #x0000000000000000))
(assert (= var593280 temp8_16))
(assert (= temp8_17 #x0000000000000000))
(assert (= var658845 temp8_17))
(assert (= var658821 var658845))
(assert (= var68263 var658821))
(assert (= var68267 var68263))
(assert (= temp8_18 #x0000000000000000))
(assert (= var724381 temp8_18))
(assert (= var724357 var724381))
(assert (= var68268 var724357))
(assert (= var68269 var68268))
(assert (= temp8_19 #x0000000000000000))
(assert (= temp8_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_19)))
(assert (= temp8_21 #x0000000000000001))
(assert (= temp8_22 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_21)))
(assert (= temp8_23 #x0000000000000002))
(assert (= temp8_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_23)))
(assert (= temp8_25 #x0000000000000003))
(assert (= temp8_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_25)))
(assert (= temp8_27 #x0000000000000004))
(assert (= temp8_28 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_27)))
(assert (= temp8_29 #x0000000000000005))
(assert (= temp8_30 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_29)))
(assert (= temp8_31 #x0000000000000003))
(assert (= temp8_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_31)))
(assert (= var68270 temp8_32))
(assert (= temp8_33 #x0000000000000000))
(assert (= temp8_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp8_33)))
(assert (= temp8_35 #x0000000000000001))
(assert (= temp8_36 (select ARGNAME_filter_NAMEEND_DIMSIZE temp8_35)))
(assert (= temp8_37 #x0000000000000002))
(assert (= temp8_38 (select ARGNAME_filter_NAMEEND_DIMSIZE temp8_37)))
(assert (= temp8_39 #x0000000000000003))
(assert (= temp8_40 (select ARGNAME_filter_NAMEEND_DIMSIZE temp8_39)))
(assert (= temp8_41 #x0000000000000004))
(assert (= temp8_42 (select ARGNAME_filter_NAMEEND_DIMSIZE temp8_41)))
(assert (= temp8_43 #x0000000000000005))
(assert (= temp8_44 (select ARGNAME_filter_NAMEEND_DIMSIZE temp8_43)))
(assert (= temp8_45 #x0000000000000002))
(assert (= temp8_46 (select ARGNAME_filter_NAMEEND_DIMSIZE temp8_45)))
(assert (= var68273 temp8_46))
(assert (= var68274 (ite (= var68270 var68273) #x0000000000000001 #x0000000000000000)))
(assert (= temp8_47 #x0000000000000001))
(assert (= var68274 temp8_47))
(assert (= temp8_48 #x0000000000000003))
(assert (= temp8_49 (select ARGNAME_filter_NAMEEND_DIMSIZE temp8_48)))
(assert (= var68298 temp8_49))
(assert (= temp8_50 #x0000000000000001))
(assert (= temp8_51 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_50)))
(assert (= var68299 temp8_51))
(assert (= temp8_52 #x0000000000000000))
(assert (= temp8_53 (select ARGNAME_filter_NAMEEND_DIMSIZE temp8_52)))
(assert (= var68300 temp8_53))
(assert (= temp8_54 #x0000000000000002))
(assert (= temp8_55 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_54)))
(assert (= var68301 temp8_55))
(assert (= temp8_56 #x0000000000000001))
(assert (= temp8_57 (select ARGNAME_filter_NAMEEND_DIMSIZE temp8_56)))
(assert (= var68302 temp8_57))
(assert (= temp8_58 #x0000000000000000))
(assert (= temp8_59 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_58)))
(assert (= var68303 temp8_59))
(assert (= temp8_60 #x0000000000000000))
(assert (= temp8_61 (select ARGNAME_strides_NAMEEND_VAL temp8_60)))
(assert (= temp8_62 #x0000000000000001))
(assert (= temp8_63 (select ARGNAME_strides_NAMEEND_VAL temp8_62)))
(assert (= temp8_64 #x0000000000000002))
(assert (= temp8_65 (select ARGNAME_strides_NAMEEND_VAL temp8_64)))
(assert (= temp8_66 #x0000000000000003))
(assert (= temp8_67 (select ARGNAME_strides_NAMEEND_VAL temp8_66)))
(assert (= temp8_68 #x0000000000000004))
(assert (= temp8_69 (select ARGNAME_strides_NAMEEND_VAL temp8_68)))
(assert (= temp8_70 #x0000000000000005))
(assert (= temp8_71 (select ARGNAME_strides_NAMEEND_VAL temp8_70)))
(assert (= temp8_72 #x0000000000000001))
(assert (= temp8_74 (select ARGNAME_strides_NAMEEND_VAL temp8_72)))
(assert (= temp8_73 temp8_74))
(assert (= temp8_76 #x0000000000000000))
(assert (= temp8_75 temp8_76))
(assert (= temp8_78 #x0000000000000000))
(assert (= temp8_77 temp8_78))
(assert (= temp8_80 #x0000000000000000))
(assert (= temp8_79 temp8_80))
(assert (= temp8_82 #x0000000000000000))
(assert (= temp8_81 temp8_82))
(assert (= var792081 var68299))
(assert (= var792082 var68300))
(assert (= var857606 var792081))
(assert (= var857607 var792082))
(assert (= var922711 var857606))
(assert (= var922712 var857607))
(assert (= temp8_83 #x0000000000000001))
(assert (= var922713 temp8_83))
(assert (= temp8_84 #x0000000000000001))
(assert (= var922723
   (ite (bvslt temp8_73 temp8_84) #x0000000000000001 #x0000000000000000)))
(assert (= temp8_85 #x0000000000000000))
(assert (= var922723 temp8_85))
(assert (= temp8_86 #x0000000000000001))
(assert (= var922731
   (ite (bvslt var922713 temp8_86) #x0000000000000001 #x0000000000000000)))
(assert (= temp8_87 #x0000000000000000))
(assert (= var922731 temp8_87))
(assert (= temp8_88 #xffffffffffffffff))
(assert (= var922736 (bvadd var922712 temp8_88)))
(assert (= var922737 (bvmul var922736 var922713)))
(assert (= temp8_89 #x0000000000000001))
(assert (= var922738 (bvadd var922737 temp8_89)))
(assert (= temp8_90 #xffffffffffffffff))
(assert (= var922739 (bvxor var922737 temp8_90)))
(assert (= var922741 (bvadd temp8_73 var922711)))
(assert (= var922742 (bvadd var922741 var922739)))
(assert (= var922743 (bvsdiv var922742 temp8_73)))
(assert (= temp8_92 #x0000000000000000))
(assert (= temp8_91 temp8_92))
(assert (= temp8_94 #x0000000000000000))
(assert (= temp8_93 temp8_94))
(assert (= var922783 var922743))
(assert (= temp8_95 #x0000000000000000))
(assert (= var922784
   (ite (bvslt var922783 temp8_95) #x0000000000000001 #x0000000000000000)))
(assert (= temp8_96 #x0000000000000000))
(assert (= var922784 temp8_96))
(assert (= var988689 var68301))
(assert (= var988690 var68302))
(assert (= var1054214 var988689))
(assert (= var1054215 var988690))
(assert (= var1119319 var1054214))
(assert (= var1119320 var1054215))
(assert (= temp8_97 #x0000000000000001))
(assert (= var1119321 temp8_97))
(assert (= temp8_98 #x0000000000000001))
(assert (= var1119331
   (ite (bvslt temp8_73 temp8_98) #x0000000000000001 #x0000000000000000)))
(assert (= temp8_99 #x0000000000000000))
(assert (= var1119331 temp8_99))
(assert (= temp8_100 #x0000000000000001))
(assert (= var1119339
   (ite (bvslt var1119321 temp8_100) #x0000000000000001 #x0000000000000000)))
(assert (= temp8_101 #x0000000000000000))
(assert (= var1119339 temp8_101))
(assert (= temp8_102 #xffffffffffffffff))
(assert (= var1119344 (bvadd var1119320 temp8_102)))
(assert (= var1119345 (bvmul var1119344 var1119321)))
(assert (= temp8_103 #x0000000000000001))
(assert (= var1119346 (bvadd var1119345 temp8_103)))
(assert (= temp8_104 #xffffffffffffffff))
(assert (= var1119347 (bvxor var1119345 temp8_104)))
(assert (= var1119349 (bvadd temp8_73 var1119319)))
(assert (= var1119350 (bvadd var1119349 var1119347)))
(assert (= var1119351 (bvsdiv var1119350 temp8_73)))
(assert (= temp8_106 #x0000000000000000))
(assert (= temp8_105 temp8_106))
(assert (= temp8_108 #x0000000000000000))
(assert (= temp8_107 temp8_108))
(assert (= var1119391 var1119351))
(assert (= temp8_109 #x0000000000000000))
(assert (= var1119392
   (ite (bvslt var1119391 temp8_109) #x0000000000000001 #x0000000000000000)))
(assert (= temp8_110 #x0000000000000000))
(assert (= var1119392 temp8_110))
(model-add temp8_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp8_2 () (_ BitVec 64) #x0000000000000001)
(model-add var68041 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))















