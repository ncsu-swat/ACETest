(declare-fun temp28_1 () (_ BitVec 64))
(declare-fun temp28_2 () (_ BitVec 64))
(declare-fun var68041 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp28_3 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var68076 () (_ BitVec 64))
(declare-fun temp28_4 () (_ BitVec 64))
(declare-fun temp28_5 () (_ BitVec 64))
(declare-fun ARGNAME_min_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var134499 () (_ BitVec 64))
(declare-fun var134495 () (_ BitVec 64))
(declare-fun var68102 () (_ BitVec 64))
(declare-fun temp28_6 () (_ BitVec 64))
(declare-fun temp28_7 () (_ BitVec 64))
(declare-fun ARGNAME_max_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var200035 () (_ BitVec 64))
(declare-fun var200031 () (_ BitVec 64))
(declare-fun var68130 () (_ BitVec 64))
(declare-fun temp28_8 () (_ BitVec 64))
(declare-fun temp28_9 () (_ BitVec 64))
(declare-fun ARGNAME_min_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var265571 () (_ BitVec 64))
(declare-fun var265567 () (_ BitVec 64))
(declare-fun var68156 () (_ BitVec 64))
(declare-fun temp28_10 () (_ BitVec 64))
(declare-fun temp28_11 () (_ BitVec 64))
(declare-fun ARGNAME_max_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var331107 () (_ BitVec 64))
(declare-fun var331103 () (_ BitVec 64))
(declare-fun var68183 () (_ BitVec 64))
(declare-fun temp28_12 () (_ BitVec 64))
(declare-fun temp28_13 () (_ BitVec 64))
(declare-fun var396672 () (_ BitVec 64))
(declare-fun temp28_14 () (_ BitVec 64))
(declare-fun var462208 () (_ BitVec 64))
(declare-fun temp28_15 () (_ BitVec 64))
(declare-fun var527744 () (_ BitVec 64))
(declare-fun temp28_16 () (_ BitVec 64))
(declare-fun var593280 () (_ BitVec 64))
(declare-fun temp28_17 () (_ BitVec 64))
(declare-fun var658845 () (_ BitVec 64))
(declare-fun var658821 () (_ BitVec 64))
(declare-fun var68263 () (_ BitVec 64))
(declare-fun var68267 () (_ BitVec 64))
(declare-fun temp28_18 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp28_19 () (_ BitVec 64))
(declare-fun temp28_20 () (_ BitVec 64))
(declare-fun temp28_21 () (_ BitVec 64))
(declare-fun temp28_22 () (_ BitVec 64))
(declare-fun temp28_23 () (_ BitVec 64))
(declare-fun temp28_24 () (_ BitVec 64))
(declare-fun temp28_25 () (_ BitVec 64))
(declare-fun temp28_26 () (_ BitVec 64))
(declare-fun temp28_27 () (_ BitVec 64))
(declare-fun temp28_28 () (_ BitVec 64))
(declare-fun temp28_29 () (_ BitVec 64))
(declare-fun temp28_30 () (_ BitVec 64))
(declare-fun temp28_31 () (_ BitVec 64))
(declare-fun var68270 () (_ BitVec 64))
(declare-fun temp28_32 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp28_33 () (_ BitVec 64))
(declare-fun temp28_34 () (_ BitVec 64))
(declare-fun temp28_35 () (_ BitVec 64))
(declare-fun temp28_36 () (_ BitVec 64))
(declare-fun temp28_37 () (_ BitVec 64))
(declare-fun temp28_38 () (_ BitVec 64))
(declare-fun temp28_39 () (_ BitVec 64))
(declare-fun temp28_40 () (_ BitVec 64))
(declare-fun temp28_41 () (_ BitVec 64))
(declare-fun temp28_42 () (_ BitVec 64))
(declare-fun temp28_43 () (_ BitVec 64))
(declare-fun temp28_44 () (_ BitVec 64))
(declare-fun temp28_45 () (_ BitVec 64))
(declare-fun var68273 () (_ BitVec 64))
(declare-fun var68274 () (_ BitVec 64))
(declare-fun temp28_46 () (_ BitVec 64))
(declare-fun temp28_47 () (_ BitVec 64))
(declare-fun temp28_48 () (_ BitVec 64))
(declare-fun var68298 () (_ BitVec 64))
(declare-fun temp28_49 () (_ BitVec 64))
(declare-fun temp28_50 () (_ BitVec 64))
(declare-fun var68299 () (_ BitVec 64))
(declare-fun temp28_51 () (_ BitVec 64))
(declare-fun temp28_52 () (_ BitVec 64))
(declare-fun var68300 () (_ BitVec 64))
(declare-fun temp28_53 () (_ BitVec 64))
(declare-fun temp28_54 () (_ BitVec 64))
(declare-fun var68301 () (_ BitVec 64))
(declare-fun temp28_55 () (_ BitVec 64))
(declare-fun temp28_56 () (_ BitVec 64))
(declare-fun var68302 () (_ BitVec 64))
(declare-fun temp28_57 () (_ BitVec 64))
(declare-fun temp28_58 () (_ BitVec 64))
(declare-fun var68303 () (_ BitVec 64))
(declare-fun temp28_59 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp28_60 () (_ BitVec 64))
(declare-fun temp28_61 () (_ BitVec 64))
(declare-fun temp28_62 () (_ BitVec 64))
(declare-fun temp28_63 () (_ BitVec 64))
(declare-fun temp28_64 () (_ BitVec 64))
(declare-fun temp28_65 () (_ BitVec 64))
(declare-fun temp28_66 () (_ BitVec 64))
(declare-fun temp28_67 () (_ BitVec 64))
(declare-fun temp28_68 () (_ BitVec 64))
(declare-fun temp28_69 () (_ BitVec 64))
(declare-fun temp28_70 () (_ BitVec 64))
(declare-fun temp28_71 () (_ BitVec 64))
(declare-fun temp28_73 () (_ BitVec 64))
(declare-fun temp28_72 () (_ BitVec 64))
(declare-fun temp28_75 () (_ BitVec 64))
(declare-fun temp28_74 () (_ BitVec 64))
(declare-fun temp28_77 () (_ BitVec 64))
(declare-fun temp28_76 () (_ BitVec 64))
(declare-fun temp28_79 () (_ BitVec 64))
(declare-fun temp28_78 () (_ BitVec 64))
(declare-fun temp28_81 () (_ BitVec 64))
(declare-fun temp28_80 () (_ BitVec 64))
(declare-fun var792081 () (_ BitVec 64))
(declare-fun var792082 () (_ BitVec 64))
(declare-fun var857606 () (_ BitVec 64))
(declare-fun var857607 () (_ BitVec 64))
(declare-fun var922711 () (_ BitVec 64))
(declare-fun var922712 () (_ BitVec 64))
(declare-fun temp28_82 () (_ BitVec 64))
(declare-fun var922713 () (_ BitVec 64))
(declare-fun temp28_83 () (_ BitVec 64))
(declare-fun var922723 () (_ BitVec 64))
(declare-fun temp28_84 () (_ BitVec 64))
(declare-fun temp28_85 () (_ BitVec 64))
(declare-fun var922731 () (_ BitVec 64))
(declare-fun temp28_86 () (_ BitVec 64))
(declare-fun temp28_87 () (_ BitVec 64))
(declare-fun var922736 () (_ BitVec 64))
(declare-fun var922737 () (_ BitVec 64))
(declare-fun temp28_88 () (_ BitVec 64))
(declare-fun var922738 () (_ BitVec 64))
(declare-fun temp28_89 () (_ BitVec 64))
(declare-fun var922739 () (_ BitVec 64))
(declare-fun var922741 () (_ BitVec 64))
(declare-fun var922742 () (_ BitVec 64))
(declare-fun var922743 () (_ BitVec 64))
(declare-fun temp28_91 () (_ BitVec 64))
(declare-fun temp28_90 () (_ BitVec 64))
(declare-fun temp28_93 () (_ BitVec 64))
(declare-fun temp28_92 () (_ BitVec 64))
(declare-fun var922783 () (_ BitVec 64))
(declare-fun temp28_94 () (_ BitVec 64))
(declare-fun var922784 () (_ BitVec 64))
(declare-fun temp28_95 () (_ BitVec 64))
(declare-fun var988689 () (_ BitVec 64))
(declare-fun var988690 () (_ BitVec 64))
(declare-fun var1054214 () (_ BitVec 64))
(declare-fun var1054215 () (_ BitVec 64))
(declare-fun var1119319 () (_ BitVec 64))
(declare-fun var1119320 () (_ BitVec 64))
(declare-fun temp28_96 () (_ BitVec 64))
(declare-fun var1119321 () (_ BitVec 64))
(declare-fun temp28_97 () (_ BitVec 64))
(declare-fun var1119331 () (_ BitVec 64))
(declare-fun temp28_98 () (_ BitVec 64))
(declare-fun temp28_99 () (_ BitVec 64))
(declare-fun var1119339 () (_ BitVec 64))
(declare-fun temp28_100 () (_ BitVec 64))
(declare-fun temp28_101 () (_ BitVec 64))
(declare-fun var1119344 () (_ BitVec 64))
(declare-fun var1119345 () (_ BitVec 64))
(declare-fun temp28_102 () (_ BitVec 64))
(declare-fun var1119346 () (_ BitVec 64))
(declare-fun temp28_103 () (_ BitVec 64))
(declare-fun var1119347 () (_ BitVec 64))
(declare-fun temp28_104 () (_ BitVec 64))
(declare-fun var1119392 () (_ BitVec 64))
(declare-fun temp28_105 () (_ BitVec 64))
(assert (= temp28_1 #x0000000000000004))
(assert (= var68041
   (ite (= ARGNAME_input_NAMEEND_DIM temp28_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp28_2 #x0000000000000001))
(assert (= var68041 temp28_2))
(assert (= temp28_3 #x0000000000000004))
(assert (= var68076
   (ite (= ARGNAME_filter_NAMEEND_DIM temp28_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp28_4 #x0000000000000001))
(assert (= var68076 temp28_4))
(assert (= temp28_5 #x0000000000000000))
(assert (= var134499
   (ite (= ARGNAME_min_input_NAMEEND_DIM temp28_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var134495 var134499))
(assert (= var68102 var134495))
(assert (= temp28_6 #x0000000000000001))
(assert (= var68102 temp28_6))
(assert (= temp28_7 #x0000000000000000))
(assert (= var200035
   (ite (= ARGNAME_max_input_NAMEEND_DIM temp28_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var200031 var200035))
(assert (= var68130 var200031))
(assert (= temp28_8 #x0000000000000001))
(assert (= var68130 temp28_8))
(assert (= temp28_9 #x0000000000000000))
(assert (= var265571
   (ite (= ARGNAME_min_filter_NAMEEND_DIM temp28_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var265567 var265571))
(assert (= var68156 var265567))
(assert (= temp28_10 #x0000000000000001))
(assert (= var68156 temp28_10))
(assert (= temp28_11 #x0000000000000000))
(assert (= var331107
   (ite (= ARGNAME_max_filter_NAMEEND_DIM temp28_11)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var331103 var331107))
(assert (= var68183 var331103))
(assert (= temp28_12 #x0000000000000001))
(assert (= var68183 temp28_12))
(assert (= temp28_13 #x0000000000000000))
(assert (= var396672 temp28_13))
(assert (= temp28_14 #x0000000000000000))
(assert (= var462208 temp28_14))
(assert (= temp28_15 #x0000000000000000))
(assert (= var527744 temp28_15))
(assert (= temp28_16 #x0000000000000000))
(assert (= var593280 temp28_16))
(assert (= temp28_17 #x0000000000000000))
(assert (= var658845 temp28_17))
(assert (= var658821 var658845))
(assert (= var68263 var658821))
(assert (= var68267 var68263))
(assert (= temp28_18 #x0000000000000000))
(assert (= temp28_19 (select ARGNAME_input_NAMEEND_DIMSIZE temp28_18)))
(assert (= temp28_20 #x0000000000000001))
(assert (= temp28_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp28_20)))
(assert (= temp28_22 #x0000000000000002))
(assert (= temp28_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp28_22)))
(assert (= temp28_24 #x0000000000000003))
(assert (= temp28_25 (select ARGNAME_input_NAMEEND_DIMSIZE temp28_24)))
(assert (= temp28_26 #x0000000000000004))
(assert (= temp28_27 (select ARGNAME_input_NAMEEND_DIMSIZE temp28_26)))
(assert (= temp28_28 #x0000000000000005))
(assert (= temp28_29 (select ARGNAME_input_NAMEEND_DIMSIZE temp28_28)))
(assert (= temp28_30 #x0000000000000003))
(assert (= temp28_31 (select ARGNAME_input_NAMEEND_DIMSIZE temp28_30)))
(assert (= var68270 temp28_31))
(assert (= temp28_32 #x0000000000000000))
(assert (= temp28_33 (select ARGNAME_filter_NAMEEND_DIMSIZE temp28_32)))
(assert (= temp28_34 #x0000000000000001))
(assert (= temp28_35 (select ARGNAME_filter_NAMEEND_DIMSIZE temp28_34)))
(assert (= temp28_36 #x0000000000000002))
(assert (= temp28_37 (select ARGNAME_filter_NAMEEND_DIMSIZE temp28_36)))
(assert (= temp28_38 #x0000000000000003))
(assert (= temp28_39 (select ARGNAME_filter_NAMEEND_DIMSIZE temp28_38)))
(assert (= temp28_40 #x0000000000000004))
(assert (= temp28_41 (select ARGNAME_filter_NAMEEND_DIMSIZE temp28_40)))
(assert (= temp28_42 #x0000000000000005))
(assert (= temp28_43 (select ARGNAME_filter_NAMEEND_DIMSIZE temp28_42)))
(assert (= temp28_44 #x0000000000000002))
(assert (= temp28_45 (select ARGNAME_filter_NAMEEND_DIMSIZE temp28_44)))
(assert (= var68273 temp28_45))
(assert (= var68274 (ite (= var68270 var68273) #x0000000000000001 #x0000000000000000)))
(assert (= temp28_46 #x0000000000000001))
(assert (= var68274 temp28_46))
(assert (= temp28_47 #x0000000000000003))
(assert (= temp28_48 (select ARGNAME_filter_NAMEEND_DIMSIZE temp28_47)))
(assert (= var68298 temp28_48))
(assert (= temp28_49 #x0000000000000001))
(assert (= temp28_50 (select ARGNAME_input_NAMEEND_DIMSIZE temp28_49)))
(assert (= var68299 temp28_50))
(assert (= temp28_51 #x0000000000000000))
(assert (= temp28_52 (select ARGNAME_filter_NAMEEND_DIMSIZE temp28_51)))
(assert (= var68300 temp28_52))
(assert (= temp28_53 #x0000000000000002))
(assert (= temp28_54 (select ARGNAME_input_NAMEEND_DIMSIZE temp28_53)))
(assert (= var68301 temp28_54))
(assert (= temp28_55 #x0000000000000001))
(assert (= temp28_56 (select ARGNAME_filter_NAMEEND_DIMSIZE temp28_55)))
(assert (= var68302 temp28_56))
(assert (= temp28_57 #x0000000000000000))
(assert (= temp28_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp28_57)))
(assert (= var68303 temp28_58))
(assert (= temp28_59 #x0000000000000000))
(assert (= temp28_60 (select ARGNAME_strides_NAMEEND_VAL temp28_59)))
(assert (= temp28_61 #x0000000000000001))
(assert (= temp28_62 (select ARGNAME_strides_NAMEEND_VAL temp28_61)))
(assert (= temp28_63 #x0000000000000002))
(assert (= temp28_64 (select ARGNAME_strides_NAMEEND_VAL temp28_63)))
(assert (= temp28_65 #x0000000000000003))
(assert (= temp28_66 (select ARGNAME_strides_NAMEEND_VAL temp28_65)))
(assert (= temp28_67 #x0000000000000004))
(assert (= temp28_68 (select ARGNAME_strides_NAMEEND_VAL temp28_67)))
(assert (= temp28_69 #x0000000000000005))
(assert (= temp28_70 (select ARGNAME_strides_NAMEEND_VAL temp28_69)))
(assert (= temp28_71 #x0000000000000001))
(assert (= temp28_73 (select ARGNAME_strides_NAMEEND_VAL temp28_71)))
(assert (= temp28_72 temp28_73))
(assert (= temp28_75 #x0000000000000000))
(assert (= temp28_74 temp28_75))
(assert (= temp28_77 #x0000000000000000))
(assert (= temp28_76 temp28_77))
(assert (= temp28_79 #x0000000000000000))
(assert (= temp28_78 temp28_79))
(assert (= temp28_81 #x0000000000000000))
(assert (= temp28_80 temp28_81))
(assert (= var792081 var68299))
(assert (= var792082 var68300))
(assert (= var857606 var792081))
(assert (= var857607 var792082))
(assert (= var922711 var857606))
(assert (= var922712 var857607))
(assert (= temp28_82 #x0000000000000001))
(assert (= var922713 temp28_82))
(assert (= temp28_83 #x0000000000000001))
(assert (= var922723
   (ite (bvslt temp28_72 temp28_83) #x0000000000000001 #x0000000000000000)))
(assert (= temp28_84 #x0000000000000000))
(assert (= var922723 temp28_84))
(assert (= temp28_85 #x0000000000000001))
(assert (= var922731
   (ite (bvslt var922713 temp28_85) #x0000000000000001 #x0000000000000000)))
(assert (= temp28_86 #x0000000000000000))
(assert (= var922731 temp28_86))
(assert (= temp28_87 #xffffffffffffffff))
(assert (= var922736 (bvadd var922712 temp28_87)))
(assert (= var922737 (bvmul var922736 var922713)))
(assert (= temp28_88 #x0000000000000001))
(assert (= var922738 (bvadd var922737 temp28_88)))
(assert (= temp28_89 #xffffffffffffffff))
(assert (= var922739 (bvxor var922737 temp28_89)))
(assert (= var922741 (bvadd temp28_72 var922711)))
(assert (= var922742 (bvadd var922741 var922739)))
(assert (= var922743 (bvsdiv var922742 temp28_72)))
(assert (= temp28_91 #x0000000000000000))
(assert (= temp28_90 temp28_91))
(assert (= temp28_93 #x0000000000000000))
(assert (= temp28_92 temp28_93))
(assert (= var922783 var922743))
(assert (= temp28_94 #x0000000000000000))
(assert (= var922784
   (ite (bvslt var922783 temp28_94) #x0000000000000001 #x0000000000000000)))
(assert (= temp28_95 #x0000000000000000))
(assert (= var922784 temp28_95))
(assert (= var988689 var68301))
(assert (= var988690 var68302))
(assert (= var1054214 var988689))
(assert (= var1054215 var988690))
(assert (= var1119319 var1054214))
(assert (= var1119320 var1054215))
(assert (= temp28_96 #x0000000000000001))
(assert (= var1119321 temp28_96))
(assert (= temp28_97 #x0000000000000001))
(assert (= var1119331
   (ite (bvslt temp28_72 temp28_97) #x0000000000000001 #x0000000000000000)))
(assert (= temp28_98 #x0000000000000000))
(assert (= var1119331 temp28_98))
(assert (= temp28_99 #x0000000000000001))
(assert (= var1119339
   (ite (bvslt var1119321 temp28_99) #x0000000000000001 #x0000000000000000)))
(assert (= temp28_100 #x0000000000000000))
(assert (= var1119339 temp28_100))
(assert (= temp28_101 #xffffffffffffffff))
(assert (= var1119344 (bvadd var1119320 temp28_101)))
(assert (= var1119345 (bvmul var1119344 var1119321)))
(assert (= temp28_102 #x0000000000000001))
(assert (= var1119346 (bvadd var1119345 temp28_102)))
(assert (= temp28_103 #xffffffffffffffff))
(assert (= var1119347 (bvxor var1119345 temp28_103)))
(assert (= temp28_104 #x0000000000000000))
(assert (= var1119392
   (ite (bvslt temp28_76 temp28_104) #x0000000000000001 #x0000000000000000)))
(assert (= temp28_105 #x0000000000000000))
(assert (= var1119392 temp28_105))
(model-add temp28_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp28_2 () (_ BitVec 64) #x0000000000000001)
(model-add var68041 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))















