(declare-fun temp6_1 () (_ BitVec 64))
(declare-fun temp6_2 () (_ BitVec 64))
(declare-fun var68041 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp6_3 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var68076 () (_ BitVec 64))
(declare-fun temp6_4 () (_ BitVec 64))
(declare-fun temp6_5 () (_ BitVec 64))
(declare-fun ARGNAME_min_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var134499 () (_ BitVec 64))
(declare-fun var134495 () (_ BitVec 64))
(declare-fun var68102 () (_ BitVec 64))
(declare-fun temp6_6 () (_ BitVec 64))
(declare-fun temp6_7 () (_ BitVec 64))
(declare-fun ARGNAME_max_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var200035 () (_ BitVec 64))
(declare-fun var200031 () (_ BitVec 64))
(declare-fun var68130 () (_ BitVec 64))
(declare-fun temp6_8 () (_ BitVec 64))
(declare-fun temp6_9 () (_ BitVec 64))
(declare-fun ARGNAME_min_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var265571 () (_ BitVec 64))
(declare-fun var265567 () (_ BitVec 64))
(declare-fun var68156 () (_ BitVec 64))
(declare-fun temp6_10 () (_ BitVec 64))
(declare-fun temp6_11 () (_ BitVec 64))
(declare-fun ARGNAME_max_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var331107 () (_ BitVec 64))
(declare-fun var331103 () (_ BitVec 64))
(declare-fun var68183 () (_ BitVec 64))
(declare-fun temp6_12 () (_ BitVec 64))
(declare-fun temp6_13 () (_ BitVec 64))
(declare-fun var396672 () (_ BitVec 64))
(declare-fun temp6_14 () (_ BitVec 64))
(declare-fun var462208 () (_ BitVec 64))
(declare-fun temp6_15 () (_ BitVec 64))
(declare-fun var527744 () (_ BitVec 64))
(declare-fun temp6_16 () (_ BitVec 64))
(declare-fun var593280 () (_ BitVec 64))
(declare-fun temp6_17 () (_ BitVec 64))
(declare-fun var658845 () (_ BitVec 64))
(declare-fun var658821 () (_ BitVec 64))
(declare-fun var68263 () (_ BitVec 64))
(declare-fun var68267 () (_ BitVec 64))
(declare-fun temp6_18 () (_ BitVec 64))
(declare-fun var724381 () (_ BitVec 64))
(declare-fun var724357 () (_ BitVec 64))
(declare-fun var68268 () (_ BitVec 64))
(declare-fun var68269 () (_ BitVec 64))
(declare-fun temp6_19 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp6_20 () (_ BitVec 64))
(declare-fun temp6_21 () (_ BitVec 64))
(declare-fun temp6_22 () (_ BitVec 64))
(declare-fun temp6_23 () (_ BitVec 64))
(declare-fun temp6_24 () (_ BitVec 64))
(declare-fun temp6_25 () (_ BitVec 64))
(declare-fun temp6_26 () (_ BitVec 64))
(declare-fun temp6_27 () (_ BitVec 64))
(declare-fun temp6_28 () (_ BitVec 64))
(declare-fun temp6_29 () (_ BitVec 64))
(declare-fun temp6_30 () (_ BitVec 64))
(declare-fun temp6_31 () (_ BitVec 64))
(declare-fun temp6_32 () (_ BitVec 64))
(declare-fun var68270 () (_ BitVec 64))
(declare-fun temp6_33 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp6_34 () (_ BitVec 64))
(declare-fun temp6_35 () (_ BitVec 64))
(declare-fun temp6_36 () (_ BitVec 64))
(declare-fun temp6_37 () (_ BitVec 64))
(declare-fun temp6_38 () (_ BitVec 64))
(declare-fun temp6_39 () (_ BitVec 64))
(declare-fun temp6_40 () (_ BitVec 64))
(declare-fun temp6_41 () (_ BitVec 64))
(declare-fun temp6_42 () (_ BitVec 64))
(declare-fun temp6_43 () (_ BitVec 64))
(declare-fun temp6_44 () (_ BitVec 64))
(declare-fun temp6_45 () (_ BitVec 64))
(declare-fun temp6_46 () (_ BitVec 64))
(declare-fun var68273 () (_ BitVec 64))
(declare-fun var68274 () (_ BitVec 64))
(declare-fun temp6_47 () (_ BitVec 64))
(declare-fun temp6_48 () (_ BitVec 64))
(declare-fun temp6_49 () (_ BitVec 64))
(declare-fun var68298 () (_ BitVec 64))
(declare-fun temp6_50 () (_ BitVec 64))
(declare-fun temp6_51 () (_ BitVec 64))
(declare-fun var68299 () (_ BitVec 64))
(declare-fun temp6_52 () (_ BitVec 64))
(declare-fun temp6_53 () (_ BitVec 64))
(declare-fun var68300 () (_ BitVec 64))
(declare-fun temp6_54 () (_ BitVec 64))
(declare-fun temp6_55 () (_ BitVec 64))
(declare-fun var68301 () (_ BitVec 64))
(declare-fun temp6_56 () (_ BitVec 64))
(declare-fun temp6_57 () (_ BitVec 64))
(declare-fun var68302 () (_ BitVec 64))
(declare-fun temp6_58 () (_ BitVec 64))
(declare-fun temp6_59 () (_ BitVec 64))
(declare-fun var68303 () (_ BitVec 64))
(declare-fun temp6_60 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp6_61 () (_ BitVec 64))
(declare-fun temp6_62 () (_ BitVec 64))
(declare-fun temp6_63 () (_ BitVec 64))
(declare-fun temp6_64 () (_ BitVec 64))
(declare-fun temp6_65 () (_ BitVec 64))
(declare-fun temp6_66 () (_ BitVec 64))
(declare-fun temp6_67 () (_ BitVec 64))
(declare-fun temp6_68 () (_ BitVec 64))
(declare-fun temp6_69 () (_ BitVec 64))
(declare-fun temp6_70 () (_ BitVec 64))
(declare-fun temp6_71 () (_ BitVec 64))
(declare-fun temp6_72 () (_ BitVec 64))
(declare-fun temp6_74 () (_ BitVec 64))
(declare-fun temp6_73 () (_ BitVec 64))
(declare-fun temp6_76 () (_ BitVec 64))
(declare-fun temp6_75 () (_ BitVec 64))
(declare-fun temp6_78 () (_ BitVec 64))
(declare-fun temp6_77 () (_ BitVec 64))
(declare-fun temp6_80 () (_ BitVec 64))
(declare-fun temp6_79 () (_ BitVec 64))
(declare-fun temp6_82 () (_ BitVec 64))
(declare-fun temp6_81 () (_ BitVec 64))
(declare-fun var792081 () (_ BitVec 64))
(declare-fun var792082 () (_ BitVec 64))
(declare-fun var857606 () (_ BitVec 64))
(declare-fun var857607 () (_ BitVec 64))
(declare-fun var922711 () (_ BitVec 64))
(declare-fun var922712 () (_ BitVec 64))
(declare-fun temp6_83 () (_ BitVec 64))
(declare-fun var922713 () (_ BitVec 64))
(declare-fun temp6_84 () (_ BitVec 64))
(declare-fun var922723 () (_ BitVec 64))
(declare-fun temp6_85 () (_ BitVec 64))
(declare-fun temp6_86 () (_ BitVec 64))
(declare-fun var922731 () (_ BitVec 64))
(declare-fun temp6_87 () (_ BitVec 64))
(declare-fun temp6_88 () (_ BitVec 64))
(declare-fun var922736 () (_ BitVec 64))
(declare-fun var922737 () (_ BitVec 64))
(declare-fun temp6_89 () (_ BitVec 64))
(declare-fun var922738 () (_ BitVec 64))
(declare-fun temp6_90 () (_ BitVec 64))
(declare-fun var922739 () (_ BitVec 64))
(declare-fun var922741 () (_ BitVec 64))
(declare-fun var922742 () (_ BitVec 64))
(declare-fun var922743 () (_ BitVec 64))
(declare-fun temp6_92 () (_ BitVec 64))
(declare-fun temp6_91 () (_ BitVec 64))
(declare-fun temp6_94 () (_ BitVec 64))
(declare-fun temp6_93 () (_ BitVec 64))
(declare-fun var922783 () (_ BitVec 64))
(declare-fun temp6_95 () (_ BitVec 64))
(declare-fun var922784 () (_ BitVec 64))
(declare-fun temp6_96 () (_ BitVec 64))
(declare-fun var988689 () (_ BitVec 64))
(declare-fun var988690 () (_ BitVec 64))
(assert (= temp6_1 #x0000000000000004))
(assert (= var68041
   (ite (= ARGNAME_input_NAMEEND_DIM temp6_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6_2 #x0000000000000001))
(assert (= var68041 temp6_2))
(assert (= temp6_3 #x0000000000000004))
(assert (= var68076
   (ite (= ARGNAME_filter_NAMEEND_DIM temp6_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6_4 #x0000000000000001))
(assert (= var68076 temp6_4))
(assert (= temp6_5 #x0000000000000000))
(assert (= var134499
   (ite (= ARGNAME_min_input_NAMEEND_DIM temp6_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var134495 var134499))
(assert (= var68102 var134495))
(assert (= temp6_6 #x0000000000000001))
(assert (= var68102 temp6_6))
(assert (= temp6_7 #x0000000000000000))
(assert (= var200035
   (ite (= ARGNAME_max_input_NAMEEND_DIM temp6_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var200031 var200035))
(assert (= var68130 var200031))
(assert (= temp6_8 #x0000000000000001))
(assert (= var68130 temp6_8))
(assert (= temp6_9 #x0000000000000000))
(assert (= var265571
   (ite (= ARGNAME_min_filter_NAMEEND_DIM temp6_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var265567 var265571))
(assert (= var68156 var265567))
(assert (= temp6_10 #x0000000000000001))
(assert (= var68156 temp6_10))
(assert (= temp6_11 #x0000000000000000))
(assert (= var331107
   (ite (= ARGNAME_max_filter_NAMEEND_DIM temp6_11)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var331103 var331107))
(assert (= var68183 var331103))
(assert (= temp6_12 #x0000000000000001))
(assert (= var68183 temp6_12))
(assert (= temp6_13 #x0000000000000000))
(assert (= var396672 temp6_13))
(assert (= temp6_14 #x0000000000000000))
(assert (= var462208 temp6_14))
(assert (= temp6_15 #x0000000000000000))
(assert (= var527744 temp6_15))
(assert (= temp6_16 #x0000000000000000))
(assert (= var593280 temp6_16))
(assert (= temp6_17 #x0000000000000000))
(assert (= var658845 temp6_17))
(assert (= var658821 var658845))
(assert (= var68263 var658821))
(assert (= var68267 var68263))
(assert (= temp6_18 #x0000000000000000))
(assert (= var724381 temp6_18))
(assert (= var724357 var724381))
(assert (= var68268 var724357))
(assert (= var68269 var68268))
(assert (= temp6_19 #x0000000000000000))
(assert (= temp6_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp6_19)))
(assert (= temp6_21 #x0000000000000001))
(assert (= temp6_22 (select ARGNAME_input_NAMEEND_DIMSIZE temp6_21)))
(assert (= temp6_23 #x0000000000000002))
(assert (= temp6_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp6_23)))
(assert (= temp6_25 #x0000000000000003))
(assert (= temp6_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp6_25)))
(assert (= temp6_27 #x0000000000000004))
(assert (= temp6_28 (select ARGNAME_input_NAMEEND_DIMSIZE temp6_27)))
(assert (= temp6_29 #x0000000000000005))
(assert (= temp6_30 (select ARGNAME_input_NAMEEND_DIMSIZE temp6_29)))
(assert (= temp6_31 #x0000000000000003))
(assert (= temp6_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp6_31)))
(assert (= var68270 temp6_32))
(assert (= temp6_33 #x0000000000000000))
(assert (= temp6_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp6_33)))
(assert (= temp6_35 #x0000000000000001))
(assert (= temp6_36 (select ARGNAME_filter_NAMEEND_DIMSIZE temp6_35)))
(assert (= temp6_37 #x0000000000000002))
(assert (= temp6_38 (select ARGNAME_filter_NAMEEND_DIMSIZE temp6_37)))
(assert (= temp6_39 #x0000000000000003))
(assert (= temp6_40 (select ARGNAME_filter_NAMEEND_DIMSIZE temp6_39)))
(assert (= temp6_41 #x0000000000000004))
(assert (= temp6_42 (select ARGNAME_filter_NAMEEND_DIMSIZE temp6_41)))
(assert (= temp6_43 #x0000000000000005))
(assert (= temp6_44 (select ARGNAME_filter_NAMEEND_DIMSIZE temp6_43)))
(assert (= temp6_45 #x0000000000000002))
(assert (= temp6_46 (select ARGNAME_filter_NAMEEND_DIMSIZE temp6_45)))
(assert (= var68273 temp6_46))
(assert (= var68274 (ite (= var68270 var68273) #x0000000000000001 #x0000000000000000)))
(assert (= temp6_47 #x0000000000000001))
(assert (= var68274 temp6_47))
(assert (= temp6_48 #x0000000000000003))
(assert (= temp6_49 (select ARGNAME_filter_NAMEEND_DIMSIZE temp6_48)))
(assert (= var68298 temp6_49))
(assert (= temp6_50 #x0000000000000001))
(assert (= temp6_51 (select ARGNAME_input_NAMEEND_DIMSIZE temp6_50)))
(assert (= var68299 temp6_51))
(assert (= temp6_52 #x0000000000000000))
(assert (= temp6_53 (select ARGNAME_filter_NAMEEND_DIMSIZE temp6_52)))
(assert (= var68300 temp6_53))
(assert (= temp6_54 #x0000000000000002))
(assert (= temp6_55 (select ARGNAME_input_NAMEEND_DIMSIZE temp6_54)))
(assert (= var68301 temp6_55))
(assert (= temp6_56 #x0000000000000001))
(assert (= temp6_57 (select ARGNAME_filter_NAMEEND_DIMSIZE temp6_56)))
(assert (= var68302 temp6_57))
(assert (= temp6_58 #x0000000000000000))
(assert (= temp6_59 (select ARGNAME_input_NAMEEND_DIMSIZE temp6_58)))
(assert (= var68303 temp6_59))
(assert (= temp6_60 #x0000000000000000))
(assert (= temp6_61 (select ARGNAME_strides_NAMEEND_VAL temp6_60)))
(assert (= temp6_62 #x0000000000000001))
(assert (= temp6_63 (select ARGNAME_strides_NAMEEND_VAL temp6_62)))
(assert (= temp6_64 #x0000000000000002))
(assert (= temp6_65 (select ARGNAME_strides_NAMEEND_VAL temp6_64)))
(assert (= temp6_66 #x0000000000000003))
(assert (= temp6_67 (select ARGNAME_strides_NAMEEND_VAL temp6_66)))
(assert (= temp6_68 #x0000000000000004))
(assert (= temp6_69 (select ARGNAME_strides_NAMEEND_VAL temp6_68)))
(assert (= temp6_70 #x0000000000000005))
(assert (= temp6_71 (select ARGNAME_strides_NAMEEND_VAL temp6_70)))
(assert (= temp6_72 #x0000000000000001))
(assert (= temp6_74 (select ARGNAME_strides_NAMEEND_VAL temp6_72)))
(assert (= temp6_73 temp6_74))
(assert (= temp6_76 #x0000000000000000))
(assert (= temp6_75 temp6_76))
(assert (= temp6_78 #x0000000000000000))
(assert (= temp6_77 temp6_78))
(assert (= temp6_80 #x0000000000000000))
(assert (= temp6_79 temp6_80))
(assert (= temp6_82 #x0000000000000000))
(assert (= temp6_81 temp6_82))
(assert (= var792081 var68299))
(assert (= var792082 var68300))
(assert (= var857606 var792081))
(assert (= var857607 var792082))
(assert (= var922711 var857606))
(assert (= var922712 var857607))
(assert (= temp6_83 #x0000000000000001))
(assert (= var922713 temp6_83))
(assert (= temp6_84 #x0000000000000001))
(assert (= var922723
   (ite (bvslt temp6_73 temp6_84) #x0000000000000001 #x0000000000000000)))
(assert (= temp6_85 #x0000000000000000))
(assert (= var922723 temp6_85))
(assert (= temp6_86 #x0000000000000001))
(assert (= var922731
   (ite (bvslt var922713 temp6_86) #x0000000000000001 #x0000000000000000)))
(assert (= temp6_87 #x0000000000000000))
(assert (= var922731 temp6_87))
(assert (= temp6_88 #xffffffffffffffff))
(assert (= var922736 (bvadd var922712 temp6_88)))
(assert (= var922737 (bvmul var922736 var922713)))
(assert (= temp6_89 #x0000000000000001))
(assert (= var922738 (bvadd var922737 temp6_89)))
(assert (= temp6_90 #xffffffffffffffff))
(assert (= var922739 (bvxor var922737 temp6_90)))
(assert (= var922741 (bvadd temp6_73 var922711)))
(assert (= var922742 (bvadd var922741 var922739)))
(assert (= var922743 (bvsdiv var922742 temp6_73)))
(assert (= temp6_92 #x0000000000000000))
(assert (= temp6_91 temp6_92))
(assert (= temp6_94 #x0000000000000000))
(assert (= temp6_93 temp6_94))
(assert (= var922783 var922743))
(assert (= temp6_95 #x0000000000000000))
(assert (= var922784
   (ite (bvslt var922783 temp6_95) #x0000000000000001 #x0000000000000000)))
(assert (= temp6_96 #x0000000000000000))
(assert (= var922784 temp6_96))
(assert (= var988689 var68301))
(assert (= var988690 var68302))
(model-add temp6_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp6_2 () (_ BitVec 64) #x0000000000000001)
(model-add var68041 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))















