(declare-fun temp68_1 () (_ BitVec 64))
(declare-fun temp68_2 () (_ BitVec 64))
(declare-fun var68041 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp68_3 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var68076 () (_ BitVec 64))
(declare-fun temp68_4 () (_ BitVec 64))
(declare-fun temp68_5 () (_ BitVec 64))
(declare-fun ARGNAME_min_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var134499 () (_ BitVec 64))
(declare-fun var134495 () (_ BitVec 64))
(declare-fun var68102 () (_ BitVec 64))
(declare-fun temp68_6 () (_ BitVec 64))
(declare-fun temp68_7 () (_ BitVec 64))
(declare-fun ARGNAME_max_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var200035 () (_ BitVec 64))
(declare-fun var200031 () (_ BitVec 64))
(declare-fun var68130 () (_ BitVec 64))
(declare-fun temp68_8 () (_ BitVec 64))
(declare-fun temp68_9 () (_ BitVec 64))
(declare-fun ARGNAME_min_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var265571 () (_ BitVec 64))
(declare-fun var265567 () (_ BitVec 64))
(declare-fun var68156 () (_ BitVec 64))
(declare-fun temp68_10 () (_ BitVec 64))
(declare-fun temp68_11 () (_ BitVec 64))
(declare-fun ARGNAME_max_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var331107 () (_ BitVec 64))
(declare-fun var331103 () (_ BitVec 64))
(declare-fun var68183 () (_ BitVec 64))
(declare-fun temp68_12 () (_ BitVec 64))
(declare-fun temp68_13 () (_ BitVec 64))
(declare-fun var396672 () (_ BitVec 64))
(declare-fun temp68_14 () (_ BitVec 64))
(declare-fun var462208 () (_ BitVec 64))
(declare-fun temp68_15 () (_ BitVec 64))
(declare-fun var527744 () (_ BitVec 64))
(declare-fun temp68_16 () (_ BitVec 64))
(declare-fun var593280 () (_ BitVec 64))
(declare-fun temp68_17 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp68_18 () (_ BitVec 64))
(declare-fun temp68_19 () (_ BitVec 64))
(declare-fun temp68_20 () (_ BitVec 64))
(declare-fun temp68_21 () (_ BitVec 64))
(declare-fun temp68_22 () (_ BitVec 64))
(declare-fun temp68_23 () (_ BitVec 64))
(declare-fun temp68_24 () (_ BitVec 64))
(declare-fun temp68_25 () (_ BitVec 64))
(declare-fun temp68_26 () (_ BitVec 64))
(declare-fun temp68_27 () (_ BitVec 64))
(declare-fun temp68_28 () (_ BitVec 64))
(declare-fun temp68_29 () (_ BitVec 64))
(declare-fun temp68_30 () (_ BitVec 64))
(declare-fun var68270 () (_ BitVec 64))
(declare-fun temp68_31 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp68_32 () (_ BitVec 64))
(declare-fun temp68_33 () (_ BitVec 64))
(declare-fun temp68_34 () (_ BitVec 64))
(declare-fun temp68_35 () (_ BitVec 64))
(declare-fun temp68_36 () (_ BitVec 64))
(declare-fun temp68_37 () (_ BitVec 64))
(declare-fun temp68_38 () (_ BitVec 64))
(declare-fun temp68_39 () (_ BitVec 64))
(declare-fun temp68_40 () (_ BitVec 64))
(declare-fun temp68_41 () (_ BitVec 64))
(declare-fun temp68_42 () (_ BitVec 64))
(declare-fun temp68_43 () (_ BitVec 64))
(declare-fun temp68_44 () (_ BitVec 64))
(declare-fun var68273 () (_ BitVec 64))
(declare-fun var68274 () (_ BitVec 64))
(declare-fun temp68_45 () (_ BitVec 64))
(declare-fun temp68_46 () (_ BitVec 64))
(declare-fun temp68_47 () (_ BitVec 64))
(declare-fun var68298 () (_ BitVec 64))
(declare-fun temp68_48 () (_ BitVec 64))
(declare-fun temp68_49 () (_ BitVec 64))
(declare-fun var68299 () (_ BitVec 64))
(declare-fun temp68_50 () (_ BitVec 64))
(declare-fun temp68_51 () (_ BitVec 64))
(declare-fun var68300 () (_ BitVec 64))
(declare-fun temp68_52 () (_ BitVec 64))
(declare-fun temp68_53 () (_ BitVec 64))
(declare-fun var68301 () (_ BitVec 64))
(declare-fun temp68_54 () (_ BitVec 64))
(declare-fun temp68_55 () (_ BitVec 64))
(declare-fun var68302 () (_ BitVec 64))
(declare-fun temp68_56 () (_ BitVec 64))
(declare-fun temp68_57 () (_ BitVec 64))
(declare-fun var68303 () (_ BitVec 64))
(declare-fun temp68_58 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp68_59 () (_ BitVec 64))
(declare-fun temp68_60 () (_ BitVec 64))
(declare-fun temp68_61 () (_ BitVec 64))
(declare-fun temp68_62 () (_ BitVec 64))
(declare-fun temp68_63 () (_ BitVec 64))
(declare-fun temp68_64 () (_ BitVec 64))
(declare-fun temp68_65 () (_ BitVec 64))
(declare-fun temp68_66 () (_ BitVec 64))
(declare-fun temp68_67 () (_ BitVec 64))
(declare-fun temp68_68 () (_ BitVec 64))
(declare-fun temp68_69 () (_ BitVec 64))
(declare-fun temp68_70 () (_ BitVec 64))
(declare-fun temp68_72 () (_ BitVec 64))
(declare-fun temp68_71 () (_ BitVec 64))
(declare-fun temp68_74 () (_ BitVec 64))
(declare-fun temp68_73 () (_ BitVec 64))
(declare-fun temp68_76 () (_ BitVec 64))
(declare-fun temp68_75 () (_ BitVec 64))
(declare-fun temp68_78 () (_ BitVec 64))
(declare-fun temp68_77 () (_ BitVec 64))
(declare-fun temp68_80 () (_ BitVec 64))
(declare-fun temp68_79 () (_ BitVec 64))
(declare-fun var792081 () (_ BitVec 64))
(declare-fun var792082 () (_ BitVec 64))
(declare-fun var857606 () (_ BitVec 64))
(declare-fun var857607 () (_ BitVec 64))
(declare-fun var922711 () (_ BitVec 64))
(declare-fun var922712 () (_ BitVec 64))
(declare-fun temp68_81 () (_ BitVec 64))
(declare-fun var922713 () (_ BitVec 64))
(declare-fun temp68_82 () (_ BitVec 64))
(declare-fun var922723 () (_ BitVec 64))
(declare-fun temp68_83 () (_ BitVec 64))
(declare-fun temp68_84 () (_ BitVec 64))
(declare-fun var922731 () (_ BitVec 64))
(declare-fun temp68_85 () (_ BitVec 64))
(declare-fun temp68_86 () (_ BitVec 64))
(declare-fun var922736 () (_ BitVec 64))
(declare-fun var922737 () (_ BitVec 64))
(declare-fun temp68_87 () (_ BitVec 64))
(declare-fun var922738 () (_ BitVec 64))
(declare-fun temp68_88 () (_ BitVec 64))
(declare-fun var922739 () (_ BitVec 64))
(declare-fun temp68_89 () (_ BitVec 64))
(declare-fun var922784 () (_ BitVec 64))
(declare-fun temp68_90 () (_ BitVec 64))
(declare-fun var988689 () (_ BitVec 64))
(declare-fun var988690 () (_ BitVec 64))
(declare-fun var1054214 () (_ BitVec 64))
(declare-fun var1054215 () (_ BitVec 64))
(declare-fun var1119319 () (_ BitVec 64))
(declare-fun var1119320 () (_ BitVec 64))
(declare-fun temp68_91 () (_ BitVec 64))
(declare-fun var1119321 () (_ BitVec 64))
(declare-fun temp68_92 () (_ BitVec 64))
(declare-fun var1119331 () (_ BitVec 64))
(declare-fun temp68_93 () (_ BitVec 64))
(declare-fun temp68_94 () (_ BitVec 64))
(declare-fun var1119339 () (_ BitVec 64))
(declare-fun temp68_95 () (_ BitVec 64))
(declare-fun temp68_96 () (_ BitVec 64))
(declare-fun var1119344 () (_ BitVec 64))
(declare-fun var1119345 () (_ BitVec 64))
(declare-fun temp68_97 () (_ BitVec 64))
(declare-fun var1119346 () (_ BitVec 64))
(declare-fun temp68_98 () (_ BitVec 64))
(declare-fun var1119347 () (_ BitVec 64))
(declare-fun temp68_99 () (_ BitVec 64))
(declare-fun var1119366 () (_ BitVec 64))
(declare-fun var1119367 () (_ BitVec 64))
(declare-fun var1119368 () (_ BitVec 64))
(declare-fun temp68_101 () (_ BitVec 64))
(declare-fun temp68_100 () (_ BitVec 64))
(declare-fun temp68_102 () (_ BitVec 64))
(declare-fun var1119375 () (_ BitVec 64))
(declare-fun var1119376 () (_ BitVec 64))
(declare-fun var1119377 () (_ BitVec 64))
(declare-fun var1119378 () (_ BitVec 64))
(declare-fun var1119391 () (_ BitVec 64))
(declare-fun temp68_103 () (_ BitVec 64))
(declare-fun var1119392 () (_ BitVec 64))
(declare-fun temp68_104 () (_ BitVec 64))
(assert (= temp68_1 #x0000000000000004))
(assert (= var68041
   (ite (= ARGNAME_input_NAMEEND_DIM temp68_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_2 #x0000000000000001))
(assert (= var68041 temp68_2))
(assert (= temp68_3 #x0000000000000004))
(assert (= var68076
   (ite (= ARGNAME_filter_NAMEEND_DIM temp68_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_4 #x0000000000000001))
(assert (= var68076 temp68_4))
(assert (= temp68_5 #x0000000000000000))
(assert (= var134499
   (ite (= ARGNAME_min_input_NAMEEND_DIM temp68_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var134495 var134499))
(assert (= var68102 var134495))
(assert (= temp68_6 #x0000000000000001))
(assert (= var68102 temp68_6))
(assert (= temp68_7 #x0000000000000000))
(assert (= var200035
   (ite (= ARGNAME_max_input_NAMEEND_DIM temp68_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var200031 var200035))
(assert (= var68130 var200031))
(assert (= temp68_8 #x0000000000000001))
(assert (= var68130 temp68_8))
(assert (= temp68_9 #x0000000000000000))
(assert (= var265571
   (ite (= ARGNAME_min_filter_NAMEEND_DIM temp68_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var265567 var265571))
(assert (= var68156 var265567))
(assert (= temp68_10 #x0000000000000001))
(assert (= var68156 temp68_10))
(assert (= temp68_11 #x0000000000000000))
(assert (= var331107
   (ite (= ARGNAME_max_filter_NAMEEND_DIM temp68_11)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var331103 var331107))
(assert (= var68183 var331103))
(assert (= temp68_12 #x0000000000000001))
(assert (= var68183 temp68_12))
(assert (= temp68_13 #x0000000000000000))
(assert (= var396672 temp68_13))
(assert (= temp68_14 #x0000000000000000))
(assert (= var462208 temp68_14))
(assert (= temp68_15 #x0000000000000000))
(assert (= var527744 temp68_15))
(assert (= temp68_16 #x0000000000000000))
(assert (= var593280 temp68_16))
(assert (= temp68_17 #x0000000000000000))
(assert (= temp68_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_17)))
(assert (= temp68_19 #x0000000000000001))
(assert (= temp68_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_19)))
(assert (= temp68_21 #x0000000000000002))
(assert (= temp68_22 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_21)))
(assert (= temp68_23 #x0000000000000003))
(assert (= temp68_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_23)))
(assert (= temp68_25 #x0000000000000004))
(assert (= temp68_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_25)))
(assert (= temp68_27 #x0000000000000005))
(assert (= temp68_28 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_27)))
(assert (= temp68_29 #x0000000000000003))
(assert (= temp68_30 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_29)))
(assert (= var68270 temp68_30))
(assert (= temp68_31 #x0000000000000000))
(assert (= temp68_32 (select ARGNAME_filter_NAMEEND_DIMSIZE temp68_31)))
(assert (= temp68_33 #x0000000000000001))
(assert (= temp68_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp68_33)))
(assert (= temp68_35 #x0000000000000002))
(assert (= temp68_36 (select ARGNAME_filter_NAMEEND_DIMSIZE temp68_35)))
(assert (= temp68_37 #x0000000000000003))
(assert (= temp68_38 (select ARGNAME_filter_NAMEEND_DIMSIZE temp68_37)))
(assert (= temp68_39 #x0000000000000004))
(assert (= temp68_40 (select ARGNAME_filter_NAMEEND_DIMSIZE temp68_39)))
(assert (= temp68_41 #x0000000000000005))
(assert (= temp68_42 (select ARGNAME_filter_NAMEEND_DIMSIZE temp68_41)))
(assert (= temp68_43 #x0000000000000002))
(assert (= temp68_44 (select ARGNAME_filter_NAMEEND_DIMSIZE temp68_43)))
(assert (= var68273 temp68_44))
(assert (= var68274 (ite (= var68270 var68273) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_45 #x0000000000000001))
(assert (= var68274 temp68_45))
(assert (= temp68_46 #x0000000000000003))
(assert (= temp68_47 (select ARGNAME_filter_NAMEEND_DIMSIZE temp68_46)))
(assert (= var68298 temp68_47))
(assert (= temp68_48 #x0000000000000001))
(assert (= temp68_49 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_48)))
(assert (= var68299 temp68_49))
(assert (= temp68_50 #x0000000000000000))
(assert (= temp68_51 (select ARGNAME_filter_NAMEEND_DIMSIZE temp68_50)))
(assert (= var68300 temp68_51))
(assert (= temp68_52 #x0000000000000002))
(assert (= temp68_53 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_52)))
(assert (= var68301 temp68_53))
(assert (= temp68_54 #x0000000000000001))
(assert (= temp68_55 (select ARGNAME_filter_NAMEEND_DIMSIZE temp68_54)))
(assert (= var68302 temp68_55))
(assert (= temp68_56 #x0000000000000000))
(assert (= temp68_57 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_56)))
(assert (= var68303 temp68_57))
(assert (= temp68_58 #x0000000000000000))
(assert (= temp68_59 (select ARGNAME_strides_NAMEEND_VAL temp68_58)))
(assert (= temp68_60 #x0000000000000001))
(assert (= temp68_61 (select ARGNAME_strides_NAMEEND_VAL temp68_60)))
(assert (= temp68_62 #x0000000000000002))
(assert (= temp68_63 (select ARGNAME_strides_NAMEEND_VAL temp68_62)))
(assert (= temp68_64 #x0000000000000003))
(assert (= temp68_65 (select ARGNAME_strides_NAMEEND_VAL temp68_64)))
(assert (= temp68_66 #x0000000000000004))
(assert (= temp68_67 (select ARGNAME_strides_NAMEEND_VAL temp68_66)))
(assert (= temp68_68 #x0000000000000005))
(assert (= temp68_69 (select ARGNAME_strides_NAMEEND_VAL temp68_68)))
(assert (= temp68_70 #x0000000000000001))
(assert (= temp68_72 (select ARGNAME_strides_NAMEEND_VAL temp68_70)))
(assert (= temp68_71 temp68_72))
(assert (= temp68_74 #x0000000000000000))
(assert (= temp68_73 temp68_74))
(assert (= temp68_76 #x0000000000000000))
(assert (= temp68_75 temp68_76))
(assert (= temp68_78 #x0000000000000000))
(assert (= temp68_77 temp68_78))
(assert (= temp68_80 #x0000000000000000))
(assert (= temp68_79 temp68_80))
(assert (= var792081 var68299))
(assert (= var792082 var68300))
(assert (= var857606 var792081))
(assert (= var857607 var792082))
(assert (= var922711 var857606))
(assert (= var922712 var857607))
(assert (= temp68_81 #x0000000000000001))
(assert (= var922713 temp68_81))
(assert (= temp68_82 #x0000000000000001))
(assert (= var922723
   (ite (bvslt temp68_71 temp68_82) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_83 #x0000000000000000))
(assert (= var922723 temp68_83))
(assert (= temp68_84 #x0000000000000001))
(assert (= var922731
   (ite (bvslt var922713 temp68_84) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_85 #x0000000000000000))
(assert (= var922731 temp68_85))
(assert (= temp68_86 #xffffffffffffffff))
(assert (= var922736 (bvadd var922712 temp68_86)))
(assert (= var922737 (bvmul var922736 var922713)))
(assert (= temp68_87 #x0000000000000001))
(assert (= var922738 (bvadd var922737 temp68_87)))
(assert (= temp68_88 #xffffffffffffffff))
(assert (= var922739 (bvxor var922737 temp68_88)))
(assert (= temp68_89 #x0000000000000000))
(assert (= var922784
   (ite (bvslt temp68_73 temp68_89) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_90 #x0000000000000000))
(assert (= var922784 temp68_90))
(assert (= var988689 var68301))
(assert (= var988690 var68302))
(assert (= var1054214 var988689))
(assert (= var1054215 var988690))
(assert (= var1119319 var1054214))
(assert (= var1119320 var1054215))
(assert (= temp68_91 #x0000000000000001))
(assert (= var1119321 temp68_91))
(assert (= temp68_92 #x0000000000000001))
(assert (= var1119331
   (ite (bvslt temp68_71 temp68_92) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_93 #x0000000000000000))
(assert (= var1119331 temp68_93))
(assert (= temp68_94 #x0000000000000001))
(assert (= var1119339
   (ite (bvslt var1119321 temp68_94) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_95 #x0000000000000000))
(assert (= var1119339 temp68_95))
(assert (= temp68_96 #xffffffffffffffff))
(assert (= var1119344 (bvadd var1119320 temp68_96)))
(assert (= var1119345 (bvmul var1119344 var1119321)))
(assert (= temp68_97 #x0000000000000001))
(assert (= var1119346 (bvadd var1119345 temp68_97)))
(assert (= temp68_98 #xffffffffffffffff))
(assert (= var1119347 (bvxor var1119345 temp68_98)))
(assert (= temp68_99 #xffffffffffffffff))
(assert (= var1119366 (bvadd var1119319 temp68_99)))
(assert (= var1119367 (bvadd var1119366 temp68_71)))
(assert (= var1119368 (bvsdiv var1119367 temp68_71)))
(assert (= temp68_101 #x0000000000000000))
(assert (= temp68_100 temp68_101))
(assert (= temp68_102 #xffffffffffffffff))
(assert (= var1119375 (bvadd var1119368 temp68_102)))
(assert (= var1119376 (bvmul var1119375 temp68_71)))
(assert (= var1119377 (bvsub var1119346 var1119319)))
(assert (= var1119378 (bvadd var1119377 var1119376)))
(assert (= var1119391 var1119368))
(assert (= temp68_103 #x0000000000000000))
(assert (= var1119392
   (ite (bvslt var1119391 temp68_103) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_104 #x0000000000000000))
(assert (= var1119392 temp68_104))
(model-add temp68_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp68_2 () (_ BitVec 64) #x0000000000000001)
(model-add var68041 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))















