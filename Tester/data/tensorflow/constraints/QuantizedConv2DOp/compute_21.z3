(declare-fun temp20_1 () (_ BitVec 64))
(declare-fun temp20_2 () (_ BitVec 64))
(declare-fun var68041 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp20_3 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var68076 () (_ BitVec 64))
(declare-fun temp20_4 () (_ BitVec 64))
(declare-fun temp20_5 () (_ BitVec 64))
(declare-fun ARGNAME_min_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var134499 () (_ BitVec 64))
(declare-fun var134495 () (_ BitVec 64))
(declare-fun var68102 () (_ BitVec 64))
(declare-fun temp20_6 () (_ BitVec 64))
(declare-fun temp20_7 () (_ BitVec 64))
(declare-fun ARGNAME_max_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var200035 () (_ BitVec 64))
(declare-fun var200031 () (_ BitVec 64))
(declare-fun var68130 () (_ BitVec 64))
(declare-fun temp20_8 () (_ BitVec 64))
(declare-fun temp20_9 () (_ BitVec 64))
(declare-fun ARGNAME_min_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var265571 () (_ BitVec 64))
(declare-fun var265567 () (_ BitVec 64))
(declare-fun var68156 () (_ BitVec 64))
(declare-fun temp20_10 () (_ BitVec 64))
(declare-fun temp20_11 () (_ BitVec 64))
(declare-fun ARGNAME_max_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var331107 () (_ BitVec 64))
(declare-fun var331103 () (_ BitVec 64))
(declare-fun var68183 () (_ BitVec 64))
(declare-fun temp20_12 () (_ BitVec 64))
(declare-fun temp20_13 () (_ BitVec 64))
(declare-fun var396672 () (_ BitVec 64))
(declare-fun temp20_14 () (_ BitVec 64))
(declare-fun var462208 () (_ BitVec 64))
(declare-fun temp20_15 () (_ BitVec 64))
(declare-fun var527744 () (_ BitVec 64))
(declare-fun temp20_16 () (_ BitVec 64))
(declare-fun var593280 () (_ BitVec 64))
(declare-fun temp20_17 () (_ BitVec 64))
(declare-fun var658845 () (_ BitVec 64))
(declare-fun var658821 () (_ BitVec 64))
(declare-fun var68263 () (_ BitVec 64))
(declare-fun var68267 () (_ BitVec 64))
(declare-fun temp20_18 () (_ BitVec 64))
(declare-fun var724381 () (_ BitVec 64))
(declare-fun var724357 () (_ BitVec 64))
(declare-fun var68268 () (_ BitVec 64))
(declare-fun var68269 () (_ BitVec 64))
(declare-fun temp20_19 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp20_20 () (_ BitVec 64))
(declare-fun temp20_21 () (_ BitVec 64))
(declare-fun temp20_22 () (_ BitVec 64))
(declare-fun temp20_23 () (_ BitVec 64))
(declare-fun temp20_24 () (_ BitVec 64))
(declare-fun temp20_25 () (_ BitVec 64))
(declare-fun temp20_26 () (_ BitVec 64))
(declare-fun temp20_27 () (_ BitVec 64))
(declare-fun temp20_28 () (_ BitVec 64))
(declare-fun temp20_29 () (_ BitVec 64))
(declare-fun temp20_30 () (_ BitVec 64))
(declare-fun temp20_31 () (_ BitVec 64))
(declare-fun temp20_32 () (_ BitVec 64))
(declare-fun var68270 () (_ BitVec 64))
(declare-fun temp20_33 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp20_34 () (_ BitVec 64))
(declare-fun temp20_35 () (_ BitVec 64))
(declare-fun temp20_36 () (_ BitVec 64))
(declare-fun temp20_37 () (_ BitVec 64))
(declare-fun temp20_38 () (_ BitVec 64))
(declare-fun temp20_39 () (_ BitVec 64))
(declare-fun temp20_40 () (_ BitVec 64))
(declare-fun temp20_41 () (_ BitVec 64))
(declare-fun temp20_42 () (_ BitVec 64))
(declare-fun temp20_43 () (_ BitVec 64))
(declare-fun temp20_44 () (_ BitVec 64))
(declare-fun temp20_45 () (_ BitVec 64))
(declare-fun temp20_46 () (_ BitVec 64))
(declare-fun var68273 () (_ BitVec 64))
(declare-fun var68274 () (_ BitVec 64))
(declare-fun temp20_47 () (_ BitVec 64))
(declare-fun temp20_48 () (_ BitVec 64))
(declare-fun temp20_49 () (_ BitVec 64))
(declare-fun var68298 () (_ BitVec 64))
(declare-fun temp20_50 () (_ BitVec 64))
(declare-fun temp20_51 () (_ BitVec 64))
(declare-fun var68299 () (_ BitVec 64))
(declare-fun temp20_52 () (_ BitVec 64))
(declare-fun temp20_53 () (_ BitVec 64))
(declare-fun var68300 () (_ BitVec 64))
(declare-fun temp20_54 () (_ BitVec 64))
(declare-fun temp20_55 () (_ BitVec 64))
(declare-fun var68301 () (_ BitVec 64))
(declare-fun temp20_56 () (_ BitVec 64))
(declare-fun temp20_57 () (_ BitVec 64))
(declare-fun var68302 () (_ BitVec 64))
(declare-fun temp20_58 () (_ BitVec 64))
(declare-fun temp20_59 () (_ BitVec 64))
(declare-fun var68303 () (_ BitVec 64))
(declare-fun temp20_60 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp20_61 () (_ BitVec 64))
(declare-fun temp20_62 () (_ BitVec 64))
(declare-fun temp20_63 () (_ BitVec 64))
(declare-fun temp20_64 () (_ BitVec 64))
(declare-fun temp20_65 () (_ BitVec 64))
(declare-fun temp20_66 () (_ BitVec 64))
(declare-fun temp20_67 () (_ BitVec 64))
(declare-fun temp20_68 () (_ BitVec 64))
(declare-fun temp20_69 () (_ BitVec 64))
(declare-fun temp20_70 () (_ BitVec 64))
(declare-fun temp20_71 () (_ BitVec 64))
(declare-fun temp20_72 () (_ BitVec 64))
(declare-fun temp20_74 () (_ BitVec 64))
(declare-fun temp20_73 () (_ BitVec 64))
(declare-fun temp20_76 () (_ BitVec 64))
(declare-fun temp20_75 () (_ BitVec 64))
(declare-fun temp20_78 () (_ BitVec 64))
(declare-fun temp20_77 () (_ BitVec 64))
(declare-fun temp20_80 () (_ BitVec 64))
(declare-fun temp20_79 () (_ BitVec 64))
(declare-fun temp20_82 () (_ BitVec 64))
(declare-fun temp20_81 () (_ BitVec 64))
(declare-fun var792081 () (_ BitVec 64))
(declare-fun var792082 () (_ BitVec 64))
(declare-fun var857606 () (_ BitVec 64))
(declare-fun var857607 () (_ BitVec 64))
(declare-fun var922711 () (_ BitVec 64))
(declare-fun var922712 () (_ BitVec 64))
(declare-fun temp20_83 () (_ BitVec 64))
(declare-fun var922713 () (_ BitVec 64))
(declare-fun temp20_84 () (_ BitVec 64))
(declare-fun var922723 () (_ BitVec 64))
(declare-fun temp20_85 () (_ BitVec 64))
(declare-fun temp20_86 () (_ BitVec 64))
(declare-fun var922731 () (_ BitVec 64))
(declare-fun temp20_87 () (_ BitVec 64))
(declare-fun temp20_88 () (_ BitVec 64))
(declare-fun var922736 () (_ BitVec 64))
(declare-fun var922737 () (_ BitVec 64))
(declare-fun temp20_89 () (_ BitVec 64))
(declare-fun var922738 () (_ BitVec 64))
(declare-fun temp20_90 () (_ BitVec 64))
(declare-fun var922739 () (_ BitVec 64))
(declare-fun temp20_91 () (_ BitVec 64))
(declare-fun var922758 () (_ BitVec 64))
(declare-fun var922759 () (_ BitVec 64))
(declare-fun var922760 () (_ BitVec 64))
(declare-fun temp20_93 () (_ BitVec 64))
(declare-fun temp20_92 () (_ BitVec 64))
(declare-fun temp20_94 () (_ BitVec 64))
(declare-fun var922767 () (_ BitVec 64))
(declare-fun var922768 () (_ BitVec 64))
(declare-fun var922769 () (_ BitVec 64))
(declare-fun var922770 () (_ BitVec 64))
(declare-fun var922783 () (_ BitVec 64))
(declare-fun temp20_95 () (_ BitVec 64))
(declare-fun var922784 () (_ BitVec 64))
(declare-fun temp20_96 () (_ BitVec 64))
(declare-fun var1054225 () (_ BitVec 64))
(declare-fun var1054226 () (_ BitVec 64))
(declare-fun var1119750 () (_ BitVec 64))
(declare-fun var1119751 () (_ BitVec 64))
(declare-fun var1184855 () (_ BitVec 64))
(declare-fun var1184856 () (_ BitVec 64))
(declare-fun temp20_97 () (_ BitVec 64))
(declare-fun var1184857 () (_ BitVec 64))
(declare-fun temp20_98 () (_ BitVec 64))
(declare-fun var1184867 () (_ BitVec 64))
(declare-fun temp20_99 () (_ BitVec 64))
(declare-fun temp20_100 () (_ BitVec 64))
(declare-fun var1184875 () (_ BitVec 64))
(declare-fun temp20_101 () (_ BitVec 64))
(declare-fun temp20_102 () (_ BitVec 64))
(declare-fun var1184880 () (_ BitVec 64))
(declare-fun var1184881 () (_ BitVec 64))
(declare-fun temp20_103 () (_ BitVec 64))
(declare-fun var1184882 () (_ BitVec 64))
(declare-fun temp20_104 () (_ BitVec 64))
(declare-fun var1184883 () (_ BitVec 64))
(declare-fun temp20_105 () (_ BitVec 64))
(declare-fun var1184902 () (_ BitVec 64))
(declare-fun var1184903 () (_ BitVec 64))
(declare-fun var1184904 () (_ BitVec 64))
(declare-fun temp20_107 () (_ BitVec 64))
(declare-fun temp20_106 () (_ BitVec 64))
(declare-fun temp20_108 () (_ BitVec 64))
(declare-fun var1184911 () (_ BitVec 64))
(declare-fun var1184912 () (_ BitVec 64))
(declare-fun var1184913 () (_ BitVec 64))
(declare-fun var1184914 () (_ BitVec 64))
(declare-fun var1184927 () (_ BitVec 64))
(declare-fun temp20_109 () (_ BitVec 64))
(declare-fun var1184928 () (_ BitVec 64))
(declare-fun temp20_110 () (_ BitVec 64))
(assert (= temp20_1 #x0000000000000004))
(assert (= var68041
   (ite (= ARGNAME_input_NAMEEND_DIM temp20_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp20_2 #x0000000000000001))
(assert (= var68041 temp20_2))
(assert (= temp20_3 #x0000000000000004))
(assert (= var68076
   (ite (= ARGNAME_filter_NAMEEND_DIM temp20_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp20_4 #x0000000000000001))
(assert (= var68076 temp20_4))
(assert (= temp20_5 #x0000000000000000))
(assert (= var134499
   (ite (= ARGNAME_min_input_NAMEEND_DIM temp20_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var134495 var134499))
(assert (= var68102 var134495))
(assert (= temp20_6 #x0000000000000001))
(assert (= var68102 temp20_6))
(assert (= temp20_7 #x0000000000000000))
(assert (= var200035
   (ite (= ARGNAME_max_input_NAMEEND_DIM temp20_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var200031 var200035))
(assert (= var68130 var200031))
(assert (= temp20_8 #x0000000000000001))
(assert (= var68130 temp20_8))
(assert (= temp20_9 #x0000000000000000))
(assert (= var265571
   (ite (= ARGNAME_min_filter_NAMEEND_DIM temp20_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var265567 var265571))
(assert (= var68156 var265567))
(assert (= temp20_10 #x0000000000000001))
(assert (= var68156 temp20_10))
(assert (= temp20_11 #x0000000000000000))
(assert (= var331107
   (ite (= ARGNAME_max_filter_NAMEEND_DIM temp20_11)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var331103 var331107))
(assert (= var68183 var331103))
(assert (= temp20_12 #x0000000000000001))
(assert (= var68183 temp20_12))
(assert (= temp20_13 #x0000000000000000))
(assert (= var396672 temp20_13))
(assert (= temp20_14 #x0000000000000000))
(assert (= var462208 temp20_14))
(assert (= temp20_15 #x0000000000000000))
(assert (= var527744 temp20_15))
(assert (= temp20_16 #x0000000000000000))
(assert (= var593280 temp20_16))
(assert (= temp20_17 #x0000000000000000))
(assert (= var658845 temp20_17))
(assert (= var658821 var658845))
(assert (= var68263 var658821))
(assert (= var68267 var68263))
(assert (= temp20_18 #x0000000000000000))
(assert (= var724381 temp20_18))
(assert (= var724357 var724381))
(assert (= var68268 var724357))
(assert (= var68269 var68268))
(assert (= temp20_19 #x0000000000000000))
(assert (= temp20_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp20_19)))
(assert (= temp20_21 #x0000000000000001))
(assert (= temp20_22 (select ARGNAME_input_NAMEEND_DIMSIZE temp20_21)))
(assert (= temp20_23 #x0000000000000002))
(assert (= temp20_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp20_23)))
(assert (= temp20_25 #x0000000000000003))
(assert (= temp20_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp20_25)))
(assert (= temp20_27 #x0000000000000004))
(assert (= temp20_28 (select ARGNAME_input_NAMEEND_DIMSIZE temp20_27)))
(assert (= temp20_29 #x0000000000000005))
(assert (= temp20_30 (select ARGNAME_input_NAMEEND_DIMSIZE temp20_29)))
(assert (= temp20_31 #x0000000000000003))
(assert (= temp20_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp20_31)))
(assert (= var68270 temp20_32))
(assert (= temp20_33 #x0000000000000000))
(assert (= temp20_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp20_33)))
(assert (= temp20_35 #x0000000000000001))
(assert (= temp20_36 (select ARGNAME_filter_NAMEEND_DIMSIZE temp20_35)))
(assert (= temp20_37 #x0000000000000002))
(assert (= temp20_38 (select ARGNAME_filter_NAMEEND_DIMSIZE temp20_37)))
(assert (= temp20_39 #x0000000000000003))
(assert (= temp20_40 (select ARGNAME_filter_NAMEEND_DIMSIZE temp20_39)))
(assert (= temp20_41 #x0000000000000004))
(assert (= temp20_42 (select ARGNAME_filter_NAMEEND_DIMSIZE temp20_41)))
(assert (= temp20_43 #x0000000000000005))
(assert (= temp20_44 (select ARGNAME_filter_NAMEEND_DIMSIZE temp20_43)))
(assert (= temp20_45 #x0000000000000002))
(assert (= temp20_46 (select ARGNAME_filter_NAMEEND_DIMSIZE temp20_45)))
(assert (= var68273 temp20_46))
(assert (= var68274 (ite (= var68270 var68273) #x0000000000000001 #x0000000000000000)))
(assert (= temp20_47 #x0000000000000001))
(assert (= var68274 temp20_47))
(assert (= temp20_48 #x0000000000000003))
(assert (= temp20_49 (select ARGNAME_filter_NAMEEND_DIMSIZE temp20_48)))
(assert (= var68298 temp20_49))
(assert (= temp20_50 #x0000000000000001))
(assert (= temp20_51 (select ARGNAME_input_NAMEEND_DIMSIZE temp20_50)))
(assert (= var68299 temp20_51))
(assert (= temp20_52 #x0000000000000000))
(assert (= temp20_53 (select ARGNAME_filter_NAMEEND_DIMSIZE temp20_52)))
(assert (= var68300 temp20_53))
(assert (= temp20_54 #x0000000000000002))
(assert (= temp20_55 (select ARGNAME_input_NAMEEND_DIMSIZE temp20_54)))
(assert (= var68301 temp20_55))
(assert (= temp20_56 #x0000000000000001))
(assert (= temp20_57 (select ARGNAME_filter_NAMEEND_DIMSIZE temp20_56)))
(assert (= var68302 temp20_57))
(assert (= temp20_58 #x0000000000000000))
(assert (= temp20_59 (select ARGNAME_input_NAMEEND_DIMSIZE temp20_58)))
(assert (= var68303 temp20_59))
(assert (= temp20_60 #x0000000000000000))
(assert (= temp20_61 (select ARGNAME_strides_NAMEEND_VAL temp20_60)))
(assert (= temp20_62 #x0000000000000001))
(assert (= temp20_63 (select ARGNAME_strides_NAMEEND_VAL temp20_62)))
(assert (= temp20_64 #x0000000000000002))
(assert (= temp20_65 (select ARGNAME_strides_NAMEEND_VAL temp20_64)))
(assert (= temp20_66 #x0000000000000003))
(assert (= temp20_67 (select ARGNAME_strides_NAMEEND_VAL temp20_66)))
(assert (= temp20_68 #x0000000000000004))
(assert (= temp20_69 (select ARGNAME_strides_NAMEEND_VAL temp20_68)))
(assert (= temp20_70 #x0000000000000005))
(assert (= temp20_71 (select ARGNAME_strides_NAMEEND_VAL temp20_70)))
(assert (= temp20_72 #x0000000000000001))
(assert (= temp20_74 (select ARGNAME_strides_NAMEEND_VAL temp20_72)))
(assert (= temp20_73 temp20_74))
(assert (= temp20_76 #x0000000000000000))
(assert (= temp20_75 temp20_76))
(assert (= temp20_78 #x0000000000000000))
(assert (= temp20_77 temp20_78))
(assert (= temp20_80 #x0000000000000000))
(assert (= temp20_79 temp20_80))
(assert (= temp20_82 #x0000000000000000))
(assert (= temp20_81 temp20_82))
(assert (= var792081 var68299))
(assert (= var792082 var68300))
(assert (= var857606 var792081))
(assert (= var857607 var792082))
(assert (= var922711 var857606))
(assert (= var922712 var857607))
(assert (= temp20_83 #x0000000000000001))
(assert (= var922713 temp20_83))
(assert (= temp20_84 #x0000000000000001))
(assert (= var922723
   (ite (bvslt temp20_73 temp20_84) #x0000000000000001 #x0000000000000000)))
(assert (= temp20_85 #x0000000000000000))
(assert (= var922723 temp20_85))
(assert (= temp20_86 #x0000000000000001))
(assert (= var922731
   (ite (bvslt var922713 temp20_86) #x0000000000000001 #x0000000000000000)))
(assert (= temp20_87 #x0000000000000000))
(assert (= var922731 temp20_87))
(assert (= temp20_88 #xffffffffffffffff))
(assert (= var922736 (bvadd var922712 temp20_88)))
(assert (= var922737 (bvmul var922736 var922713)))
(assert (= temp20_89 #x0000000000000001))
(assert (= var922738 (bvadd var922737 temp20_89)))
(assert (= temp20_90 #xffffffffffffffff))
(assert (= var922739 (bvxor var922737 temp20_90)))
(assert (= temp20_91 #xffffffffffffffff))
(assert (= var922758 (bvadd var922711 temp20_91)))
(assert (= var922759 (bvadd var922758 temp20_73)))
(assert (= var922760 (bvsdiv var922759 temp20_73)))
(assert (= temp20_93 #x0000000000000000))
(assert (= temp20_92 temp20_93))
(assert (= temp20_94 #xffffffffffffffff))
(assert (= var922767 (bvadd var922760 temp20_94)))
(assert (= var922768 (bvmul var922767 temp20_73)))
(assert (= var922769 (bvsub var922738 var922711)))
(assert (= var922770 (bvadd var922769 var922768)))
(assert (= var922783 var922760))
(assert (= temp20_95 #x0000000000000000))
(assert (= var922784
   (ite (bvslt var922783 temp20_95) #x0000000000000001 #x0000000000000000)))
(assert (= temp20_96 #x0000000000000000))
(assert (= var922784 temp20_96))
(assert (= var1054225 var68301))
(assert (= var1054226 var68302))
(assert (= var1119750 var1054225))
(assert (= var1119751 var1054226))
(assert (= var1184855 var1119750))
(assert (= var1184856 var1119751))
(assert (= temp20_97 #x0000000000000001))
(assert (= var1184857 temp20_97))
(assert (= temp20_98 #x0000000000000001))
(assert (= var1184867
   (ite (bvslt temp20_73 temp20_98) #x0000000000000001 #x0000000000000000)))
(assert (= temp20_99 #x0000000000000000))
(assert (= var1184867 temp20_99))
(assert (= temp20_100 #x0000000000000001))
(assert (= var1184875
   (ite (bvslt var1184857 temp20_100) #x0000000000000001 #x0000000000000000)))
(assert (= temp20_101 #x0000000000000000))
(assert (= var1184875 temp20_101))
(assert (= temp20_102 #xffffffffffffffff))
(assert (= var1184880 (bvadd var1184856 temp20_102)))
(assert (= var1184881 (bvmul var1184880 var1184857)))
(assert (= temp20_103 #x0000000000000001))
(assert (= var1184882 (bvadd var1184881 temp20_103)))
(assert (= temp20_104 #xffffffffffffffff))
(assert (= var1184883 (bvxor var1184881 temp20_104)))
(assert (= temp20_105 #xffffffffffffffff))
(assert (= var1184902 (bvadd var1184855 temp20_105)))
(assert (= var1184903 (bvadd var1184902 temp20_73)))
(assert (= var1184904 (bvsdiv var1184903 temp20_73)))
(assert (= temp20_107 #x0000000000000000))
(assert (= temp20_106 temp20_107))
(assert (= temp20_108 #xffffffffffffffff))
(assert (= var1184911 (bvadd var1184904 temp20_108)))
(assert (= var1184912 (bvmul var1184911 temp20_73)))
(assert (= var1184913 (bvsub var1184882 var1184855)))
(assert (= var1184914 (bvadd var1184913 var1184912)))
(assert (= var1184927 var1184904))
(assert (= temp20_109 #x0000000000000000))
(assert (= var1184928
   (ite (bvslt var1184927 temp20_109) #x0000000000000001 #x0000000000000000)))
(assert (= temp20_110 #x0000000000000000))
(assert (= var1184928 temp20_110))
(model-add temp20_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp20_2 () (_ BitVec 64) #x0000000000000001)
(model-add var68041 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))















