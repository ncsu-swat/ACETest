(declare-fun temp46_1 () (_ BitVec 64))
(declare-fun temp46_2 () (_ BitVec 64))
(declare-fun var68041 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp46_3 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var68076 () (_ BitVec 64))
(declare-fun temp46_4 () (_ BitVec 64))
(declare-fun temp46_5 () (_ BitVec 64))
(declare-fun ARGNAME_min_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var134499 () (_ BitVec 64))
(declare-fun var134495 () (_ BitVec 64))
(declare-fun var68102 () (_ BitVec 64))
(declare-fun temp46_6 () (_ BitVec 64))
(declare-fun temp46_7 () (_ BitVec 64))
(declare-fun ARGNAME_max_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var200035 () (_ BitVec 64))
(declare-fun var200031 () (_ BitVec 64))
(declare-fun var68130 () (_ BitVec 64))
(declare-fun temp46_8 () (_ BitVec 64))
(declare-fun temp46_9 () (_ BitVec 64))
(declare-fun ARGNAME_min_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var265571 () (_ BitVec 64))
(declare-fun var265567 () (_ BitVec 64))
(declare-fun var68156 () (_ BitVec 64))
(declare-fun temp46_10 () (_ BitVec 64))
(declare-fun temp46_11 () (_ BitVec 64))
(declare-fun ARGNAME_max_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var331107 () (_ BitVec 64))
(declare-fun var331103 () (_ BitVec 64))
(declare-fun var68183 () (_ BitVec 64))
(declare-fun temp46_12 () (_ BitVec 64))
(declare-fun temp46_13 () (_ BitVec 64))
(declare-fun var396672 () (_ BitVec 64))
(declare-fun temp46_14 () (_ BitVec 64))
(declare-fun var462208 () (_ BitVec 64))
(declare-fun temp46_15 () (_ BitVec 64))
(declare-fun var527744 () (_ BitVec 64))
(declare-fun temp46_16 () (_ BitVec 64))
(declare-fun var593280 () (_ BitVec 64))
(declare-fun temp46_17 () (_ BitVec 64))
(declare-fun var724381 () (_ BitVec 64))
(declare-fun var724357 () (_ BitVec 64))
(declare-fun var68268 () (_ BitVec 64))
(declare-fun var68269 () (_ BitVec 64))
(declare-fun temp46_18 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp46_19 () (_ BitVec 64))
(declare-fun temp46_20 () (_ BitVec 64))
(declare-fun temp46_21 () (_ BitVec 64))
(declare-fun temp46_22 () (_ BitVec 64))
(declare-fun temp46_23 () (_ BitVec 64))
(declare-fun temp46_24 () (_ BitVec 64))
(declare-fun temp46_25 () (_ BitVec 64))
(declare-fun temp46_26 () (_ BitVec 64))
(declare-fun temp46_27 () (_ BitVec 64))
(declare-fun temp46_28 () (_ BitVec 64))
(declare-fun temp46_29 () (_ BitVec 64))
(declare-fun temp46_30 () (_ BitVec 64))
(declare-fun temp46_31 () (_ BitVec 64))
(declare-fun var68270 () (_ BitVec 64))
(declare-fun temp46_32 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp46_33 () (_ BitVec 64))
(declare-fun temp46_34 () (_ BitVec 64))
(declare-fun temp46_35 () (_ BitVec 64))
(declare-fun temp46_36 () (_ BitVec 64))
(declare-fun temp46_37 () (_ BitVec 64))
(declare-fun temp46_38 () (_ BitVec 64))
(declare-fun temp46_39 () (_ BitVec 64))
(declare-fun temp46_40 () (_ BitVec 64))
(declare-fun temp46_41 () (_ BitVec 64))
(declare-fun temp46_42 () (_ BitVec 64))
(declare-fun temp46_43 () (_ BitVec 64))
(declare-fun temp46_44 () (_ BitVec 64))
(declare-fun temp46_45 () (_ BitVec 64))
(declare-fun var68273 () (_ BitVec 64))
(declare-fun var68274 () (_ BitVec 64))
(declare-fun temp46_46 () (_ BitVec 64))
(declare-fun temp46_47 () (_ BitVec 64))
(declare-fun temp46_48 () (_ BitVec 64))
(declare-fun var68298 () (_ BitVec 64))
(declare-fun temp46_49 () (_ BitVec 64))
(declare-fun temp46_50 () (_ BitVec 64))
(declare-fun var68299 () (_ BitVec 64))
(declare-fun temp46_51 () (_ BitVec 64))
(declare-fun temp46_52 () (_ BitVec 64))
(declare-fun var68300 () (_ BitVec 64))
(declare-fun temp46_53 () (_ BitVec 64))
(declare-fun temp46_54 () (_ BitVec 64))
(declare-fun var68301 () (_ BitVec 64))
(declare-fun temp46_55 () (_ BitVec 64))
(declare-fun temp46_56 () (_ BitVec 64))
(declare-fun var68302 () (_ BitVec 64))
(declare-fun temp46_57 () (_ BitVec 64))
(declare-fun temp46_58 () (_ BitVec 64))
(declare-fun var68303 () (_ BitVec 64))
(declare-fun temp46_59 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp46_60 () (_ BitVec 64))
(declare-fun temp46_61 () (_ BitVec 64))
(declare-fun temp46_62 () (_ BitVec 64))
(declare-fun temp46_63 () (_ BitVec 64))
(declare-fun temp46_64 () (_ BitVec 64))
(declare-fun temp46_65 () (_ BitVec 64))
(declare-fun temp46_66 () (_ BitVec 64))
(declare-fun temp46_67 () (_ BitVec 64))
(declare-fun temp46_68 () (_ BitVec 64))
(declare-fun temp46_69 () (_ BitVec 64))
(declare-fun temp46_70 () (_ BitVec 64))
(declare-fun temp46_71 () (_ BitVec 64))
(declare-fun temp46_73 () (_ BitVec 64))
(declare-fun temp46_72 () (_ BitVec 64))
(declare-fun temp46_75 () (_ BitVec 64))
(declare-fun temp46_74 () (_ BitVec 64))
(declare-fun temp46_77 () (_ BitVec 64))
(declare-fun temp46_76 () (_ BitVec 64))
(declare-fun temp46_79 () (_ BitVec 64))
(declare-fun temp46_78 () (_ BitVec 64))
(declare-fun temp46_81 () (_ BitVec 64))
(declare-fun temp46_80 () (_ BitVec 64))
(declare-fun var792081 () (_ BitVec 64))
(declare-fun var792082 () (_ BitVec 64))
(declare-fun var857606 () (_ BitVec 64))
(declare-fun var857607 () (_ BitVec 64))
(declare-fun var922711 () (_ BitVec 64))
(declare-fun var922712 () (_ BitVec 64))
(declare-fun temp46_82 () (_ BitVec 64))
(declare-fun var922713 () (_ BitVec 64))
(declare-fun temp46_83 () (_ BitVec 64))
(declare-fun var922723 () (_ BitVec 64))
(declare-fun temp46_84 () (_ BitVec 64))
(declare-fun temp46_85 () (_ BitVec 64))
(declare-fun var922731 () (_ BitVec 64))
(declare-fun temp46_86 () (_ BitVec 64))
(declare-fun temp46_87 () (_ BitVec 64))
(declare-fun var922736 () (_ BitVec 64))
(declare-fun var922737 () (_ BitVec 64))
(declare-fun temp46_88 () (_ BitVec 64))
(declare-fun var922738 () (_ BitVec 64))
(declare-fun temp46_89 () (_ BitVec 64))
(declare-fun var922739 () (_ BitVec 64))
(declare-fun temp46_90 () (_ BitVec 64))
(declare-fun var922784 () (_ BitVec 64))
(declare-fun temp46_91 () (_ BitVec 64))
(declare-fun var988689 () (_ BitVec 64))
(declare-fun var988690 () (_ BitVec 64))
(declare-fun var1054214 () (_ BitVec 64))
(declare-fun var1054215 () (_ BitVec 64))
(declare-fun var1119319 () (_ BitVec 64))
(declare-fun var1119320 () (_ BitVec 64))
(declare-fun temp46_92 () (_ BitVec 64))
(declare-fun var1119321 () (_ BitVec 64))
(declare-fun temp46_93 () (_ BitVec 64))
(declare-fun var1119331 () (_ BitVec 64))
(declare-fun temp46_94 () (_ BitVec 64))
(declare-fun temp46_95 () (_ BitVec 64))
(declare-fun var1119339 () (_ BitVec 64))
(declare-fun temp46_96 () (_ BitVec 64))
(declare-fun temp46_97 () (_ BitVec 64))
(declare-fun var1119344 () (_ BitVec 64))
(declare-fun var1119345 () (_ BitVec 64))
(declare-fun temp46_98 () (_ BitVec 64))
(declare-fun var1119346 () (_ BitVec 64))
(declare-fun temp46_99 () (_ BitVec 64))
(declare-fun var1119347 () (_ BitVec 64))
(declare-fun var1119359 () (_ BitVec 64))
(declare-fun var1119360 () (_ BitVec 64))
(declare-fun var1119361 () (_ BitVec 64))
(declare-fun temp46_100 () (_ BitVec 64))
(declare-fun var1119392 () (_ BitVec 64))
(declare-fun temp46_101 () (_ BitVec 64))
(assert (= temp46_1 #x0000000000000004))
(assert (= var68041
   (ite (= ARGNAME_input_NAMEEND_DIM temp46_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp46_2 #x0000000000000001))
(assert (= var68041 temp46_2))
(assert (= temp46_3 #x0000000000000004))
(assert (= var68076
   (ite (= ARGNAME_filter_NAMEEND_DIM temp46_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp46_4 #x0000000000000001))
(assert (= var68076 temp46_4))
(assert (= temp46_5 #x0000000000000000))
(assert (= var134499
   (ite (= ARGNAME_min_input_NAMEEND_DIM temp46_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var134495 var134499))
(assert (= var68102 var134495))
(assert (= temp46_6 #x0000000000000001))
(assert (= var68102 temp46_6))
(assert (= temp46_7 #x0000000000000000))
(assert (= var200035
   (ite (= ARGNAME_max_input_NAMEEND_DIM temp46_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var200031 var200035))
(assert (= var68130 var200031))
(assert (= temp46_8 #x0000000000000001))
(assert (= var68130 temp46_8))
(assert (= temp46_9 #x0000000000000000))
(assert (= var265571
   (ite (= ARGNAME_min_filter_NAMEEND_DIM temp46_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var265567 var265571))
(assert (= var68156 var265567))
(assert (= temp46_10 #x0000000000000001))
(assert (= var68156 temp46_10))
(assert (= temp46_11 #x0000000000000000))
(assert (= var331107
   (ite (= ARGNAME_max_filter_NAMEEND_DIM temp46_11)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var331103 var331107))
(assert (= var68183 var331103))
(assert (= temp46_12 #x0000000000000001))
(assert (= var68183 temp46_12))
(assert (= temp46_13 #x0000000000000000))
(assert (= var396672 temp46_13))
(assert (= temp46_14 #x0000000000000000))
(assert (= var462208 temp46_14))
(assert (= temp46_15 #x0000000000000000))
(assert (= var527744 temp46_15))
(assert (= temp46_16 #x0000000000000000))
(assert (= var593280 temp46_16))
(assert (= temp46_17 #x0000000000000000))
(assert (= var724381 temp46_17))
(assert (= var724357 var724381))
(assert (= var68268 var724357))
(assert (= var68269 var68268))
(assert (= temp46_18 #x0000000000000000))
(assert (= temp46_19 (select ARGNAME_input_NAMEEND_DIMSIZE temp46_18)))
(assert (= temp46_20 #x0000000000000001))
(assert (= temp46_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp46_20)))
(assert (= temp46_22 #x0000000000000002))
(assert (= temp46_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp46_22)))
(assert (= temp46_24 #x0000000000000003))
(assert (= temp46_25 (select ARGNAME_input_NAMEEND_DIMSIZE temp46_24)))
(assert (= temp46_26 #x0000000000000004))
(assert (= temp46_27 (select ARGNAME_input_NAMEEND_DIMSIZE temp46_26)))
(assert (= temp46_28 #x0000000000000005))
(assert (= temp46_29 (select ARGNAME_input_NAMEEND_DIMSIZE temp46_28)))
(assert (= temp46_30 #x0000000000000003))
(assert (= temp46_31 (select ARGNAME_input_NAMEEND_DIMSIZE temp46_30)))
(assert (= var68270 temp46_31))
(assert (= temp46_32 #x0000000000000000))
(assert (= temp46_33 (select ARGNAME_filter_NAMEEND_DIMSIZE temp46_32)))
(assert (= temp46_34 #x0000000000000001))
(assert (= temp46_35 (select ARGNAME_filter_NAMEEND_DIMSIZE temp46_34)))
(assert (= temp46_36 #x0000000000000002))
(assert (= temp46_37 (select ARGNAME_filter_NAMEEND_DIMSIZE temp46_36)))
(assert (= temp46_38 #x0000000000000003))
(assert (= temp46_39 (select ARGNAME_filter_NAMEEND_DIMSIZE temp46_38)))
(assert (= temp46_40 #x0000000000000004))
(assert (= temp46_41 (select ARGNAME_filter_NAMEEND_DIMSIZE temp46_40)))
(assert (= temp46_42 #x0000000000000005))
(assert (= temp46_43 (select ARGNAME_filter_NAMEEND_DIMSIZE temp46_42)))
(assert (= temp46_44 #x0000000000000002))
(assert (= temp46_45 (select ARGNAME_filter_NAMEEND_DIMSIZE temp46_44)))
(assert (= var68273 temp46_45))
(assert (= var68274 (ite (= var68270 var68273) #x0000000000000001 #x0000000000000000)))
(assert (= temp46_46 #x0000000000000001))
(assert (= var68274 temp46_46))
(assert (= temp46_47 #x0000000000000003))
(assert (= temp46_48 (select ARGNAME_filter_NAMEEND_DIMSIZE temp46_47)))
(assert (= var68298 temp46_48))
(assert (= temp46_49 #x0000000000000001))
(assert (= temp46_50 (select ARGNAME_input_NAMEEND_DIMSIZE temp46_49)))
(assert (= var68299 temp46_50))
(assert (= temp46_51 #x0000000000000000))
(assert (= temp46_52 (select ARGNAME_filter_NAMEEND_DIMSIZE temp46_51)))
(assert (= var68300 temp46_52))
(assert (= temp46_53 #x0000000000000002))
(assert (= temp46_54 (select ARGNAME_input_NAMEEND_DIMSIZE temp46_53)))
(assert (= var68301 temp46_54))
(assert (= temp46_55 #x0000000000000001))
(assert (= temp46_56 (select ARGNAME_filter_NAMEEND_DIMSIZE temp46_55)))
(assert (= var68302 temp46_56))
(assert (= temp46_57 #x0000000000000000))
(assert (= temp46_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp46_57)))
(assert (= var68303 temp46_58))
(assert (= temp46_59 #x0000000000000000))
(assert (= temp46_60 (select ARGNAME_strides_NAMEEND_VAL temp46_59)))
(assert (= temp46_61 #x0000000000000001))
(assert (= temp46_62 (select ARGNAME_strides_NAMEEND_VAL temp46_61)))
(assert (= temp46_63 #x0000000000000002))
(assert (= temp46_64 (select ARGNAME_strides_NAMEEND_VAL temp46_63)))
(assert (= temp46_65 #x0000000000000003))
(assert (= temp46_66 (select ARGNAME_strides_NAMEEND_VAL temp46_65)))
(assert (= temp46_67 #x0000000000000004))
(assert (= temp46_68 (select ARGNAME_strides_NAMEEND_VAL temp46_67)))
(assert (= temp46_69 #x0000000000000005))
(assert (= temp46_70 (select ARGNAME_strides_NAMEEND_VAL temp46_69)))
(assert (= temp46_71 #x0000000000000001))
(assert (= temp46_73 (select ARGNAME_strides_NAMEEND_VAL temp46_71)))
(assert (= temp46_72 temp46_73))
(assert (= temp46_75 #x0000000000000000))
(assert (= temp46_74 temp46_75))
(assert (= temp46_77 #x0000000000000000))
(assert (= temp46_76 temp46_77))
(assert (= temp46_79 #x0000000000000000))
(assert (= temp46_78 temp46_79))
(assert (= temp46_81 #x0000000000000000))
(assert (= temp46_80 temp46_81))
(assert (= var792081 var68299))
(assert (= var792082 var68300))
(assert (= var857606 var792081))
(assert (= var857607 var792082))
(assert (= var922711 var857606))
(assert (= var922712 var857607))
(assert (= temp46_82 #x0000000000000001))
(assert (= var922713 temp46_82))
(assert (= temp46_83 #x0000000000000001))
(assert (= var922723
   (ite (bvslt temp46_72 temp46_83) #x0000000000000001 #x0000000000000000)))
(assert (= temp46_84 #x0000000000000000))
(assert (= var922723 temp46_84))
(assert (= temp46_85 #x0000000000000001))
(assert (= var922731
   (ite (bvslt var922713 temp46_85) #x0000000000000001 #x0000000000000000)))
(assert (= temp46_86 #x0000000000000000))
(assert (= var922731 temp46_86))
(assert (= temp46_87 #xffffffffffffffff))
(assert (= var922736 (bvadd var922712 temp46_87)))
(assert (= var922737 (bvmul var922736 var922713)))
(assert (= temp46_88 #x0000000000000001))
(assert (= var922738 (bvadd var922737 temp46_88)))
(assert (= temp46_89 #xffffffffffffffff))
(assert (= var922739 (bvxor var922737 temp46_89)))
(assert (= temp46_90 #x0000000000000000))
(assert (= var922784
   (ite (bvslt temp46_74 temp46_90) #x0000000000000001 #x0000000000000000)))
(assert (= temp46_91 #x0000000000000000))
(assert (= var922784 temp46_91))
(assert (= var988689 var68301))
(assert (= var988690 var68302))
(assert (= var1054214 var988689))
(assert (= var1054215 var988690))
(assert (= var1119319 var1054214))
(assert (= var1119320 var1054215))
(assert (= temp46_92 #x0000000000000001))
(assert (= var1119321 temp46_92))
(assert (= temp46_93 #x0000000000000001))
(assert (= var1119331
   (ite (bvslt temp46_72 temp46_93) #x0000000000000001 #x0000000000000000)))
(assert (= temp46_94 #x0000000000000000))
(assert (= var1119331 temp46_94))
(assert (= temp46_95 #x0000000000000001))
(assert (= var1119339
   (ite (bvslt var1119321 temp46_95) #x0000000000000001 #x0000000000000000)))
(assert (= temp46_96 #x0000000000000000))
(assert (= var1119339 temp46_96))
(assert (= temp46_97 #xffffffffffffffff))
(assert (= var1119344 (bvadd var1119320 temp46_97)))
(assert (= var1119345 (bvmul var1119344 var1119321)))
(assert (= temp46_98 #x0000000000000001))
(assert (= var1119346 (bvadd var1119345 temp46_98)))
(assert (= temp46_99 #xffffffffffffffff))
(assert (= var1119347 (bvxor var1119345 temp46_99)))
(assert (= var1119359 (bvadd temp46_72 var1119319)))
(assert (= var1119360 (bvadd var1119359 var1119347)))
(assert (= var1119361 (bvadd var1119360 temp46_80)))
(assert (= temp46_100 #x0000000000000000))
(assert (= var1119392
   (ite (bvslt temp46_76 temp46_100) #x0000000000000001 #x0000000000000000)))
(assert (= temp46_101 #x0000000000000000))
(assert (= var1119392 temp46_101))
(model-add temp46_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp46_2 () (_ BitVec 64) #x0000000000000001)
(model-add var68041 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))















