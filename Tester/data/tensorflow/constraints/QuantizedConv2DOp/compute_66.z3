(declare-fun temp65_1 () (_ BitVec 64))
(declare-fun temp65_2 () (_ BitVec 64))
(declare-fun var68041 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp65_3 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var68076 () (_ BitVec 64))
(declare-fun temp65_4 () (_ BitVec 64))
(declare-fun temp65_5 () (_ BitVec 64))
(declare-fun ARGNAME_min_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var134499 () (_ BitVec 64))
(declare-fun var134495 () (_ BitVec 64))
(declare-fun var68102 () (_ BitVec 64))
(declare-fun temp65_6 () (_ BitVec 64))
(declare-fun temp65_7 () (_ BitVec 64))
(declare-fun ARGNAME_max_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var200035 () (_ BitVec 64))
(declare-fun var200031 () (_ BitVec 64))
(declare-fun var68130 () (_ BitVec 64))
(declare-fun temp65_8 () (_ BitVec 64))
(declare-fun temp65_9 () (_ BitVec 64))
(declare-fun ARGNAME_min_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var265571 () (_ BitVec 64))
(declare-fun var265567 () (_ BitVec 64))
(declare-fun var68156 () (_ BitVec 64))
(declare-fun temp65_10 () (_ BitVec 64))
(declare-fun temp65_11 () (_ BitVec 64))
(declare-fun ARGNAME_max_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var331107 () (_ BitVec 64))
(declare-fun var331103 () (_ BitVec 64))
(declare-fun var68183 () (_ BitVec 64))
(declare-fun temp65_12 () (_ BitVec 64))
(declare-fun temp65_13 () (_ BitVec 64))
(declare-fun var396672 () (_ BitVec 64))
(declare-fun temp65_14 () (_ BitVec 64))
(declare-fun var462208 () (_ BitVec 64))
(declare-fun temp65_15 () (_ BitVec 64))
(declare-fun var527744 () (_ BitVec 64))
(declare-fun temp65_16 () (_ BitVec 64))
(declare-fun var593280 () (_ BitVec 64))
(declare-fun temp65_17 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp65_18 () (_ BitVec 64))
(declare-fun temp65_19 () (_ BitVec 64))
(declare-fun temp65_20 () (_ BitVec 64))
(declare-fun temp65_21 () (_ BitVec 64))
(declare-fun temp65_22 () (_ BitVec 64))
(declare-fun temp65_23 () (_ BitVec 64))
(declare-fun temp65_24 () (_ BitVec 64))
(declare-fun temp65_25 () (_ BitVec 64))
(declare-fun temp65_26 () (_ BitVec 64))
(declare-fun temp65_27 () (_ BitVec 64))
(declare-fun temp65_28 () (_ BitVec 64))
(declare-fun temp65_29 () (_ BitVec 64))
(declare-fun temp65_30 () (_ BitVec 64))
(declare-fun var68270 () (_ BitVec 64))
(declare-fun temp65_31 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp65_32 () (_ BitVec 64))
(declare-fun temp65_33 () (_ BitVec 64))
(declare-fun temp65_34 () (_ BitVec 64))
(declare-fun temp65_35 () (_ BitVec 64))
(declare-fun temp65_36 () (_ BitVec 64))
(declare-fun temp65_37 () (_ BitVec 64))
(declare-fun temp65_38 () (_ BitVec 64))
(declare-fun temp65_39 () (_ BitVec 64))
(declare-fun temp65_40 () (_ BitVec 64))
(declare-fun temp65_41 () (_ BitVec 64))
(declare-fun temp65_42 () (_ BitVec 64))
(declare-fun temp65_43 () (_ BitVec 64))
(declare-fun temp65_44 () (_ BitVec 64))
(declare-fun var68273 () (_ BitVec 64))
(declare-fun var68274 () (_ BitVec 64))
(declare-fun temp65_45 () (_ BitVec 64))
(declare-fun temp65_46 () (_ BitVec 64))
(declare-fun temp65_47 () (_ BitVec 64))
(declare-fun var68298 () (_ BitVec 64))
(declare-fun temp65_48 () (_ BitVec 64))
(declare-fun temp65_49 () (_ BitVec 64))
(declare-fun var68299 () (_ BitVec 64))
(declare-fun temp65_50 () (_ BitVec 64))
(declare-fun temp65_51 () (_ BitVec 64))
(declare-fun var68300 () (_ BitVec 64))
(declare-fun temp65_52 () (_ BitVec 64))
(declare-fun temp65_53 () (_ BitVec 64))
(declare-fun var68301 () (_ BitVec 64))
(declare-fun temp65_54 () (_ BitVec 64))
(declare-fun temp65_55 () (_ BitVec 64))
(declare-fun var68302 () (_ BitVec 64))
(declare-fun temp65_56 () (_ BitVec 64))
(declare-fun temp65_57 () (_ BitVec 64))
(declare-fun var68303 () (_ BitVec 64))
(declare-fun temp65_58 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp65_59 () (_ BitVec 64))
(declare-fun temp65_60 () (_ BitVec 64))
(declare-fun temp65_61 () (_ BitVec 64))
(declare-fun temp65_62 () (_ BitVec 64))
(declare-fun temp65_63 () (_ BitVec 64))
(declare-fun temp65_64 () (_ BitVec 64))
(declare-fun temp65_65 () (_ BitVec 64))
(declare-fun temp65_66 () (_ BitVec 64))
(declare-fun temp65_67 () (_ BitVec 64))
(declare-fun temp65_68 () (_ BitVec 64))
(declare-fun temp65_69 () (_ BitVec 64))
(declare-fun temp65_70 () (_ BitVec 64))
(declare-fun temp65_72 () (_ BitVec 64))
(declare-fun temp65_71 () (_ BitVec 64))
(declare-fun temp65_74 () (_ BitVec 64))
(declare-fun temp65_73 () (_ BitVec 64))
(declare-fun temp65_76 () (_ BitVec 64))
(declare-fun temp65_75 () (_ BitVec 64))
(declare-fun temp65_78 () (_ BitVec 64))
(declare-fun temp65_77 () (_ BitVec 64))
(declare-fun temp65_80 () (_ BitVec 64))
(declare-fun temp65_79 () (_ BitVec 64))
(declare-fun var792081 () (_ BitVec 64))
(declare-fun var792082 () (_ BitVec 64))
(declare-fun var857606 () (_ BitVec 64))
(declare-fun var857607 () (_ BitVec 64))
(declare-fun var922711 () (_ BitVec 64))
(declare-fun var922712 () (_ BitVec 64))
(declare-fun temp65_81 () (_ BitVec 64))
(declare-fun var922713 () (_ BitVec 64))
(declare-fun temp65_82 () (_ BitVec 64))
(declare-fun var922723 () (_ BitVec 64))
(declare-fun temp65_83 () (_ BitVec 64))
(declare-fun temp65_84 () (_ BitVec 64))
(declare-fun var922731 () (_ BitVec 64))
(declare-fun temp65_85 () (_ BitVec 64))
(declare-fun temp65_86 () (_ BitVec 64))
(declare-fun var922736 () (_ BitVec 64))
(declare-fun var922737 () (_ BitVec 64))
(declare-fun temp65_87 () (_ BitVec 64))
(declare-fun var922738 () (_ BitVec 64))
(declare-fun temp65_88 () (_ BitVec 64))
(declare-fun var922739 () (_ BitVec 64))
(declare-fun temp65_89 () (_ BitVec 64))
(declare-fun var922784 () (_ BitVec 64))
(declare-fun temp65_90 () (_ BitVec 64))
(declare-fun var988689 () (_ BitVec 64))
(declare-fun var988690 () (_ BitVec 64))
(declare-fun var1054214 () (_ BitVec 64))
(declare-fun var1054215 () (_ BitVec 64))
(declare-fun var1119319 () (_ BitVec 64))
(declare-fun var1119320 () (_ BitVec 64))
(declare-fun temp65_91 () (_ BitVec 64))
(declare-fun var1119321 () (_ BitVec 64))
(declare-fun temp65_92 () (_ BitVec 64))
(declare-fun var1119331 () (_ BitVec 64))
(declare-fun temp65_93 () (_ BitVec 64))
(declare-fun temp65_94 () (_ BitVec 64))
(declare-fun var1119339 () (_ BitVec 64))
(declare-fun temp65_95 () (_ BitVec 64))
(declare-fun temp65_96 () (_ BitVec 64))
(declare-fun var1119344 () (_ BitVec 64))
(declare-fun var1119345 () (_ BitVec 64))
(declare-fun temp65_97 () (_ BitVec 64))
(declare-fun var1119346 () (_ BitVec 64))
(declare-fun temp65_98 () (_ BitVec 64))
(declare-fun var1119347 () (_ BitVec 64))
(declare-fun temp65_99 () (_ BitVec 64))
(declare-fun var1119392 () (_ BitVec 64))
(declare-fun temp65_100 () (_ BitVec 64))
(assert (= temp65_1 #x0000000000000004))
(assert (= var68041
   (ite (= ARGNAME_input_NAMEEND_DIM temp65_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp65_2 #x0000000000000001))
(assert (= var68041 temp65_2))
(assert (= temp65_3 #x0000000000000004))
(assert (= var68076
   (ite (= ARGNAME_filter_NAMEEND_DIM temp65_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp65_4 #x0000000000000001))
(assert (= var68076 temp65_4))
(assert (= temp65_5 #x0000000000000000))
(assert (= var134499
   (ite (= ARGNAME_min_input_NAMEEND_DIM temp65_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var134495 var134499))
(assert (= var68102 var134495))
(assert (= temp65_6 #x0000000000000001))
(assert (= var68102 temp65_6))
(assert (= temp65_7 #x0000000000000000))
(assert (= var200035
   (ite (= ARGNAME_max_input_NAMEEND_DIM temp65_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var200031 var200035))
(assert (= var68130 var200031))
(assert (= temp65_8 #x0000000000000001))
(assert (= var68130 temp65_8))
(assert (= temp65_9 #x0000000000000000))
(assert (= var265571
   (ite (= ARGNAME_min_filter_NAMEEND_DIM temp65_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var265567 var265571))
(assert (= var68156 var265567))
(assert (= temp65_10 #x0000000000000001))
(assert (= var68156 temp65_10))
(assert (= temp65_11 #x0000000000000000))
(assert (= var331107
   (ite (= ARGNAME_max_filter_NAMEEND_DIM temp65_11)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var331103 var331107))
(assert (= var68183 var331103))
(assert (= temp65_12 #x0000000000000001))
(assert (= var68183 temp65_12))
(assert (= temp65_13 #x0000000000000000))
(assert (= var396672 temp65_13))
(assert (= temp65_14 #x0000000000000000))
(assert (= var462208 temp65_14))
(assert (= temp65_15 #x0000000000000000))
(assert (= var527744 temp65_15))
(assert (= temp65_16 #x0000000000000000))
(assert (= var593280 temp65_16))
(assert (= temp65_17 #x0000000000000000))
(assert (= temp65_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp65_17)))
(assert (= temp65_19 #x0000000000000001))
(assert (= temp65_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp65_19)))
(assert (= temp65_21 #x0000000000000002))
(assert (= temp65_22 (select ARGNAME_input_NAMEEND_DIMSIZE temp65_21)))
(assert (= temp65_23 #x0000000000000003))
(assert (= temp65_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp65_23)))
(assert (= temp65_25 #x0000000000000004))
(assert (= temp65_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp65_25)))
(assert (= temp65_27 #x0000000000000005))
(assert (= temp65_28 (select ARGNAME_input_NAMEEND_DIMSIZE temp65_27)))
(assert (= temp65_29 #x0000000000000003))
(assert (= temp65_30 (select ARGNAME_input_NAMEEND_DIMSIZE temp65_29)))
(assert (= var68270 temp65_30))
(assert (= temp65_31 #x0000000000000000))
(assert (= temp65_32 (select ARGNAME_filter_NAMEEND_DIMSIZE temp65_31)))
(assert (= temp65_33 #x0000000000000001))
(assert (= temp65_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp65_33)))
(assert (= temp65_35 #x0000000000000002))
(assert (= temp65_36 (select ARGNAME_filter_NAMEEND_DIMSIZE temp65_35)))
(assert (= temp65_37 #x0000000000000003))
(assert (= temp65_38 (select ARGNAME_filter_NAMEEND_DIMSIZE temp65_37)))
(assert (= temp65_39 #x0000000000000004))
(assert (= temp65_40 (select ARGNAME_filter_NAMEEND_DIMSIZE temp65_39)))
(assert (= temp65_41 #x0000000000000005))
(assert (= temp65_42 (select ARGNAME_filter_NAMEEND_DIMSIZE temp65_41)))
(assert (= temp65_43 #x0000000000000002))
(assert (= temp65_44 (select ARGNAME_filter_NAMEEND_DIMSIZE temp65_43)))
(assert (= var68273 temp65_44))
(assert (= var68274 (ite (= var68270 var68273) #x0000000000000001 #x0000000000000000)))
(assert (= temp65_45 #x0000000000000001))
(assert (= var68274 temp65_45))
(assert (= temp65_46 #x0000000000000003))
(assert (= temp65_47 (select ARGNAME_filter_NAMEEND_DIMSIZE temp65_46)))
(assert (= var68298 temp65_47))
(assert (= temp65_48 #x0000000000000001))
(assert (= temp65_49 (select ARGNAME_input_NAMEEND_DIMSIZE temp65_48)))
(assert (= var68299 temp65_49))
(assert (= temp65_50 #x0000000000000000))
(assert (= temp65_51 (select ARGNAME_filter_NAMEEND_DIMSIZE temp65_50)))
(assert (= var68300 temp65_51))
(assert (= temp65_52 #x0000000000000002))
(assert (= temp65_53 (select ARGNAME_input_NAMEEND_DIMSIZE temp65_52)))
(assert (= var68301 temp65_53))
(assert (= temp65_54 #x0000000000000001))
(assert (= temp65_55 (select ARGNAME_filter_NAMEEND_DIMSIZE temp65_54)))
(assert (= var68302 temp65_55))
(assert (= temp65_56 #x0000000000000000))
(assert (= temp65_57 (select ARGNAME_input_NAMEEND_DIMSIZE temp65_56)))
(assert (= var68303 temp65_57))
(assert (= temp65_58 #x0000000000000000))
(assert (= temp65_59 (select ARGNAME_strides_NAMEEND_VAL temp65_58)))
(assert (= temp65_60 #x0000000000000001))
(assert (= temp65_61 (select ARGNAME_strides_NAMEEND_VAL temp65_60)))
(assert (= temp65_62 #x0000000000000002))
(assert (= temp65_63 (select ARGNAME_strides_NAMEEND_VAL temp65_62)))
(assert (= temp65_64 #x0000000000000003))
(assert (= temp65_65 (select ARGNAME_strides_NAMEEND_VAL temp65_64)))
(assert (= temp65_66 #x0000000000000004))
(assert (= temp65_67 (select ARGNAME_strides_NAMEEND_VAL temp65_66)))
(assert (= temp65_68 #x0000000000000005))
(assert (= temp65_69 (select ARGNAME_strides_NAMEEND_VAL temp65_68)))
(assert (= temp65_70 #x0000000000000001))
(assert (= temp65_72 (select ARGNAME_strides_NAMEEND_VAL temp65_70)))
(assert (= temp65_71 temp65_72))
(assert (= temp65_74 #x0000000000000000))
(assert (= temp65_73 temp65_74))
(assert (= temp65_76 #x0000000000000000))
(assert (= temp65_75 temp65_76))
(assert (= temp65_78 #x0000000000000000))
(assert (= temp65_77 temp65_78))
(assert (= temp65_80 #x0000000000000000))
(assert (= temp65_79 temp65_80))
(assert (= var792081 var68299))
(assert (= var792082 var68300))
(assert (= var857606 var792081))
(assert (= var857607 var792082))
(assert (= var922711 var857606))
(assert (= var922712 var857607))
(assert (= temp65_81 #x0000000000000001))
(assert (= var922713 temp65_81))
(assert (= temp65_82 #x0000000000000001))
(assert (= var922723
   (ite (bvslt temp65_71 temp65_82) #x0000000000000001 #x0000000000000000)))
(assert (= temp65_83 #x0000000000000000))
(assert (= var922723 temp65_83))
(assert (= temp65_84 #x0000000000000001))
(assert (= var922731
   (ite (bvslt var922713 temp65_84) #x0000000000000001 #x0000000000000000)))
(assert (= temp65_85 #x0000000000000000))
(assert (= var922731 temp65_85))
(assert (= temp65_86 #xffffffffffffffff))
(assert (= var922736 (bvadd var922712 temp65_86)))
(assert (= var922737 (bvmul var922736 var922713)))
(assert (= temp65_87 #x0000000000000001))
(assert (= var922738 (bvadd var922737 temp65_87)))
(assert (= temp65_88 #xffffffffffffffff))
(assert (= var922739 (bvxor var922737 temp65_88)))
(assert (= temp65_89 #x0000000000000000))
(assert (= var922784
   (ite (bvslt temp65_73 temp65_89) #x0000000000000001 #x0000000000000000)))
(assert (= temp65_90 #x0000000000000000))
(assert (= var922784 temp65_90))
(assert (= var988689 var68301))
(assert (= var988690 var68302))
(assert (= var1054214 var988689))
(assert (= var1054215 var988690))
(assert (= var1119319 var1054214))
(assert (= var1119320 var1054215))
(assert (= temp65_91 #x0000000000000001))
(assert (= var1119321 temp65_91))
(assert (= temp65_92 #x0000000000000001))
(assert (= var1119331
   (ite (bvslt temp65_71 temp65_92) #x0000000000000001 #x0000000000000000)))
(assert (= temp65_93 #x0000000000000000))
(assert (= var1119331 temp65_93))
(assert (= temp65_94 #x0000000000000001))
(assert (= var1119339
   (ite (bvslt var1119321 temp65_94) #x0000000000000001 #x0000000000000000)))
(assert (= temp65_95 #x0000000000000000))
(assert (= var1119339 temp65_95))
(assert (= temp65_96 #xffffffffffffffff))
(assert (= var1119344 (bvadd var1119320 temp65_96)))
(assert (= var1119345 (bvmul var1119344 var1119321)))
(assert (= temp65_97 #x0000000000000001))
(assert (= var1119346 (bvadd var1119345 temp65_97)))
(assert (= temp65_98 #xffffffffffffffff))
(assert (= var1119347 (bvxor var1119345 temp65_98)))
(assert (= temp65_99 #x0000000000000000))
(assert (= var1119392
   (ite (bvslt temp65_75 temp65_99) #x0000000000000001 #x0000000000000000)))
(assert (= temp65_100 #x0000000000000000))
(assert (= var1119392 temp65_100))
(model-add temp65_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp65_2 () (_ BitVec 64) #x0000000000000001)
(model-add var68041 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))















