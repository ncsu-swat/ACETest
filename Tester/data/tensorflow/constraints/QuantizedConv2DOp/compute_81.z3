(declare-fun temp80_1 () (_ BitVec 64))
(declare-fun temp80_2 () (_ BitVec 64))
(declare-fun var68041 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp80_3 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var68076 () (_ BitVec 64))
(declare-fun temp80_4 () (_ BitVec 64))
(declare-fun temp80_5 () (_ BitVec 64))
(declare-fun ARGNAME_min_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var134499 () (_ BitVec 64))
(declare-fun var134495 () (_ BitVec 64))
(declare-fun var68102 () (_ BitVec 64))
(declare-fun temp80_6 () (_ BitVec 64))
(declare-fun temp80_7 () (_ BitVec 64))
(declare-fun ARGNAME_max_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var200035 () (_ BitVec 64))
(declare-fun var200031 () (_ BitVec 64))
(declare-fun var68130 () (_ BitVec 64))
(declare-fun temp80_8 () (_ BitVec 64))
(declare-fun temp80_9 () (_ BitVec 64))
(declare-fun ARGNAME_min_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var265571 () (_ BitVec 64))
(declare-fun var265567 () (_ BitVec 64))
(declare-fun var68156 () (_ BitVec 64))
(declare-fun temp80_10 () (_ BitVec 64))
(declare-fun temp80_11 () (_ BitVec 64))
(declare-fun ARGNAME_max_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var331107 () (_ BitVec 64))
(declare-fun var331103 () (_ BitVec 64))
(declare-fun var68183 () (_ BitVec 64))
(declare-fun temp80_12 () (_ BitVec 64))
(declare-fun temp80_13 () (_ BitVec 64))
(declare-fun var396672 () (_ BitVec 64))
(declare-fun temp80_14 () (_ BitVec 64))
(declare-fun var462208 () (_ BitVec 64))
(declare-fun temp80_15 () (_ BitVec 64))
(declare-fun var527744 () (_ BitVec 64))
(declare-fun temp80_16 () (_ BitVec 64))
(declare-fun var593280 () (_ BitVec 64))
(declare-fun temp80_17 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp80_18 () (_ BitVec 64))
(declare-fun temp80_19 () (_ BitVec 64))
(declare-fun temp80_20 () (_ BitVec 64))
(declare-fun temp80_21 () (_ BitVec 64))
(declare-fun temp80_22 () (_ BitVec 64))
(declare-fun temp80_23 () (_ BitVec 64))
(declare-fun temp80_24 () (_ BitVec 64))
(declare-fun temp80_25 () (_ BitVec 64))
(declare-fun temp80_26 () (_ BitVec 64))
(declare-fun temp80_27 () (_ BitVec 64))
(declare-fun temp80_28 () (_ BitVec 64))
(declare-fun temp80_29 () (_ BitVec 64))
(declare-fun temp80_30 () (_ BitVec 64))
(declare-fun var68270 () (_ BitVec 64))
(declare-fun temp80_31 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp80_32 () (_ BitVec 64))
(declare-fun temp80_33 () (_ BitVec 64))
(declare-fun temp80_34 () (_ BitVec 64))
(declare-fun temp80_35 () (_ BitVec 64))
(declare-fun temp80_36 () (_ BitVec 64))
(declare-fun temp80_37 () (_ BitVec 64))
(declare-fun temp80_38 () (_ BitVec 64))
(declare-fun temp80_39 () (_ BitVec 64))
(declare-fun temp80_40 () (_ BitVec 64))
(declare-fun temp80_41 () (_ BitVec 64))
(declare-fun temp80_42 () (_ BitVec 64))
(declare-fun temp80_43 () (_ BitVec 64))
(declare-fun temp80_44 () (_ BitVec 64))
(declare-fun var68273 () (_ BitVec 64))
(declare-fun var68274 () (_ BitVec 64))
(declare-fun temp80_45 () (_ BitVec 64))
(declare-fun temp80_46 () (_ BitVec 64))
(declare-fun temp80_47 () (_ BitVec 64))
(declare-fun var68298 () (_ BitVec 64))
(declare-fun temp80_48 () (_ BitVec 64))
(declare-fun temp80_49 () (_ BitVec 64))
(declare-fun var68299 () (_ BitVec 64))
(declare-fun temp80_50 () (_ BitVec 64))
(declare-fun temp80_51 () (_ BitVec 64))
(declare-fun var68300 () (_ BitVec 64))
(declare-fun temp80_52 () (_ BitVec 64))
(declare-fun temp80_53 () (_ BitVec 64))
(declare-fun var68301 () (_ BitVec 64))
(declare-fun temp80_54 () (_ BitVec 64))
(declare-fun temp80_55 () (_ BitVec 64))
(declare-fun var68302 () (_ BitVec 64))
(declare-fun temp80_56 () (_ BitVec 64))
(declare-fun temp80_57 () (_ BitVec 64))
(declare-fun var68303 () (_ BitVec 64))
(declare-fun temp80_58 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp80_59 () (_ BitVec 64))
(declare-fun temp80_60 () (_ BitVec 64))
(declare-fun temp80_61 () (_ BitVec 64))
(declare-fun temp80_62 () (_ BitVec 64))
(declare-fun temp80_63 () (_ BitVec 64))
(declare-fun temp80_64 () (_ BitVec 64))
(declare-fun temp80_65 () (_ BitVec 64))
(declare-fun temp80_66 () (_ BitVec 64))
(declare-fun temp80_67 () (_ BitVec 64))
(declare-fun temp80_68 () (_ BitVec 64))
(declare-fun temp80_69 () (_ BitVec 64))
(declare-fun temp80_70 () (_ BitVec 64))
(declare-fun temp80_72 () (_ BitVec 64))
(declare-fun temp80_71 () (_ BitVec 64))
(declare-fun temp80_74 () (_ BitVec 64))
(declare-fun temp80_73 () (_ BitVec 64))
(declare-fun temp80_76 () (_ BitVec 64))
(declare-fun temp80_75 () (_ BitVec 64))
(declare-fun temp80_78 () (_ BitVec 64))
(declare-fun temp80_77 () (_ BitVec 64))
(declare-fun temp80_80 () (_ BitVec 64))
(declare-fun temp80_79 () (_ BitVec 64))
(declare-fun var792081 () (_ BitVec 64))
(declare-fun var792082 () (_ BitVec 64))
(declare-fun var857606 () (_ BitVec 64))
(declare-fun var857607 () (_ BitVec 64))
(declare-fun var922711 () (_ BitVec 64))
(declare-fun var922712 () (_ BitVec 64))
(declare-fun temp80_81 () (_ BitVec 64))
(declare-fun var922713 () (_ BitVec 64))
(declare-fun temp80_82 () (_ BitVec 64))
(declare-fun var922723 () (_ BitVec 64))
(declare-fun temp80_83 () (_ BitVec 64))
(declare-fun temp80_84 () (_ BitVec 64))
(declare-fun var922731 () (_ BitVec 64))
(declare-fun temp80_85 () (_ BitVec 64))
(declare-fun temp80_86 () (_ BitVec 64))
(declare-fun var922736 () (_ BitVec 64))
(declare-fun var922737 () (_ BitVec 64))
(declare-fun temp80_87 () (_ BitVec 64))
(declare-fun var922738 () (_ BitVec 64))
(declare-fun temp80_88 () (_ BitVec 64))
(declare-fun var922739 () (_ BitVec 64))
(declare-fun temp80_89 () (_ BitVec 64))
(declare-fun var922758 () (_ BitVec 64))
(declare-fun var922759 () (_ BitVec 64))
(declare-fun var922760 () (_ BitVec 64))
(declare-fun temp80_91 () (_ BitVec 64))
(declare-fun temp80_90 () (_ BitVec 64))
(declare-fun temp80_92 () (_ BitVec 64))
(declare-fun var922767 () (_ BitVec 64))
(declare-fun var922768 () (_ BitVec 64))
(declare-fun var922769 () (_ BitVec 64))
(declare-fun var922770 () (_ BitVec 64))
(declare-fun var922783 () (_ BitVec 64))
(declare-fun temp80_93 () (_ BitVec 64))
(declare-fun var922784 () (_ BitVec 64))
(declare-fun temp80_94 () (_ BitVec 64))
(declare-fun var1054225 () (_ BitVec 64))
(declare-fun var1054226 () (_ BitVec 64))
(declare-fun var1119750 () (_ BitVec 64))
(declare-fun var1119751 () (_ BitVec 64))
(declare-fun var1184855 () (_ BitVec 64))
(declare-fun var1184856 () (_ BitVec 64))
(declare-fun temp80_95 () (_ BitVec 64))
(declare-fun var1184857 () (_ BitVec 64))
(declare-fun temp80_96 () (_ BitVec 64))
(declare-fun var1184867 () (_ BitVec 64))
(declare-fun temp80_97 () (_ BitVec 64))
(declare-fun temp80_98 () (_ BitVec 64))
(declare-fun var1184875 () (_ BitVec 64))
(declare-fun temp80_99 () (_ BitVec 64))
(declare-fun temp80_100 () (_ BitVec 64))
(declare-fun var1184880 () (_ BitVec 64))
(declare-fun var1184881 () (_ BitVec 64))
(declare-fun temp80_101 () (_ BitVec 64))
(declare-fun var1184882 () (_ BitVec 64))
(declare-fun temp80_102 () (_ BitVec 64))
(declare-fun var1184883 () (_ BitVec 64))
(declare-fun temp80_103 () (_ BitVec 64))
(declare-fun var1184928 () (_ BitVec 64))
(declare-fun temp80_104 () (_ BitVec 64))
(assert (= temp80_1 #x0000000000000004))
(assert (= var68041
   (ite (= ARGNAME_input_NAMEEND_DIM temp80_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp80_2 #x0000000000000001))
(assert (= var68041 temp80_2))
(assert (= temp80_3 #x0000000000000004))
(assert (= var68076
   (ite (= ARGNAME_filter_NAMEEND_DIM temp80_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp80_4 #x0000000000000001))
(assert (= var68076 temp80_4))
(assert (= temp80_5 #x0000000000000000))
(assert (= var134499
   (ite (= ARGNAME_min_input_NAMEEND_DIM temp80_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var134495 var134499))
(assert (= var68102 var134495))
(assert (= temp80_6 #x0000000000000001))
(assert (= var68102 temp80_6))
(assert (= temp80_7 #x0000000000000000))
(assert (= var200035
   (ite (= ARGNAME_max_input_NAMEEND_DIM temp80_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var200031 var200035))
(assert (= var68130 var200031))
(assert (= temp80_8 #x0000000000000001))
(assert (= var68130 temp80_8))
(assert (= temp80_9 #x0000000000000000))
(assert (= var265571
   (ite (= ARGNAME_min_filter_NAMEEND_DIM temp80_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var265567 var265571))
(assert (= var68156 var265567))
(assert (= temp80_10 #x0000000000000001))
(assert (= var68156 temp80_10))
(assert (= temp80_11 #x0000000000000000))
(assert (= var331107
   (ite (= ARGNAME_max_filter_NAMEEND_DIM temp80_11)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var331103 var331107))
(assert (= var68183 var331103))
(assert (= temp80_12 #x0000000000000001))
(assert (= var68183 temp80_12))
(assert (= temp80_13 #x0000000000000000))
(assert (= var396672 temp80_13))
(assert (= temp80_14 #x0000000000000000))
(assert (= var462208 temp80_14))
(assert (= temp80_15 #x0000000000000000))
(assert (= var527744 temp80_15))
(assert (= temp80_16 #x0000000000000000))
(assert (= var593280 temp80_16))
(assert (= temp80_17 #x0000000000000000))
(assert (= temp80_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp80_17)))
(assert (= temp80_19 #x0000000000000001))
(assert (= temp80_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp80_19)))
(assert (= temp80_21 #x0000000000000002))
(assert (= temp80_22 (select ARGNAME_input_NAMEEND_DIMSIZE temp80_21)))
(assert (= temp80_23 #x0000000000000003))
(assert (= temp80_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp80_23)))
(assert (= temp80_25 #x0000000000000004))
(assert (= temp80_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp80_25)))
(assert (= temp80_27 #x0000000000000005))
(assert (= temp80_28 (select ARGNAME_input_NAMEEND_DIMSIZE temp80_27)))
(assert (= temp80_29 #x0000000000000003))
(assert (= temp80_30 (select ARGNAME_input_NAMEEND_DIMSIZE temp80_29)))
(assert (= var68270 temp80_30))
(assert (= temp80_31 #x0000000000000000))
(assert (= temp80_32 (select ARGNAME_filter_NAMEEND_DIMSIZE temp80_31)))
(assert (= temp80_33 #x0000000000000001))
(assert (= temp80_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp80_33)))
(assert (= temp80_35 #x0000000000000002))
(assert (= temp80_36 (select ARGNAME_filter_NAMEEND_DIMSIZE temp80_35)))
(assert (= temp80_37 #x0000000000000003))
(assert (= temp80_38 (select ARGNAME_filter_NAMEEND_DIMSIZE temp80_37)))
(assert (= temp80_39 #x0000000000000004))
(assert (= temp80_40 (select ARGNAME_filter_NAMEEND_DIMSIZE temp80_39)))
(assert (= temp80_41 #x0000000000000005))
(assert (= temp80_42 (select ARGNAME_filter_NAMEEND_DIMSIZE temp80_41)))
(assert (= temp80_43 #x0000000000000002))
(assert (= temp80_44 (select ARGNAME_filter_NAMEEND_DIMSIZE temp80_43)))
(assert (= var68273 temp80_44))
(assert (= var68274 (ite (= var68270 var68273) #x0000000000000001 #x0000000000000000)))
(assert (= temp80_45 #x0000000000000001))
(assert (= var68274 temp80_45))
(assert (= temp80_46 #x0000000000000003))
(assert (= temp80_47 (select ARGNAME_filter_NAMEEND_DIMSIZE temp80_46)))
(assert (= var68298 temp80_47))
(assert (= temp80_48 #x0000000000000001))
(assert (= temp80_49 (select ARGNAME_input_NAMEEND_DIMSIZE temp80_48)))
(assert (= var68299 temp80_49))
(assert (= temp80_50 #x0000000000000000))
(assert (= temp80_51 (select ARGNAME_filter_NAMEEND_DIMSIZE temp80_50)))
(assert (= var68300 temp80_51))
(assert (= temp80_52 #x0000000000000002))
(assert (= temp80_53 (select ARGNAME_input_NAMEEND_DIMSIZE temp80_52)))
(assert (= var68301 temp80_53))
(assert (= temp80_54 #x0000000000000001))
(assert (= temp80_55 (select ARGNAME_filter_NAMEEND_DIMSIZE temp80_54)))
(assert (= var68302 temp80_55))
(assert (= temp80_56 #x0000000000000000))
(assert (= temp80_57 (select ARGNAME_input_NAMEEND_DIMSIZE temp80_56)))
(assert (= var68303 temp80_57))
(assert (= temp80_58 #x0000000000000000))
(assert (= temp80_59 (select ARGNAME_strides_NAMEEND_VAL temp80_58)))
(assert (= temp80_60 #x0000000000000001))
(assert (= temp80_61 (select ARGNAME_strides_NAMEEND_VAL temp80_60)))
(assert (= temp80_62 #x0000000000000002))
(assert (= temp80_63 (select ARGNAME_strides_NAMEEND_VAL temp80_62)))
(assert (= temp80_64 #x0000000000000003))
(assert (= temp80_65 (select ARGNAME_strides_NAMEEND_VAL temp80_64)))
(assert (= temp80_66 #x0000000000000004))
(assert (= temp80_67 (select ARGNAME_strides_NAMEEND_VAL temp80_66)))
(assert (= temp80_68 #x0000000000000005))
(assert (= temp80_69 (select ARGNAME_strides_NAMEEND_VAL temp80_68)))
(assert (= temp80_70 #x0000000000000001))
(assert (= temp80_72 (select ARGNAME_strides_NAMEEND_VAL temp80_70)))
(assert (= temp80_71 temp80_72))
(assert (= temp80_74 #x0000000000000000))
(assert (= temp80_73 temp80_74))
(assert (= temp80_76 #x0000000000000000))
(assert (= temp80_75 temp80_76))
(assert (= temp80_78 #x0000000000000000))
(assert (= temp80_77 temp80_78))
(assert (= temp80_80 #x0000000000000000))
(assert (= temp80_79 temp80_80))
(assert (= var792081 var68299))
(assert (= var792082 var68300))
(assert (= var857606 var792081))
(assert (= var857607 var792082))
(assert (= var922711 var857606))
(assert (= var922712 var857607))
(assert (= temp80_81 #x0000000000000001))
(assert (= var922713 temp80_81))
(assert (= temp80_82 #x0000000000000001))
(assert (= var922723
   (ite (bvslt temp80_71 temp80_82) #x0000000000000001 #x0000000000000000)))
(assert (= temp80_83 #x0000000000000000))
(assert (= var922723 temp80_83))
(assert (= temp80_84 #x0000000000000001))
(assert (= var922731
   (ite (bvslt var922713 temp80_84) #x0000000000000001 #x0000000000000000)))
(assert (= temp80_85 #x0000000000000000))
(assert (= var922731 temp80_85))
(assert (= temp80_86 #xffffffffffffffff))
(assert (= var922736 (bvadd var922712 temp80_86)))
(assert (= var922737 (bvmul var922736 var922713)))
(assert (= temp80_87 #x0000000000000001))
(assert (= var922738 (bvadd var922737 temp80_87)))
(assert (= temp80_88 #xffffffffffffffff))
(assert (= var922739 (bvxor var922737 temp80_88)))
(assert (= temp80_89 #xffffffffffffffff))
(assert (= var922758 (bvadd var922711 temp80_89)))
(assert (= var922759 (bvadd var922758 temp80_71)))
(assert (= var922760 (bvsdiv var922759 temp80_71)))
(assert (= temp80_91 #x0000000000000000))
(assert (= temp80_90 temp80_91))
(assert (= temp80_92 #xffffffffffffffff))
(assert (= var922767 (bvadd var922760 temp80_92)))
(assert (= var922768 (bvmul var922767 temp80_71)))
(assert (= var922769 (bvsub var922738 var922711)))
(assert (= var922770 (bvadd var922769 var922768)))
(assert (= var922783 var922760))
(assert (= temp80_93 #x0000000000000000))
(assert (= var922784
   (ite (bvslt var922783 temp80_93) #x0000000000000001 #x0000000000000000)))
(assert (= temp80_94 #x0000000000000000))
(assert (= var922784 temp80_94))
(assert (= var1054225 var68301))
(assert (= var1054226 var68302))
(assert (= var1119750 var1054225))
(assert (= var1119751 var1054226))
(assert (= var1184855 var1119750))
(assert (= var1184856 var1119751))
(assert (= temp80_95 #x0000000000000001))
(assert (= var1184857 temp80_95))
(assert (= temp80_96 #x0000000000000001))
(assert (= var1184867
   (ite (bvslt temp80_71 temp80_96) #x0000000000000001 #x0000000000000000)))
(assert (= temp80_97 #x0000000000000000))
(assert (= var1184867 temp80_97))
(assert (= temp80_98 #x0000000000000001))
(assert (= var1184875
   (ite (bvslt var1184857 temp80_98) #x0000000000000001 #x0000000000000000)))
(assert (= temp80_99 #x0000000000000000))
(assert (= var1184875 temp80_99))
(assert (= temp80_100 #xffffffffffffffff))
(assert (= var1184880 (bvadd var1184856 temp80_100)))
(assert (= var1184881 (bvmul var1184880 var1184857)))
(assert (= temp80_101 #x0000000000000001))
(assert (= var1184882 (bvadd var1184881 temp80_101)))
(assert (= temp80_102 #xffffffffffffffff))
(assert (= var1184883 (bvxor var1184881 temp80_102)))
(assert (= temp80_103 #x0000000000000000))
(assert (= var1184928
   (ite (bvslt temp80_75 temp80_103) #x0000000000000001 #x0000000000000000)))
(assert (= temp80_104 #x0000000000000000))
(assert (= var1184928 temp80_104))
(model-add temp80_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp80_2 () (_ BitVec 64) #x0000000000000001)
(model-add var68041 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))















