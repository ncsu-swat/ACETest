(declare-fun temp10_1 () (_ BitVec 64))
(declare-fun temp10_2 () (_ BitVec 64))
(declare-fun var68041 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10_3 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var68076 () (_ BitVec 64))
(declare-fun temp10_4 () (_ BitVec 64))
(declare-fun temp10_5 () (_ BitVec 64))
(declare-fun ARGNAME_min_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var134499 () (_ BitVec 64))
(declare-fun var134495 () (_ BitVec 64))
(declare-fun var68102 () (_ BitVec 64))
(declare-fun temp10_6 () (_ BitVec 64))
(declare-fun temp10_7 () (_ BitVec 64))
(declare-fun ARGNAME_max_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var200035 () (_ BitVec 64))
(declare-fun var200031 () (_ BitVec 64))
(declare-fun var68130 () (_ BitVec 64))
(declare-fun temp10_8 () (_ BitVec 64))
(declare-fun temp10_9 () (_ BitVec 64))
(declare-fun ARGNAME_min_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var265571 () (_ BitVec 64))
(declare-fun var265567 () (_ BitVec 64))
(declare-fun var68156 () (_ BitVec 64))
(declare-fun temp10_10 () (_ BitVec 64))
(declare-fun temp10_11 () (_ BitVec 64))
(declare-fun ARGNAME_max_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var331107 () (_ BitVec 64))
(declare-fun var331103 () (_ BitVec 64))
(declare-fun var68183 () (_ BitVec 64))
(declare-fun temp10_12 () (_ BitVec 64))
(declare-fun temp10_13 () (_ BitVec 64))
(declare-fun var396672 () (_ BitVec 64))
(declare-fun temp10_14 () (_ BitVec 64))
(declare-fun var462208 () (_ BitVec 64))
(declare-fun temp10_15 () (_ BitVec 64))
(declare-fun var527744 () (_ BitVec 64))
(declare-fun temp10_16 () (_ BitVec 64))
(declare-fun var593280 () (_ BitVec 64))
(declare-fun temp10_17 () (_ BitVec 64))
(declare-fun var658845 () (_ BitVec 64))
(declare-fun var658821 () (_ BitVec 64))
(declare-fun var68263 () (_ BitVec 64))
(declare-fun var68267 () (_ BitVec 64))
(declare-fun temp10_18 () (_ BitVec 64))
(declare-fun var724381 () (_ BitVec 64))
(declare-fun var724357 () (_ BitVec 64))
(declare-fun var68268 () (_ BitVec 64))
(declare-fun var68269 () (_ BitVec 64))
(declare-fun temp10_19 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10_20 () (_ BitVec 64))
(declare-fun temp10_21 () (_ BitVec 64))
(declare-fun temp10_22 () (_ BitVec 64))
(declare-fun temp10_23 () (_ BitVec 64))
(declare-fun temp10_24 () (_ BitVec 64))
(declare-fun temp10_25 () (_ BitVec 64))
(declare-fun temp10_26 () (_ BitVec 64))
(declare-fun temp10_27 () (_ BitVec 64))
(declare-fun temp10_28 () (_ BitVec 64))
(declare-fun temp10_29 () (_ BitVec 64))
(declare-fun temp10_30 () (_ BitVec 64))
(declare-fun temp10_31 () (_ BitVec 64))
(declare-fun temp10_32 () (_ BitVec 64))
(declare-fun var68270 () (_ BitVec 64))
(declare-fun temp10_33 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10_34 () (_ BitVec 64))
(declare-fun temp10_35 () (_ BitVec 64))
(declare-fun temp10_36 () (_ BitVec 64))
(declare-fun temp10_37 () (_ BitVec 64))
(declare-fun temp10_38 () (_ BitVec 64))
(declare-fun temp10_39 () (_ BitVec 64))
(declare-fun temp10_40 () (_ BitVec 64))
(declare-fun temp10_41 () (_ BitVec 64))
(declare-fun temp10_42 () (_ BitVec 64))
(declare-fun temp10_43 () (_ BitVec 64))
(declare-fun temp10_44 () (_ BitVec 64))
(declare-fun temp10_45 () (_ BitVec 64))
(declare-fun temp10_46 () (_ BitVec 64))
(declare-fun var68273 () (_ BitVec 64))
(declare-fun var68274 () (_ BitVec 64))
(declare-fun temp10_47 () (_ BitVec 64))
(declare-fun temp10_48 () (_ BitVec 64))
(declare-fun temp10_49 () (_ BitVec 64))
(declare-fun var68298 () (_ BitVec 64))
(declare-fun temp10_50 () (_ BitVec 64))
(declare-fun temp10_51 () (_ BitVec 64))
(declare-fun var68299 () (_ BitVec 64))
(declare-fun temp10_52 () (_ BitVec 64))
(declare-fun temp10_53 () (_ BitVec 64))
(declare-fun var68300 () (_ BitVec 64))
(declare-fun temp10_54 () (_ BitVec 64))
(declare-fun temp10_55 () (_ BitVec 64))
(declare-fun var68301 () (_ BitVec 64))
(declare-fun temp10_56 () (_ BitVec 64))
(declare-fun temp10_57 () (_ BitVec 64))
(declare-fun var68302 () (_ BitVec 64))
(declare-fun temp10_58 () (_ BitVec 64))
(declare-fun temp10_59 () (_ BitVec 64))
(declare-fun var68303 () (_ BitVec 64))
(declare-fun temp10_60 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10_61 () (_ BitVec 64))
(declare-fun temp10_62 () (_ BitVec 64))
(declare-fun temp10_63 () (_ BitVec 64))
(declare-fun temp10_64 () (_ BitVec 64))
(declare-fun temp10_65 () (_ BitVec 64))
(declare-fun temp10_66 () (_ BitVec 64))
(declare-fun temp10_67 () (_ BitVec 64))
(declare-fun temp10_68 () (_ BitVec 64))
(declare-fun temp10_69 () (_ BitVec 64))
(declare-fun temp10_70 () (_ BitVec 64))
(declare-fun temp10_71 () (_ BitVec 64))
(declare-fun temp10_72 () (_ BitVec 64))
(declare-fun temp10_74 () (_ BitVec 64))
(declare-fun temp10_73 () (_ BitVec 64))
(declare-fun temp10_76 () (_ BitVec 64))
(declare-fun temp10_75 () (_ BitVec 64))
(declare-fun temp10_78 () (_ BitVec 64))
(declare-fun temp10_77 () (_ BitVec 64))
(declare-fun temp10_80 () (_ BitVec 64))
(declare-fun temp10_79 () (_ BitVec 64))
(declare-fun temp10_82 () (_ BitVec 64))
(declare-fun temp10_81 () (_ BitVec 64))
(declare-fun var792081 () (_ BitVec 64))
(declare-fun var792082 () (_ BitVec 64))
(declare-fun var857606 () (_ BitVec 64))
(declare-fun var857607 () (_ BitVec 64))
(declare-fun var922711 () (_ BitVec 64))
(declare-fun var922712 () (_ BitVec 64))
(declare-fun temp10_83 () (_ BitVec 64))
(declare-fun var922713 () (_ BitVec 64))
(declare-fun temp10_84 () (_ BitVec 64))
(declare-fun var922723 () (_ BitVec 64))
(declare-fun temp10_85 () (_ BitVec 64))
(declare-fun temp10_86 () (_ BitVec 64))
(declare-fun var922731 () (_ BitVec 64))
(declare-fun temp10_87 () (_ BitVec 64))
(declare-fun temp10_88 () (_ BitVec 64))
(declare-fun var922736 () (_ BitVec 64))
(declare-fun var922737 () (_ BitVec 64))
(declare-fun temp10_89 () (_ BitVec 64))
(declare-fun var922738 () (_ BitVec 64))
(declare-fun temp10_90 () (_ BitVec 64))
(declare-fun var922739 () (_ BitVec 64))
(declare-fun var922741 () (_ BitVec 64))
(declare-fun var922742 () (_ BitVec 64))
(declare-fun var922743 () (_ BitVec 64))
(declare-fun temp10_92 () (_ BitVec 64))
(declare-fun temp10_91 () (_ BitVec 64))
(declare-fun temp10_94 () (_ BitVec 64))
(declare-fun temp10_93 () (_ BitVec 64))
(declare-fun var922783 () (_ BitVec 64))
(declare-fun temp10_95 () (_ BitVec 64))
(declare-fun var922784 () (_ BitVec 64))
(declare-fun temp10_96 () (_ BitVec 64))
(declare-fun var988689 () (_ BitVec 64))
(declare-fun var988690 () (_ BitVec 64))
(declare-fun var1054214 () (_ BitVec 64))
(declare-fun var1054215 () (_ BitVec 64))
(declare-fun var1119319 () (_ BitVec 64))
(declare-fun var1119320 () (_ BitVec 64))
(declare-fun temp10_97 () (_ BitVec 64))
(declare-fun var1119321 () (_ BitVec 64))
(declare-fun temp10_98 () (_ BitVec 64))
(declare-fun var1119331 () (_ BitVec 64))
(declare-fun temp10_99 () (_ BitVec 64))
(declare-fun temp10_100 () (_ BitVec 64))
(declare-fun var1119339 () (_ BitVec 64))
(declare-fun temp10_101 () (_ BitVec 64))
(declare-fun temp10_102 () (_ BitVec 64))
(declare-fun var1119344 () (_ BitVec 64))
(declare-fun var1119345 () (_ BitVec 64))
(declare-fun temp10_103 () (_ BitVec 64))
(declare-fun var1119346 () (_ BitVec 64))
(declare-fun temp10_104 () (_ BitVec 64))
(declare-fun var1119347 () (_ BitVec 64))
(declare-fun temp10_105 () (_ BitVec 64))
(declare-fun var1119366 () (_ BitVec 64))
(declare-fun var1119367 () (_ BitVec 64))
(declare-fun var1119368 () (_ BitVec 64))
(declare-fun temp10_107 () (_ BitVec 64))
(declare-fun temp10_106 () (_ BitVec 64))
(declare-fun temp10_108 () (_ BitVec 64))
(declare-fun var1119375 () (_ BitVec 64))
(declare-fun var1119376 () (_ BitVec 64))
(declare-fun var1119377 () (_ BitVec 64))
(declare-fun var1119378 () (_ BitVec 64))
(declare-fun var1119391 () (_ BitVec 64))
(declare-fun temp10_109 () (_ BitVec 64))
(declare-fun var1119392 () (_ BitVec 64))
(declare-fun temp10_110 () (_ BitVec 64))
(assert (= temp10_1 #x0000000000000004))
(assert (= var68041
   (ite (= ARGNAME_input_NAMEEND_DIM temp10_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10_2 #x0000000000000001))
(assert (= var68041 temp10_2))
(assert (= temp10_3 #x0000000000000004))
(assert (= var68076
   (ite (= ARGNAME_filter_NAMEEND_DIM temp10_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10_4 #x0000000000000001))
(assert (= var68076 temp10_4))
(assert (= temp10_5 #x0000000000000000))
(assert (= var134499
   (ite (= ARGNAME_min_input_NAMEEND_DIM temp10_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var134495 var134499))
(assert (= var68102 var134495))
(assert (= temp10_6 #x0000000000000001))
(assert (= var68102 temp10_6))
(assert (= temp10_7 #x0000000000000000))
(assert (= var200035
   (ite (= ARGNAME_max_input_NAMEEND_DIM temp10_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var200031 var200035))
(assert (= var68130 var200031))
(assert (= temp10_8 #x0000000000000001))
(assert (= var68130 temp10_8))
(assert (= temp10_9 #x0000000000000000))
(assert (= var265571
   (ite (= ARGNAME_min_filter_NAMEEND_DIM temp10_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var265567 var265571))
(assert (= var68156 var265567))
(assert (= temp10_10 #x0000000000000001))
(assert (= var68156 temp10_10))
(assert (= temp10_11 #x0000000000000000))
(assert (= var331107
   (ite (= ARGNAME_max_filter_NAMEEND_DIM temp10_11)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var331103 var331107))
(assert (= var68183 var331103))
(assert (= temp10_12 #x0000000000000001))
(assert (= var68183 temp10_12))
(assert (= temp10_13 #x0000000000000000))
(assert (= var396672 temp10_13))
(assert (= temp10_14 #x0000000000000000))
(assert (= var462208 temp10_14))
(assert (= temp10_15 #x0000000000000000))
(assert (= var527744 temp10_15))
(assert (= temp10_16 #x0000000000000000))
(assert (= var593280 temp10_16))
(assert (= temp10_17 #x0000000000000000))
(assert (= var658845 temp10_17))
(assert (= var658821 var658845))
(assert (= var68263 var658821))
(assert (= var68267 var68263))
(assert (= temp10_18 #x0000000000000000))
(assert (= var724381 temp10_18))
(assert (= var724357 var724381))
(assert (= var68268 var724357))
(assert (= var68269 var68268))
(assert (= temp10_19 #x0000000000000000))
(assert (= temp10_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_19)))
(assert (= temp10_21 #x0000000000000001))
(assert (= temp10_22 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_21)))
(assert (= temp10_23 #x0000000000000002))
(assert (= temp10_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_23)))
(assert (= temp10_25 #x0000000000000003))
(assert (= temp10_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_25)))
(assert (= temp10_27 #x0000000000000004))
(assert (= temp10_28 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_27)))
(assert (= temp10_29 #x0000000000000005))
(assert (= temp10_30 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_29)))
(assert (= temp10_31 #x0000000000000003))
(assert (= temp10_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_31)))
(assert (= var68270 temp10_32))
(assert (= temp10_33 #x0000000000000000))
(assert (= temp10_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp10_33)))
(assert (= temp10_35 #x0000000000000001))
(assert (= temp10_36 (select ARGNAME_filter_NAMEEND_DIMSIZE temp10_35)))
(assert (= temp10_37 #x0000000000000002))
(assert (= temp10_38 (select ARGNAME_filter_NAMEEND_DIMSIZE temp10_37)))
(assert (= temp10_39 #x0000000000000003))
(assert (= temp10_40 (select ARGNAME_filter_NAMEEND_DIMSIZE temp10_39)))
(assert (= temp10_41 #x0000000000000004))
(assert (= temp10_42 (select ARGNAME_filter_NAMEEND_DIMSIZE temp10_41)))
(assert (= temp10_43 #x0000000000000005))
(assert (= temp10_44 (select ARGNAME_filter_NAMEEND_DIMSIZE temp10_43)))
(assert (= temp10_45 #x0000000000000002))
(assert (= temp10_46 (select ARGNAME_filter_NAMEEND_DIMSIZE temp10_45)))
(assert (= var68273 temp10_46))
(assert (= var68274 (ite (= var68270 var68273) #x0000000000000001 #x0000000000000000)))
(assert (= temp10_47 #x0000000000000001))
(assert (= var68274 temp10_47))
(assert (= temp10_48 #x0000000000000003))
(assert (= temp10_49 (select ARGNAME_filter_NAMEEND_DIMSIZE temp10_48)))
(assert (= var68298 temp10_49))
(assert (= temp10_50 #x0000000000000001))
(assert (= temp10_51 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_50)))
(assert (= var68299 temp10_51))
(assert (= temp10_52 #x0000000000000000))
(assert (= temp10_53 (select ARGNAME_filter_NAMEEND_DIMSIZE temp10_52)))
(assert (= var68300 temp10_53))
(assert (= temp10_54 #x0000000000000002))
(assert (= temp10_55 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_54)))
(assert (= var68301 temp10_55))
(assert (= temp10_56 #x0000000000000001))
(assert (= temp10_57 (select ARGNAME_filter_NAMEEND_DIMSIZE temp10_56)))
(assert (= var68302 temp10_57))
(assert (= temp10_58 #x0000000000000000))
(assert (= temp10_59 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_58)))
(assert (= var68303 temp10_59))
(assert (= temp10_60 #x0000000000000000))
(assert (= temp10_61 (select ARGNAME_strides_NAMEEND_VAL temp10_60)))
(assert (= temp10_62 #x0000000000000001))
(assert (= temp10_63 (select ARGNAME_strides_NAMEEND_VAL temp10_62)))
(assert (= temp10_64 #x0000000000000002))
(assert (= temp10_65 (select ARGNAME_strides_NAMEEND_VAL temp10_64)))
(assert (= temp10_66 #x0000000000000003))
(assert (= temp10_67 (select ARGNAME_strides_NAMEEND_VAL temp10_66)))
(assert (= temp10_68 #x0000000000000004))
(assert (= temp10_69 (select ARGNAME_strides_NAMEEND_VAL temp10_68)))
(assert (= temp10_70 #x0000000000000005))
(assert (= temp10_71 (select ARGNAME_strides_NAMEEND_VAL temp10_70)))
(assert (= temp10_72 #x0000000000000001))
(assert (= temp10_74 (select ARGNAME_strides_NAMEEND_VAL temp10_72)))
(assert (= temp10_73 temp10_74))
(assert (= temp10_76 #x0000000000000000))
(assert (= temp10_75 temp10_76))
(assert (= temp10_78 #x0000000000000000))
(assert (= temp10_77 temp10_78))
(assert (= temp10_80 #x0000000000000000))
(assert (= temp10_79 temp10_80))
(assert (= temp10_82 #x0000000000000000))
(assert (= temp10_81 temp10_82))
(assert (= var792081 var68299))
(assert (= var792082 var68300))
(assert (= var857606 var792081))
(assert (= var857607 var792082))
(assert (= var922711 var857606))
(assert (= var922712 var857607))
(assert (= temp10_83 #x0000000000000001))
(assert (= var922713 temp10_83))
(assert (= temp10_84 #x0000000000000001))
(assert (= var922723
   (ite (bvslt temp10_73 temp10_84) #x0000000000000001 #x0000000000000000)))
(assert (= temp10_85 #x0000000000000000))
(assert (= var922723 temp10_85))
(assert (= temp10_86 #x0000000000000001))
(assert (= var922731
   (ite (bvslt var922713 temp10_86) #x0000000000000001 #x0000000000000000)))
(assert (= temp10_87 #x0000000000000000))
(assert (= var922731 temp10_87))
(assert (= temp10_88 #xffffffffffffffff))
(assert (= var922736 (bvadd var922712 temp10_88)))
(assert (= var922737 (bvmul var922736 var922713)))
(assert (= temp10_89 #x0000000000000001))
(assert (= var922738 (bvadd var922737 temp10_89)))
(assert (= temp10_90 #xffffffffffffffff))
(assert (= var922739 (bvxor var922737 temp10_90)))
(assert (= var922741 (bvadd temp10_73 var922711)))
(assert (= var922742 (bvadd var922741 var922739)))
(assert (= var922743 (bvsdiv var922742 temp10_73)))
(assert (= temp10_92 #x0000000000000000))
(assert (= temp10_91 temp10_92))
(assert (= temp10_94 #x0000000000000000))
(assert (= temp10_93 temp10_94))
(assert (= var922783 var922743))
(assert (= temp10_95 #x0000000000000000))
(assert (= var922784
   (ite (bvslt var922783 temp10_95) #x0000000000000001 #x0000000000000000)))
(assert (= temp10_96 #x0000000000000000))
(assert (= var922784 temp10_96))
(assert (= var988689 var68301))
(assert (= var988690 var68302))
(assert (= var1054214 var988689))
(assert (= var1054215 var988690))
(assert (= var1119319 var1054214))
(assert (= var1119320 var1054215))
(assert (= temp10_97 #x0000000000000001))
(assert (= var1119321 temp10_97))
(assert (= temp10_98 #x0000000000000001))
(assert (= var1119331
   (ite (bvslt temp10_73 temp10_98) #x0000000000000001 #x0000000000000000)))
(assert (= temp10_99 #x0000000000000000))
(assert (= var1119331 temp10_99))
(assert (= temp10_100 #x0000000000000001))
(assert (= var1119339
   (ite (bvslt var1119321 temp10_100) #x0000000000000001 #x0000000000000000)))
(assert (= temp10_101 #x0000000000000000))
(assert (= var1119339 temp10_101))
(assert (= temp10_102 #xffffffffffffffff))
(assert (= var1119344 (bvadd var1119320 temp10_102)))
(assert (= var1119345 (bvmul var1119344 var1119321)))
(assert (= temp10_103 #x0000000000000001))
(assert (= var1119346 (bvadd var1119345 temp10_103)))
(assert (= temp10_104 #xffffffffffffffff))
(assert (= var1119347 (bvxor var1119345 temp10_104)))
(assert (= temp10_105 #xffffffffffffffff))
(assert (= var1119366 (bvadd var1119319 temp10_105)))
(assert (= var1119367 (bvadd var1119366 temp10_73)))
(assert (= var1119368 (bvsdiv var1119367 temp10_73)))
(assert (= temp10_107 #x0000000000000000))
(assert (= temp10_106 temp10_107))
(assert (= temp10_108 #xffffffffffffffff))
(assert (= var1119375 (bvadd var1119368 temp10_108)))
(assert (= var1119376 (bvmul var1119375 temp10_73)))
(assert (= var1119377 (bvsub var1119346 var1119319)))
(assert (= var1119378 (bvadd var1119377 var1119376)))
(assert (= var1119391 var1119368))
(assert (= temp10_109 #x0000000000000000))
(assert (= var1119392
   (ite (bvslt var1119391 temp10_109) #x0000000000000001 #x0000000000000000)))
(assert (= temp10_110 #x0000000000000000))
(assert (= var1119392 temp10_110))
(model-add temp10_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp10_2 () (_ BitVec 64) #x0000000000000001)
(model-add var68041 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))















