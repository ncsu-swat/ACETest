(declare-fun temp63_1 () (_ BitVec 64))
(declare-fun temp63_2 () (_ BitVec 64))
(declare-fun var68041 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp63_3 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var68076 () (_ BitVec 64))
(declare-fun temp63_4 () (_ BitVec 64))
(declare-fun temp63_5 () (_ BitVec 64))
(declare-fun ARGNAME_min_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var134499 () (_ BitVec 64))
(declare-fun var134495 () (_ BitVec 64))
(declare-fun var68102 () (_ BitVec 64))
(declare-fun temp63_6 () (_ BitVec 64))
(declare-fun temp63_7 () (_ BitVec 64))
(declare-fun ARGNAME_max_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var200035 () (_ BitVec 64))
(declare-fun var200031 () (_ BitVec 64))
(declare-fun var68130 () (_ BitVec 64))
(declare-fun temp63_8 () (_ BitVec 64))
(declare-fun temp63_9 () (_ BitVec 64))
(declare-fun ARGNAME_min_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var265571 () (_ BitVec 64))
(declare-fun var265567 () (_ BitVec 64))
(declare-fun var68156 () (_ BitVec 64))
(declare-fun temp63_10 () (_ BitVec 64))
(declare-fun temp63_11 () (_ BitVec 64))
(declare-fun ARGNAME_max_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var331107 () (_ BitVec 64))
(declare-fun var331103 () (_ BitVec 64))
(declare-fun var68183 () (_ BitVec 64))
(declare-fun temp63_12 () (_ BitVec 64))
(declare-fun temp63_13 () (_ BitVec 64))
(declare-fun var396672 () (_ BitVec 64))
(declare-fun temp63_14 () (_ BitVec 64))
(declare-fun var462208 () (_ BitVec 64))
(declare-fun temp63_15 () (_ BitVec 64))
(declare-fun var527744 () (_ BitVec 64))
(declare-fun temp63_16 () (_ BitVec 64))
(declare-fun var593280 () (_ BitVec 64))
(declare-fun temp63_17 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp63_18 () (_ BitVec 64))
(declare-fun temp63_19 () (_ BitVec 64))
(declare-fun temp63_20 () (_ BitVec 64))
(declare-fun temp63_21 () (_ BitVec 64))
(declare-fun temp63_22 () (_ BitVec 64))
(declare-fun temp63_23 () (_ BitVec 64))
(declare-fun temp63_24 () (_ BitVec 64))
(declare-fun temp63_25 () (_ BitVec 64))
(declare-fun temp63_26 () (_ BitVec 64))
(declare-fun temp63_27 () (_ BitVec 64))
(declare-fun temp63_28 () (_ BitVec 64))
(declare-fun temp63_29 () (_ BitVec 64))
(declare-fun temp63_30 () (_ BitVec 64))
(declare-fun var68270 () (_ BitVec 64))
(declare-fun temp63_31 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp63_32 () (_ BitVec 64))
(declare-fun temp63_33 () (_ BitVec 64))
(declare-fun temp63_34 () (_ BitVec 64))
(declare-fun temp63_35 () (_ BitVec 64))
(declare-fun temp63_36 () (_ BitVec 64))
(declare-fun temp63_37 () (_ BitVec 64))
(declare-fun temp63_38 () (_ BitVec 64))
(declare-fun temp63_39 () (_ BitVec 64))
(declare-fun temp63_40 () (_ BitVec 64))
(declare-fun temp63_41 () (_ BitVec 64))
(declare-fun temp63_42 () (_ BitVec 64))
(declare-fun temp63_43 () (_ BitVec 64))
(declare-fun temp63_44 () (_ BitVec 64))
(declare-fun var68273 () (_ BitVec 64))
(declare-fun var68274 () (_ BitVec 64))
(declare-fun temp63_45 () (_ BitVec 64))
(declare-fun temp63_46 () (_ BitVec 64))
(declare-fun temp63_47 () (_ BitVec 64))
(declare-fun var68298 () (_ BitVec 64))
(declare-fun temp63_48 () (_ BitVec 64))
(declare-fun temp63_49 () (_ BitVec 64))
(declare-fun var68299 () (_ BitVec 64))
(declare-fun temp63_50 () (_ BitVec 64))
(declare-fun temp63_51 () (_ BitVec 64))
(declare-fun var68300 () (_ BitVec 64))
(declare-fun temp63_52 () (_ BitVec 64))
(declare-fun temp63_53 () (_ BitVec 64))
(declare-fun var68301 () (_ BitVec 64))
(declare-fun temp63_54 () (_ BitVec 64))
(declare-fun temp63_55 () (_ BitVec 64))
(declare-fun var68302 () (_ BitVec 64))
(declare-fun temp63_56 () (_ BitVec 64))
(declare-fun temp63_57 () (_ BitVec 64))
(declare-fun var68303 () (_ BitVec 64))
(declare-fun temp63_58 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp63_59 () (_ BitVec 64))
(declare-fun temp63_60 () (_ BitVec 64))
(declare-fun temp63_61 () (_ BitVec 64))
(declare-fun temp63_62 () (_ BitVec 64))
(declare-fun temp63_63 () (_ BitVec 64))
(declare-fun temp63_64 () (_ BitVec 64))
(declare-fun temp63_65 () (_ BitVec 64))
(declare-fun temp63_66 () (_ BitVec 64))
(declare-fun temp63_67 () (_ BitVec 64))
(declare-fun temp63_68 () (_ BitVec 64))
(declare-fun temp63_69 () (_ BitVec 64))
(declare-fun temp63_70 () (_ BitVec 64))
(declare-fun temp63_72 () (_ BitVec 64))
(declare-fun temp63_71 () (_ BitVec 64))
(declare-fun temp63_74 () (_ BitVec 64))
(declare-fun temp63_73 () (_ BitVec 64))
(declare-fun temp63_76 () (_ BitVec 64))
(declare-fun temp63_75 () (_ BitVec 64))
(declare-fun temp63_78 () (_ BitVec 64))
(declare-fun temp63_77 () (_ BitVec 64))
(declare-fun temp63_80 () (_ BitVec 64))
(declare-fun temp63_79 () (_ BitVec 64))
(declare-fun var792081 () (_ BitVec 64))
(declare-fun var792082 () (_ BitVec 64))
(assert (= temp63_1 #x0000000000000004))
(assert (= var68041
   (ite (= ARGNAME_input_NAMEEND_DIM temp63_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp63_2 #x0000000000000001))
(assert (= var68041 temp63_2))
(assert (= temp63_3 #x0000000000000004))
(assert (= var68076
   (ite (= ARGNAME_filter_NAMEEND_DIM temp63_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp63_4 #x0000000000000001))
(assert (= var68076 temp63_4))
(assert (= temp63_5 #x0000000000000000))
(assert (= var134499
   (ite (= ARGNAME_min_input_NAMEEND_DIM temp63_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var134495 var134499))
(assert (= var68102 var134495))
(assert (= temp63_6 #x0000000000000001))
(assert (= var68102 temp63_6))
(assert (= temp63_7 #x0000000000000000))
(assert (= var200035
   (ite (= ARGNAME_max_input_NAMEEND_DIM temp63_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var200031 var200035))
(assert (= var68130 var200031))
(assert (= temp63_8 #x0000000000000001))
(assert (= var68130 temp63_8))
(assert (= temp63_9 #x0000000000000000))
(assert (= var265571
   (ite (= ARGNAME_min_filter_NAMEEND_DIM temp63_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var265567 var265571))
(assert (= var68156 var265567))
(assert (= temp63_10 #x0000000000000001))
(assert (= var68156 temp63_10))
(assert (= temp63_11 #x0000000000000000))
(assert (= var331107
   (ite (= ARGNAME_max_filter_NAMEEND_DIM temp63_11)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var331103 var331107))
(assert (= var68183 var331103))
(assert (= temp63_12 #x0000000000000001))
(assert (= var68183 temp63_12))
(assert (= temp63_13 #x0000000000000000))
(assert (= var396672 temp63_13))
(assert (= temp63_14 #x0000000000000000))
(assert (= var462208 temp63_14))
(assert (= temp63_15 #x0000000000000000))
(assert (= var527744 temp63_15))
(assert (= temp63_16 #x0000000000000000))
(assert (= var593280 temp63_16))
(assert (= temp63_17 #x0000000000000000))
(assert (= temp63_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_17)))
(assert (= temp63_19 #x0000000000000001))
(assert (= temp63_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_19)))
(assert (= temp63_21 #x0000000000000002))
(assert (= temp63_22 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_21)))
(assert (= temp63_23 #x0000000000000003))
(assert (= temp63_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_23)))
(assert (= temp63_25 #x0000000000000004))
(assert (= temp63_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_25)))
(assert (= temp63_27 #x0000000000000005))
(assert (= temp63_28 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_27)))
(assert (= temp63_29 #x0000000000000003))
(assert (= temp63_30 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_29)))
(assert (= var68270 temp63_30))
(assert (= temp63_31 #x0000000000000000))
(assert (= temp63_32 (select ARGNAME_filter_NAMEEND_DIMSIZE temp63_31)))
(assert (= temp63_33 #x0000000000000001))
(assert (= temp63_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp63_33)))
(assert (= temp63_35 #x0000000000000002))
(assert (= temp63_36 (select ARGNAME_filter_NAMEEND_DIMSIZE temp63_35)))
(assert (= temp63_37 #x0000000000000003))
(assert (= temp63_38 (select ARGNAME_filter_NAMEEND_DIMSIZE temp63_37)))
(assert (= temp63_39 #x0000000000000004))
(assert (= temp63_40 (select ARGNAME_filter_NAMEEND_DIMSIZE temp63_39)))
(assert (= temp63_41 #x0000000000000005))
(assert (= temp63_42 (select ARGNAME_filter_NAMEEND_DIMSIZE temp63_41)))
(assert (= temp63_43 #x0000000000000002))
(assert (= temp63_44 (select ARGNAME_filter_NAMEEND_DIMSIZE temp63_43)))
(assert (= var68273 temp63_44))
(assert (= var68274 (ite (= var68270 var68273) #x0000000000000001 #x0000000000000000)))
(assert (= temp63_45 #x0000000000000001))
(assert (= var68274 temp63_45))
(assert (= temp63_46 #x0000000000000003))
(assert (= temp63_47 (select ARGNAME_filter_NAMEEND_DIMSIZE temp63_46)))
(assert (= var68298 temp63_47))
(assert (= temp63_48 #x0000000000000001))
(assert (= temp63_49 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_48)))
(assert (= var68299 temp63_49))
(assert (= temp63_50 #x0000000000000000))
(assert (= temp63_51 (select ARGNAME_filter_NAMEEND_DIMSIZE temp63_50)))
(assert (= var68300 temp63_51))
(assert (= temp63_52 #x0000000000000002))
(assert (= temp63_53 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_52)))
(assert (= var68301 temp63_53))
(assert (= temp63_54 #x0000000000000001))
(assert (= temp63_55 (select ARGNAME_filter_NAMEEND_DIMSIZE temp63_54)))
(assert (= var68302 temp63_55))
(assert (= temp63_56 #x0000000000000000))
(assert (= temp63_57 (select ARGNAME_input_NAMEEND_DIMSIZE temp63_56)))
(assert (= var68303 temp63_57))
(assert (= temp63_58 #x0000000000000000))
(assert (= temp63_59 (select ARGNAME_strides_NAMEEND_VAL temp63_58)))
(assert (= temp63_60 #x0000000000000001))
(assert (= temp63_61 (select ARGNAME_strides_NAMEEND_VAL temp63_60)))
(assert (= temp63_62 #x0000000000000002))
(assert (= temp63_63 (select ARGNAME_strides_NAMEEND_VAL temp63_62)))
(assert (= temp63_64 #x0000000000000003))
(assert (= temp63_65 (select ARGNAME_strides_NAMEEND_VAL temp63_64)))
(assert (= temp63_66 #x0000000000000004))
(assert (= temp63_67 (select ARGNAME_strides_NAMEEND_VAL temp63_66)))
(assert (= temp63_68 #x0000000000000005))
(assert (= temp63_69 (select ARGNAME_strides_NAMEEND_VAL temp63_68)))
(assert (= temp63_70 #x0000000000000001))
(assert (= temp63_72 (select ARGNAME_strides_NAMEEND_VAL temp63_70)))
(assert (= temp63_71 temp63_72))
(assert (= temp63_74 #x0000000000000000))
(assert (= temp63_73 temp63_74))
(assert (= temp63_76 #x0000000000000000))
(assert (= temp63_75 temp63_76))
(assert (= temp63_78 #x0000000000000000))
(assert (= temp63_77 temp63_78))
(assert (= temp63_80 #x0000000000000000))
(assert (= temp63_79 temp63_80))
(assert (= var792081 var68299))
(assert (= var792082 var68300))
(model-add temp63_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp63_2 () (_ BitVec 64) #x0000000000000001)
(model-add var68041 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))















