(declare-fun temp58_1 () (_ BitVec 64))
(declare-fun temp58_2 () (_ BitVec 64))
(declare-fun var68041 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp58_3 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var68076 () (_ BitVec 64))
(declare-fun temp58_4 () (_ BitVec 64))
(declare-fun temp58_5 () (_ BitVec 64))
(declare-fun ARGNAME_min_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var134499 () (_ BitVec 64))
(declare-fun var134495 () (_ BitVec 64))
(declare-fun var68102 () (_ BitVec 64))
(declare-fun temp58_6 () (_ BitVec 64))
(declare-fun temp58_7 () (_ BitVec 64))
(declare-fun ARGNAME_max_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var200035 () (_ BitVec 64))
(declare-fun var200031 () (_ BitVec 64))
(declare-fun var68130 () (_ BitVec 64))
(declare-fun temp58_8 () (_ BitVec 64))
(declare-fun temp58_9 () (_ BitVec 64))
(declare-fun ARGNAME_min_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var265571 () (_ BitVec 64))
(declare-fun var265567 () (_ BitVec 64))
(declare-fun var68156 () (_ BitVec 64))
(declare-fun temp58_10 () (_ BitVec 64))
(declare-fun temp58_11 () (_ BitVec 64))
(declare-fun ARGNAME_max_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var331107 () (_ BitVec 64))
(declare-fun var331103 () (_ BitVec 64))
(declare-fun var68183 () (_ BitVec 64))
(declare-fun temp58_12 () (_ BitVec 64))
(declare-fun temp58_13 () (_ BitVec 64))
(declare-fun var396672 () (_ BitVec 64))
(declare-fun temp58_14 () (_ BitVec 64))
(declare-fun var462208 () (_ BitVec 64))
(declare-fun temp58_15 () (_ BitVec 64))
(declare-fun var527744 () (_ BitVec 64))
(declare-fun temp58_16 () (_ BitVec 64))
(declare-fun var593280 () (_ BitVec 64))
(declare-fun temp58_17 () (_ BitVec 64))
(declare-fun var724381 () (_ BitVec 64))
(declare-fun var724357 () (_ BitVec 64))
(declare-fun var68268 () (_ BitVec 64))
(declare-fun var68269 () (_ BitVec 64))
(declare-fun temp58_18 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp58_19 () (_ BitVec 64))
(declare-fun temp58_20 () (_ BitVec 64))
(declare-fun temp58_21 () (_ BitVec 64))
(declare-fun temp58_22 () (_ BitVec 64))
(declare-fun temp58_23 () (_ BitVec 64))
(declare-fun temp58_24 () (_ BitVec 64))
(declare-fun temp58_25 () (_ BitVec 64))
(declare-fun temp58_26 () (_ BitVec 64))
(declare-fun temp58_27 () (_ BitVec 64))
(declare-fun temp58_28 () (_ BitVec 64))
(declare-fun temp58_29 () (_ BitVec 64))
(declare-fun temp58_30 () (_ BitVec 64))
(declare-fun temp58_31 () (_ BitVec 64))
(declare-fun var68270 () (_ BitVec 64))
(declare-fun temp58_32 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp58_33 () (_ BitVec 64))
(declare-fun temp58_34 () (_ BitVec 64))
(declare-fun temp58_35 () (_ BitVec 64))
(declare-fun temp58_36 () (_ BitVec 64))
(declare-fun temp58_37 () (_ BitVec 64))
(declare-fun temp58_38 () (_ BitVec 64))
(declare-fun temp58_39 () (_ BitVec 64))
(declare-fun temp58_40 () (_ BitVec 64))
(declare-fun temp58_41 () (_ BitVec 64))
(declare-fun temp58_42 () (_ BitVec 64))
(declare-fun temp58_43 () (_ BitVec 64))
(declare-fun temp58_44 () (_ BitVec 64))
(declare-fun temp58_45 () (_ BitVec 64))
(declare-fun var68273 () (_ BitVec 64))
(declare-fun var68274 () (_ BitVec 64))
(declare-fun temp58_46 () (_ BitVec 64))
(declare-fun temp58_47 () (_ BitVec 64))
(declare-fun temp58_48 () (_ BitVec 64))
(declare-fun var68298 () (_ BitVec 64))
(declare-fun temp58_49 () (_ BitVec 64))
(declare-fun temp58_50 () (_ BitVec 64))
(declare-fun var68299 () (_ BitVec 64))
(declare-fun temp58_51 () (_ BitVec 64))
(declare-fun temp58_52 () (_ BitVec 64))
(declare-fun var68300 () (_ BitVec 64))
(declare-fun temp58_53 () (_ BitVec 64))
(declare-fun temp58_54 () (_ BitVec 64))
(declare-fun var68301 () (_ BitVec 64))
(declare-fun temp58_55 () (_ BitVec 64))
(declare-fun temp58_56 () (_ BitVec 64))
(declare-fun var68302 () (_ BitVec 64))
(declare-fun temp58_57 () (_ BitVec 64))
(declare-fun temp58_58 () (_ BitVec 64))
(declare-fun var68303 () (_ BitVec 64))
(declare-fun temp58_59 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp58_60 () (_ BitVec 64))
(declare-fun temp58_61 () (_ BitVec 64))
(declare-fun temp58_62 () (_ BitVec 64))
(declare-fun temp58_63 () (_ BitVec 64))
(declare-fun temp58_64 () (_ BitVec 64))
(declare-fun temp58_65 () (_ BitVec 64))
(declare-fun temp58_66 () (_ BitVec 64))
(declare-fun temp58_67 () (_ BitVec 64))
(declare-fun temp58_68 () (_ BitVec 64))
(declare-fun temp58_69 () (_ BitVec 64))
(declare-fun temp58_70 () (_ BitVec 64))
(declare-fun temp58_71 () (_ BitVec 64))
(declare-fun temp58_73 () (_ BitVec 64))
(declare-fun temp58_72 () (_ BitVec 64))
(declare-fun temp58_75 () (_ BitVec 64))
(declare-fun temp58_74 () (_ BitVec 64))
(declare-fun temp58_77 () (_ BitVec 64))
(declare-fun temp58_76 () (_ BitVec 64))
(declare-fun temp58_79 () (_ BitVec 64))
(declare-fun temp58_78 () (_ BitVec 64))
(declare-fun temp58_81 () (_ BitVec 64))
(declare-fun temp58_80 () (_ BitVec 64))
(declare-fun var792081 () (_ BitVec 64))
(declare-fun var792082 () (_ BitVec 64))
(declare-fun var857606 () (_ BitVec 64))
(declare-fun var857607 () (_ BitVec 64))
(declare-fun var922711 () (_ BitVec 64))
(declare-fun var922712 () (_ BitVec 64))
(declare-fun temp58_82 () (_ BitVec 64))
(declare-fun var922713 () (_ BitVec 64))
(declare-fun temp58_83 () (_ BitVec 64))
(declare-fun var922723 () (_ BitVec 64))
(declare-fun temp58_84 () (_ BitVec 64))
(declare-fun temp58_85 () (_ BitVec 64))
(declare-fun var922731 () (_ BitVec 64))
(declare-fun temp58_86 () (_ BitVec 64))
(declare-fun temp58_87 () (_ BitVec 64))
(declare-fun var922736 () (_ BitVec 64))
(declare-fun var922737 () (_ BitVec 64))
(declare-fun temp58_88 () (_ BitVec 64))
(declare-fun var922738 () (_ BitVec 64))
(declare-fun temp58_89 () (_ BitVec 64))
(declare-fun var922739 () (_ BitVec 64))
(declare-fun temp58_90 () (_ BitVec 64))
(declare-fun var922758 () (_ BitVec 64))
(declare-fun var922759 () (_ BitVec 64))
(declare-fun var922760 () (_ BitVec 64))
(declare-fun temp58_92 () (_ BitVec 64))
(declare-fun temp58_91 () (_ BitVec 64))
(declare-fun temp58_93 () (_ BitVec 64))
(declare-fun var922767 () (_ BitVec 64))
(declare-fun var922768 () (_ BitVec 64))
(declare-fun var922769 () (_ BitVec 64))
(declare-fun var922770 () (_ BitVec 64))
(declare-fun var922783 () (_ BitVec 64))
(declare-fun temp58_94 () (_ BitVec 64))
(declare-fun var922784 () (_ BitVec 64))
(declare-fun temp58_95 () (_ BitVec 64))
(declare-fun var1054225 () (_ BitVec 64))
(declare-fun var1054226 () (_ BitVec 64))
(assert (= temp58_1 #x0000000000000004))
(assert (= var68041
   (ite (= ARGNAME_input_NAMEEND_DIM temp58_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp58_2 #x0000000000000001))
(assert (= var68041 temp58_2))
(assert (= temp58_3 #x0000000000000004))
(assert (= var68076
   (ite (= ARGNAME_filter_NAMEEND_DIM temp58_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp58_4 #x0000000000000001))
(assert (= var68076 temp58_4))
(assert (= temp58_5 #x0000000000000000))
(assert (= var134499
   (ite (= ARGNAME_min_input_NAMEEND_DIM temp58_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var134495 var134499))
(assert (= var68102 var134495))
(assert (= temp58_6 #x0000000000000001))
(assert (= var68102 temp58_6))
(assert (= temp58_7 #x0000000000000000))
(assert (= var200035
   (ite (= ARGNAME_max_input_NAMEEND_DIM temp58_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var200031 var200035))
(assert (= var68130 var200031))
(assert (= temp58_8 #x0000000000000001))
(assert (= var68130 temp58_8))
(assert (= temp58_9 #x0000000000000000))
(assert (= var265571
   (ite (= ARGNAME_min_filter_NAMEEND_DIM temp58_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var265567 var265571))
(assert (= var68156 var265567))
(assert (= temp58_10 #x0000000000000001))
(assert (= var68156 temp58_10))
(assert (= temp58_11 #x0000000000000000))
(assert (= var331107
   (ite (= ARGNAME_max_filter_NAMEEND_DIM temp58_11)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var331103 var331107))
(assert (= var68183 var331103))
(assert (= temp58_12 #x0000000000000001))
(assert (= var68183 temp58_12))
(assert (= temp58_13 #x0000000000000000))
(assert (= var396672 temp58_13))
(assert (= temp58_14 #x0000000000000000))
(assert (= var462208 temp58_14))
(assert (= temp58_15 #x0000000000000000))
(assert (= var527744 temp58_15))
(assert (= temp58_16 #x0000000000000000))
(assert (= var593280 temp58_16))
(assert (= temp58_17 #x0000000000000000))
(assert (= var724381 temp58_17))
(assert (= var724357 var724381))
(assert (= var68268 var724357))
(assert (= var68269 var68268))
(assert (= temp58_18 #x0000000000000000))
(assert (= temp58_19 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_18)))
(assert (= temp58_20 #x0000000000000001))
(assert (= temp58_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_20)))
(assert (= temp58_22 #x0000000000000002))
(assert (= temp58_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_22)))
(assert (= temp58_24 #x0000000000000003))
(assert (= temp58_25 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_24)))
(assert (= temp58_26 #x0000000000000004))
(assert (= temp58_27 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_26)))
(assert (= temp58_28 #x0000000000000005))
(assert (= temp58_29 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_28)))
(assert (= temp58_30 #x0000000000000003))
(assert (= temp58_31 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_30)))
(assert (= var68270 temp58_31))
(assert (= temp58_32 #x0000000000000000))
(assert (= temp58_33 (select ARGNAME_filter_NAMEEND_DIMSIZE temp58_32)))
(assert (= temp58_34 #x0000000000000001))
(assert (= temp58_35 (select ARGNAME_filter_NAMEEND_DIMSIZE temp58_34)))
(assert (= temp58_36 #x0000000000000002))
(assert (= temp58_37 (select ARGNAME_filter_NAMEEND_DIMSIZE temp58_36)))
(assert (= temp58_38 #x0000000000000003))
(assert (= temp58_39 (select ARGNAME_filter_NAMEEND_DIMSIZE temp58_38)))
(assert (= temp58_40 #x0000000000000004))
(assert (= temp58_41 (select ARGNAME_filter_NAMEEND_DIMSIZE temp58_40)))
(assert (= temp58_42 #x0000000000000005))
(assert (= temp58_43 (select ARGNAME_filter_NAMEEND_DIMSIZE temp58_42)))
(assert (= temp58_44 #x0000000000000002))
(assert (= temp58_45 (select ARGNAME_filter_NAMEEND_DIMSIZE temp58_44)))
(assert (= var68273 temp58_45))
(assert (= var68274 (ite (= var68270 var68273) #x0000000000000001 #x0000000000000000)))
(assert (= temp58_46 #x0000000000000001))
(assert (= var68274 temp58_46))
(assert (= temp58_47 #x0000000000000003))
(assert (= temp58_48 (select ARGNAME_filter_NAMEEND_DIMSIZE temp58_47)))
(assert (= var68298 temp58_48))
(assert (= temp58_49 #x0000000000000001))
(assert (= temp58_50 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_49)))
(assert (= var68299 temp58_50))
(assert (= temp58_51 #x0000000000000000))
(assert (= temp58_52 (select ARGNAME_filter_NAMEEND_DIMSIZE temp58_51)))
(assert (= var68300 temp58_52))
(assert (= temp58_53 #x0000000000000002))
(assert (= temp58_54 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_53)))
(assert (= var68301 temp58_54))
(assert (= temp58_55 #x0000000000000001))
(assert (= temp58_56 (select ARGNAME_filter_NAMEEND_DIMSIZE temp58_55)))
(assert (= var68302 temp58_56))
(assert (= temp58_57 #x0000000000000000))
(assert (= temp58_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_57)))
(assert (= var68303 temp58_58))
(assert (= temp58_59 #x0000000000000000))
(assert (= temp58_60 (select ARGNAME_strides_NAMEEND_VAL temp58_59)))
(assert (= temp58_61 #x0000000000000001))
(assert (= temp58_62 (select ARGNAME_strides_NAMEEND_VAL temp58_61)))
(assert (= temp58_63 #x0000000000000002))
(assert (= temp58_64 (select ARGNAME_strides_NAMEEND_VAL temp58_63)))
(assert (= temp58_65 #x0000000000000003))
(assert (= temp58_66 (select ARGNAME_strides_NAMEEND_VAL temp58_65)))
(assert (= temp58_67 #x0000000000000004))
(assert (= temp58_68 (select ARGNAME_strides_NAMEEND_VAL temp58_67)))
(assert (= temp58_69 #x0000000000000005))
(assert (= temp58_70 (select ARGNAME_strides_NAMEEND_VAL temp58_69)))
(assert (= temp58_71 #x0000000000000001))
(assert (= temp58_73 (select ARGNAME_strides_NAMEEND_VAL temp58_71)))
(assert (= temp58_72 temp58_73))
(assert (= temp58_75 #x0000000000000000))
(assert (= temp58_74 temp58_75))
(assert (= temp58_77 #x0000000000000000))
(assert (= temp58_76 temp58_77))
(assert (= temp58_79 #x0000000000000000))
(assert (= temp58_78 temp58_79))
(assert (= temp58_81 #x0000000000000000))
(assert (= temp58_80 temp58_81))
(assert (= var792081 var68299))
(assert (= var792082 var68300))
(assert (= var857606 var792081))
(assert (= var857607 var792082))
(assert (= var922711 var857606))
(assert (= var922712 var857607))
(assert (= temp58_82 #x0000000000000001))
(assert (= var922713 temp58_82))
(assert (= temp58_83 #x0000000000000001))
(assert (= var922723
   (ite (bvslt temp58_72 temp58_83) #x0000000000000001 #x0000000000000000)))
(assert (= temp58_84 #x0000000000000000))
(assert (= var922723 temp58_84))
(assert (= temp58_85 #x0000000000000001))
(assert (= var922731
   (ite (bvslt var922713 temp58_85) #x0000000000000001 #x0000000000000000)))
(assert (= temp58_86 #x0000000000000000))
(assert (= var922731 temp58_86))
(assert (= temp58_87 #xffffffffffffffff))
(assert (= var922736 (bvadd var922712 temp58_87)))
(assert (= var922737 (bvmul var922736 var922713)))
(assert (= temp58_88 #x0000000000000001))
(assert (= var922738 (bvadd var922737 temp58_88)))
(assert (= temp58_89 #xffffffffffffffff))
(assert (= var922739 (bvxor var922737 temp58_89)))
(assert (= temp58_90 #xffffffffffffffff))
(assert (= var922758 (bvadd var922711 temp58_90)))
(assert (= var922759 (bvadd var922758 temp58_72)))
(assert (= var922760 (bvsdiv var922759 temp58_72)))
(assert (= temp58_92 #x0000000000000000))
(assert (= temp58_91 temp58_92))
(assert (= temp58_93 #xffffffffffffffff))
(assert (= var922767 (bvadd var922760 temp58_93)))
(assert (= var922768 (bvmul var922767 temp58_72)))
(assert (= var922769 (bvsub var922738 var922711)))
(assert (= var922770 (bvadd var922769 var922768)))
(assert (= var922783 var922760))
(assert (= temp58_94 #x0000000000000000))
(assert (= var922784
   (ite (bvslt var922783 temp58_94) #x0000000000000001 #x0000000000000000)))
(assert (= temp58_95 #x0000000000000000))
(assert (= var922784 temp58_95))
(assert (= var1054225 var68301))
(assert (= var1054226 var68302))
(model-add temp58_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp58_2 () (_ BitVec 64) #x0000000000000001)
(model-add var68041 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))















