(declare-fun temp25_1 () (_ BitVec 64))
(declare-fun temp25_2 () (_ BitVec 64))
(declare-fun var68041 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp25_3 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var68076 () (_ BitVec 64))
(declare-fun temp25_4 () (_ BitVec 64))
(declare-fun temp25_5 () (_ BitVec 64))
(declare-fun ARGNAME_min_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var134499 () (_ BitVec 64))
(declare-fun var134495 () (_ BitVec 64))
(declare-fun var68102 () (_ BitVec 64))
(declare-fun temp25_6 () (_ BitVec 64))
(declare-fun temp25_7 () (_ BitVec 64))
(declare-fun ARGNAME_max_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var200035 () (_ BitVec 64))
(declare-fun var200031 () (_ BitVec 64))
(declare-fun var68130 () (_ BitVec 64))
(declare-fun temp25_8 () (_ BitVec 64))
(declare-fun temp25_9 () (_ BitVec 64))
(declare-fun ARGNAME_min_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var265571 () (_ BitVec 64))
(declare-fun var265567 () (_ BitVec 64))
(declare-fun var68156 () (_ BitVec 64))
(declare-fun temp25_10 () (_ BitVec 64))
(declare-fun temp25_11 () (_ BitVec 64))
(declare-fun ARGNAME_max_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var331107 () (_ BitVec 64))
(declare-fun var331103 () (_ BitVec 64))
(declare-fun var68183 () (_ BitVec 64))
(declare-fun temp25_12 () (_ BitVec 64))
(declare-fun temp25_13 () (_ BitVec 64))
(declare-fun var396672 () (_ BitVec 64))
(declare-fun temp25_14 () (_ BitVec 64))
(declare-fun var462208 () (_ BitVec 64))
(declare-fun temp25_15 () (_ BitVec 64))
(declare-fun var527744 () (_ BitVec 64))
(declare-fun temp25_16 () (_ BitVec 64))
(declare-fun var593280 () (_ BitVec 64))
(declare-fun temp25_17 () (_ BitVec 64))
(declare-fun var658845 () (_ BitVec 64))
(declare-fun var658821 () (_ BitVec 64))
(declare-fun var68263 () (_ BitVec 64))
(declare-fun var68267 () (_ BitVec 64))
(declare-fun temp25_18 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp25_19 () (_ BitVec 64))
(declare-fun temp25_20 () (_ BitVec 64))
(declare-fun temp25_21 () (_ BitVec 64))
(declare-fun temp25_22 () (_ BitVec 64))
(declare-fun temp25_23 () (_ BitVec 64))
(declare-fun temp25_24 () (_ BitVec 64))
(declare-fun temp25_25 () (_ BitVec 64))
(declare-fun temp25_26 () (_ BitVec 64))
(declare-fun temp25_27 () (_ BitVec 64))
(declare-fun temp25_28 () (_ BitVec 64))
(declare-fun temp25_29 () (_ BitVec 64))
(declare-fun temp25_30 () (_ BitVec 64))
(declare-fun temp25_31 () (_ BitVec 64))
(declare-fun var68270 () (_ BitVec 64))
(declare-fun temp25_32 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp25_33 () (_ BitVec 64))
(declare-fun temp25_34 () (_ BitVec 64))
(declare-fun temp25_35 () (_ BitVec 64))
(declare-fun temp25_36 () (_ BitVec 64))
(declare-fun temp25_37 () (_ BitVec 64))
(declare-fun temp25_38 () (_ BitVec 64))
(declare-fun temp25_39 () (_ BitVec 64))
(declare-fun temp25_40 () (_ BitVec 64))
(declare-fun temp25_41 () (_ BitVec 64))
(declare-fun temp25_42 () (_ BitVec 64))
(declare-fun temp25_43 () (_ BitVec 64))
(declare-fun temp25_44 () (_ BitVec 64))
(declare-fun temp25_45 () (_ BitVec 64))
(declare-fun var68273 () (_ BitVec 64))
(declare-fun var68274 () (_ BitVec 64))
(declare-fun temp25_46 () (_ BitVec 64))
(declare-fun temp25_47 () (_ BitVec 64))
(declare-fun temp25_48 () (_ BitVec 64))
(declare-fun var68298 () (_ BitVec 64))
(declare-fun temp25_49 () (_ BitVec 64))
(declare-fun temp25_50 () (_ BitVec 64))
(declare-fun var68299 () (_ BitVec 64))
(declare-fun temp25_51 () (_ BitVec 64))
(declare-fun temp25_52 () (_ BitVec 64))
(declare-fun var68300 () (_ BitVec 64))
(declare-fun temp25_53 () (_ BitVec 64))
(declare-fun temp25_54 () (_ BitVec 64))
(declare-fun var68301 () (_ BitVec 64))
(declare-fun temp25_55 () (_ BitVec 64))
(declare-fun temp25_56 () (_ BitVec 64))
(declare-fun var68302 () (_ BitVec 64))
(declare-fun temp25_57 () (_ BitVec 64))
(declare-fun temp25_58 () (_ BitVec 64))
(declare-fun var68303 () (_ BitVec 64))
(declare-fun temp25_59 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp25_60 () (_ BitVec 64))
(declare-fun temp25_61 () (_ BitVec 64))
(declare-fun temp25_62 () (_ BitVec 64))
(declare-fun temp25_63 () (_ BitVec 64))
(declare-fun temp25_64 () (_ BitVec 64))
(declare-fun temp25_65 () (_ BitVec 64))
(declare-fun temp25_66 () (_ BitVec 64))
(declare-fun temp25_67 () (_ BitVec 64))
(declare-fun temp25_68 () (_ BitVec 64))
(declare-fun temp25_69 () (_ BitVec 64))
(declare-fun temp25_70 () (_ BitVec 64))
(declare-fun temp25_71 () (_ BitVec 64))
(declare-fun temp25_73 () (_ BitVec 64))
(declare-fun temp25_72 () (_ BitVec 64))
(declare-fun temp25_75 () (_ BitVec 64))
(declare-fun temp25_74 () (_ BitVec 64))
(declare-fun temp25_77 () (_ BitVec 64))
(declare-fun temp25_76 () (_ BitVec 64))
(declare-fun temp25_79 () (_ BitVec 64))
(declare-fun temp25_78 () (_ BitVec 64))
(declare-fun temp25_81 () (_ BitVec 64))
(declare-fun temp25_80 () (_ BitVec 64))
(declare-fun var792081 () (_ BitVec 64))
(declare-fun var792082 () (_ BitVec 64))
(declare-fun var857606 () (_ BitVec 64))
(declare-fun var857607 () (_ BitVec 64))
(declare-fun var922711 () (_ BitVec 64))
(declare-fun var922712 () (_ BitVec 64))
(declare-fun temp25_82 () (_ BitVec 64))
(declare-fun var922713 () (_ BitVec 64))
(declare-fun temp25_83 () (_ BitVec 64))
(declare-fun var922723 () (_ BitVec 64))
(declare-fun temp25_84 () (_ BitVec 64))
(declare-fun temp25_85 () (_ BitVec 64))
(declare-fun var922731 () (_ BitVec 64))
(declare-fun temp25_86 () (_ BitVec 64))
(declare-fun temp25_87 () (_ BitVec 64))
(declare-fun var922736 () (_ BitVec 64))
(declare-fun var922737 () (_ BitVec 64))
(declare-fun temp25_88 () (_ BitVec 64))
(declare-fun var922738 () (_ BitVec 64))
(declare-fun temp25_89 () (_ BitVec 64))
(declare-fun var922739 () (_ BitVec 64))
(declare-fun temp25_90 () (_ BitVec 64))
(declare-fun var922784 () (_ BitVec 64))
(declare-fun temp25_91 () (_ BitVec 64))
(declare-fun var988689 () (_ BitVec 64))
(declare-fun var988690 () (_ BitVec 64))
(declare-fun var1054214 () (_ BitVec 64))
(declare-fun var1054215 () (_ BitVec 64))
(declare-fun var1119319 () (_ BitVec 64))
(declare-fun var1119320 () (_ BitVec 64))
(declare-fun temp25_92 () (_ BitVec 64))
(declare-fun var1119321 () (_ BitVec 64))
(declare-fun temp25_93 () (_ BitVec 64))
(declare-fun var1119331 () (_ BitVec 64))
(declare-fun temp25_94 () (_ BitVec 64))
(declare-fun temp25_95 () (_ BitVec 64))
(declare-fun var1119339 () (_ BitVec 64))
(declare-fun temp25_96 () (_ BitVec 64))
(declare-fun temp25_97 () (_ BitVec 64))
(declare-fun var1119344 () (_ BitVec 64))
(declare-fun var1119345 () (_ BitVec 64))
(declare-fun temp25_98 () (_ BitVec 64))
(declare-fun var1119346 () (_ BitVec 64))
(declare-fun temp25_99 () (_ BitVec 64))
(declare-fun var1119347 () (_ BitVec 64))
(declare-fun var1119359 () (_ BitVec 64))
(declare-fun var1119360 () (_ BitVec 64))
(declare-fun var1119361 () (_ BitVec 64))
(declare-fun temp25_100 () (_ BitVec 64))
(declare-fun var1119392 () (_ BitVec 64))
(declare-fun temp25_101 () (_ BitVec 64))
(assert (= temp25_1 #x0000000000000004))
(assert (= var68041
   (ite (= ARGNAME_input_NAMEEND_DIM temp25_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp25_2 #x0000000000000001))
(assert (= var68041 temp25_2))
(assert (= temp25_3 #x0000000000000004))
(assert (= var68076
   (ite (= ARGNAME_filter_NAMEEND_DIM temp25_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp25_4 #x0000000000000001))
(assert (= var68076 temp25_4))
(assert (= temp25_5 #x0000000000000000))
(assert (= var134499
   (ite (= ARGNAME_min_input_NAMEEND_DIM temp25_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var134495 var134499))
(assert (= var68102 var134495))
(assert (= temp25_6 #x0000000000000001))
(assert (= var68102 temp25_6))
(assert (= temp25_7 #x0000000000000000))
(assert (= var200035
   (ite (= ARGNAME_max_input_NAMEEND_DIM temp25_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var200031 var200035))
(assert (= var68130 var200031))
(assert (= temp25_8 #x0000000000000001))
(assert (= var68130 temp25_8))
(assert (= temp25_9 #x0000000000000000))
(assert (= var265571
   (ite (= ARGNAME_min_filter_NAMEEND_DIM temp25_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var265567 var265571))
(assert (= var68156 var265567))
(assert (= temp25_10 #x0000000000000001))
(assert (= var68156 temp25_10))
(assert (= temp25_11 #x0000000000000000))
(assert (= var331107
   (ite (= ARGNAME_max_filter_NAMEEND_DIM temp25_11)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var331103 var331107))
(assert (= var68183 var331103))
(assert (= temp25_12 #x0000000000000001))
(assert (= var68183 temp25_12))
(assert (= temp25_13 #x0000000000000000))
(assert (= var396672 temp25_13))
(assert (= temp25_14 #x0000000000000000))
(assert (= var462208 temp25_14))
(assert (= temp25_15 #x0000000000000000))
(assert (= var527744 temp25_15))
(assert (= temp25_16 #x0000000000000000))
(assert (= var593280 temp25_16))
(assert (= temp25_17 #x0000000000000000))
(assert (= var658845 temp25_17))
(assert (= var658821 var658845))
(assert (= var68263 var658821))
(assert (= var68267 var68263))
(assert (= temp25_18 #x0000000000000000))
(assert (= temp25_19 (select ARGNAME_input_NAMEEND_DIMSIZE temp25_18)))
(assert (= temp25_20 #x0000000000000001))
(assert (= temp25_21 (select ARGNAME_input_NAMEEND_DIMSIZE temp25_20)))
(assert (= temp25_22 #x0000000000000002))
(assert (= temp25_23 (select ARGNAME_input_NAMEEND_DIMSIZE temp25_22)))
(assert (= temp25_24 #x0000000000000003))
(assert (= temp25_25 (select ARGNAME_input_NAMEEND_DIMSIZE temp25_24)))
(assert (= temp25_26 #x0000000000000004))
(assert (= temp25_27 (select ARGNAME_input_NAMEEND_DIMSIZE temp25_26)))
(assert (= temp25_28 #x0000000000000005))
(assert (= temp25_29 (select ARGNAME_input_NAMEEND_DIMSIZE temp25_28)))
(assert (= temp25_30 #x0000000000000003))
(assert (= temp25_31 (select ARGNAME_input_NAMEEND_DIMSIZE temp25_30)))
(assert (= var68270 temp25_31))
(assert (= temp25_32 #x0000000000000000))
(assert (= temp25_33 (select ARGNAME_filter_NAMEEND_DIMSIZE temp25_32)))
(assert (= temp25_34 #x0000000000000001))
(assert (= temp25_35 (select ARGNAME_filter_NAMEEND_DIMSIZE temp25_34)))
(assert (= temp25_36 #x0000000000000002))
(assert (= temp25_37 (select ARGNAME_filter_NAMEEND_DIMSIZE temp25_36)))
(assert (= temp25_38 #x0000000000000003))
(assert (= temp25_39 (select ARGNAME_filter_NAMEEND_DIMSIZE temp25_38)))
(assert (= temp25_40 #x0000000000000004))
(assert (= temp25_41 (select ARGNAME_filter_NAMEEND_DIMSIZE temp25_40)))
(assert (= temp25_42 #x0000000000000005))
(assert (= temp25_43 (select ARGNAME_filter_NAMEEND_DIMSIZE temp25_42)))
(assert (= temp25_44 #x0000000000000002))
(assert (= temp25_45 (select ARGNAME_filter_NAMEEND_DIMSIZE temp25_44)))
(assert (= var68273 temp25_45))
(assert (= var68274 (ite (= var68270 var68273) #x0000000000000001 #x0000000000000000)))
(assert (= temp25_46 #x0000000000000001))
(assert (= var68274 temp25_46))
(assert (= temp25_47 #x0000000000000003))
(assert (= temp25_48 (select ARGNAME_filter_NAMEEND_DIMSIZE temp25_47)))
(assert (= var68298 temp25_48))
(assert (= temp25_49 #x0000000000000001))
(assert (= temp25_50 (select ARGNAME_input_NAMEEND_DIMSIZE temp25_49)))
(assert (= var68299 temp25_50))
(assert (= temp25_51 #x0000000000000000))
(assert (= temp25_52 (select ARGNAME_filter_NAMEEND_DIMSIZE temp25_51)))
(assert (= var68300 temp25_52))
(assert (= temp25_53 #x0000000000000002))
(assert (= temp25_54 (select ARGNAME_input_NAMEEND_DIMSIZE temp25_53)))
(assert (= var68301 temp25_54))
(assert (= temp25_55 #x0000000000000001))
(assert (= temp25_56 (select ARGNAME_filter_NAMEEND_DIMSIZE temp25_55)))
(assert (= var68302 temp25_56))
(assert (= temp25_57 #x0000000000000000))
(assert (= temp25_58 (select ARGNAME_input_NAMEEND_DIMSIZE temp25_57)))
(assert (= var68303 temp25_58))
(assert (= temp25_59 #x0000000000000000))
(assert (= temp25_60 (select ARGNAME_strides_NAMEEND_VAL temp25_59)))
(assert (= temp25_61 #x0000000000000001))
(assert (= temp25_62 (select ARGNAME_strides_NAMEEND_VAL temp25_61)))
(assert (= temp25_63 #x0000000000000002))
(assert (= temp25_64 (select ARGNAME_strides_NAMEEND_VAL temp25_63)))
(assert (= temp25_65 #x0000000000000003))
(assert (= temp25_66 (select ARGNAME_strides_NAMEEND_VAL temp25_65)))
(assert (= temp25_67 #x0000000000000004))
(assert (= temp25_68 (select ARGNAME_strides_NAMEEND_VAL temp25_67)))
(assert (= temp25_69 #x0000000000000005))
(assert (= temp25_70 (select ARGNAME_strides_NAMEEND_VAL temp25_69)))
(assert (= temp25_71 #x0000000000000001))
(assert (= temp25_73 (select ARGNAME_strides_NAMEEND_VAL temp25_71)))
(assert (= temp25_72 temp25_73))
(assert (= temp25_75 #x0000000000000000))
(assert (= temp25_74 temp25_75))
(assert (= temp25_77 #x0000000000000000))
(assert (= temp25_76 temp25_77))
(assert (= temp25_79 #x0000000000000000))
(assert (= temp25_78 temp25_79))
(assert (= temp25_81 #x0000000000000000))
(assert (= temp25_80 temp25_81))
(assert (= var792081 var68299))
(assert (= var792082 var68300))
(assert (= var857606 var792081))
(assert (= var857607 var792082))
(assert (= var922711 var857606))
(assert (= var922712 var857607))
(assert (= temp25_82 #x0000000000000001))
(assert (= var922713 temp25_82))
(assert (= temp25_83 #x0000000000000001))
(assert (= var922723
   (ite (bvslt temp25_72 temp25_83) #x0000000000000001 #x0000000000000000)))
(assert (= temp25_84 #x0000000000000000))
(assert (= var922723 temp25_84))
(assert (= temp25_85 #x0000000000000001))
(assert (= var922731
   (ite (bvslt var922713 temp25_85) #x0000000000000001 #x0000000000000000)))
(assert (= temp25_86 #x0000000000000000))
(assert (= var922731 temp25_86))
(assert (= temp25_87 #xffffffffffffffff))
(assert (= var922736 (bvadd var922712 temp25_87)))
(assert (= var922737 (bvmul var922736 var922713)))
(assert (= temp25_88 #x0000000000000001))
(assert (= var922738 (bvadd var922737 temp25_88)))
(assert (= temp25_89 #xffffffffffffffff))
(assert (= var922739 (bvxor var922737 temp25_89)))
(assert (= temp25_90 #x0000000000000000))
(assert (= var922784
   (ite (bvslt temp25_74 temp25_90) #x0000000000000001 #x0000000000000000)))
(assert (= temp25_91 #x0000000000000000))
(assert (= var922784 temp25_91))
(assert (= var988689 var68301))
(assert (= var988690 var68302))
(assert (= var1054214 var988689))
(assert (= var1054215 var988690))
(assert (= var1119319 var1054214))
(assert (= var1119320 var1054215))
(assert (= temp25_92 #x0000000000000001))
(assert (= var1119321 temp25_92))
(assert (= temp25_93 #x0000000000000001))
(assert (= var1119331
   (ite (bvslt temp25_72 temp25_93) #x0000000000000001 #x0000000000000000)))
(assert (= temp25_94 #x0000000000000000))
(assert (= var1119331 temp25_94))
(assert (= temp25_95 #x0000000000000001))
(assert (= var1119339
   (ite (bvslt var1119321 temp25_95) #x0000000000000001 #x0000000000000000)))
(assert (= temp25_96 #x0000000000000000))
(assert (= var1119339 temp25_96))
(assert (= temp25_97 #xffffffffffffffff))
(assert (= var1119344 (bvadd var1119320 temp25_97)))
(assert (= var1119345 (bvmul var1119344 var1119321)))
(assert (= temp25_98 #x0000000000000001))
(assert (= var1119346 (bvadd var1119345 temp25_98)))
(assert (= temp25_99 #xffffffffffffffff))
(assert (= var1119347 (bvxor var1119345 temp25_99)))
(assert (= var1119359 (bvadd temp25_72 var1119319)))
(assert (= var1119360 (bvadd var1119359 var1119347)))
(assert (= var1119361 (bvadd var1119360 temp25_80)))
(assert (= temp25_100 #x0000000000000000))
(assert (= var1119392
   (ite (bvslt temp25_76 temp25_100) #x0000000000000001 #x0000000000000000)))
(assert (= temp25_101 #x0000000000000000))
(assert (= var1119392 temp25_101))
(model-add temp25_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp25_2 () (_ BitVec 64) #x0000000000000001)
(model-add var68041 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))















