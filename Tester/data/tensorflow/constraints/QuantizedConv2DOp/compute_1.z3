(declare-fun temp0_1 () (_ BitVec 64))
(declare-fun temp0_2 () (_ BitVec 64))
(declare-fun var68041 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp0_3 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var68076 () (_ BitVec 64))
(declare-fun temp0_4 () (_ BitVec 64))
(declare-fun temp0_5 () (_ BitVec 64))
(declare-fun ARGNAME_min_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var134499 () (_ BitVec 64))
(declare-fun var134495 () (_ BitVec 64))
(declare-fun var68102 () (_ BitVec 64))
(declare-fun temp0_6 () (_ BitVec 64))
(declare-fun temp0_7 () (_ BitVec 64))
(declare-fun ARGNAME_max_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var200035 () (_ BitVec 64))
(declare-fun var200031 () (_ BitVec 64))
(declare-fun var68130 () (_ BitVec 64))
(declare-fun temp0_8 () (_ BitVec 64))
(declare-fun temp0_9 () (_ BitVec 64))
(declare-fun ARGNAME_min_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var265571 () (_ BitVec 64))
(declare-fun var265567 () (_ BitVec 64))
(declare-fun var68156 () (_ BitVec 64))
(declare-fun temp0_10 () (_ BitVec 64))
(declare-fun temp0_11 () (_ BitVec 64))
(declare-fun ARGNAME_max_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var331107 () (_ BitVec 64))
(declare-fun var331103 () (_ BitVec 64))
(declare-fun var68183 () (_ BitVec 64))
(declare-fun temp0_12 () (_ BitVec 64))
(declare-fun temp0_13 () (_ BitVec 64))
(declare-fun var396672 () (_ BitVec 64))
(declare-fun temp0_14 () (_ BitVec 64))
(declare-fun var462208 () (_ BitVec 64))
(declare-fun temp0_15 () (_ BitVec 64))
(declare-fun var527744 () (_ BitVec 64))
(declare-fun temp0_16 () (_ BitVec 64))
(declare-fun var593280 () (_ BitVec 64))
(declare-fun temp0_17 () (_ BitVec 64))
(declare-fun var658845 () (_ BitVec 64))
(declare-fun var658821 () (_ BitVec 64))
(declare-fun var68263 () (_ BitVec 64))
(declare-fun var68267 () (_ BitVec 64))
(declare-fun temp0_18 () (_ BitVec 64))
(declare-fun var724381 () (_ BitVec 64))
(declare-fun var724357 () (_ BitVec 64))
(declare-fun var68268 () (_ BitVec 64))
(declare-fun var68269 () (_ BitVec 64))
(declare-fun temp0_19 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp0_20 () (_ BitVec 64))
(declare-fun temp0_21 () (_ BitVec 64))
(declare-fun temp0_22 () (_ BitVec 64))
(declare-fun temp0_23 () (_ BitVec 64))
(declare-fun temp0_24 () (_ BitVec 64))
(declare-fun temp0_25 () (_ BitVec 64))
(declare-fun temp0_26 () (_ BitVec 64))
(declare-fun temp0_27 () (_ BitVec 64))
(declare-fun temp0_28 () (_ BitVec 64))
(declare-fun temp0_29 () (_ BitVec 64))
(declare-fun temp0_30 () (_ BitVec 64))
(declare-fun temp0_31 () (_ BitVec 64))
(declare-fun temp0_32 () (_ BitVec 64))
(declare-fun var68270 () (_ BitVec 64))
(declare-fun temp0_33 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp0_34 () (_ BitVec 64))
(declare-fun temp0_35 () (_ BitVec 64))
(declare-fun temp0_36 () (_ BitVec 64))
(declare-fun temp0_37 () (_ BitVec 64))
(declare-fun temp0_38 () (_ BitVec 64))
(declare-fun temp0_39 () (_ BitVec 64))
(declare-fun temp0_40 () (_ BitVec 64))
(declare-fun temp0_41 () (_ BitVec 64))
(declare-fun temp0_42 () (_ BitVec 64))
(declare-fun temp0_43 () (_ BitVec 64))
(declare-fun temp0_44 () (_ BitVec 64))
(declare-fun temp0_45 () (_ BitVec 64))
(declare-fun temp0_46 () (_ BitVec 64))
(declare-fun var68273 () (_ BitVec 64))
(declare-fun var68274 () (_ BitVec 64))
(declare-fun temp0_47 () (_ BitVec 64))
(declare-fun temp0_48 () (_ BitVec 64))
(declare-fun temp0_49 () (_ BitVec 64))
(declare-fun var68298 () (_ BitVec 64))
(declare-fun temp0_50 () (_ BitVec 64))
(declare-fun temp0_51 () (_ BitVec 64))
(declare-fun var68299 () (_ BitVec 64))
(declare-fun temp0_52 () (_ BitVec 64))
(declare-fun temp0_53 () (_ BitVec 64))
(declare-fun var68300 () (_ BitVec 64))
(declare-fun temp0_54 () (_ BitVec 64))
(declare-fun temp0_55 () (_ BitVec 64))
(declare-fun var68301 () (_ BitVec 64))
(declare-fun temp0_56 () (_ BitVec 64))
(declare-fun temp0_57 () (_ BitVec 64))
(declare-fun var68302 () (_ BitVec 64))
(declare-fun temp0_58 () (_ BitVec 64))
(declare-fun temp0_59 () (_ BitVec 64))
(declare-fun var68303 () (_ BitVec 64))
(declare-fun temp0_60 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp0_61 () (_ BitVec 64))
(declare-fun temp0_62 () (_ BitVec 64))
(declare-fun temp0_63 () (_ BitVec 64))
(declare-fun temp0_64 () (_ BitVec 64))
(declare-fun temp0_65 () (_ BitVec 64))
(declare-fun temp0_66 () (_ BitVec 64))
(declare-fun temp0_67 () (_ BitVec 64))
(declare-fun temp0_68 () (_ BitVec 64))
(declare-fun temp0_69 () (_ BitVec 64))
(declare-fun temp0_70 () (_ BitVec 64))
(declare-fun temp0_71 () (_ BitVec 64))
(declare-fun temp0_72 () (_ BitVec 64))
(declare-fun temp0_74 () (_ BitVec 64))
(declare-fun temp0_73 () (_ BitVec 64))
(declare-fun temp0_76 () (_ BitVec 64))
(declare-fun temp0_75 () (_ BitVec 64))
(declare-fun temp0_78 () (_ BitVec 64))
(declare-fun temp0_77 () (_ BitVec 64))
(declare-fun temp0_80 () (_ BitVec 64))
(declare-fun temp0_79 () (_ BitVec 64))
(declare-fun temp0_82 () (_ BitVec 64))
(declare-fun temp0_81 () (_ BitVec 64))
(declare-fun var792081 () (_ BitVec 64))
(declare-fun var792082 () (_ BitVec 64))
(assert (= temp0_1 #x0000000000000004))
(assert (= var68041
   (ite (= ARGNAME_input_NAMEEND_DIM temp0_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_2 #x0000000000000001))
(assert (= var68041 temp0_2))
(assert (= temp0_3 #x0000000000000004))
(assert (= var68076
   (ite (= ARGNAME_filter_NAMEEND_DIM temp0_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp0_4 #x0000000000000001))
(assert (= var68076 temp0_4))
(assert (= temp0_5 #x0000000000000000))
(assert (= var134499
   (ite (= ARGNAME_min_input_NAMEEND_DIM temp0_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var134495 var134499))
(assert (= var68102 var134495))
(assert (= temp0_6 #x0000000000000001))
(assert (= var68102 temp0_6))
(assert (= temp0_7 #x0000000000000000))
(assert (= var200035
   (ite (= ARGNAME_max_input_NAMEEND_DIM temp0_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var200031 var200035))
(assert (= var68130 var200031))
(assert (= temp0_8 #x0000000000000001))
(assert (= var68130 temp0_8))
(assert (= temp0_9 #x0000000000000000))
(assert (= var265571
   (ite (= ARGNAME_min_filter_NAMEEND_DIM temp0_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var265567 var265571))
(assert (= var68156 var265567))
(assert (= temp0_10 #x0000000000000001))
(assert (= var68156 temp0_10))
(assert (= temp0_11 #x0000000000000000))
(assert (= var331107
   (ite (= ARGNAME_max_filter_NAMEEND_DIM temp0_11)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var331103 var331107))
(assert (= var68183 var331103))
(assert (= temp0_12 #x0000000000000001))
(assert (= var68183 temp0_12))
(assert (= temp0_13 #x0000000000000000))
(assert (= var396672 temp0_13))
(assert (= temp0_14 #x0000000000000000))
(assert (= var462208 temp0_14))
(assert (= temp0_15 #x0000000000000000))
(assert (= var527744 temp0_15))
(assert (= temp0_16 #x0000000000000000))
(assert (= var593280 temp0_16))
(assert (= temp0_17 #x0000000000000000))
(assert (= var658845 temp0_17))
(assert (= var658821 var658845))
(assert (= var68263 var658821))
(assert (= var68267 var68263))
(assert (= temp0_18 #x0000000000000000))
(assert (= var724381 temp0_18))
(assert (= var724357 var724381))
(assert (= var68268 var724357))
(assert (= var68269 var68268))
(assert (= temp0_19 #x0000000000000000))
(assert (= temp0_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_19)))
(assert (= temp0_21 #x0000000000000001))
(assert (= temp0_22 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_21)))
(assert (= temp0_23 #x0000000000000002))
(assert (= temp0_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_23)))
(assert (= temp0_25 #x0000000000000003))
(assert (= temp0_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_25)))
(assert (= temp0_27 #x0000000000000004))
(assert (= temp0_28 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_27)))
(assert (= temp0_29 #x0000000000000005))
(assert (= temp0_30 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_29)))
(assert (= temp0_31 #x0000000000000003))
(assert (= temp0_32 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_31)))
(assert (= var68270 temp0_32))
(assert (= temp0_33 #x0000000000000000))
(assert (= temp0_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp0_33)))
(assert (= temp0_35 #x0000000000000001))
(assert (= temp0_36 (select ARGNAME_filter_NAMEEND_DIMSIZE temp0_35)))
(assert (= temp0_37 #x0000000000000002))
(assert (= temp0_38 (select ARGNAME_filter_NAMEEND_DIMSIZE temp0_37)))
(assert (= temp0_39 #x0000000000000003))
(assert (= temp0_40 (select ARGNAME_filter_NAMEEND_DIMSIZE temp0_39)))
(assert (= temp0_41 #x0000000000000004))
(assert (= temp0_42 (select ARGNAME_filter_NAMEEND_DIMSIZE temp0_41)))
(assert (= temp0_43 #x0000000000000005))
(assert (= temp0_44 (select ARGNAME_filter_NAMEEND_DIMSIZE temp0_43)))
(assert (= temp0_45 #x0000000000000002))
(assert (= temp0_46 (select ARGNAME_filter_NAMEEND_DIMSIZE temp0_45)))
(assert (= var68273 temp0_46))
(assert (= var68274 (ite (= var68270 var68273) #x0000000000000001 #x0000000000000000)))
(assert (= temp0_47 #x0000000000000001))
(assert (= var68274 temp0_47))
(assert (= temp0_48 #x0000000000000003))
(assert (= temp0_49 (select ARGNAME_filter_NAMEEND_DIMSIZE temp0_48)))
(assert (= var68298 temp0_49))
(assert (= temp0_50 #x0000000000000001))
(assert (= temp0_51 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_50)))
(assert (= var68299 temp0_51))
(assert (= temp0_52 #x0000000000000000))
(assert (= temp0_53 (select ARGNAME_filter_NAMEEND_DIMSIZE temp0_52)))
(assert (= var68300 temp0_53))
(assert (= temp0_54 #x0000000000000002))
(assert (= temp0_55 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_54)))
(assert (= var68301 temp0_55))
(assert (= temp0_56 #x0000000000000001))
(assert (= temp0_57 (select ARGNAME_filter_NAMEEND_DIMSIZE temp0_56)))
(assert (= var68302 temp0_57))
(assert (= temp0_58 #x0000000000000000))
(assert (= temp0_59 (select ARGNAME_input_NAMEEND_DIMSIZE temp0_58)))
(assert (= var68303 temp0_59))
(assert (= temp0_60 #x0000000000000000))
(assert (= temp0_61 (select ARGNAME_strides_NAMEEND_VAL temp0_60)))
(assert (= temp0_62 #x0000000000000001))
(assert (= temp0_63 (select ARGNAME_strides_NAMEEND_VAL temp0_62)))
(assert (= temp0_64 #x0000000000000002))
(assert (= temp0_65 (select ARGNAME_strides_NAMEEND_VAL temp0_64)))
(assert (= temp0_66 #x0000000000000003))
(assert (= temp0_67 (select ARGNAME_strides_NAMEEND_VAL temp0_66)))
(assert (= temp0_68 #x0000000000000004))
(assert (= temp0_69 (select ARGNAME_strides_NAMEEND_VAL temp0_68)))
(assert (= temp0_70 #x0000000000000005))
(assert (= temp0_71 (select ARGNAME_strides_NAMEEND_VAL temp0_70)))
(assert (= temp0_72 #x0000000000000001))
(assert (= temp0_74 (select ARGNAME_strides_NAMEEND_VAL temp0_72)))
(assert (= temp0_73 temp0_74))
(assert (= temp0_76 #x0000000000000000))
(assert (= temp0_75 temp0_76))
(assert (= temp0_78 #x0000000000000000))
(assert (= temp0_77 temp0_78))
(assert (= temp0_80 #x0000000000000000))
(assert (= temp0_79 temp0_80))
(assert (= temp0_82 #x0000000000000000))
(assert (= temp0_81 temp0_82))
(assert (= var792081 var68299))
(assert (= var792082 var68300))
(model-add temp0_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp0_2 () (_ BitVec 64) #x0000000000000001)
(model-add var68041 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))















