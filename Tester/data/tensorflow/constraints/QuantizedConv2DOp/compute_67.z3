(declare-fun temp66_1 () (_ BitVec 64))
(declare-fun temp66_2 () (_ BitVec 64))
(declare-fun var68041 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp66_3 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var68076 () (_ BitVec 64))
(declare-fun temp66_4 () (_ BitVec 64))
(declare-fun temp66_5 () (_ BitVec 64))
(declare-fun ARGNAME_min_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var134499 () (_ BitVec 64))
(declare-fun var134495 () (_ BitVec 64))
(declare-fun var68102 () (_ BitVec 64))
(declare-fun temp66_6 () (_ BitVec 64))
(declare-fun temp66_7 () (_ BitVec 64))
(declare-fun ARGNAME_max_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var200035 () (_ BitVec 64))
(declare-fun var200031 () (_ BitVec 64))
(declare-fun var68130 () (_ BitVec 64))
(declare-fun temp66_8 () (_ BitVec 64))
(declare-fun temp66_9 () (_ BitVec 64))
(declare-fun ARGNAME_min_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var265571 () (_ BitVec 64))
(declare-fun var265567 () (_ BitVec 64))
(declare-fun var68156 () (_ BitVec 64))
(declare-fun temp66_10 () (_ BitVec 64))
(declare-fun temp66_11 () (_ BitVec 64))
(declare-fun ARGNAME_max_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var331107 () (_ BitVec 64))
(declare-fun var331103 () (_ BitVec 64))
(declare-fun var68183 () (_ BitVec 64))
(declare-fun temp66_12 () (_ BitVec 64))
(declare-fun temp66_13 () (_ BitVec 64))
(declare-fun var396672 () (_ BitVec 64))
(declare-fun temp66_14 () (_ BitVec 64))
(declare-fun var462208 () (_ BitVec 64))
(declare-fun temp66_15 () (_ BitVec 64))
(declare-fun var527744 () (_ BitVec 64))
(declare-fun temp66_16 () (_ BitVec 64))
(declare-fun var593280 () (_ BitVec 64))
(declare-fun temp66_17 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp66_18 () (_ BitVec 64))
(declare-fun temp66_19 () (_ BitVec 64))
(declare-fun temp66_20 () (_ BitVec 64))
(declare-fun temp66_21 () (_ BitVec 64))
(declare-fun temp66_22 () (_ BitVec 64))
(declare-fun temp66_23 () (_ BitVec 64))
(declare-fun temp66_24 () (_ BitVec 64))
(declare-fun temp66_25 () (_ BitVec 64))
(declare-fun temp66_26 () (_ BitVec 64))
(declare-fun temp66_27 () (_ BitVec 64))
(declare-fun temp66_28 () (_ BitVec 64))
(declare-fun temp66_29 () (_ BitVec 64))
(declare-fun temp66_30 () (_ BitVec 64))
(declare-fun var68270 () (_ BitVec 64))
(declare-fun temp66_31 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp66_32 () (_ BitVec 64))
(declare-fun temp66_33 () (_ BitVec 64))
(declare-fun temp66_34 () (_ BitVec 64))
(declare-fun temp66_35 () (_ BitVec 64))
(declare-fun temp66_36 () (_ BitVec 64))
(declare-fun temp66_37 () (_ BitVec 64))
(declare-fun temp66_38 () (_ BitVec 64))
(declare-fun temp66_39 () (_ BitVec 64))
(declare-fun temp66_40 () (_ BitVec 64))
(declare-fun temp66_41 () (_ BitVec 64))
(declare-fun temp66_42 () (_ BitVec 64))
(declare-fun temp66_43 () (_ BitVec 64))
(declare-fun temp66_44 () (_ BitVec 64))
(declare-fun var68273 () (_ BitVec 64))
(declare-fun var68274 () (_ BitVec 64))
(declare-fun temp66_45 () (_ BitVec 64))
(declare-fun temp66_46 () (_ BitVec 64))
(declare-fun temp66_47 () (_ BitVec 64))
(declare-fun var68298 () (_ BitVec 64))
(declare-fun temp66_48 () (_ BitVec 64))
(declare-fun temp66_49 () (_ BitVec 64))
(declare-fun var68299 () (_ BitVec 64))
(declare-fun temp66_50 () (_ BitVec 64))
(declare-fun temp66_51 () (_ BitVec 64))
(declare-fun var68300 () (_ BitVec 64))
(declare-fun temp66_52 () (_ BitVec 64))
(declare-fun temp66_53 () (_ BitVec 64))
(declare-fun var68301 () (_ BitVec 64))
(declare-fun temp66_54 () (_ BitVec 64))
(declare-fun temp66_55 () (_ BitVec 64))
(declare-fun var68302 () (_ BitVec 64))
(declare-fun temp66_56 () (_ BitVec 64))
(declare-fun temp66_57 () (_ BitVec 64))
(declare-fun var68303 () (_ BitVec 64))
(declare-fun temp66_58 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp66_59 () (_ BitVec 64))
(declare-fun temp66_60 () (_ BitVec 64))
(declare-fun temp66_61 () (_ BitVec 64))
(declare-fun temp66_62 () (_ BitVec 64))
(declare-fun temp66_63 () (_ BitVec 64))
(declare-fun temp66_64 () (_ BitVec 64))
(declare-fun temp66_65 () (_ BitVec 64))
(declare-fun temp66_66 () (_ BitVec 64))
(declare-fun temp66_67 () (_ BitVec 64))
(declare-fun temp66_68 () (_ BitVec 64))
(declare-fun temp66_69 () (_ BitVec 64))
(declare-fun temp66_70 () (_ BitVec 64))
(declare-fun temp66_72 () (_ BitVec 64))
(declare-fun temp66_71 () (_ BitVec 64))
(declare-fun temp66_74 () (_ BitVec 64))
(declare-fun temp66_73 () (_ BitVec 64))
(declare-fun temp66_76 () (_ BitVec 64))
(declare-fun temp66_75 () (_ BitVec 64))
(declare-fun temp66_78 () (_ BitVec 64))
(declare-fun temp66_77 () (_ BitVec 64))
(declare-fun temp66_80 () (_ BitVec 64))
(declare-fun temp66_79 () (_ BitVec 64))
(declare-fun var792081 () (_ BitVec 64))
(declare-fun var792082 () (_ BitVec 64))
(declare-fun var857606 () (_ BitVec 64))
(declare-fun var857607 () (_ BitVec 64))
(declare-fun var922711 () (_ BitVec 64))
(declare-fun var922712 () (_ BitVec 64))
(declare-fun temp66_81 () (_ BitVec 64))
(declare-fun var922713 () (_ BitVec 64))
(declare-fun temp66_82 () (_ BitVec 64))
(declare-fun var922723 () (_ BitVec 64))
(declare-fun temp66_83 () (_ BitVec 64))
(declare-fun temp66_84 () (_ BitVec 64))
(declare-fun var922731 () (_ BitVec 64))
(declare-fun temp66_85 () (_ BitVec 64))
(declare-fun temp66_86 () (_ BitVec 64))
(declare-fun var922736 () (_ BitVec 64))
(declare-fun var922737 () (_ BitVec 64))
(declare-fun temp66_87 () (_ BitVec 64))
(declare-fun var922738 () (_ BitVec 64))
(declare-fun temp66_88 () (_ BitVec 64))
(declare-fun var922739 () (_ BitVec 64))
(declare-fun temp66_89 () (_ BitVec 64))
(declare-fun var922784 () (_ BitVec 64))
(declare-fun temp66_90 () (_ BitVec 64))
(declare-fun var988689 () (_ BitVec 64))
(declare-fun var988690 () (_ BitVec 64))
(declare-fun var1054214 () (_ BitVec 64))
(declare-fun var1054215 () (_ BitVec 64))
(declare-fun var1119319 () (_ BitVec 64))
(declare-fun var1119320 () (_ BitVec 64))
(declare-fun temp66_91 () (_ BitVec 64))
(declare-fun var1119321 () (_ BitVec 64))
(declare-fun temp66_92 () (_ BitVec 64))
(declare-fun var1119331 () (_ BitVec 64))
(declare-fun temp66_93 () (_ BitVec 64))
(declare-fun temp66_94 () (_ BitVec 64))
(declare-fun var1119339 () (_ BitVec 64))
(declare-fun temp66_95 () (_ BitVec 64))
(declare-fun temp66_96 () (_ BitVec 64))
(declare-fun var1119344 () (_ BitVec 64))
(declare-fun var1119345 () (_ BitVec 64))
(declare-fun temp66_97 () (_ BitVec 64))
(declare-fun var1119346 () (_ BitVec 64))
(declare-fun temp66_98 () (_ BitVec 64))
(declare-fun var1119347 () (_ BitVec 64))
(declare-fun var1119349 () (_ BitVec 64))
(declare-fun var1119350 () (_ BitVec 64))
(declare-fun var1119351 () (_ BitVec 64))
(declare-fun temp66_100 () (_ BitVec 64))
(declare-fun temp66_99 () (_ BitVec 64))
(declare-fun temp66_102 () (_ BitVec 64))
(declare-fun temp66_101 () (_ BitVec 64))
(declare-fun var1119391 () (_ BitVec 64))
(declare-fun temp66_103 () (_ BitVec 64))
(declare-fun var1119392 () (_ BitVec 64))
(declare-fun temp66_104 () (_ BitVec 64))
(assert (= temp66_1 #x0000000000000004))
(assert (= var68041
   (ite (= ARGNAME_input_NAMEEND_DIM temp66_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_2 #x0000000000000001))
(assert (= var68041 temp66_2))
(assert (= temp66_3 #x0000000000000004))
(assert (= var68076
   (ite (= ARGNAME_filter_NAMEEND_DIM temp66_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_4 #x0000000000000001))
(assert (= var68076 temp66_4))
(assert (= temp66_5 #x0000000000000000))
(assert (= var134499
   (ite (= ARGNAME_min_input_NAMEEND_DIM temp66_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var134495 var134499))
(assert (= var68102 var134495))
(assert (= temp66_6 #x0000000000000001))
(assert (= var68102 temp66_6))
(assert (= temp66_7 #x0000000000000000))
(assert (= var200035
   (ite (= ARGNAME_max_input_NAMEEND_DIM temp66_7)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var200031 var200035))
(assert (= var68130 var200031))
(assert (= temp66_8 #x0000000000000001))
(assert (= var68130 temp66_8))
(assert (= temp66_9 #x0000000000000000))
(assert (= var265571
   (ite (= ARGNAME_min_filter_NAMEEND_DIM temp66_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var265567 var265571))
(assert (= var68156 var265567))
(assert (= temp66_10 #x0000000000000001))
(assert (= var68156 temp66_10))
(assert (= temp66_11 #x0000000000000000))
(assert (= var331107
   (ite (= ARGNAME_max_filter_NAMEEND_DIM temp66_11)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var331103 var331107))
(assert (= var68183 var331103))
(assert (= temp66_12 #x0000000000000001))
(assert (= var68183 temp66_12))
(assert (= temp66_13 #x0000000000000000))
(assert (= var396672 temp66_13))
(assert (= temp66_14 #x0000000000000000))
(assert (= var462208 temp66_14))
(assert (= temp66_15 #x0000000000000000))
(assert (= var527744 temp66_15))
(assert (= temp66_16 #x0000000000000000))
(assert (= var593280 temp66_16))
(assert (= temp66_17 #x0000000000000000))
(assert (= temp66_18 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_17)))
(assert (= temp66_19 #x0000000000000001))
(assert (= temp66_20 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_19)))
(assert (= temp66_21 #x0000000000000002))
(assert (= temp66_22 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_21)))
(assert (= temp66_23 #x0000000000000003))
(assert (= temp66_24 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_23)))
(assert (= temp66_25 #x0000000000000004))
(assert (= temp66_26 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_25)))
(assert (= temp66_27 #x0000000000000005))
(assert (= temp66_28 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_27)))
(assert (= temp66_29 #x0000000000000003))
(assert (= temp66_30 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_29)))
(assert (= var68270 temp66_30))
(assert (= temp66_31 #x0000000000000000))
(assert (= temp66_32 (select ARGNAME_filter_NAMEEND_DIMSIZE temp66_31)))
(assert (= temp66_33 #x0000000000000001))
(assert (= temp66_34 (select ARGNAME_filter_NAMEEND_DIMSIZE temp66_33)))
(assert (= temp66_35 #x0000000000000002))
(assert (= temp66_36 (select ARGNAME_filter_NAMEEND_DIMSIZE temp66_35)))
(assert (= temp66_37 #x0000000000000003))
(assert (= temp66_38 (select ARGNAME_filter_NAMEEND_DIMSIZE temp66_37)))
(assert (= temp66_39 #x0000000000000004))
(assert (= temp66_40 (select ARGNAME_filter_NAMEEND_DIMSIZE temp66_39)))
(assert (= temp66_41 #x0000000000000005))
(assert (= temp66_42 (select ARGNAME_filter_NAMEEND_DIMSIZE temp66_41)))
(assert (= temp66_43 #x0000000000000002))
(assert (= temp66_44 (select ARGNAME_filter_NAMEEND_DIMSIZE temp66_43)))
(assert (= var68273 temp66_44))
(assert (= var68274 (ite (= var68270 var68273) #x0000000000000001 #x0000000000000000)))
(assert (= temp66_45 #x0000000000000001))
(assert (= var68274 temp66_45))
(assert (= temp66_46 #x0000000000000003))
(assert (= temp66_47 (select ARGNAME_filter_NAMEEND_DIMSIZE temp66_46)))
(assert (= var68298 temp66_47))
(assert (= temp66_48 #x0000000000000001))
(assert (= temp66_49 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_48)))
(assert (= var68299 temp66_49))
(assert (= temp66_50 #x0000000000000000))
(assert (= temp66_51 (select ARGNAME_filter_NAMEEND_DIMSIZE temp66_50)))
(assert (= var68300 temp66_51))
(assert (= temp66_52 #x0000000000000002))
(assert (= temp66_53 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_52)))
(assert (= var68301 temp66_53))
(assert (= temp66_54 #x0000000000000001))
(assert (= temp66_55 (select ARGNAME_filter_NAMEEND_DIMSIZE temp66_54)))
(assert (= var68302 temp66_55))
(assert (= temp66_56 #x0000000000000000))
(assert (= temp66_57 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_56)))
(assert (= var68303 temp66_57))
(assert (= temp66_58 #x0000000000000000))
(assert (= temp66_59 (select ARGNAME_strides_NAMEEND_VAL temp66_58)))
(assert (= temp66_60 #x0000000000000001))
(assert (= temp66_61 (select ARGNAME_strides_NAMEEND_VAL temp66_60)))
(assert (= temp66_62 #x0000000000000002))
(assert (= temp66_63 (select ARGNAME_strides_NAMEEND_VAL temp66_62)))
(assert (= temp66_64 #x0000000000000003))
(assert (= temp66_65 (select ARGNAME_strides_NAMEEND_VAL temp66_64)))
(assert (= temp66_66 #x0000000000000004))
(assert (= temp66_67 (select ARGNAME_strides_NAMEEND_VAL temp66_66)))
(assert (= temp66_68 #x0000000000000005))
(assert (= temp66_69 (select ARGNAME_strides_NAMEEND_VAL temp66_68)))
(assert (= temp66_70 #x0000000000000001))
(assert (= temp66_72 (select ARGNAME_strides_NAMEEND_VAL temp66_70)))
(assert (= temp66_71 temp66_72))
(assert (= temp66_74 #x0000000000000000))
(assert (= temp66_73 temp66_74))
(assert (= temp66_76 #x0000000000000000))
(assert (= temp66_75 temp66_76))
(assert (= temp66_78 #x0000000000000000))
(assert (= temp66_77 temp66_78))
(assert (= temp66_80 #x0000000000000000))
(assert (= temp66_79 temp66_80))
(assert (= var792081 var68299))
(assert (= var792082 var68300))
(assert (= var857606 var792081))
(assert (= var857607 var792082))
(assert (= var922711 var857606))
(assert (= var922712 var857607))
(assert (= temp66_81 #x0000000000000001))
(assert (= var922713 temp66_81))
(assert (= temp66_82 #x0000000000000001))
(assert (= var922723
   (ite (bvslt temp66_71 temp66_82) #x0000000000000001 #x0000000000000000)))
(assert (= temp66_83 #x0000000000000000))
(assert (= var922723 temp66_83))
(assert (= temp66_84 #x0000000000000001))
(assert (= var922731
   (ite (bvslt var922713 temp66_84) #x0000000000000001 #x0000000000000000)))
(assert (= temp66_85 #x0000000000000000))
(assert (= var922731 temp66_85))
(assert (= temp66_86 #xffffffffffffffff))
(assert (= var922736 (bvadd var922712 temp66_86)))
(assert (= var922737 (bvmul var922736 var922713)))
(assert (= temp66_87 #x0000000000000001))
(assert (= var922738 (bvadd var922737 temp66_87)))
(assert (= temp66_88 #xffffffffffffffff))
(assert (= var922739 (bvxor var922737 temp66_88)))
(assert (= temp66_89 #x0000000000000000))
(assert (= var922784
   (ite (bvslt temp66_73 temp66_89) #x0000000000000001 #x0000000000000000)))
(assert (= temp66_90 #x0000000000000000))
(assert (= var922784 temp66_90))
(assert (= var988689 var68301))
(assert (= var988690 var68302))
(assert (= var1054214 var988689))
(assert (= var1054215 var988690))
(assert (= var1119319 var1054214))
(assert (= var1119320 var1054215))
(assert (= temp66_91 #x0000000000000001))
(assert (= var1119321 temp66_91))
(assert (= temp66_92 #x0000000000000001))
(assert (= var1119331
   (ite (bvslt temp66_71 temp66_92) #x0000000000000001 #x0000000000000000)))
(assert (= temp66_93 #x0000000000000000))
(assert (= var1119331 temp66_93))
(assert (= temp66_94 #x0000000000000001))
(assert (= var1119339
   (ite (bvslt var1119321 temp66_94) #x0000000000000001 #x0000000000000000)))
(assert (= temp66_95 #x0000000000000000))
(assert (= var1119339 temp66_95))
(assert (= temp66_96 #xffffffffffffffff))
(assert (= var1119344 (bvadd var1119320 temp66_96)))
(assert (= var1119345 (bvmul var1119344 var1119321)))
(assert (= temp66_97 #x0000000000000001))
(assert (= var1119346 (bvadd var1119345 temp66_97)))
(assert (= temp66_98 #xffffffffffffffff))
(assert (= var1119347 (bvxor var1119345 temp66_98)))
(assert (= var1119349 (bvadd temp66_71 var1119319)))
(assert (= var1119350 (bvadd var1119349 var1119347)))
(assert (= var1119351 (bvsdiv var1119350 temp66_71)))
(assert (= temp66_100 #x0000000000000000))
(assert (= temp66_99 temp66_100))
(assert (= temp66_102 #x0000000000000000))
(assert (= temp66_101 temp66_102))
(assert (= var1119391 var1119351))
(assert (= temp66_103 #x0000000000000000))
(assert (= var1119392
   (ite (bvslt var1119391 temp66_103) #x0000000000000001 #x0000000000000000)))
(assert (= temp66_104 #x0000000000000000))
(assert (= var1119392 temp66_104))
(model-add temp66_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp66_2 () (_ BitVec 64) #x0000000000000001)
(model-add var68041 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))
















