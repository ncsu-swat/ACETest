(declare-fun temp780_1 () (_ BitVec 64))
(declare-fun var133436 () (_ BitVec 64))
(declare-fun var133432 () (_ BitVec 64))
(declare-fun temp780_2 () (_ BitVec 64))
(declare-fun var72076 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun extend_8979 () (_ BitVec 64))
(declare-fun temp780_3 () (_ BitVec 64))
(declare-fun ARGNAME_shape_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var72112 () (_ BitVec 64))
(declare-fun temp780_4 () (_ BitVec 64))
(declare-fun temp780_5 () (_ BitVec 64))
(declare-fun var203856 () (_ BitVec 64))
(declare-fun temp780_6 () (_ BitVec 64))
(declare-fun extend_8979SIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp780_7 () (_ BitVec 64))
(declare-fun temp780_8 () (_ BitVec 64))
(declare-fun temp780_9 () (_ BitVec 64))
(declare-fun temp780_10 () (_ BitVec 64))
(declare-fun temp780_11 () (_ BitVec 64))
(declare-fun temp780_12 () (_ BitVec 64))
(declare-fun temp780_13 () (_ BitVec 64))
(declare-fun temp780_14 () (_ BitVec 64))
(declare-fun temp780_15 () (_ BitVec 64))
(declare-fun temp780_16 () (_ BitVec 64))
(declare-fun temp780_17 () (_ BitVec 64))
(declare-fun temp780_18 () (_ BitVec 64))
(declare-fun temp780_19 () (_ BitVec 64))
(declare-fun var72161 () (_ BitVec 64))
(declare-fun var72162 () (_ BitVec 64))
(declare-fun temp780_20 () (_ BitVec 64))
(declare-fun var72163 () (_ BitVec 64))
(declare-fun temp780_21 () (_ BitVec 64))
(declare-fun temp780_22 () (_ BitVec 64))
(declare-fun var72168 () (_ BitVec 64))
(declare-fun temp780_23 () (_ BitVec 64))
(declare-fun var72192 () (_ BitVec 64))
(declare-fun var269392 () (_ BitVec 64))
(declare-fun temp780_24 () (_ BitVec 64))
(declare-fun var72193 () (_ BitVec 64))
(declare-fun var72204 () (_ BitVec 64))
(declare-fun temp780_26 () (_ BitVec 64))
(declare-fun var527202 () (_ BitVec 64))
(declare-fun temp780_27 () (_ BitVec 64))
(declare-fun ARGNAME_means_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var72258 () (_ BitVec 64))
(declare-fun temp780_28 () (_ BitVec 64))
(declare-fun temp780_29 () (_ BitVec 64))
(declare-fun ARGNAME_stdevs_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var72310 () (_ BitVec 64))
(declare-fun temp780_30 () (_ BitVec 64))
(declare-fun temp780_31 () (_ BitVec 64))
(declare-fun ARGNAME_minvals_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var72352 () (_ BitVec 64))
(declare-fun temp780_32 () (_ BitVec 64))
(declare-fun temp780_33 () (_ BitVec 64))
(declare-fun ARGNAME_maxvals_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var72394 () (_ BitVec 64))
(declare-fun temp780_34 () (_ BitVec 64))
(declare-fun temp780_35 () (_ BitVec 64))
(declare-fun var72436 () (_ BitVec 64))
(declare-fun temp780_36 () (_ BitVec 64))
(declare-fun temp780_37 () (_ BitVec 64))
(declare-fun ARGNAME_means_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp780_38 () (_ BitVec 64))
(declare-fun temp780_39 () (_ BitVec 64))
(declare-fun temp780_40 () (_ BitVec 64))
(declare-fun temp780_41 () (_ BitVec 64))
(declare-fun temp780_42 () (_ BitVec 64))
(declare-fun temp780_43 () (_ BitVec 64))
(declare-fun temp780_44 () (_ BitVec 64))
(declare-fun temp780_45 () (_ BitVec 64))
(declare-fun temp780_46 () (_ BitVec 64))
(declare-fun temp780_47 () (_ BitVec 64))
(declare-fun temp780_48 () (_ BitVec 64))
(declare-fun temp780_49 () (_ BitVec 64))
(declare-fun temp780_50 () (_ BitVec 64))
(declare-fun var72438 () (_ BitVec 64))
(declare-fun temp780_51 () (_ BitVec 64))
(declare-fun var72439 () (_ BitVec 64))
(declare-fun temp780_52 () (_ BitVec 64))
(declare-fun temp780_53 () (_ BitVec 64))
(declare-fun var72442 () (_ BitVec 64))
(declare-fun temp780_54 () (_ BitVec 64))
(declare-fun temp780_55 () (_ BitVec 64))
(declare-fun ARGNAME_stdevs_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp780_56 () (_ BitVec 64))
(declare-fun temp780_57 () (_ BitVec 64))
(declare-fun temp780_58 () (_ BitVec 64))
(declare-fun temp780_59 () (_ BitVec 64))
(declare-fun temp780_60 () (_ BitVec 64))
(declare-fun temp780_61 () (_ BitVec 64))
(declare-fun temp780_62 () (_ BitVec 64))
(declare-fun temp780_63 () (_ BitVec 64))
(declare-fun temp780_64 () (_ BitVec 64))
(declare-fun temp780_65 () (_ BitVec 64))
(declare-fun temp780_66 () (_ BitVec 64))
(declare-fun temp780_67 () (_ BitVec 64))
(declare-fun temp780_68 () (_ BitVec 64))
(declare-fun var72444 () (_ BitVec 64))
(declare-fun temp780_69 () (_ BitVec 64))
(declare-fun var72445 () (_ BitVec 64))
(declare-fun temp780_70 () (_ BitVec 64))
(declare-fun temp780_71 () (_ BitVec 64))
(declare-fun var597091 () (_ BitVec 64))
(declare-fun var597087 () (_ BitVec 64))
(declare-fun var72462 () (_ BitVec 64))
(declare-fun temp780_72 () (_ BitVec 64))
(declare-fun temp780_73 () (_ BitVec 64))
(declare-fun temp780_74 () (_ BitVec 64))
(declare-fun var72466 () (_ BitVec 64))
(declare-fun temp780_75 () (_ BitVec 64))
(declare-fun var72467 () (_ BitVec 64))
(declare-fun temp780_76 () (_ BitVec 64))
(declare-fun temp780_77 () (_ BitVec 64))
(declare-fun var662627 () (_ BitVec 64))
(declare-fun var662623 () (_ BitVec 64))
(declare-fun var72513 () (_ BitVec 64))
(declare-fun temp780_78 () (_ BitVec 64))
(declare-fun temp780_79 () (_ BitVec 64))
(declare-fun temp780_80 () (_ BitVec 64))
(declare-fun var72515 () (_ BitVec 64))
(declare-fun temp780_81 () (_ BitVec 64))
(declare-fun var72516 () (_ BitVec 64))
(declare-fun temp780_82 () (_ BitVec 64))
(declare-fun temp780_83 () (_ BitVec 64))
(declare-fun temp780_84 () (_ BitVec 64))
(declare-fun var72518 () (_ BitVec 64))
(declare-fun temp780_85 () (_ BitVec 64))
(declare-fun var728163 () (_ BitVec 64))
(declare-fun var728159 () (_ BitVec 64))
(declare-fun var72562 () (_ BitVec 64))
(declare-fun temp780_86 () (_ BitVec 64))
(declare-fun temp780_87 () (_ BitVec 64))
(declare-fun var793699 () (_ BitVec 64))
(declare-fun var793695 () (_ BitVec 64))
(declare-fun var72611 () (_ BitVec 64))
(declare-fun temp780_88 () (_ BitVec 64))
(declare-fun temp780_89 () (_ BitVec 64))
(declare-fun ARGNAME_maxvals_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp780_90 () (_ BitVec 64))
(declare-fun temp780_91 () (_ BitVec 64))
(declare-fun temp780_92 () (_ BitVec 64))
(declare-fun temp780_93 () (_ BitVec 64))
(declare-fun temp780_94 () (_ BitVec 64))
(declare-fun temp780_95 () (_ BitVec 64))
(declare-fun temp780_96 () (_ BitVec 64))
(declare-fun temp780_97 () (_ BitVec 64))
(declare-fun temp780_98 () (_ BitVec 64))
(declare-fun temp780_99 () (_ BitVec 64))
(declare-fun temp780_100 () (_ BitVec 64))
(declare-fun temp780_101 () (_ BitVec 64))
(declare-fun temp780_102 () (_ BitVec 64))
(declare-fun var72613 () (_ BitVec 64))
(declare-fun temp780_103 () (_ BitVec 64))
(declare-fun var72614 () (_ BitVec 64))
(declare-fun temp780_104 () (_ BitVec 64))
(declare-fun temp780_105 () (_ BitVec 64))
(declare-fun temp780_106 () (_ BitVec 64))
(declare-fun var72616 () (_ BitVec 64))
(assert (= temp780_1 #x0000000000000001))
(assert (= var133436
   (ite (= extend_8979 temp780_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var133432 var133436))
(assert (= var72076 var133432))
(assert (= temp780_2 #x0000000000000001))
(assert (= var72076 temp780_2))
(assert (= temp780_3 #x0000000000000000))
(assert (= var72112
   (ite (bvsgt ARGNAME_shape_NAMEEND_LEN temp780_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_4 #x0000000000000001))
(assert (= var72112 temp780_4))
(assert (= temp780_5 #x0000000000000000))
(assert (= var203856 temp780_5))
(assert (= temp780_6 #x0000000000000000))
(assert (= temp780_7 (select extend_8979SIZE temp780_6)))
(assert (= temp780_8 #x0000000000000001))
(assert (= temp780_9 (select extend_8979SIZE temp780_8)))
(assert (= temp780_10 #x0000000000000002))
(assert (= temp780_11 (select extend_8979SIZE temp780_10)))
(assert (= temp780_12 #x0000000000000003))
(assert (= temp780_13 (select extend_8979SIZE temp780_12)))
(assert (= temp780_14 #x0000000000000004))
(assert (= temp780_15 (select extend_8979SIZE temp780_14)))
(assert (= temp780_16 #x0000000000000005))
(assert (= temp780_17 (select extend_8979SIZE temp780_16)))
(assert (= temp780_18 #x0000000000000000))
(assert (= temp780_19 (select extend_8979SIZE temp780_18)))
(assert (= var72161 temp780_19))
(assert (= var72162 var72161))
(assert (= temp780_20 #x0000000000000001))
(assert (= var72163
   (ite (bvsgt var72162 temp780_20) #x0000000000000001 #x0000000000000000)))
(assert (= temp780_21 #x0000000000000001))
(assert (= var72163 temp780_21))
(assert (= temp780_22 #xffffffffffffffff))
(assert (= var72168 (bvand var72161 temp780_22)))
(assert (= temp780_23 #x0000000000000001))
(assert (= var72192 temp780_23))
(assert (= var269392 var72192))
(assert (= temp780_24 #x0000000000000001))
(assert (= var72193 (bvadd var72192 temp780_24)))
(assert (= var72204 (ite (= var72193 var72168) #x0000000000000001 #x0000000000000000)))
(assert (= temp780_26 #x0000000000000001))
(assert (= var527202 temp780_26))
(assert (= temp780_27 #x0000000000000002))
(assert (= var72258
   (ite (bvslt ARGNAME_means_NAMEEND_DIM temp780_27)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_28 #x0000000000000001))
(assert (= var72258 temp780_28))
(assert (= temp780_29 #x0000000000000002))
(assert (= var72310
   (ite (bvslt ARGNAME_stdevs_NAMEEND_DIM temp780_29)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_30 #x0000000000000001))
(assert (= var72310 temp780_30))
(assert (= temp780_31 #x0000000000000002))
(assert (= var72352
   (ite (bvslt ARGNAME_minvals_NAMEEND_DIM temp780_31)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_32 #x0000000000000001))
(assert (= var72352 temp780_32))
(assert (= temp780_33 #x0000000000000002))
(assert (= var72394
   (ite (bvslt ARGNAME_maxvals_NAMEEND_DIM temp780_33)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_34 #x0000000000000001))
(assert (= var72394 temp780_34))
(assert (= temp780_35 #x0000000000000000))
(assert (= var72436
   (ite (= ARGNAME_means_NAMEEND_DIM temp780_35)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_36 #x0000000000000000))
(assert (= var72436 temp780_36))
(assert (= temp780_37 #x0000000000000000))
(assert (= temp780_38 (select ARGNAME_means_NAMEEND_DIMSIZE temp780_37)))
(assert (= temp780_39 #x0000000000000001))
(assert (= temp780_40 (select ARGNAME_means_NAMEEND_DIMSIZE temp780_39)))
(assert (= temp780_41 #x0000000000000002))
(assert (= temp780_42 (select ARGNAME_means_NAMEEND_DIMSIZE temp780_41)))
(assert (= temp780_43 #x0000000000000003))
(assert (= temp780_44 (select ARGNAME_means_NAMEEND_DIMSIZE temp780_43)))
(assert (= temp780_45 #x0000000000000004))
(assert (= temp780_46 (select ARGNAME_means_NAMEEND_DIMSIZE temp780_45)))
(assert (= temp780_47 #x0000000000000005))
(assert (= temp780_48 (select ARGNAME_means_NAMEEND_DIMSIZE temp780_47)))
(assert (= temp780_49 #x0000000000000000))
(assert (= temp780_50 (select ARGNAME_means_NAMEEND_DIMSIZE temp780_49)))
(assert (= var72438 temp780_50))
(assert (= temp780_51 #x0000000000000001))
(assert (= var72439 (ite (= var72438 temp780_51) #x0000000000000001 #x0000000000000000)))
(assert (= temp780_52 #x0000000000000001))
(assert (= var72439 temp780_52))
(assert (= temp780_53 #x0000000000000000))
(assert (= var72442
   (ite (= ARGNAME_stdevs_NAMEEND_DIM temp780_53)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_54 #x0000000000000000))
(assert (= var72442 temp780_54))
(assert (= temp780_55 #x0000000000000000))
(assert (= temp780_56 (select ARGNAME_stdevs_NAMEEND_DIMSIZE temp780_55)))
(assert (= temp780_57 #x0000000000000001))
(assert (= temp780_58 (select ARGNAME_stdevs_NAMEEND_DIMSIZE temp780_57)))
(assert (= temp780_59 #x0000000000000002))
(assert (= temp780_60 (select ARGNAME_stdevs_NAMEEND_DIMSIZE temp780_59)))
(assert (= temp780_61 #x0000000000000003))
(assert (= temp780_62 (select ARGNAME_stdevs_NAMEEND_DIMSIZE temp780_61)))
(assert (= temp780_63 #x0000000000000004))
(assert (= temp780_64 (select ARGNAME_stdevs_NAMEEND_DIMSIZE temp780_63)))
(assert (= temp780_65 #x0000000000000005))
(assert (= temp780_66 (select ARGNAME_stdevs_NAMEEND_DIMSIZE temp780_65)))
(assert (= temp780_67 #x0000000000000000))
(assert (= temp780_68 (select ARGNAME_stdevs_NAMEEND_DIMSIZE temp780_67)))
(assert (= var72444 temp780_68))
(assert (= temp780_69 #x0000000000000001))
(assert (= var72445 (ite (= var72444 temp780_69) #x0000000000000001 #x0000000000000000)))
(assert (= temp780_70 #x0000000000000000))
(assert (= var72445 temp780_70))
(assert (= temp780_71 #x0000000000000000))
(assert (= var597091
   (ite (= ARGNAME_means_NAMEEND_DIM temp780_71)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var597087 var597091))
(assert (= var72462 var597087))
(assert (= temp780_72 #x0000000000000000))
(assert (= var72462 temp780_72))
(assert (= temp780_73 #x0000000000000000))
(assert (= temp780_74 (select ARGNAME_means_NAMEEND_DIMSIZE temp780_73)))
(assert (= var72466 temp780_74))
(assert (= temp780_75 #x0000000000000001))
(assert (= var72467 (ite (= var72466 temp780_75) #x0000000000000001 #x0000000000000000)))
(assert (= temp780_76 #x0000000000000001))
(assert (= var72467 temp780_76))
(assert (= temp780_77 #x0000000000000000))
(assert (= var662627
   (ite (= ARGNAME_stdevs_NAMEEND_DIM temp780_77)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var662623 var662627))
(assert (= var72513 var662623))
(assert (= temp780_78 #x0000000000000000))
(assert (= var72513 temp780_78))
(assert (= temp780_79 #x0000000000000000))
(assert (= temp780_80 (select ARGNAME_stdevs_NAMEEND_DIMSIZE temp780_79)))
(assert (= var72515 temp780_80))
(assert (= temp780_81 #x0000000000000001))
(assert (= var72516 (ite (= var72515 temp780_81) #x0000000000000001 #x0000000000000000)))
(assert (= temp780_82 #x0000000000000000))
(assert (= var72516 temp780_82))
(assert (= temp780_83 #x0000000000000000))
(assert (= temp780_84 (select ARGNAME_stdevs_NAMEEND_DIMSIZE temp780_83)))
(assert (= var72518 temp780_84))
(assert (= temp780_85 #x0000000000000000))
(assert (= var728163
   (ite (= ARGNAME_minvals_NAMEEND_DIM temp780_85)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var728159 var728163))
(assert (= var72562 var728159))
(assert (= temp780_86 #x0000000000000001))
(assert (= var72562 temp780_86))
(assert (= temp780_87 #x0000000000000000))
(assert (= var793699
   (ite (= ARGNAME_maxvals_NAMEEND_DIM temp780_87)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var793695 var793699))
(assert (= var72611 var793695))
(assert (= temp780_88 #x0000000000000000))
(assert (= var72611 temp780_88))
(assert (= temp780_89 #x0000000000000000))
(assert (= temp780_90 (select ARGNAME_maxvals_NAMEEND_DIMSIZE temp780_89)))
(assert (= temp780_91 #x0000000000000001))
(assert (= temp780_92 (select ARGNAME_maxvals_NAMEEND_DIMSIZE temp780_91)))
(assert (= temp780_93 #x0000000000000002))
(assert (= temp780_94 (select ARGNAME_maxvals_NAMEEND_DIMSIZE temp780_93)))
(assert (= temp780_95 #x0000000000000003))
(assert (= temp780_96 (select ARGNAME_maxvals_NAMEEND_DIMSIZE temp780_95)))
(assert (= temp780_97 #x0000000000000004))
(assert (= temp780_98 (select ARGNAME_maxvals_NAMEEND_DIMSIZE temp780_97)))
(assert (= temp780_99 #x0000000000000005))
(assert (= temp780_100 (select ARGNAME_maxvals_NAMEEND_DIMSIZE temp780_99)))
(assert (= temp780_101 #x0000000000000000))
(assert (= temp780_102 (select ARGNAME_maxvals_NAMEEND_DIMSIZE temp780_101)))
(assert (= var72613 temp780_102))
(assert (= temp780_103 #x0000000000000001))
(assert (= var72614
   (ite (= var72613 temp780_103) #x0000000000000001 #x0000000000000000)))
(assert (= temp780_104 #x0000000000000000))
(assert (= var72614 temp780_104))
(assert (= temp780_105 #x0000000000000000))
(assert (= temp780_106 (select ARGNAME_maxvals_NAMEEND_DIMSIZE temp780_105)))
(assert (= var72616 temp780_106))
(model-add temp780_1 () (_ BitVec 64) #x0000000000000001)
(model-add var133436 () (_ BitVec 64) #x0000000000000001)
(model-add var133432 () (_ BitVec 64) #x0000000000000001)
(model-add temp780_2 () (_ BitVec 64) #x0000000000000001)
(model-add var72076 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add extend_8979
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))














