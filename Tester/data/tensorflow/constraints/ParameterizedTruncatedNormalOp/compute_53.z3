(declare-fun temp785_1 () (_ BitVec 64))
(declare-fun var133436 () (_ BitVec 64))
(declare-fun var133432 () (_ BitVec 64))
(declare-fun temp785_2 () (_ BitVec 64))
(declare-fun var72076 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun extend_8916 () (_ BitVec 64))
(declare-fun temp785_3 () (_ BitVec 64))
(declare-fun ARGNAME_shape_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var72112 () (_ BitVec 64))
(declare-fun temp785_4 () (_ BitVec 64))
(declare-fun temp785_5 () (_ BitVec 64))
(declare-fun var203856 () (_ BitVec 64))
(declare-fun temp785_6 () (_ BitVec 64))
(declare-fun extend_8916SIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp785_7 () (_ BitVec 64))
(declare-fun temp785_8 () (_ BitVec 64))
(declare-fun temp785_9 () (_ BitVec 64))
(declare-fun temp785_10 () (_ BitVec 64))
(declare-fun temp785_11 () (_ BitVec 64))
(declare-fun temp785_12 () (_ BitVec 64))
(declare-fun temp785_13 () (_ BitVec 64))
(declare-fun temp785_14 () (_ BitVec 64))
(declare-fun temp785_15 () (_ BitVec 64))
(declare-fun temp785_16 () (_ BitVec 64))
(declare-fun temp785_17 () (_ BitVec 64))
(declare-fun temp785_18 () (_ BitVec 64))
(declare-fun temp785_19 () (_ BitVec 64))
(declare-fun var72161 () (_ BitVec 64))
(declare-fun var72162 () (_ BitVec 64))
(declare-fun temp785_20 () (_ BitVec 64))
(declare-fun var72163 () (_ BitVec 64))
(declare-fun temp785_21 () (_ BitVec 64))
(declare-fun temp785_22 () (_ BitVec 64))
(declare-fun var72168 () (_ BitVec 64))
(declare-fun temp785_23 () (_ BitVec 64))
(declare-fun var72192 () (_ BitVec 64))
(declare-fun var269392 () (_ BitVec 64))
(declare-fun temp785_24 () (_ BitVec 64))
(declare-fun var72193 () (_ BitVec 64))
(declare-fun var72204 () (_ BitVec 64))
(declare-fun temp785_26 () (_ BitVec 64))
(declare-fun var527202 () (_ BitVec 64))
(declare-fun temp785_27 () (_ BitVec 64))
(declare-fun ARGNAME_means_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var72258 () (_ BitVec 64))
(declare-fun temp785_28 () (_ BitVec 64))
(declare-fun temp785_29 () (_ BitVec 64))
(declare-fun ARGNAME_stdevs_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var72310 () (_ BitVec 64))
(declare-fun temp785_30 () (_ BitVec 64))
(declare-fun temp785_31 () (_ BitVec 64))
(declare-fun ARGNAME_minvals_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var72352 () (_ BitVec 64))
(declare-fun temp785_32 () (_ BitVec 64))
(declare-fun temp785_33 () (_ BitVec 64))
(declare-fun ARGNAME_maxvals_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var72394 () (_ BitVec 64))
(declare-fun temp785_34 () (_ BitVec 64))
(declare-fun temp785_35 () (_ BitVec 64))
(declare-fun var72436 () (_ BitVec 64))
(declare-fun temp785_36 () (_ BitVec 64))
(declare-fun temp785_37 () (_ BitVec 64))
(declare-fun ARGNAME_means_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp785_38 () (_ BitVec 64))
(declare-fun temp785_39 () (_ BitVec 64))
(declare-fun temp785_40 () (_ BitVec 64))
(declare-fun temp785_41 () (_ BitVec 64))
(declare-fun temp785_42 () (_ BitVec 64))
(declare-fun temp785_43 () (_ BitVec 64))
(declare-fun temp785_44 () (_ BitVec 64))
(declare-fun temp785_45 () (_ BitVec 64))
(declare-fun temp785_46 () (_ BitVec 64))
(declare-fun temp785_47 () (_ BitVec 64))
(declare-fun temp785_48 () (_ BitVec 64))
(declare-fun temp785_49 () (_ BitVec 64))
(declare-fun temp785_50 () (_ BitVec 64))
(declare-fun var72438 () (_ BitVec 64))
(declare-fun temp785_51 () (_ BitVec 64))
(declare-fun var72439 () (_ BitVec 64))
(declare-fun temp785_52 () (_ BitVec 64))
(declare-fun temp785_53 () (_ BitVec 64))
(declare-fun var72442 () (_ BitVec 64))
(declare-fun temp785_54 () (_ BitVec 64))
(declare-fun temp785_55 () (_ BitVec 64))
(declare-fun ARGNAME_stdevs_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp785_56 () (_ BitVec 64))
(declare-fun temp785_57 () (_ BitVec 64))
(declare-fun temp785_58 () (_ BitVec 64))
(declare-fun temp785_59 () (_ BitVec 64))
(declare-fun temp785_60 () (_ BitVec 64))
(declare-fun temp785_61 () (_ BitVec 64))
(declare-fun temp785_62 () (_ BitVec 64))
(declare-fun temp785_63 () (_ BitVec 64))
(declare-fun temp785_64 () (_ BitVec 64))
(declare-fun temp785_65 () (_ BitVec 64))
(declare-fun temp785_66 () (_ BitVec 64))
(declare-fun temp785_67 () (_ BitVec 64))
(declare-fun temp785_68 () (_ BitVec 64))
(declare-fun var72444 () (_ BitVec 64))
(declare-fun temp785_69 () (_ BitVec 64))
(declare-fun var72445 () (_ BitVec 64))
(declare-fun temp785_70 () (_ BitVec 64))
(declare-fun temp785_71 () (_ BitVec 64))
(declare-fun var597091 () (_ BitVec 64))
(declare-fun var597087 () (_ BitVec 64))
(declare-fun var72462 () (_ BitVec 64))
(declare-fun temp785_72 () (_ BitVec 64))
(declare-fun temp785_73 () (_ BitVec 64))
(declare-fun temp785_74 () (_ BitVec 64))
(declare-fun var72466 () (_ BitVec 64))
(declare-fun temp785_75 () (_ BitVec 64))
(declare-fun var72467 () (_ BitVec 64))
(declare-fun temp785_76 () (_ BitVec 64))
(declare-fun temp785_77 () (_ BitVec 64))
(declare-fun var662627 () (_ BitVec 64))
(declare-fun var662623 () (_ BitVec 64))
(declare-fun var72513 () (_ BitVec 64))
(declare-fun temp785_78 () (_ BitVec 64))
(declare-fun temp785_79 () (_ BitVec 64))
(declare-fun temp785_80 () (_ BitVec 64))
(declare-fun var72515 () (_ BitVec 64))
(declare-fun temp785_81 () (_ BitVec 64))
(declare-fun var72516 () (_ BitVec 64))
(declare-fun temp785_82 () (_ BitVec 64))
(declare-fun temp785_83 () (_ BitVec 64))
(declare-fun temp785_84 () (_ BitVec 64))
(declare-fun var72518 () (_ BitVec 64))
(declare-fun temp785_85 () (_ BitVec 64))
(declare-fun var728163 () (_ BitVec 64))
(declare-fun var728159 () (_ BitVec 64))
(declare-fun var72562 () (_ BitVec 64))
(declare-fun temp785_86 () (_ BitVec 64))
(declare-fun temp785_87 () (_ BitVec 64))
(declare-fun ARGNAME_minvals_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp785_88 () (_ BitVec 64))
(declare-fun temp785_89 () (_ BitVec 64))
(declare-fun temp785_90 () (_ BitVec 64))
(declare-fun temp785_91 () (_ BitVec 64))
(declare-fun temp785_92 () (_ BitVec 64))
(declare-fun temp785_93 () (_ BitVec 64))
(declare-fun temp785_94 () (_ BitVec 64))
(declare-fun temp785_95 () (_ BitVec 64))
(declare-fun temp785_96 () (_ BitVec 64))
(declare-fun temp785_97 () (_ BitVec 64))
(declare-fun temp785_98 () (_ BitVec 64))
(declare-fun temp785_99 () (_ BitVec 64))
(declare-fun temp785_100 () (_ BitVec 64))
(declare-fun var72564 () (_ BitVec 64))
(declare-fun temp785_101 () (_ BitVec 64))
(declare-fun var72565 () (_ BitVec 64))
(declare-fun temp785_102 () (_ BitVec 64))
(declare-fun temp785_103 () (_ BitVec 64))
(declare-fun temp785_104 () (_ BitVec 64))
(declare-fun var72567 () (_ BitVec 64))
(declare-fun temp785_105 () (_ BitVec 64))
(declare-fun var793699 () (_ BitVec 64))
(declare-fun var793695 () (_ BitVec 64))
(declare-fun var72611 () (_ BitVec 64))
(declare-fun temp785_106 () (_ BitVec 64))
(declare-fun temp785_107 () (_ BitVec 64))
(declare-fun ARGNAME_maxvals_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp785_108 () (_ BitVec 64))
(declare-fun temp785_109 () (_ BitVec 64))
(declare-fun temp785_110 () (_ BitVec 64))
(declare-fun temp785_111 () (_ BitVec 64))
(declare-fun temp785_112 () (_ BitVec 64))
(declare-fun temp785_113 () (_ BitVec 64))
(declare-fun temp785_114 () (_ BitVec 64))
(declare-fun temp785_115 () (_ BitVec 64))
(declare-fun temp785_116 () (_ BitVec 64))
(declare-fun temp785_117 () (_ BitVec 64))
(declare-fun temp785_118 () (_ BitVec 64))
(declare-fun temp785_119 () (_ BitVec 64))
(declare-fun temp785_120 () (_ BitVec 64))
(declare-fun var72613 () (_ BitVec 64))
(declare-fun temp785_121 () (_ BitVec 64))
(declare-fun var72614 () (_ BitVec 64))
(declare-fun temp785_122 () (_ BitVec 64))
(assert (= temp785_1 #x0000000000000001))
(assert (= var133436
   (ite (= extend_8916 temp785_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var133432 var133436))
(assert (= var72076 var133432))
(assert (= temp785_2 #x0000000000000001))
(assert (= var72076 temp785_2))
(assert (= temp785_3 #x0000000000000000))
(assert (= var72112
   (ite (bvsgt ARGNAME_shape_NAMEEND_LEN temp785_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp785_4 #x0000000000000001))
(assert (= var72112 temp785_4))
(assert (= temp785_5 #x0000000000000000))
(assert (= var203856 temp785_5))
(assert (= temp785_6 #x0000000000000000))
(assert (= temp785_7 (select extend_8916SIZE temp785_6)))
(assert (= temp785_8 #x0000000000000001))
(assert (= temp785_9 (select extend_8916SIZE temp785_8)))
(assert (= temp785_10 #x0000000000000002))
(assert (= temp785_11 (select extend_8916SIZE temp785_10)))
(assert (= temp785_12 #x0000000000000003))
(assert (= temp785_13 (select extend_8916SIZE temp785_12)))
(assert (= temp785_14 #x0000000000000004))
(assert (= temp785_15 (select extend_8916SIZE temp785_14)))
(assert (= temp785_16 #x0000000000000005))
(assert (= temp785_17 (select extend_8916SIZE temp785_16)))
(assert (= temp785_18 #x0000000000000000))
(assert (= temp785_19 (select extend_8916SIZE temp785_18)))
(assert (= var72161 temp785_19))
(assert (= var72162 var72161))
(assert (= temp785_20 #x0000000000000001))
(assert (= var72163
   (ite (bvsgt var72162 temp785_20) #x0000000000000001 #x0000000000000000)))
(assert (= temp785_21 #x0000000000000001))
(assert (= var72163 temp785_21))
(assert (= temp785_22 #xffffffffffffffff))
(assert (= var72168 (bvand var72161 temp785_22)))
(assert (= temp785_23 #x0000000000000001))
(assert (= var72192 temp785_23))
(assert (= var269392 var72192))
(assert (= temp785_24 #x0000000000000001))
(assert (= var72193 (bvadd var72192 temp785_24)))
(assert (= var72204 (ite (= var72193 var72168) #x0000000000000001 #x0000000000000000)))
(assert (= temp785_26 #x0000000000000001))
(assert (= var527202 temp785_26))
(assert (= temp785_27 #x0000000000000002))
(assert (= var72258
   (ite (bvslt ARGNAME_means_NAMEEND_DIM temp785_27)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp785_28 #x0000000000000001))
(assert (= var72258 temp785_28))
(assert (= temp785_29 #x0000000000000002))
(assert (= var72310
   (ite (bvslt ARGNAME_stdevs_NAMEEND_DIM temp785_29)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp785_30 #x0000000000000001))
(assert (= var72310 temp785_30))
(assert (= temp785_31 #x0000000000000002))
(assert (= var72352
   (ite (bvslt ARGNAME_minvals_NAMEEND_DIM temp785_31)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp785_32 #x0000000000000001))
(assert (= var72352 temp785_32))
(assert (= temp785_33 #x0000000000000002))
(assert (= var72394
   (ite (bvslt ARGNAME_maxvals_NAMEEND_DIM temp785_33)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp785_34 #x0000000000000001))
(assert (= var72394 temp785_34))
(assert (= temp785_35 #x0000000000000000))
(assert (= var72436
   (ite (= ARGNAME_means_NAMEEND_DIM temp785_35)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp785_36 #x0000000000000000))
(assert (= var72436 temp785_36))
(assert (= temp785_37 #x0000000000000000))
(assert (= temp785_38 (select ARGNAME_means_NAMEEND_DIMSIZE temp785_37)))
(assert (= temp785_39 #x0000000000000001))
(assert (= temp785_40 (select ARGNAME_means_NAMEEND_DIMSIZE temp785_39)))
(assert (= temp785_41 #x0000000000000002))
(assert (= temp785_42 (select ARGNAME_means_NAMEEND_DIMSIZE temp785_41)))
(assert (= temp785_43 #x0000000000000003))
(assert (= temp785_44 (select ARGNAME_means_NAMEEND_DIMSIZE temp785_43)))
(assert (= temp785_45 #x0000000000000004))
(assert (= temp785_46 (select ARGNAME_means_NAMEEND_DIMSIZE temp785_45)))
(assert (= temp785_47 #x0000000000000005))
(assert (= temp785_48 (select ARGNAME_means_NAMEEND_DIMSIZE temp785_47)))
(assert (= temp785_49 #x0000000000000000))
(assert (= temp785_50 (select ARGNAME_means_NAMEEND_DIMSIZE temp785_49)))
(assert (= var72438 temp785_50))
(assert (= temp785_51 #x0000000000000001))
(assert (= var72439 (ite (= var72438 temp785_51) #x0000000000000001 #x0000000000000000)))
(assert (= temp785_52 #x0000000000000001))
(assert (= var72439 temp785_52))
(assert (= temp785_53 #x0000000000000000))
(assert (= var72442
   (ite (= ARGNAME_stdevs_NAMEEND_DIM temp785_53)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp785_54 #x0000000000000000))
(assert (= var72442 temp785_54))
(assert (= temp785_55 #x0000000000000000))
(assert (= temp785_56 (select ARGNAME_stdevs_NAMEEND_DIMSIZE temp785_55)))
(assert (= temp785_57 #x0000000000000001))
(assert (= temp785_58 (select ARGNAME_stdevs_NAMEEND_DIMSIZE temp785_57)))
(assert (= temp785_59 #x0000000000000002))
(assert (= temp785_60 (select ARGNAME_stdevs_NAMEEND_DIMSIZE temp785_59)))
(assert (= temp785_61 #x0000000000000003))
(assert (= temp785_62 (select ARGNAME_stdevs_NAMEEND_DIMSIZE temp785_61)))
(assert (= temp785_63 #x0000000000000004))
(assert (= temp785_64 (select ARGNAME_stdevs_NAMEEND_DIMSIZE temp785_63)))
(assert (= temp785_65 #x0000000000000005))
(assert (= temp785_66 (select ARGNAME_stdevs_NAMEEND_DIMSIZE temp785_65)))
(assert (= temp785_67 #x0000000000000000))
(assert (= temp785_68 (select ARGNAME_stdevs_NAMEEND_DIMSIZE temp785_67)))
(assert (= var72444 temp785_68))
(assert (= temp785_69 #x0000000000000001))
(assert (= var72445 (ite (= var72444 temp785_69) #x0000000000000001 #x0000000000000000)))
(assert (= temp785_70 #x0000000000000000))
(assert (= var72445 temp785_70))
(assert (= temp785_71 #x0000000000000000))
(assert (= var597091
   (ite (= ARGNAME_means_NAMEEND_DIM temp785_71)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var597087 var597091))
(assert (= var72462 var597087))
(assert (= temp785_72 #x0000000000000000))
(assert (= var72462 temp785_72))
(assert (= temp785_73 #x0000000000000000))
(assert (= temp785_74 (select ARGNAME_means_NAMEEND_DIMSIZE temp785_73)))
(assert (= var72466 temp785_74))
(assert (= temp785_75 #x0000000000000001))
(assert (= var72467 (ite (= var72466 temp785_75) #x0000000000000001 #x0000000000000000)))
(assert (= temp785_76 #x0000000000000001))
(assert (= var72467 temp785_76))
(assert (= temp785_77 #x0000000000000000))
(assert (= var662627
   (ite (= ARGNAME_stdevs_NAMEEND_DIM temp785_77)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var662623 var662627))
(assert (= var72513 var662623))
(assert (= temp785_78 #x0000000000000000))
(assert (= var72513 temp785_78))
(assert (= temp785_79 #x0000000000000000))
(assert (= temp785_80 (select ARGNAME_stdevs_NAMEEND_DIMSIZE temp785_79)))
(assert (= var72515 temp785_80))
(assert (= temp785_81 #x0000000000000001))
(assert (= var72516 (ite (= var72515 temp785_81) #x0000000000000001 #x0000000000000000)))
(assert (= temp785_82 #x0000000000000000))
(assert (= var72516 temp785_82))
(assert (= temp785_83 #x0000000000000000))
(assert (= temp785_84 (select ARGNAME_stdevs_NAMEEND_DIMSIZE temp785_83)))
(assert (= var72518 temp785_84))
(assert (= temp785_85 #x0000000000000000))
(assert (= var728163
   (ite (= ARGNAME_minvals_NAMEEND_DIM temp785_85)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var728159 var728163))
(assert (= var72562 var728159))
(assert (= temp785_86 #x0000000000000000))
(assert (= var72562 temp785_86))
(assert (= temp785_87 #x0000000000000000))
(assert (= temp785_88 (select ARGNAME_minvals_NAMEEND_DIMSIZE temp785_87)))
(assert (= temp785_89 #x0000000000000001))
(assert (= temp785_90 (select ARGNAME_minvals_NAMEEND_DIMSIZE temp785_89)))
(assert (= temp785_91 #x0000000000000002))
(assert (= temp785_92 (select ARGNAME_minvals_NAMEEND_DIMSIZE temp785_91)))
(assert (= temp785_93 #x0000000000000003))
(assert (= temp785_94 (select ARGNAME_minvals_NAMEEND_DIMSIZE temp785_93)))
(assert (= temp785_95 #x0000000000000004))
(assert (= temp785_96 (select ARGNAME_minvals_NAMEEND_DIMSIZE temp785_95)))
(assert (= temp785_97 #x0000000000000005))
(assert (= temp785_98 (select ARGNAME_minvals_NAMEEND_DIMSIZE temp785_97)))
(assert (= temp785_99 #x0000000000000000))
(assert (= temp785_100 (select ARGNAME_minvals_NAMEEND_DIMSIZE temp785_99)))
(assert (= var72564 temp785_100))
(assert (= temp785_101 #x0000000000000001))
(assert (= var72565
   (ite (= var72564 temp785_101) #x0000000000000001 #x0000000000000000)))
(assert (= temp785_102 #x0000000000000000))
(assert (= var72565 temp785_102))
(assert (= temp785_103 #x0000000000000000))
(assert (= temp785_104 (select ARGNAME_minvals_NAMEEND_DIMSIZE temp785_103)))
(assert (= var72567 temp785_104))
(assert (= temp785_105 #x0000000000000000))
(assert (= var793699
   (ite (= ARGNAME_maxvals_NAMEEND_DIM temp785_105)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var793695 var793699))
(assert (= var72611 var793695))
(assert (= temp785_106 #x0000000000000000))
(assert (= var72611 temp785_106))
(assert (= temp785_107 #x0000000000000000))
(assert (= temp785_108 (select ARGNAME_maxvals_NAMEEND_DIMSIZE temp785_107)))
(assert (= temp785_109 #x0000000000000001))
(assert (= temp785_110 (select ARGNAME_maxvals_NAMEEND_DIMSIZE temp785_109)))
(assert (= temp785_111 #x0000000000000002))
(assert (= temp785_112 (select ARGNAME_maxvals_NAMEEND_DIMSIZE temp785_111)))
(assert (= temp785_113 #x0000000000000003))
(assert (= temp785_114 (select ARGNAME_maxvals_NAMEEND_DIMSIZE temp785_113)))
(assert (= temp785_115 #x0000000000000004))
(assert (= temp785_116 (select ARGNAME_maxvals_NAMEEND_DIMSIZE temp785_115)))
(assert (= temp785_117 #x0000000000000005))
(assert (= temp785_118 (select ARGNAME_maxvals_NAMEEND_DIMSIZE temp785_117)))
(assert (= temp785_119 #x0000000000000000))
(assert (= temp785_120 (select ARGNAME_maxvals_NAMEEND_DIMSIZE temp785_119)))
(assert (= var72613 temp785_120))
(assert (= temp785_121 #x0000000000000001))
(assert (= var72614
   (ite (= var72613 temp785_121) #x0000000000000001 #x0000000000000000)))
(assert (= temp785_122 #x0000000000000001))
(assert (= var72614 temp785_122))
(model-add temp785_1 () (_ BitVec 64) #x0000000000000001)
(model-add var133436 () (_ BitVec 64) #x0000000000000001)
(model-add var133432 () (_ BitVec 64) #x0000000000000001)
(model-add temp785_2 () (_ BitVec 64) #x0000000000000001)
(model-add var72076 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add extend_8916
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000001 (bvnot #x0000000000000001)))
















