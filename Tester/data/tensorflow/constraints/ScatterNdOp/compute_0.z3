(declare-fun temp680_1 () (_ BitVec 64))
(declare-fun temp680_2 () (_ BitVec 64))
(declare-fun var82893 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_indices_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp680_3 () (_ BitVec 64))
(declare-fun ARGNAME_updates_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var82931 () (_ BitVec 64))
(declare-fun temp680_4 () (_ BitVec 64))
(declare-fun temp680_5 () (_ BitVec 64))
(declare-fun var538859 () (_ BitVec 64))
(declare-fun ARGNAME_indices_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun ARGNAME_updates_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var727778 () (_ BitVec 64))
(declare-fun temp680_6 () (_ BitVec 64))
(declare-fun var727779 () (_ BitVec 64))
(declare-fun temp680_7 () (_ BitVec 64))
(declare-fun temp680_8 () (_ BitVec 64))
(declare-fun ARGNAME_shape_NAMEEND_LEN () (_ BitVec 64))
(declare-fun var727781 () (_ BitVec 64))
(declare-fun temp680_9 () (_ BitVec 64))
(declare-fun var727782 () (_ BitVec 64))
(declare-fun var727783 () (_ BitVec 64))
(declare-fun temp680_10 () (_ BitVec 64))
(declare-fun var727784 () (_ BitVec 64))
(declare-fun var727785 () (_ BitVec 64))
(declare-fun var727788 () (_ BitVec 64))
(declare-fun var727774 () (_ BitVec 64))
(declare-fun var83013 () (_ BitVec 64))
(declare-fun temp680_11 () (_ BitVec 64))
(declare-fun temp680_12 () (_ BitVec 64))
(declare-fun var83054 () (_ BitVec 64))
(declare-fun var83055 () (_ BitVec 64))
(declare-fun temp680_13 () (_ BitVec 64))
(declare-fun var83056 () (_ BitVec 64))
(declare-fun temp680_14 () (_ BitVec 64))
(declare-fun temp680_15 () (_ BitVec 64))
(declare-fun var83069 () (_ BitVec 64))
(declare-fun var83071 () (_ BitVec 64))
(declare-fun temp680_16 () (_ BitVec 64))
(declare-fun temp680_17 () (_ BitVec 64))
(declare-fun ARGNAME_indices_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp680_18 () (_ BitVec 64))
(declare-fun temp680_19 () (_ BitVec 64))
(declare-fun temp680_20 () (_ BitVec 64))
(declare-fun temp680_21 () (_ BitVec 64))
(declare-fun temp680_22 () (_ BitVec 64))
(declare-fun temp680_23 () (_ BitVec 64))
(declare-fun temp680_24 () (_ BitVec 64))
(declare-fun temp680_25 () (_ BitVec 64))
(declare-fun temp680_26 () (_ BitVec 64))
(declare-fun temp680_27 () (_ BitVec 64))
(declare-fun temp680_28 () (_ BitVec 64))
(declare-fun temp680_29 () (_ BitVec 64))
(declare-fun temp680_30 () (_ BitVec 64))
(declare-fun temp680_31 () (_ BitVec 64))
(declare-fun temp680_32 () (_ BitVec 64))
(declare-fun temp680_33 () (_ BitVec 64))
(declare-fun temp680_34 () (_ BitVec 64))
(declare-fun temp680_35 () (_ BitVec 64))
(declare-fun temp680_36 () (_ BitVec 64))
(declare-fun var83072 () (_ BitVec 64))
(declare-fun var83075 () (_ BitVec 64))
(declare-fun temp680_37 () (_ BitVec 64))
(declare-fun temp680_38 () (_ BitVec 64))
(declare-fun ARGNAME_updates_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp680_39 () (_ BitVec 64))
(declare-fun temp680_40 () (_ BitVec 64))
(declare-fun temp680_41 () (_ BitVec 64))
(declare-fun temp680_42 () (_ BitVec 64))
(declare-fun temp680_43 () (_ BitVec 64))
(declare-fun temp680_44 () (_ BitVec 64))
(declare-fun temp680_45 () (_ BitVec 64))
(declare-fun temp680_46 () (_ BitVec 64))
(declare-fun temp680_47 () (_ BitVec 64))
(declare-fun temp680_48 () (_ BitVec 64))
(declare-fun temp680_49 () (_ BitVec 64))
(declare-fun temp680_50 () (_ BitVec 64))
(declare-fun temp680_51 () (_ BitVec 64))
(declare-fun temp680_52 () (_ BitVec 64))
(declare-fun temp680_53 () (_ BitVec 64))
(declare-fun temp680_54 () (_ BitVec 64))
(declare-fun temp680_55 () (_ BitVec 64))
(declare-fun temp680_56 () (_ BitVec 64))
(declare-fun temp680_57 () (_ BitVec 64))
(declare-fun var83076 () (_ BitVec 64))
(declare-fun var83077 () (_ BitVec 64))
(declare-fun temp680_58 () (_ BitVec 64))
(declare-fun var83061 () (_ BitVec 64))
(declare-fun var83060 () (_ BitVec 64))
(declare-fun temp680_61 () (_ BitVec 64))
(declare-fun temp680_62 () (_ BitVec 64))
(declare-fun temp680_63 () (_ BitVec 64))
(declare-fun var83147 () (_ BitVec 64))
(declare-fun var83154 () (_ BitVec 64))
(declare-fun var83159 () (_ BitVec 64))
(declare-fun temp680_64 () (_ BitVec 64))
(declare-fun var83228 () (_ BitVec 64))
(declare-fun var83230 () (_ BitVec 64))
(declare-fun var83235 () (_ BitVec 64))
(declare-fun temp680_66 () (_ BitVec 64))
(declare-fun extend_14751 () (_ BitVec 64))
(declare-fun var83318 () (_ BitVec 64))
(declare-fun temp680_67 () (_ BitVec 64))
(declare-fun temp680_68 () (_ BitVec 64))
(declare-fun var804920 () (_ BitVec 64))
(declare-fun var989922 () (_ BitVec 64))
(declare-fun temp680_69 () (_ BitVec 64))
(declare-fun var989923 () (_ BitVec 64))
(declare-fun temp680_70 () (_ BitVec 64))
(declare-fun temp680_71 () (_ BitVec 64))
(declare-fun var989926 () (_ BitVec 64))
(declare-fun temp680_72 () (_ BitVec 64))
(declare-fun var989928 () (_ BitVec 64))
(declare-fun temp680_73 () (_ BitVec 64))
(declare-fun var854125 () (_ BitVec 64))
(declare-fun temp680_74 () (_ BitVec 64))
(declare-fun temp680_75 () (_ BitVec 64))
(declare-fun temp680_76 () (_ BitVec 64))
(declare-fun var859936 () (_ BitVec 64))
(declare-fun temp680_77 () (_ BitVec 64))
(declare-fun temp680_78 () (_ BitVec 64))
(declare-fun temp680_79 () (_ BitVec 64))
(declare-fun temp680_80 () (_ BitVec 64))
(declare-fun var859939 () (_ BitVec 64))
(declare-fun var859940 () (_ BitVec 64))
(declare-fun temp680_81 () (_ BitVec 64))
(declare-fun temp680_82 () (_ BitVec 64))
(declare-fun var1190127 () (_ BitVec 64))
(declare-fun var859976 () (_ BitVec 64))
(declare-fun var859979 () (_ BitVec 64))
(declare-fun temp680_83 () (_ BitVec 64))
(declare-fun temp680_84 () (_ BitVec 64))
(declare-fun var1255663 () (_ BitVec 64))
(declare-fun var860000 () (_ BitVec 64))
(declare-fun temp680_85 () (_ BitVec 64))
(declare-fun var860019 () (_ BitVec 64))
(declare-fun temp680_86 () (_ BitVec 64))
(declare-fun temp680_87 () (_ BitVec 64))
(declare-fun var860022 () (_ BitVec 64))
(declare-fun temp680_88 () (_ BitVec 64))
(declare-fun temp680_89 () (_ BitVec 64))
(declare-fun temp680_90 () (_ BitVec 64))
(declare-fun var860023 () (_ BitVec 64))
(declare-fun var860026 () (_ BitVec 64))
(declare-fun var860030 () (_ BitVec 64))
(declare-fun var860038 () (_ BitVec 64))
(declare-fun var860041 () (_ BitVec 64))
(declare-fun temp680_91 () (_ BitVec 64))
(declare-fun var860039 () (_ BitVec 64))
(declare-fun temp680_92 () (_ BitVec 64))
(declare-fun var1321199 () (_ BitVec 64))
(declare-fun var860035 () (_ BitVec 64))
(declare-fun var860053 () (_ BitVec 64))
(declare-fun temp680_93 () (_ BitVec 64))
(declare-fun var860054 () (_ BitVec 64))
(declare-fun temp680_94 () (_ BitVec 64))
(declare-fun var860055 () (_ BitVec 64))
(declare-fun var860057 () (_ BitVec 64))
(declare-fun var805025 () (_ BitVec 64))
(declare-fun temp680_95 () (_ BitVec 64))
(declare-fun var1646513 () (_ BitVec 64))
(declare-fun temp680_96 () (_ BitVec 64))
(declare-fun temp680_98 () (_ BitVec 64))
(declare-fun temp680_97 () (_ BitVec 64))
(declare-fun temp680_100 () (_ BitVec 64))
(declare-fun temp680_99 () (_ BitVec 64))
(declare-fun temp680_101 () (_ BitVec 64))
(declare-fun var1842323 () (_ BitVec 64))
(declare-fun var1842324 () (_ BitVec 64))
(declare-fun var1842327 () (_ BitVec 64))
(declare-fun temp680_102 () (_ BitVec 64))
(declare-fun var1908735 () (_ BitVec 64))
(declare-fun temp680_104 () (_ BitVec 64))
(declare-fun temp680_103 () (_ BitVec 64))
(declare-fun temp680_106 () (_ BitVec 64))
(declare-fun temp680_105 () (_ BitVec 64))
(declare-fun temp680_108 () (_ BitVec 64))
(declare-fun temp680_107 () (_ BitVec 64))
(declare-fun temp680_110 () (_ BitVec 64))
(declare-fun temp680_109 () (_ BitVec 64))
(declare-fun temp680_112 () (_ BitVec 64))
(declare-fun temp680_111 () (_ BitVec 64))
(assert (= temp680_1 #x0000000000000000))
(assert (= var82893
   (ite (bvsgt ARGNAME_indices_NAMEEND_DIM temp680_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp680_2 #x0000000000000001))
(assert (= var82893 temp680_2))
(assert (= temp680_3 #x0000000000000000))
(assert (= var82931
   (ite (bvsgt ARGNAME_updates_NAMEEND_DIM temp680_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp680_4 #x0000000000000001))
(assert (= var82931 temp680_4))
(assert (= temp680_5 #x0000000000000001))
(assert (= var538859 temp680_5))
(assert (= var727778
   (bvor ARGNAME_updates_NAMEEND_NUMELEMENT ARGNAME_indices_NAMEEND_NUMELEMENT)))
(assert (= temp680_6 #x0000000000000000))
(assert (= var727779
   (ite (= var727778 temp680_6) #x0000000000000001 #x0000000000000000)))
(assert (= temp680_7 #x0000000000000000))
(assert (= var727779 temp680_7))
(assert (= temp680_8 #x0000000000000000))
(assert (= var727781
   (ite (distinct ARGNAME_shape_NAMEEND_LEN temp680_8)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp680_9 #x0000000000000000))
(assert (= var727782
   (ite (distinct ARGNAME_indices_NAMEEND_NUMELEMENT temp680_9)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var727783 (bvand var727781 var727782)))
(assert (= temp680_10 #x0000000000000000))
(assert (= var727784
   (ite (distinct ARGNAME_updates_NAMEEND_NUMELEMENT temp680_10)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var727785 (bvand var727783 var727784)))
(assert (= var727788 var727785))
(assert (= var727774 var727788))
(assert (= var83013 var727774))
(assert (= temp680_11 #x0000000000000001))
(assert (= var83013 temp680_11))
(assert (= temp680_12 #xffffffffffffffff))
(assert (= var83054 (bvadd ARGNAME_indices_NAMEEND_DIM temp680_12)))
(assert (= var83055 var83054))
(assert (= temp680_13 #x0000000000000001))
(assert (= var83056
   (ite (bvsgt ARGNAME_indices_NAMEEND_DIM temp680_13)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp680_14 #x0000000000000001))
(assert (= var83056 temp680_14))
(assert (= temp680_15 #x0000000000000000))
(assert (= var83069 temp680_15))
(assert (= var83071 var83069))
(assert (= temp680_16 #x0000000000000000))
(assert (= temp680_17 temp680_16))
(assert (= temp680_18 (select ARGNAME_indices_NAMEEND_DIMSIZE temp680_17)))
(assert (= temp680_19 #x0000000000000001))
(assert (= temp680_20 temp680_19))
(assert (= temp680_21 (select ARGNAME_indices_NAMEEND_DIMSIZE temp680_20)))
(assert (= temp680_22 #x0000000000000002))
(assert (= temp680_23 temp680_22))
(assert (= temp680_24 (select ARGNAME_indices_NAMEEND_DIMSIZE temp680_23)))
(assert (= temp680_25 #x0000000000000003))
(assert (= temp680_26 temp680_25))
(assert (= temp680_27 (select ARGNAME_indices_NAMEEND_DIMSIZE temp680_26)))
(assert (= temp680_28 #x0000000000000004))
(assert (= temp680_29 temp680_28))
(assert (= temp680_30 (select ARGNAME_indices_NAMEEND_DIMSIZE temp680_29)))
(assert (= temp680_31 #x0000000000000005))
(assert (= temp680_32 temp680_31))
(assert (= temp680_33 (select ARGNAME_indices_NAMEEND_DIMSIZE temp680_32)))
(assert (= temp680_34 #x0000000000000000))
(assert (= temp680_35
   (ite (bvslt var83071 temp680_34)
        (bvadd ARGNAME_indices_NAMEEND_DIM var83071)
        var83071)))
(assert (= temp680_36 (select ARGNAME_indices_NAMEEND_DIMSIZE temp680_35)))
(assert (= var83072 temp680_36))
(assert (= var83075 var83069))
(assert (= temp680_37 #x0000000000000000))
(assert (= temp680_38 temp680_37))
(assert (= temp680_39 (select ARGNAME_updates_NAMEEND_DIMSIZE temp680_38)))
(assert (= temp680_40 #x0000000000000001))
(assert (= temp680_41 temp680_40))
(assert (= temp680_42 (select ARGNAME_updates_NAMEEND_DIMSIZE temp680_41)))
(assert (= temp680_43 #x0000000000000002))
(assert (= temp680_44 temp680_43))
(assert (= temp680_45 (select ARGNAME_updates_NAMEEND_DIMSIZE temp680_44)))
(assert (= temp680_46 #x0000000000000003))
(assert (= temp680_47 temp680_46))
(assert (= temp680_48 (select ARGNAME_updates_NAMEEND_DIMSIZE temp680_47)))
(assert (= temp680_49 #x0000000000000004))
(assert (= temp680_50 temp680_49))
(assert (= temp680_51 (select ARGNAME_updates_NAMEEND_DIMSIZE temp680_50)))
(assert (= temp680_52 #x0000000000000005))
(assert (= temp680_53 temp680_52))
(assert (= temp680_54 (select ARGNAME_updates_NAMEEND_DIMSIZE temp680_53)))
(assert (= temp680_55 #x0000000000000000))
(assert (= temp680_56
   (ite (bvslt var83075 temp680_55)
        (bvadd ARGNAME_updates_NAMEEND_DIM var83075)
        var83075)))
(assert (= temp680_57 (select ARGNAME_updates_NAMEEND_DIMSIZE temp680_56)))
(assert (= var83076 temp680_57))
(assert (= var83077 (ite (= var83072 var83076) #x0000000000000001 #x0000000000000000)))
(assert (= temp680_58 #x0000000000000001))
(assert (= var83061 (bvadd var83069 temp680_58)))
(assert (= var83060
   (ite (bvslt var83061 var83055) #x0000000000000001 #x0000000000000000)))
(assert (= temp680_61 #x0000000000000000))
(assert (= temp680_62
   (ite (bvslt var83054 temp680_61)
        (bvadd ARGNAME_indices_NAMEEND_DIM var83054)
        var83054)))
(assert (= temp680_63 (select ARGNAME_indices_NAMEEND_DIMSIZE temp680_62)))
(assert (= var83147 temp680_63))
(assert (= var83154 (bvsub ARGNAME_updates_NAMEEND_DIM var83055)))
(assert (= var83159 var83147))
(assert (= temp680_64 #x0000000000000000))
(assert (= var83228 temp680_64))
(assert (= var83230 (bvadd var83228 var83055)))
(assert (= var83235
   (ite (bvslt var83230 ARGNAME_updates_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp680_66 #x0000000000000001))
(assert (= var83318
   (ite (= extend_14751 temp680_66)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp680_67 #x0000000000000001))
(assert (= var83318 temp680_67))
(assert (= temp680_68 #x0000000000000001))
(assert (= var804920 temp680_68))
(assert (= var989922
   (bvor ARGNAME_updates_NAMEEND_NUMELEMENT ARGNAME_indices_NAMEEND_NUMELEMENT)))
(assert (= temp680_69 #x0000000000000000))
(assert (= var989923
   (ite (= var989922 temp680_69) #x0000000000000001 #x0000000000000000)))
(assert (= temp680_70 #x0000000000000000))
(assert (= var989923 temp680_70))
(assert (= temp680_71 #x0000000000000000))
(assert (= var989926
   (ite (distinct ARGNAME_indices_NAMEEND_NUMELEMENT temp680_71)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp680_72 #x0000000000000000))
(assert (= var989928
   (ite (distinct ARGNAME_updates_NAMEEND_NUMELEMENT temp680_72)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp680_73 #x0000000000000000))
(assert (= var854125 temp680_73))
(assert (= temp680_74 #x0000000000000000))
(assert (= temp680_75
   (ite (bvslt var854125 temp680_74)
        (bvadd ARGNAME_updates_NAMEEND_DIM var854125)
        var854125)))
(assert (= temp680_76 (select ARGNAME_updates_NAMEEND_DIMSIZE temp680_75)))
(assert (= var859936 temp680_76))
(assert (= temp680_77 #x0000000000000000))
(assert (= var854125 temp680_77))
(assert (= temp680_78 #x0000000000000000))
(assert (= temp680_79
   (ite (bvslt var854125 temp680_78)
        (bvadd ARGNAME_indices_NAMEEND_DIM var854125)
        var854125)))
(assert (= temp680_80 (select ARGNAME_indices_NAMEEND_DIMSIZE temp680_79)))
(assert (= var859939 temp680_80))
(assert (= var859940
   (ite (= var859936 var859939) #x0000000000000001 #x0000000000000000)))
(assert (= temp680_81 #x0000000000000001))
(assert (= var859940 temp680_81))
(assert (= temp680_82 #xffffffffffffffff))
(assert (= var1190127 temp680_82))
(assert (= var859976 var1190127))
(assert (= var859979
   (ite (bvsgt ARGNAME_indices_NAMEEND_NUMELEMENT var859976)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp680_83 #x0000000000000000))
(assert (= var859979 temp680_83))
(assert (= temp680_84 #xffffffffffffffff))
(assert (= var1255663 temp680_84))
(assert (= var860000 var1255663))
(assert (= temp680_85 #x0000000000000001))
(assert (= var860019
   (ite (bvsgt ARGNAME_indices_NAMEEND_DIM temp680_85)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp680_86 #x0000000000000001))
(assert (= var860019 temp680_86))
(assert (= temp680_87 #xffffffffffffffff))
(assert (= var860022 (bvadd ARGNAME_indices_NAMEEND_DIM temp680_87)))
(assert (= temp680_88 #x0000000000000000))
(assert (= temp680_89
   (ite (bvslt var860022 temp680_88)
        (bvadd ARGNAME_indices_NAMEEND_DIM var860022)
        var860022)))
(assert (= temp680_90 (select ARGNAME_indices_NAMEEND_DIMSIZE temp680_89)))
(assert (= var860023 temp680_90))
(assert (= var860026 var860023))
(assert (= var860030 var860026))
(assert (= var860038 var860030))
(assert (= var860041 var860038))
(assert (= temp680_91 #x0000000000000001))
(assert (= var860039 (bvadd var860038 temp680_91)))
(assert (= temp680_92 #xffffffffffffffff))
(assert (= var1321199 temp680_92))
(assert (= var860035 var1321199))
(assert (= var860053 var860026))
(assert (= temp680_93 #x0000000000000001))
(assert (= var860054
   (ite (bvsgt var860053 temp680_93) #x0000000000000001 #x0000000000000000)))
(assert (= temp680_94 #x0000000000000001))
(assert (= var860055 (ite (= var860054 #x0000000000000001) var860053 temp680_94)))
(assert (= var860057 (bvsdiv ARGNAME_indices_NAMEEND_NUMELEMENT var860055)))
(assert (= var805025 var860057))
(assert (= temp680_95 #x0000000000000002))
(assert (= var1646513 temp680_95))
(assert (= temp680_96 #x0000000000000001))
(assert (= var804920 temp680_96))
(assert (= temp680_98 #x0000000000000000))
(assert (= temp680_97 temp680_98))
(assert (= temp680_100 #x0000000000000000))
(assert (= temp680_99 temp680_100))
(assert (= temp680_101 #x0000000000000001))
(assert (= var1842323 temp680_101))
(assert (= var1842324 var1842323))
(assert (= var1842327 (bvor temp680_97 var1842324)))
(assert (= temp680_102 #x000000000000000a))
(assert (= var1908735 temp680_102))
(assert (= temp680_104 #x0000000000000000))
(assert (= temp680_103 temp680_104))
(assert (= temp680_106 #x0000000000000000))
(assert (= temp680_105 temp680_106))
(assert (= temp680_108 #x0000000000000000))
(assert (= temp680_107 temp680_108))
(assert (= temp680_110 #x0000000000000001))
(assert (= temp680_109 temp680_110))
(assert (= temp680_112 #x0000000000000000))
(assert (= temp680_111 temp680_112))
(model-add temp680_1 () (_ BitVec 64) #x0000000000000000)
(model-add temp680_2 () (_ BitVec 64) #x0000000000000001)
(model-add var82893 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_indices_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000000 #x7fffffffffffffff))
                #x0000000000000000
                (bvadd #x0000000000000000 #x0000000000000001)))









