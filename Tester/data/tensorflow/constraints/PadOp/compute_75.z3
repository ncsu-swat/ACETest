(declare-fun temp364_1 () (_ BitVec 64))
(declare-fun temp364_2 () (_ BitVec 64))
(declare-fun var70588 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_0_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp364_3 () (_ BitVec 64))
(declare-fun ARGNAME_input_1_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var137105 () (_ BitVec 64))
(declare-fun var137101 () (_ BitVec 64))
(declare-fun var70624 () (_ BitVec 64))
(declare-fun temp364_4 () (_ BitVec 64))
(declare-fun temp364_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_1_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp364_6 () (_ BitVec 64))
(declare-fun temp364_7 () (_ BitVec 64))
(declare-fun temp364_8 () (_ BitVec 64))
(declare-fun temp364_9 () (_ BitVec 64))
(declare-fun temp364_10 () (_ BitVec 64))
(declare-fun temp364_11 () (_ BitVec 64))
(declare-fun temp364_12 () (_ BitVec 64))
(declare-fun temp364_13 () (_ BitVec 64))
(declare-fun temp364_14 () (_ BitVec 64))
(declare-fun temp364_15 () (_ BitVec 64))
(declare-fun temp364_16 () (_ BitVec 64))
(declare-fun temp364_17 () (_ BitVec 64))
(declare-fun temp364_18 () (_ BitVec 64))
(declare-fun var70628 () (_ BitVec 64))
(declare-fun temp364_19 () (_ BitVec 64))
(declare-fun var70631 () (_ BitVec 64))
(declare-fun temp364_20 () (_ BitVec 64))
(declare-fun temp364_21 () (_ BitVec 64))
(declare-fun temp364_22 () (_ BitVec 64))
(declare-fun var70672 () (_ BitVec 64))
(declare-fun var70673 () (_ BitVec 64))
(declare-fun temp364_23 () (_ BitVec 64))
(declare-fun temp364_25 () (_ BitVec 64))
(declare-fun temp364_24 () (_ BitVec 64))
(declare-fun temp364_27 () (_ BitVec 64))
(declare-fun temp364_26 () (_ BitVec 64))
(declare-fun temp364_29 () (_ BitVec 64))
(declare-fun temp364_28 () (_ BitVec 64))
(declare-fun temp364_30 () (_ BitVec 64))
(declare-fun var70819 () (_ BitVec 64))
(declare-fun temp364_31 () (_ BitVec 64))
(declare-fun temp364_32 () (_ BitVec 64))
(declare-fun var70840 () (_ BitVec 64))
(declare-fun var596152 () (_ BitVec 64))
(declare-fun temp364_33 () (_ BitVec 64))
(declare-fun var596153 () (_ BitVec 64))
(declare-fun temp364_34 () (_ BitVec 64))
(declare-fun var663491 () (_ BitVec 64))
(declare-fun var596156 () (_ BitVec 64))
(declare-fun temp364_35 () (_ BitVec 64))
(declare-fun var1054904 () (_ BitVec 64))
(declare-fun temp364_36 () (_ BitVec 64))
(declare-fun var1054905 () (_ BitVec 64))
(declare-fun temp364_37 () (_ BitVec 64))
(declare-fun var1122243 () (_ BitVec 64))
(declare-fun var1054908 () (_ BitVec 64))
(declare-fun temp364_38 () (_ BitVec 64))
(declare-fun var70890 () (_ BitVec 64))
(declare-fun temp364_39 () (_ BitVec 64))
(declare-fun ARGNAME_input_0_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp364_40 () (_ BitVec 64))
(declare-fun temp364_41 () (_ BitVec 64))
(declare-fun temp364_42 () (_ BitVec 64))
(declare-fun temp364_43 () (_ BitVec 64))
(declare-fun temp364_44 () (_ BitVec 64))
(declare-fun temp364_45 () (_ BitVec 64))
(declare-fun temp364_46 () (_ BitVec 64))
(declare-fun temp364_47 () (_ BitVec 64))
(declare-fun temp364_48 () (_ BitVec 64))
(declare-fun temp364_49 () (_ BitVec 64))
(declare-fun temp364_50 () (_ BitVec 64))
(declare-fun temp364_51 () (_ BitVec 64))
(declare-fun var70891 () (_ BitVec 64))
(declare-fun temp364_52 () (_ BitVec 64))
(declare-fun var70921 () (_ BitVec 64))
(declare-fun var70925 () (_ BitVec 64))
(declare-fun temp364_53 () (_ BitVec 64))
(declare-fun var70926 () (_ BitVec 64))
(declare-fun temp364_54 () (_ BitVec 64))
(declare-fun var70828 () (_ BitVec 64))
(declare-fun var70827 () (_ BitVec 64))
(declare-fun temp364_57 () (_ BitVec 64))
(declare-fun var70933 () (_ BitVec 64))
(declare-fun temp364_58 () (_ BitVec 64))
(declare-fun var70935 () (_ BitVec 64))
(declare-fun temp364_59 () (_ BitVec 64))
(declare-fun temp364_60 () (_ BitVec 64))
(declare-fun var71011 () (_ BitVec 64))
(declare-fun temp364_61 () (_ BitVec 64))
(declare-fun temp364_63 () (_ BitVec 64))
(declare-fun temp364_62 () (_ BitVec 64))
(declare-fun temp364_65 () (_ BitVec 64))
(declare-fun temp364_64 () (_ BitVec 64))
(declare-fun temp364_67 () (_ BitVec 64))
(declare-fun temp364_66 () (_ BitVec 64))
(declare-fun temp364_68 () (_ BitVec 64))
(declare-fun var2038951 () (_ BitVec 64))
(declare-fun var2038925 () (_ BitVec 64))
(declare-fun var1645970 () (_ BitVec 64))
(declare-fun temp364_69 () (_ BitVec 64))
(assert (= temp364_1 #x0000000000000009))
(assert (= var70588
   (ite (bvslt ARGNAME_input_0_NAMEEND_DIM temp364_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp364_2 #x0000000000000001))
(assert (= var70588 temp364_2))
(assert (= temp364_3 #x0000000000000002))
(assert (= var137105
   (ite (= ARGNAME_input_1_NAMEEND_DIM temp364_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var137101 var137105))
(assert (= var70624 var137101))
(assert (= temp364_4 #x0000000000000001))
(assert (= var70624 temp364_4))
(assert (= temp364_5 #x0000000000000000))
(assert (= temp364_6 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp364_5)))
(assert (= temp364_7 #x0000000000000001))
(assert (= temp364_8 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp364_7)))
(assert (= temp364_9 #x0000000000000002))
(assert (= temp364_10 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp364_9)))
(assert (= temp364_11 #x0000000000000003))
(assert (= temp364_12 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp364_11)))
(assert (= temp364_13 #x0000000000000004))
(assert (= temp364_14 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp364_13)))
(assert (= temp364_15 #x0000000000000005))
(assert (= temp364_16 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp364_15)))
(assert (= temp364_17 #x0000000000000001))
(assert (= temp364_18 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp364_17)))
(assert (= var70628 temp364_18))
(assert (= temp364_19 #x0000000000000002))
(assert (= var70631 (ite (= var70628 temp364_19) #x0000000000000001 #x0000000000000000)))
(assert (= temp364_20 #x0000000000000001))
(assert (= var70631 temp364_20))
(assert (= temp364_21 #x0000000000000000))
(assert (= temp364_22 (select ARGNAME_input_1_NAMEEND_DIMSIZE temp364_21)))
(assert (= var70672 temp364_22))
(assert (= var70673
   (ite (= var70672 ARGNAME_input_0_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp364_23 #x0000000000000001))
(assert (= var70673 temp364_23))
(assert (= temp364_25 #x0000000000000000))
(assert (= temp364_24 temp364_25))
(assert (= temp364_27 #x0000000000000000))
(assert (= temp364_26 temp364_27))
(assert (= temp364_29 #x0000000000000000))
(assert (= temp364_28 temp364_29))
(assert (= temp364_30 #x0000000000000000))
(assert (= var70819
   (ite (bvsgt ARGNAME_input_0_NAMEEND_DIM temp364_30)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp364_31 #x0000000000000001))
(assert (= var70819 temp364_31))
(assert (= temp364_32 #x0000000000000000))
(assert (= var70840 temp364_32))
(assert (= var596152 var70840))
(assert (= temp364_33 #x0000000000000000))
(assert (= var596153 temp364_33))
(assert (= temp364_34 #x0000000000000001))
(assert (= var663491 temp364_34))
(assert (= var596156 var663491))
(assert (= temp364_35 #x0000000000000001))
(assert (= var596156 temp364_35))
(assert (= var1054904 var70840))
(assert (= temp364_36 #x0000000000000001))
(assert (= var1054905 temp364_36))
(assert (= temp364_37 #x0000000000000001))
(assert (= var1122243 temp364_37))
(assert (= var1054908 var1122243))
(assert (= temp364_38 #x0000000000000001))
(assert (= var1054908 temp364_38))
(assert (= var70890 var70840))
(assert (= temp364_39 #x0000000000000000))
(assert (= temp364_40 (select ARGNAME_input_0_NAMEEND_DIMSIZE temp364_39)))
(assert (= temp364_41 #x0000000000000001))
(assert (= temp364_42 (select ARGNAME_input_0_NAMEEND_DIMSIZE temp364_41)))
(assert (= temp364_43 #x0000000000000002))
(assert (= temp364_44 (select ARGNAME_input_0_NAMEEND_DIMSIZE temp364_43)))
(assert (= temp364_45 #x0000000000000003))
(assert (= temp364_46 (select ARGNAME_input_0_NAMEEND_DIMSIZE temp364_45)))
(assert (= temp364_47 #x0000000000000004))
(assert (= temp364_48 (select ARGNAME_input_0_NAMEEND_DIMSIZE temp364_47)))
(assert (= temp364_49 #x0000000000000005))
(assert (= temp364_50 (select ARGNAME_input_0_NAMEEND_DIMSIZE temp364_49)))
(assert (= temp364_51 (select ARGNAME_input_0_NAMEEND_DIMSIZE var70890)))
(assert (= var70891 temp364_51))
(assert (= temp364_52 #x0000000000000000))
(assert (= var70921 temp364_52))
(assert (= var70925 var70921))
(assert (= temp364_53 #x0000000000000000))
(assert (= var70926 (ite (= var70925 temp364_53) #x0000000000000001 #x0000000000000000)))
(assert (= temp364_54 #x0000000000000001))
(assert (= var70828 (bvadd var70840 temp364_54)))
(assert (= var70827
   (ite (= var70828 ARGNAME_input_0_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp364_57 #x000000000000000a))
(assert (= var70933 temp364_57))
(assert (= temp364_58 #x000000000000000a))
(assert (= var70935 (ite (= var70933 temp364_58) #x0000000000000001 #x0000000000000000)))
(assert (= temp364_59 #x0000000000000001))
(assert (= var70935 temp364_59))
(assert (= temp364_60 #x0000000000000001))
(assert (= var71011
   (ite (bvsgt ARGNAME_input_0_NAMEEND_DIM temp364_60)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp364_61 #x0000000000000001))
(assert (= var71011 temp364_61))
(assert (= temp364_63 #x0000000000000000))
(assert (= temp364_62 temp364_63))
(assert (= temp364_65 #x0000000000000000))
(assert (= temp364_64 temp364_65))
(assert (= temp364_67 #x0000000000000000))
(assert (= temp364_66 temp364_67))
(assert (= temp364_68 #x0000000000000000))
(assert (= var2038951 temp364_68))
(assert (= var2038925 var2038951))
(assert (= var1645970 var2038925))
(assert (= temp364_69 #x0000000000000004))
(assert (or false (= ARGNAME_input_0_NAMEEND_DIM temp364_69)))
(model-add temp364_1 () (_ BitVec 64) #x0000000000000009)
(model-add temp364_2 () (_ BitVec 64) #x0000000000000001)
(model-add var70588 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_0_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000009 #x8000000000000000))
                #x0000000000000009
                (bvsub #x0000000000000009 #x0000000000000001)))

