(declare-fun temp145_1 () (_ BitVec 64))
(declare-fun temp145_2 () (_ BitVec 64))
(declare-fun var74512 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_orig_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND () (_ BitVec 64))
(declare-fun temp145_3 () (_ BitVec 64))
(declare-fun ARGNAME_orig_output_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var74535 () (_ BitVec 64))
(declare-fun temp145_4 () (_ BitVec 64))
(declare-fun temp145_5 () (_ BitVec 64))
(declare-fun ARGNAME_grad_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var74556 () (_ BitVec 64))
(declare-fun temp145_6 () (_ BitVec 64))
(declare-fun temp145_8 () (_ BitVec 64))
(declare-fun temp145_7 () (_ BitVec 64))
(declare-fun temp145_9 () (_ BitVec 64))
(declare-fun var135599 () (_ BitVec 64))
(declare-fun temp145_10 () (_ BitVec 64))
(declare-fun var201250 () (_ BitVec 64))
(declare-fun var74586 () (_ BitVec 64))
(declare-fun var271783 () (_ BitVec 64))
(declare-fun temp145_11 () (_ BitVec 64))
(declare-fun var463697 () (_ BitVec 64))
(declare-fun var74621 () (_ BitVec 64))
(declare-fun var533947 () (_ BitVec 64))
(declare-fun temp145_13 () (_ BitVec 64))
(declare-fun temp145_12 () (_ BitVec 64))
(declare-fun temp145_15 () (_ BitVec 64))
(declare-fun temp145_14 () (_ BitVec 64))
(declare-fun temp145_17 () (_ BitVec 64))
(declare-fun temp145_16 () (_ BitVec 64))
(declare-fun var665356 () (_ BitVec 64))
(declare-fun temp145_19 () (_ BitVec 64))
(declare-fun temp145_18 () (_ BitVec 64))
(declare-fun temp145_21 () (_ BitVec 64))
(declare-fun temp145_20 () (_ BitVec 64))
(declare-fun temp145_23 () (_ BitVec 64))
(declare-fun temp145_22 () (_ BitVec 64))
(declare-fun temp145_25 () (_ BitVec 64))
(declare-fun temp145_24 () (_ BitVec 64))
(declare-fun temp145_27 () (_ BitVec 64))
(declare-fun temp145_26 () (_ BitVec 64))
(declare-fun temp145_28 () (_ BitVec 64))
(declare-fun var2891159 () (_ BitVec 64))
(declare-fun temp145_29 () (_ BitVec 64))
(declare-fun var3153303 () (_ BitVec 64))
(declare-fun temp145_30 () (_ BitVec 64))
(declare-fun var68038 () (_ BitVec 64))
(declare-fun temp145_31 () (_ BitVec 64))
(declare-fun temp145_32 () (_ BitVec 64))
(declare-fun var69115 () (_ BitVec 64))
(declare-fun temp145_33 () (_ BitVec 64))
(declare-fun temp145_34 () (_ BitVec 64))
(declare-fun var4076227 () (_ BitVec 64))
(declare-fun var4133960 () (_ BitVec 64))
(declare-fun temp145_35 () (_ BitVec 64))
(declare-fun var4133963 () (_ BitVec 64))
(declare-fun temp145_36 () (_ BitVec 64))
(declare-fun var4133981 () (_ BitVec 64))
(declare-fun temp145_37 () (_ BitVec 64))
(declare-fun temp145_38 () (_ BitVec 64))
(declare-fun var4128781 () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp145_39 () (_ BitVec 64))
(declare-fun temp145_40 () (_ BitVec 64))
(declare-fun temp145_41 () (_ BitVec 64))
(declare-fun temp145_42 () (_ BitVec 64))
(declare-fun temp145_43 () (_ BitVec 64))
(declare-fun temp145_44 () (_ BitVec 64))
(declare-fun temp145_45 () (_ BitVec 64))
(declare-fun temp145_46 () (_ BitVec 64))
(declare-fun temp145_47 () (_ BitVec 64))
(declare-fun temp145_48 () (_ BitVec 64))
(declare-fun temp145_49 () (_ BitVec 64))
(declare-fun temp145_50 () (_ BitVec 64))
(declare-fun temp145_51 () (_ BitVec 64))
(declare-fun temp145_52 () (_ BitVec 64))
(declare-fun temp145_53 () (_ BitVec 64))
(declare-fun temp145_54 () (_ BitVec 64))
(declare-fun temp145_55 () (_ BitVec 64))
(declare-fun temp145_56 () (_ BitVec 64))
(declare-fun temp145_57 () (_ BitVec 64))
(declare-fun temp145_58 () (_ BitVec 64))
(declare-fun temp145_59 () (_ BitVec 64))
(declare-fun temp145_60 () (_ BitVec 64))
(declare-fun temp145_61 () (_ BitVec 64))
(declare-fun temp145_62 () (_ BitVec 64))
(declare-fun temp145_63 () (_ BitVec 64))
(declare-fun var4133984 () (_ BitVec 64))
(declare-fun var4133958 () (_ BitVec 64))
(declare-fun var4076257 () (_ BitVec 64))
(declare-fun temp145_64 () (_ BitVec 64))
(declare-fun var4076258 () (_ BitVec 64))
(declare-fun temp145_65 () (_ BitVec 64))
(declare-fun temp145_66 () (_ BitVec 64))
(declare-fun temp145_67 () (_ BitVec 64))
(declare-fun ARGNAME_orig_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp145_68 () (_ BitVec 64))
(declare-fun temp145_69 () (_ BitVec 64))
(declare-fun temp145_70 () (_ BitVec 64))
(declare-fun temp145_71 () (_ BitVec 64))
(declare-fun temp145_72 () (_ BitVec 64))
(declare-fun temp145_73 () (_ BitVec 64))
(declare-fun temp145_74 () (_ BitVec 64))
(declare-fun temp145_75 () (_ BitVec 64))
(declare-fun temp145_76 () (_ BitVec 64))
(declare-fun temp145_77 () (_ BitVec 64))
(declare-fun temp145_78 () (_ BitVec 64))
(declare-fun temp145_79 () (_ BitVec 64))
(declare-fun temp145_80 () (_ BitVec 64))
(declare-fun temp145_81 () (_ BitVec 64))
(declare-fun temp145_82 () (_ BitVec 64))
(declare-fun temp145_83 () (_ BitVec 64))
(declare-fun temp145_87 () (_ BitVec 64))
(declare-fun temp145_88 () (_ BitVec 64))
(declare-fun temp145_89 () (_ BitVec 64))
(declare-fun temp145_90 () (_ BitVec 64))
(declare-fun temp145_85 () (_ BitVec 64))
(declare-fun temp145_91 () (_ BitVec 64))
(declare-fun temp145_92 () (_ BitVec 64))
(declare-fun temp145_93 () (_ BitVec 64))
(declare-fun temp145_86 () (_ BitVec 64))
(declare-fun temp145_95 () (_ BitVec 64))
(declare-fun temp145_96 () (_ BitVec 64))
(declare-fun temp145_97 () (_ BitVec 64))
(declare-fun temp145_98 () (_ BitVec 64))
(declare-fun temp145_99 () (_ BitVec 64))
(declare-fun temp145_84 () (_ BitVec 64))
(declare-fun temp145_100 () (_ BitVec 64))
(declare-fun temp145_101 () (_ BitVec 64))
(declare-fun var4076286 () (_ BitVec 64))
(declare-fun temp145_102 () (_ BitVec 64))
(declare-fun var4076288 () (_ BitVec 64))
(declare-fun temp145_103 () (_ BitVec 64))
(declare-fun temp145_104 () (_ BitVec 64))
(declare-fun var4076289 () (_ BitVec 64))
(declare-fun var4076290 () (_ BitVec 64))
(declare-fun var4076291 () (_ BitVec 64))
(declare-fun temp145_108 () (_ BitVec 64))
(declare-fun temp145_109 () (_ BitVec 64))
(declare-fun temp145_110 () (_ BitVec 64))
(declare-fun temp145_111 () (_ BitVec 64))
(declare-fun temp145_106 () (_ BitVec 64))
(declare-fun temp145_112 () (_ BitVec 64))
(declare-fun temp145_113 () (_ BitVec 64))
(declare-fun temp145_114 () (_ BitVec 64))
(declare-fun temp145_107 () (_ BitVec 64))
(declare-fun temp145_116 () (_ BitVec 64))
(declare-fun temp145_117 () (_ BitVec 64))
(declare-fun temp145_118 () (_ BitVec 64))
(declare-fun temp145_119 () (_ BitVec 64))
(declare-fun temp145_120 () (_ BitVec 64))
(declare-fun temp145_121 () (_ BitVec 64))
(declare-fun temp145_105 () (_ BitVec 64))
(declare-fun temp145_122 () (_ BitVec 64))
(declare-fun temp145_123 () (_ BitVec 64))
(declare-fun var4076294 () (_ BitVec 64))
(declare-fun var4076296 () (_ BitVec 64))
(declare-fun temp145_127 () (_ BitVec 64))
(declare-fun temp145_128 () (_ BitVec 64))
(declare-fun temp145_129 () (_ BitVec 64))
(declare-fun temp145_130 () (_ BitVec 64))
(declare-fun temp145_125 () (_ BitVec 64))
(declare-fun temp145_131 () (_ BitVec 64))
(declare-fun temp145_132 () (_ BitVec 64))
(declare-fun temp145_133 () (_ BitVec 64))
(declare-fun temp145_126 () (_ BitVec 64))
(declare-fun temp145_135 () (_ BitVec 64))
(declare-fun temp145_136 () (_ BitVec 64))
(declare-fun temp145_137 () (_ BitVec 64))
(declare-fun temp145_138 () (_ BitVec 64))
(declare-fun temp145_139 () (_ BitVec 64))
(declare-fun temp145_140 () (_ BitVec 64))
(declare-fun temp145_124 () (_ BitVec 64))
(declare-fun temp145_141 () (_ BitVec 64))
(declare-fun temp145_142 () (_ BitVec 64))
(declare-fun var4076299 () (_ BitVec 64))
(declare-fun var4076301 () (_ BitVec 64))
(declare-fun temp145_146 () (_ BitVec 64))
(declare-fun temp145_147 () (_ BitVec 64))
(declare-fun temp145_148 () (_ BitVec 64))
(declare-fun temp145_149 () (_ BitVec 64))
(declare-fun temp145_144 () (_ BitVec 64))
(declare-fun temp145_150 () (_ BitVec 64))
(declare-fun temp145_151 () (_ BitVec 64))
(declare-fun temp145_152 () (_ BitVec 64))
(declare-fun temp145_145 () (_ BitVec 64))
(declare-fun temp145_154 () (_ BitVec 64))
(declare-fun temp145_155 () (_ BitVec 64))
(declare-fun temp145_156 () (_ BitVec 64))
(declare-fun temp145_157 () (_ BitVec 64))
(declare-fun temp145_143 () (_ BitVec 64))
(declare-fun temp145_158 () (_ BitVec 64))
(declare-fun temp145_159 () (_ BitVec 64))
(declare-fun var4076304 () (_ BitVec 64))
(declare-fun var4076306 () (_ BitVec 64))
(declare-fun temp145_160 () (_ BitVec 64))
(declare-fun var4076355 () (_ BitVec 64))
(declare-fun temp145_161 () (_ BitVec 64))
(declare-fun temp145_162 () (_ BitVec 64))
(declare-fun var4206129 () (_ BitVec 64))
(declare-fun temp145_163 () (_ BitVec 64))
(declare-fun var4206131 () (_ BitVec 64))
(declare-fun var4206132 () (_ BitVec 64))
(declare-fun temp145_164 () (_ BitVec 64))
(declare-fun var4206137 () (_ BitVec 64))
(declare-fun temp145_165 () (_ BitVec 64))
(declare-fun temp145_166 () (_ BitVec 64))
(declare-fun var4206141 () (_ BitVec 64))
(declare-fun temp145_167 () (_ BitVec 64))
(declare-fun var4206176 () (_ BitVec 64))
(declare-fun temp145_168 () (_ BitVec 64))
(declare-fun var4206177 () (_ BitVec 64))
(declare-fun temp145_170 () (_ BitVec 64))
(declare-fun var4206184 () (_ BitVec 64))
(declare-fun temp145_171 () (_ BitVec 64))
(declare-fun var4206187 () (_ BitVec 64))
(declare-fun temp145_172 () (_ BitVec 64))
(declare-fun var4468542 () (_ BitVec 64))
(declare-fun var4468543 () (_ BitVec 64))
(declare-fun temp145_173 () (_ BitVec 64))
(declare-fun temp145_174 () (_ BitVec 64))
(declare-fun temp145_175 () (_ BitVec 64))
(declare-fun temp145_176 () (_ BitVec 64))
(declare-fun temp145_177 () (_ BitVec 64))
(declare-fun var4468566 () (_ BitVec 64))
(declare-fun var4468541 () (_ BitVec 64))
(declare-fun var4206189 () (_ BitVec 64))
(declare-fun var4534106 () (_ BitVec 64))
(declare-fun var4534107 () (_ BitVec 64))
(declare-fun temp145_178 () (_ BitVec 64))
(declare-fun temp145_179 () (_ BitVec 64))
(declare-fun temp145_180 () (_ BitVec 64))
(declare-fun var4534111 () (_ BitVec 64))
(declare-fun var4534129 () (_ BitVec 64))
(declare-fun var4534105 () (_ BitVec 64))
(declare-fun var4206192 () (_ BitVec 64))
(declare-fun temp145_181 () (_ BitVec 64))
(declare-fun var4206195 () (_ BitVec 64))
(declare-fun var4206196 () (_ BitVec 64))
(declare-fun temp145_182 () (_ BitVec 64))
(declare-fun var4206203 () (_ BitVec 64))
(declare-fun var4206204 () (_ BitVec 64))
(declare-fun temp145_183 () (_ BitVec 64))
(declare-fun var4206209 () (_ BitVec 64))
(declare-fun var4206210 () (_ BitVec 64))
(declare-fun temp145_184 () (_ BitVec 64))
(declare-fun var4206215 () (_ BitVec 64))
(declare-fun var4206216 () (_ BitVec 64))
(declare-fun temp145_185 () (_ BitVec 64))
(declare-fun var4206224 () (_ BitVec 64))
(declare-fun temp145_186 () (_ BitVec 64))
(declare-fun var4206225 () (_ BitVec 64))
(declare-fun temp145_187 () (_ BitVec 64))
(declare-fun var4732156 () (_ BitVec 64))
(declare-fun temp145_188 () (_ BitVec 64))
(declare-fun var4732157 () (_ BitVec 64))
(declare-fun var4797692 () (_ BitVec 64))
(declare-fun temp145_189 () (_ BitVec 64))
(declare-fun var4797693 () (_ BitVec 64))
(declare-fun var4076494 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (or (= ARGNAME_padding_NAMEEND #x0000000000000001)
    (= ARGNAME_padding_NAMEEND #x0000000000000002)
    (= ARGNAME_padding_NAMEEND #x0000000000000003)))
(assert (= temp145_1 #x0000000000000004))
(assert (= var74512
   (ite (= ARGNAME_orig_input_NAMEEND_DIM temp145_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp145_2 #x0000000000000001))
(assert (= var74512 temp145_2))
(assert (= temp145_3 #x0000000000000004))
(assert (= var74535
   (ite (= ARGNAME_orig_output_NAMEEND_DIM temp145_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp145_4 #x0000000000000001))
(assert (= var74535 temp145_4))
(assert (= temp145_5 #x0000000000000004))
(assert (= var74556
   (ite (= ARGNAME_grad_NAMEEND_DIM temp145_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp145_6 #x0000000000000001))
(assert (= var74556 temp145_6))
(assert (= temp145_8 #x0000000000000001))
(assert (= temp145_7 temp145_8))
(assert (= temp145_9 #x0000000000000001))
(assert (= var135599 temp145_9))
(assert (= temp145_10 #x0000000000000002))
(assert (= var201250 temp145_10))
(assert (= var74586 var201250))
(assert (= var271783 var74586))
(assert (= temp145_11 #x0000000000000009))
(assert (= var463697 temp145_11))
(assert (= var74621 var463697))
(assert (= var533947 var74621))
(assert (= temp145_13 #x0000000000000000))
(assert (= temp145_12 temp145_13))
(assert (= temp145_15 #x0000000000000000))
(assert (= temp145_14 temp145_15))
(assert (= temp145_17 #x0000000000000000))
(assert (= temp145_16 temp145_17))
(assert (= var665356 var533947))
(assert (= temp145_19 #x0000000000000000))
(assert (= temp145_18 temp145_19))
(assert (= temp145_21 #x0000000000000000))
(assert (= temp145_20 temp145_21))
(assert (= temp145_23 #x0000000000000000))
(assert (= temp145_22 temp145_23))
(assert (= temp145_25 #x0000000000000001))
(assert (= temp145_24 temp145_25))
(assert (= temp145_27 #x0000000000000000))
(assert (= temp145_26 temp145_27))
(assert (= temp145_28 #x0000000000000000))
(assert (= var2891159 temp145_28))
(assert (= temp145_29 #x0000000000000000))
(assert (= var3153303 temp145_29))
(assert (= temp145_30 #x0000000000000000))
(assert (= var68038 temp145_30))
(assert (= temp145_31 #x0000000000000000))
(assert (= var68038 temp145_31))
(assert (= temp145_32 #x0000000000000003))
(assert (= var69115 temp145_32))
(assert (= temp145_33 #x0000000000000003))
(assert (= var69115 temp145_33))
(assert (= temp145_34 #x0000000000000000))
(assert (= var4076227 temp145_34))
(assert (= var4133960 var4076227))
(assert (= temp145_35 #x0000000000000006))
(assert (= var4133963
   (ite (bvslt var4133960 temp145_35) #x0000000000000001 #x0000000000000000)))
(assert (= temp145_36 #x0000000000000001))
(assert (= var4133963 temp145_36))
(assert (= var4133981 var4133960))
(assert (= temp145_37 #x0000000000000000))
(assert (= temp145_38 temp145_37))
(assert (= temp145_39 (select var4128781 temp145_38)))
(assert (= temp145_40 #x0000000000000001))
(assert (= temp145_41 temp145_40))
(assert (= temp145_42 (select var4128781 temp145_41)))
(assert (= temp145_43 #x0000000000000002))
(assert (= temp145_44 temp145_43))
(assert (= temp145_45 (select var4128781 temp145_44)))
(assert (= temp145_46 #x0000000000000003))
(assert (= temp145_47 temp145_46))
(assert (= temp145_48 (select var4128781 temp145_47)))
(assert (= temp145_49 #x0000000000000004))
(assert (= temp145_50 temp145_49))
(assert (= temp145_51 (select var4128781 temp145_50)))
(assert (= temp145_52 #x0000000000000005))
(assert (= temp145_53 temp145_52))
(assert (= temp145_54 (select var4128781 temp145_53)))
(assert (= temp145_55 #xfffffffffffffffe))
(assert (= (select var4128781 #x0000000000000000) temp145_55))
(assert (= temp145_56 #xfffffffffffffffe))
(assert (= (select var4128781 #x0000000000000001) temp145_56))
(assert (= temp145_57 #xfffffffffffffffd))
(assert (= (select var4128781 #x0000000000000002) temp145_57))
(assert (= temp145_58 #xfffffffffffffffd))
(assert (= (select var4128781 #x0000000000000003) temp145_58))
(assert (= temp145_59 #xfffffffffffffffe))
(assert (= (select var4128781 #x0000000000000004) temp145_59))
(assert (= temp145_60 #xfffffffffffffffe))
(assert (= (select var4128781 #x0000000000000005) temp145_60))
(assert (= temp145_61 (select var4128781 var4133981)))
(assert (= temp145_62 #x0000000000000000))
(assert (bvsge var4133981 temp145_62))
(assert (= temp145_63 #x0000000000000006))
(assert (bvslt var4133981 temp145_63))
(assert (= var4133984 (bvadd temp145_61 ARGNAME_orig_input_NAMEEND_DIM)))
(assert (= var4133958 var4133984))
(assert (= var4076257 var4133958))
(assert (= temp145_64 #x0000000000000002))
(assert (= var4076258
   (ite (= var4076257 temp145_64) #x0000000000000001 #x0000000000000000)))
(assert (= temp145_65 #x0000000000000001))
(assert (= var4076258 temp145_65))
(assert (= temp145_66 #x0000000000000000))
(assert (= temp145_67 temp145_66))
(assert (= temp145_68 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp145_67)))
(assert (= temp145_69 #x0000000000000001))
(assert (= temp145_70 temp145_69))
(assert (= temp145_71 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp145_70)))
(assert (= temp145_72 #x0000000000000002))
(assert (= temp145_73 temp145_72))
(assert (= temp145_74 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp145_73)))
(assert (= temp145_75 #x0000000000000003))
(assert (= temp145_76 temp145_75))
(assert (= temp145_77 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp145_76)))
(assert (= temp145_78 #x0000000000000004))
(assert (= temp145_79 temp145_78))
(assert (= temp145_80 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp145_79)))
(assert (= temp145_81 #x0000000000000005))
(assert (= temp145_82 temp145_81))
(assert (= temp145_83 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp145_82)))
(assert (= temp145_87 #x0000000000000002))
(assert (= temp145_88 #x0000000000000003))
(assert (= temp145_89 #x0000000000000002))
(assert (= temp145_90 #x0000000000000003))
(assert (= temp145_85
   (ite (or (= var4076227 temp145_89) (= var4076227 temp145_90))
        (bvsub ARGNAME_orig_input_NAMEEND_DIM temp145_88)
        (bvsub ARGNAME_orig_input_NAMEEND_DIM temp145_87))))
(assert (= temp145_91 #x0000000000000002))
(assert (= temp145_92 #x0000000000000003))
(assert (= temp145_93 #x0000000000000003))
(assert (= temp145_86 (ite (= temp145_85 temp145_93) temp145_92 temp145_91)))
(assert (= temp145_95 #x0000000000000001))
(assert (= temp145_96 #x0000000000000005))
(assert (= temp145_97 #x0000000000000001))
(assert (= temp145_98 #x0000000000000001))
(assert (= temp145_99 #x0000000000000002))
(assert (= temp145_84
   (ite (or (= var4076227 temp145_98) (= var4076227 temp145_99))
        temp145_97
        (ite (= var4076227 temp145_96) temp145_86 (bvadd temp145_86 temp145_95)))))
(assert (= temp145_100 temp145_84))
(assert (= temp145_101 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp145_100)))
(assert (= var4076286 temp145_101))
(assert (= temp145_102 #x0000000000000002))
(assert (= var4076288
   (ite (= var4076227 temp145_102) #x0000000000000001 #x0000000000000000)))
(assert (= temp145_103 #x0000000000000004))
(assert (= temp145_104 #x0000000000000001))
(assert (= var4076289 (ite (= var4076288 #x0000000000000001) temp145_103 temp145_104)))
(assert (= var4076290 (bvmul var4076286 var4076289)))
(assert (= var4076291 var4076290))
(assert (= temp145_108 #x0000000000000002))
(assert (= temp145_109 #x0000000000000003))
(assert (= temp145_110 #x0000000000000002))
(assert (= temp145_111 #x0000000000000003))
(assert (= temp145_106
   (ite (or (= var4076227 temp145_110) (= var4076227 temp145_111))
        (bvsub ARGNAME_orig_input_NAMEEND_DIM temp145_109)
        (bvsub ARGNAME_orig_input_NAMEEND_DIM temp145_108))))
(assert (= temp145_112 #x0000000000000002))
(assert (= temp145_113 #x0000000000000003))
(assert (= temp145_114 #x0000000000000003))
(assert (= temp145_107 (ite (= temp145_106 temp145_114) temp145_113 temp145_112)))
(assert (= temp145_116 #x0000000000000001))
(assert (= temp145_117 #x0000000000000001))
(assert (= temp145_118 #x0000000000000001))
(assert (= temp145_119 #x0000000000000002))
(assert (= temp145_120 #x0000000000000000))
(assert (= temp145_121 #x0000000000000003))
(assert (let ((a!1 (ite (or (= var4076227 temp145_120) (= var4076227 temp145_121))
                temp145_107
                (ite (or (= var4076227 temp145_118) (= var4076227 temp145_119))
                     (bvadd temp145_107 temp145_117)
                     (bvsub temp145_107 temp145_116)))))
  (= temp145_105 a!1)))
(assert (= temp145_122 temp145_105))
(assert (= temp145_123 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp145_122)))
(assert (= var4076294 temp145_123))
(assert (= var4076296 var4076294))
(assert (= temp145_127 #x0000000000000002))
(assert (= temp145_128 #x0000000000000003))
(assert (= temp145_129 #x0000000000000002))
(assert (= temp145_130 #x0000000000000003))
(assert (= temp145_125
   (ite (or (= var4076227 temp145_129) (= var4076227 temp145_130))
        (bvsub ARGNAME_orig_input_NAMEEND_DIM temp145_128)
        (bvsub ARGNAME_orig_input_NAMEEND_DIM temp145_127))))
(assert (= temp145_131 #x0000000000000002))
(assert (= temp145_132 #x0000000000000003))
(assert (= temp145_133 #x0000000000000003))
(assert (= temp145_126 (ite (= temp145_125 temp145_133) temp145_132 temp145_131)))
(assert (= temp145_135 #x0000000000000002))
(assert (= temp145_136 #x0000000000000001))
(assert (= temp145_137 #x0000000000000002))
(assert (= temp145_138 #x0000000000000001))
(assert (= temp145_139 #x0000000000000000))
(assert (= temp145_140 #x0000000000000003))
(assert (let ((a!1 (ite (or (= var4076227 temp145_139) (= var4076227 temp145_140))
                (bvsub temp145_126 temp145_138)
                (ite (or (= var4076227 temp145_136) (= var4076227 temp145_137))
                     temp145_126
                     (bvsub temp145_126 temp145_135)))))
  (= temp145_124 a!1)))
(assert (= temp145_141 temp145_124))
(assert (= temp145_142 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp145_141)))
(assert (= var4076299 temp145_142))
(assert (= var4076301 var4076299))
(assert (= temp145_146 #x0000000000000002))
(assert (= temp145_147 #x0000000000000003))
(assert (= temp145_148 #x0000000000000002))
(assert (= temp145_149 #x0000000000000003))
(assert (= temp145_144
   (ite (or (= var4076227 temp145_148) (= var4076227 temp145_149))
        (bvsub ARGNAME_orig_input_NAMEEND_DIM temp145_147)
        (bvsub ARGNAME_orig_input_NAMEEND_DIM temp145_146))))
(assert (= temp145_150 #x0000000000000002))
(assert (= temp145_151 #x0000000000000003))
(assert (= temp145_152 #x0000000000000003))
(assert (= temp145_145 (ite (= temp145_144 temp145_152) temp145_151 temp145_150)))
(assert (= temp145_154 #x0000000000000000))
(assert (= temp145_155 #x0000000000000001))
(assert (= temp145_156 #x0000000000000005))
(assert (= temp145_157 #x0000000000000004))
(assert (= temp145_143
   (ite (= var4076227 temp145_157)
        temp145_145
        (ite (= var4076227 temp145_156)
             (bvadd temp145_145 temp145_155)
             temp145_154))))
(assert (= temp145_158 temp145_143))
(assert (= temp145_159 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp145_158)))
(assert (= var4076304 temp145_159))
(assert (= var4076306 var4076304))
(assert (= temp145_160 #x0000000000000003))
(assert (= var4076355
   (ite (= ARGNAME_padding_NAMEEND temp145_160)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp145_161 #x0000000000000001))
(assert (= var4076355 temp145_161))
(assert (= temp145_162 #x0000000000000003))
(assert (= var4206129 temp145_162))
(assert (= temp145_163 #x0000000000000004))
(assert (= var4206131 temp145_163))
(assert (= var4206132 var4076227))
(assert (= temp145_164 #x0000000000000003))
(assert (= var4206137
   (ite (= var4206129 temp145_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp145_165 #x0000000000000001))
(assert (= var4206137 temp145_165))
(assert (= temp145_166 #x0000000000000001))
(assert (= var4206141 (bvshl var4206131 temp145_166)))
(assert (= temp145_167 #x0000000000000000))
(assert (= var4206176 temp145_167))
(assert (= temp145_168 #x0000000000000000))
(assert (= var4206177
   (ite (= var4206176 temp145_168) #x0000000000000001 #x0000000000000000)))
(assert (= temp145_170 #x0000000000000002))
(assert (= var4206184 temp145_170))
(assert (= temp145_171 #x0000000000000002))
(assert (= var4206187
   (ite (= var4206184 temp145_171) #x0000000000000001 #x0000000000000000)))
(assert (= temp145_172 #x0000000000000001))
(assert (= var4206187 temp145_172))
(assert (= var4468542 var4206131))
(assert (= var4468543 var4206132))
(assert (= temp145_173 #x0000000000000000))
(assert (= temp145_174 #x0000000000000001))
(assert (= temp145_175 #x0000000000000002))
(assert (= temp145_176 #x0000000000000003))
(assert (or false
    (= var4468543 temp145_173)
    (= var4468543 temp145_174)
    (= var4468543 temp145_175)
    (= var4468543 temp145_176)))
(assert (= temp145_177 #x0000000000000000))
(assert (= var4468566 temp145_177))
(assert (= var4468541 var4468566))
(assert (= var4206189 var4468541))
(assert (= var4534106 var4206131))
(assert (= var4534107 var4206132))
(assert (= temp145_178 #x0000000000000000))
(assert (= temp145_179 #x0000000000000004))
(assert (or false (= var4534107 temp145_178) (= var4534107 temp145_179)))
(assert (= temp145_180 #xffffffffffffffff))
(assert (= var4534111 (bvadd var4534106 temp145_180)))
(assert (= var4534129 var4534111))
(assert (= var4534105 var4534129))
(assert (= var4206192 var4534105))
(assert (= temp145_181 #x0000000000000001))
(assert (= var4206195 (bvshl var4206189 temp145_181)))
(assert (= var4206196 var4206195))
(assert (= temp145_182 #x0000000000000001))
(assert (= var4206203 (bvor var4206195 temp145_182)))
(assert (= var4206204 var4206203))
(assert (= temp145_183 #x0000000000000001))
(assert (= var4206209 (bvshl var4206192 temp145_183)))
(assert (= var4206210 var4206209))
(assert (= temp145_184 #x0000000000000001))
(assert (= var4206215 (bvor var4206209 temp145_184)))
(assert (= var4206216 var4206215))
(assert (= temp145_185 #x0000000000000000))
(assert (= var4206224 temp145_185))
(assert (= temp145_186 #x0000000000000000))
(assert (= var4206225
   (ite (= var4206224 temp145_186) #x0000000000000001 #x0000000000000000)))
(assert (= temp145_187 #x0000000000000001))
(assert (= var4206225 temp145_187))
(assert (= var4732156 var4076227))
(assert (= temp145_188 #x0000000000000048))
(assert (= var4732157 temp145_188))
(assert (= var4797692 var4076227))
(assert (= temp145_189 #x0000000000000057))
(assert (= var4797693 temp145_189))
(assert (= var4076494 var4076291))
(model-add temp145_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp145_2 () (_ BitVec 64) #x0000000000000001)
(model-add var74512 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_orig_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))























