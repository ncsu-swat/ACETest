(declare-fun temp144_1 () (_ BitVec 64))
(declare-fun temp144_2 () (_ BitVec 64))
(declare-fun var74512 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_orig_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND () (_ BitVec 64))
(declare-fun temp144_3 () (_ BitVec 64))
(declare-fun ARGNAME_orig_output_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var74535 () (_ BitVec 64))
(declare-fun temp144_4 () (_ BitVec 64))
(declare-fun temp144_5 () (_ BitVec 64))
(declare-fun ARGNAME_grad_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var74556 () (_ BitVec 64))
(declare-fun temp144_6 () (_ BitVec 64))
(declare-fun temp144_8 () (_ BitVec 64))
(declare-fun temp144_7 () (_ BitVec 64))
(declare-fun temp144_9 () (_ BitVec 64))
(declare-fun var135599 () (_ BitVec 64))
(declare-fun temp144_10 () (_ BitVec 64))
(declare-fun var201250 () (_ BitVec 64))
(declare-fun var74586 () (_ BitVec 64))
(declare-fun var271783 () (_ BitVec 64))
(declare-fun temp144_11 () (_ BitVec 64))
(declare-fun var463697 () (_ BitVec 64))
(declare-fun var74621 () (_ BitVec 64))
(declare-fun var533947 () (_ BitVec 64))
(declare-fun temp144_13 () (_ BitVec 64))
(declare-fun temp144_12 () (_ BitVec 64))
(declare-fun temp144_15 () (_ BitVec 64))
(declare-fun temp144_14 () (_ BitVec 64))
(declare-fun temp144_17 () (_ BitVec 64))
(declare-fun temp144_16 () (_ BitVec 64))
(declare-fun var665356 () (_ BitVec 64))
(declare-fun temp144_19 () (_ BitVec 64))
(declare-fun temp144_18 () (_ BitVec 64))
(declare-fun temp144_21 () (_ BitVec 64))
(declare-fun temp144_20 () (_ BitVec 64))
(declare-fun temp144_23 () (_ BitVec 64))
(declare-fun temp144_22 () (_ BitVec 64))
(declare-fun temp144_25 () (_ BitVec 64))
(declare-fun temp144_24 () (_ BitVec 64))
(declare-fun temp144_27 () (_ BitVec 64))
(declare-fun temp144_26 () (_ BitVec 64))
(declare-fun temp144_28 () (_ BitVec 64))
(declare-fun var2891159 () (_ BitVec 64))
(declare-fun temp144_29 () (_ BitVec 64))
(declare-fun var3153303 () (_ BitVec 64))
(declare-fun temp144_30 () (_ BitVec 64))
(declare-fun var68038 () (_ BitVec 64))
(declare-fun temp144_31 () (_ BitVec 64))
(declare-fun temp144_32 () (_ BitVec 64))
(declare-fun var69115 () (_ BitVec 64))
(declare-fun temp144_33 () (_ BitVec 64))
(declare-fun temp144_34 () (_ BitVec 64))
(declare-fun var4076227 () (_ BitVec 64))
(declare-fun var4133960 () (_ BitVec 64))
(declare-fun temp144_35 () (_ BitVec 64))
(declare-fun var4133963 () (_ BitVec 64))
(declare-fun temp144_36 () (_ BitVec 64))
(declare-fun var4133981 () (_ BitVec 64))
(declare-fun temp144_37 () (_ BitVec 64))
(declare-fun temp144_38 () (_ BitVec 64))
(declare-fun var4128781 () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp144_39 () (_ BitVec 64))
(declare-fun temp144_40 () (_ BitVec 64))
(declare-fun temp144_41 () (_ BitVec 64))
(declare-fun temp144_42 () (_ BitVec 64))
(declare-fun temp144_43 () (_ BitVec 64))
(declare-fun temp144_44 () (_ BitVec 64))
(declare-fun temp144_45 () (_ BitVec 64))
(declare-fun temp144_46 () (_ BitVec 64))
(declare-fun temp144_47 () (_ BitVec 64))
(declare-fun temp144_48 () (_ BitVec 64))
(declare-fun temp144_49 () (_ BitVec 64))
(declare-fun temp144_50 () (_ BitVec 64))
(declare-fun temp144_51 () (_ BitVec 64))
(declare-fun temp144_52 () (_ BitVec 64))
(declare-fun temp144_53 () (_ BitVec 64))
(declare-fun temp144_54 () (_ BitVec 64))
(declare-fun temp144_55 () (_ BitVec 64))
(declare-fun temp144_56 () (_ BitVec 64))
(declare-fun temp144_57 () (_ BitVec 64))
(declare-fun temp144_58 () (_ BitVec 64))
(declare-fun temp144_59 () (_ BitVec 64))
(declare-fun temp144_60 () (_ BitVec 64))
(declare-fun temp144_61 () (_ BitVec 64))
(declare-fun temp144_62 () (_ BitVec 64))
(declare-fun temp144_63 () (_ BitVec 64))
(declare-fun var4133984 () (_ BitVec 64))
(declare-fun var4133958 () (_ BitVec 64))
(declare-fun var4076257 () (_ BitVec 64))
(declare-fun temp144_64 () (_ BitVec 64))
(declare-fun var4076258 () (_ BitVec 64))
(declare-fun temp144_65 () (_ BitVec 64))
(declare-fun temp144_66 () (_ BitVec 64))
(declare-fun temp144_67 () (_ BitVec 64))
(declare-fun ARGNAME_orig_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp144_68 () (_ BitVec 64))
(declare-fun temp144_69 () (_ BitVec 64))
(declare-fun temp144_70 () (_ BitVec 64))
(declare-fun temp144_71 () (_ BitVec 64))
(declare-fun temp144_72 () (_ BitVec 64))
(declare-fun temp144_73 () (_ BitVec 64))
(declare-fun temp144_74 () (_ BitVec 64))
(declare-fun temp144_75 () (_ BitVec 64))
(declare-fun temp144_76 () (_ BitVec 64))
(declare-fun temp144_77 () (_ BitVec 64))
(declare-fun temp144_78 () (_ BitVec 64))
(declare-fun temp144_79 () (_ BitVec 64))
(declare-fun temp144_80 () (_ BitVec 64))
(declare-fun temp144_81 () (_ BitVec 64))
(declare-fun temp144_82 () (_ BitVec 64))
(declare-fun temp144_83 () (_ BitVec 64))
(declare-fun temp144_87 () (_ BitVec 64))
(declare-fun temp144_88 () (_ BitVec 64))
(declare-fun temp144_89 () (_ BitVec 64))
(declare-fun temp144_90 () (_ BitVec 64))
(declare-fun temp144_85 () (_ BitVec 64))
(declare-fun temp144_91 () (_ BitVec 64))
(declare-fun temp144_92 () (_ BitVec 64))
(declare-fun temp144_93 () (_ BitVec 64))
(declare-fun temp144_86 () (_ BitVec 64))
(declare-fun temp144_95 () (_ BitVec 64))
(declare-fun temp144_96 () (_ BitVec 64))
(declare-fun temp144_97 () (_ BitVec 64))
(declare-fun temp144_98 () (_ BitVec 64))
(declare-fun temp144_99 () (_ BitVec 64))
(declare-fun temp144_84 () (_ BitVec 64))
(declare-fun temp144_100 () (_ BitVec 64))
(declare-fun temp144_101 () (_ BitVec 64))
(declare-fun var4076286 () (_ BitVec 64))
(declare-fun temp144_102 () (_ BitVec 64))
(declare-fun var4076288 () (_ BitVec 64))
(declare-fun temp144_103 () (_ BitVec 64))
(declare-fun temp144_104 () (_ BitVec 64))
(declare-fun var4076289 () (_ BitVec 64))
(declare-fun var4076290 () (_ BitVec 64))
(declare-fun var4076291 () (_ BitVec 64))
(declare-fun temp144_108 () (_ BitVec 64))
(declare-fun temp144_109 () (_ BitVec 64))
(declare-fun temp144_110 () (_ BitVec 64))
(declare-fun temp144_111 () (_ BitVec 64))
(declare-fun temp144_106 () (_ BitVec 64))
(declare-fun temp144_112 () (_ BitVec 64))
(declare-fun temp144_113 () (_ BitVec 64))
(declare-fun temp144_114 () (_ BitVec 64))
(declare-fun temp144_107 () (_ BitVec 64))
(declare-fun temp144_116 () (_ BitVec 64))
(declare-fun temp144_117 () (_ BitVec 64))
(declare-fun temp144_118 () (_ BitVec 64))
(declare-fun temp144_119 () (_ BitVec 64))
(declare-fun temp144_120 () (_ BitVec 64))
(declare-fun temp144_121 () (_ BitVec 64))
(declare-fun temp144_105 () (_ BitVec 64))
(declare-fun temp144_122 () (_ BitVec 64))
(declare-fun temp144_123 () (_ BitVec 64))
(declare-fun var4076294 () (_ BitVec 64))
(declare-fun var4076296 () (_ BitVec 64))
(declare-fun temp144_127 () (_ BitVec 64))
(declare-fun temp144_128 () (_ BitVec 64))
(declare-fun temp144_129 () (_ BitVec 64))
(declare-fun temp144_130 () (_ BitVec 64))
(declare-fun temp144_125 () (_ BitVec 64))
(declare-fun temp144_131 () (_ BitVec 64))
(declare-fun temp144_132 () (_ BitVec 64))
(declare-fun temp144_133 () (_ BitVec 64))
(declare-fun temp144_126 () (_ BitVec 64))
(declare-fun temp144_135 () (_ BitVec 64))
(declare-fun temp144_136 () (_ BitVec 64))
(declare-fun temp144_137 () (_ BitVec 64))
(declare-fun temp144_138 () (_ BitVec 64))
(declare-fun temp144_139 () (_ BitVec 64))
(declare-fun temp144_140 () (_ BitVec 64))
(declare-fun temp144_124 () (_ BitVec 64))
(declare-fun temp144_141 () (_ BitVec 64))
(declare-fun temp144_142 () (_ BitVec 64))
(declare-fun var4076299 () (_ BitVec 64))
(declare-fun var4076301 () (_ BitVec 64))
(declare-fun temp144_146 () (_ BitVec 64))
(declare-fun temp144_147 () (_ BitVec 64))
(declare-fun temp144_148 () (_ BitVec 64))
(declare-fun temp144_149 () (_ BitVec 64))
(declare-fun temp144_144 () (_ BitVec 64))
(declare-fun temp144_150 () (_ BitVec 64))
(declare-fun temp144_151 () (_ BitVec 64))
(declare-fun temp144_152 () (_ BitVec 64))
(declare-fun temp144_145 () (_ BitVec 64))
(declare-fun temp144_154 () (_ BitVec 64))
(declare-fun temp144_155 () (_ BitVec 64))
(declare-fun temp144_156 () (_ BitVec 64))
(declare-fun temp144_157 () (_ BitVec 64))
(declare-fun temp144_143 () (_ BitVec 64))
(declare-fun temp144_158 () (_ BitVec 64))
(declare-fun temp144_159 () (_ BitVec 64))
(declare-fun var4076304 () (_ BitVec 64))
(declare-fun var4076306 () (_ BitVec 64))
(declare-fun temp144_160 () (_ BitVec 64))
(declare-fun var4076355 () (_ BitVec 64))
(declare-fun temp144_161 () (_ BitVec 64))
(declare-fun temp144_162 () (_ BitVec 64))
(declare-fun var4206129 () (_ BitVec 64))
(declare-fun temp144_163 () (_ BitVec 64))
(declare-fun var4206131 () (_ BitVec 64))
(declare-fun var4206132 () (_ BitVec 64))
(declare-fun temp144_164 () (_ BitVec 64))
(declare-fun var4206137 () (_ BitVec 64))
(declare-fun temp144_165 () (_ BitVec 64))
(declare-fun temp144_166 () (_ BitVec 64))
(declare-fun var4206141 () (_ BitVec 64))
(declare-fun temp144_167 () (_ BitVec 64))
(declare-fun var4206176 () (_ BitVec 64))
(declare-fun temp144_168 () (_ BitVec 64))
(declare-fun var4206177 () (_ BitVec 64))
(declare-fun temp144_170 () (_ BitVec 64))
(declare-fun var4206184 () (_ BitVec 64))
(declare-fun temp144_171 () (_ BitVec 64))
(declare-fun var4206187 () (_ BitVec 64))
(declare-fun temp144_172 () (_ BitVec 64))
(declare-fun var4468542 () (_ BitVec 64))
(declare-fun var4468543 () (_ BitVec 64))
(declare-fun temp144_173 () (_ BitVec 64))
(declare-fun temp144_174 () (_ BitVec 64))
(declare-fun temp144_175 () (_ BitVec 64))
(declare-fun temp144_176 () (_ BitVec 64))
(declare-fun temp144_177 () (_ BitVec 64))
(declare-fun var4468566 () (_ BitVec 64))
(declare-fun var4468541 () (_ BitVec 64))
(declare-fun var4206189 () (_ BitVec 64))
(declare-fun var4534106 () (_ BitVec 64))
(declare-fun var4534107 () (_ BitVec 64))
(declare-fun temp144_178 () (_ BitVec 64))
(declare-fun temp144_179 () (_ BitVec 64))
(declare-fun temp144_180 () (_ BitVec 64))
(declare-fun var4534111 () (_ BitVec 64))
(declare-fun var4534129 () (_ BitVec 64))
(declare-fun var4534105 () (_ BitVec 64))
(declare-fun var4206192 () (_ BitVec 64))
(declare-fun temp144_181 () (_ BitVec 64))
(declare-fun var4206195 () (_ BitVec 64))
(declare-fun var4206196 () (_ BitVec 64))
(declare-fun temp144_182 () (_ BitVec 64))
(declare-fun var4206203 () (_ BitVec 64))
(declare-fun var4206204 () (_ BitVec 64))
(declare-fun temp144_183 () (_ BitVec 64))
(declare-fun var4206209 () (_ BitVec 64))
(declare-fun var4206210 () (_ BitVec 64))
(declare-fun temp144_184 () (_ BitVec 64))
(declare-fun var4206215 () (_ BitVec 64))
(declare-fun var4206216 () (_ BitVec 64))
(declare-fun temp144_185 () (_ BitVec 64))
(declare-fun var4206224 () (_ BitVec 64))
(declare-fun temp144_186 () (_ BitVec 64))
(declare-fun var4206225 () (_ BitVec 64))
(declare-fun temp144_187 () (_ BitVec 64))
(declare-fun var4732156 () (_ BitVec 64))
(declare-fun temp144_188 () (_ BitVec 64))
(declare-fun var4732157 () (_ BitVec 64))
(declare-fun var4797692 () (_ BitVec 64))
(declare-fun temp144_189 () (_ BitVec 64))
(declare-fun var4797693 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (or (= ARGNAME_padding_NAMEEND #x0000000000000001)
    (= ARGNAME_padding_NAMEEND #x0000000000000002)
    (= ARGNAME_padding_NAMEEND #x0000000000000003)))
(assert (= temp144_1 #x0000000000000004))
(assert (= var74512
   (ite (= ARGNAME_orig_input_NAMEEND_DIM temp144_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp144_2 #x0000000000000001))
(assert (= var74512 temp144_2))
(assert (= temp144_3 #x0000000000000004))
(assert (= var74535
   (ite (= ARGNAME_orig_output_NAMEEND_DIM temp144_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp144_4 #x0000000000000001))
(assert (= var74535 temp144_4))
(assert (= temp144_5 #x0000000000000004))
(assert (= var74556
   (ite (= ARGNAME_grad_NAMEEND_DIM temp144_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp144_6 #x0000000000000001))
(assert (= var74556 temp144_6))
(assert (= temp144_8 #x0000000000000001))
(assert (= temp144_7 temp144_8))
(assert (= temp144_9 #x0000000000000001))
(assert (= var135599 temp144_9))
(assert (= temp144_10 #x0000000000000002))
(assert (= var201250 temp144_10))
(assert (= var74586 var201250))
(assert (= var271783 var74586))
(assert (= temp144_11 #x0000000000000009))
(assert (= var463697 temp144_11))
(assert (= var74621 var463697))
(assert (= var533947 var74621))
(assert (= temp144_13 #x0000000000000000))
(assert (= temp144_12 temp144_13))
(assert (= temp144_15 #x0000000000000000))
(assert (= temp144_14 temp144_15))
(assert (= temp144_17 #x0000000000000000))
(assert (= temp144_16 temp144_17))
(assert (= var665356 var533947))
(assert (= temp144_19 #x0000000000000000))
(assert (= temp144_18 temp144_19))
(assert (= temp144_21 #x0000000000000000))
(assert (= temp144_20 temp144_21))
(assert (= temp144_23 #x0000000000000000))
(assert (= temp144_22 temp144_23))
(assert (= temp144_25 #x0000000000000001))
(assert (= temp144_24 temp144_25))
(assert (= temp144_27 #x0000000000000000))
(assert (= temp144_26 temp144_27))
(assert (= temp144_28 #x0000000000000000))
(assert (= var2891159 temp144_28))
(assert (= temp144_29 #x0000000000000000))
(assert (= var3153303 temp144_29))
(assert (= temp144_30 #x0000000000000000))
(assert (= var68038 temp144_30))
(assert (= temp144_31 #x0000000000000000))
(assert (= var68038 temp144_31))
(assert (= temp144_32 #x0000000000000003))
(assert (= var69115 temp144_32))
(assert (= temp144_33 #x0000000000000003))
(assert (= var69115 temp144_33))
(assert (= temp144_34 #x0000000000000000))
(assert (= var4076227 temp144_34))
(assert (= var4133960 var4076227))
(assert (= temp144_35 #x0000000000000006))
(assert (= var4133963
   (ite (bvslt var4133960 temp144_35) #x0000000000000001 #x0000000000000000)))
(assert (= temp144_36 #x0000000000000001))
(assert (= var4133963 temp144_36))
(assert (= var4133981 var4133960))
(assert (= temp144_37 #x0000000000000000))
(assert (= temp144_38 temp144_37))
(assert (= temp144_39 (select var4128781 temp144_38)))
(assert (= temp144_40 #x0000000000000001))
(assert (= temp144_41 temp144_40))
(assert (= temp144_42 (select var4128781 temp144_41)))
(assert (= temp144_43 #x0000000000000002))
(assert (= temp144_44 temp144_43))
(assert (= temp144_45 (select var4128781 temp144_44)))
(assert (= temp144_46 #x0000000000000003))
(assert (= temp144_47 temp144_46))
(assert (= temp144_48 (select var4128781 temp144_47)))
(assert (= temp144_49 #x0000000000000004))
(assert (= temp144_50 temp144_49))
(assert (= temp144_51 (select var4128781 temp144_50)))
(assert (= temp144_52 #x0000000000000005))
(assert (= temp144_53 temp144_52))
(assert (= temp144_54 (select var4128781 temp144_53)))
(assert (= temp144_55 #xfffffffffffffffe))
(assert (= (select var4128781 #x0000000000000000) temp144_55))
(assert (= temp144_56 #xfffffffffffffffe))
(assert (= (select var4128781 #x0000000000000001) temp144_56))
(assert (= temp144_57 #xfffffffffffffffd))
(assert (= (select var4128781 #x0000000000000002) temp144_57))
(assert (= temp144_58 #xfffffffffffffffd))
(assert (= (select var4128781 #x0000000000000003) temp144_58))
(assert (= temp144_59 #xfffffffffffffffe))
(assert (= (select var4128781 #x0000000000000004) temp144_59))
(assert (= temp144_60 #xfffffffffffffffe))
(assert (= (select var4128781 #x0000000000000005) temp144_60))
(assert (= temp144_61 (select var4128781 var4133981)))
(assert (= temp144_62 #x0000000000000000))
(assert (bvsge var4133981 temp144_62))
(assert (= temp144_63 #x0000000000000006))
(assert (bvslt var4133981 temp144_63))
(assert (= var4133984 (bvadd temp144_61 ARGNAME_orig_input_NAMEEND_DIM)))
(assert (= var4133958 var4133984))
(assert (= var4076257 var4133958))
(assert (= temp144_64 #x0000000000000002))
(assert (= var4076258
   (ite (= var4076257 temp144_64) #x0000000000000001 #x0000000000000000)))
(assert (= temp144_65 #x0000000000000001))
(assert (= var4076258 temp144_65))
(assert (= temp144_66 #x0000000000000000))
(assert (= temp144_67 temp144_66))
(assert (= temp144_68 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp144_67)))
(assert (= temp144_69 #x0000000000000001))
(assert (= temp144_70 temp144_69))
(assert (= temp144_71 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp144_70)))
(assert (= temp144_72 #x0000000000000002))
(assert (= temp144_73 temp144_72))
(assert (= temp144_74 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp144_73)))
(assert (= temp144_75 #x0000000000000003))
(assert (= temp144_76 temp144_75))
(assert (= temp144_77 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp144_76)))
(assert (= temp144_78 #x0000000000000004))
(assert (= temp144_79 temp144_78))
(assert (= temp144_80 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp144_79)))
(assert (= temp144_81 #x0000000000000005))
(assert (= temp144_82 temp144_81))
(assert (= temp144_83 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp144_82)))
(assert (= temp144_87 #x0000000000000002))
(assert (= temp144_88 #x0000000000000003))
(assert (= temp144_89 #x0000000000000002))
(assert (= temp144_90 #x0000000000000003))
(assert (= temp144_85
   (ite (or (= var4076227 temp144_89) (= var4076227 temp144_90))
        (bvsub ARGNAME_orig_input_NAMEEND_DIM temp144_88)
        (bvsub ARGNAME_orig_input_NAMEEND_DIM temp144_87))))
(assert (= temp144_91 #x0000000000000002))
(assert (= temp144_92 #x0000000000000003))
(assert (= temp144_93 #x0000000000000003))
(assert (= temp144_86 (ite (= temp144_85 temp144_93) temp144_92 temp144_91)))
(assert (= temp144_95 #x0000000000000001))
(assert (= temp144_96 #x0000000000000005))
(assert (= temp144_97 #x0000000000000001))
(assert (= temp144_98 #x0000000000000001))
(assert (= temp144_99 #x0000000000000002))
(assert (= temp144_84
   (ite (or (= var4076227 temp144_98) (= var4076227 temp144_99))
        temp144_97
        (ite (= var4076227 temp144_96) temp144_86 (bvadd temp144_86 temp144_95)))))
(assert (= temp144_100 temp144_84))
(assert (= temp144_101 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp144_100)))
(assert (= var4076286 temp144_101))
(assert (= temp144_102 #x0000000000000002))
(assert (= var4076288
   (ite (= var4076227 temp144_102) #x0000000000000001 #x0000000000000000)))
(assert (= temp144_103 #x0000000000000004))
(assert (= temp144_104 #x0000000000000001))
(assert (= var4076289 (ite (= var4076288 #x0000000000000001) temp144_103 temp144_104)))
(assert (= var4076290 (bvmul var4076286 var4076289)))
(assert (= var4076291 var4076290))
(assert (= temp144_108 #x0000000000000002))
(assert (= temp144_109 #x0000000000000003))
(assert (= temp144_110 #x0000000000000002))
(assert (= temp144_111 #x0000000000000003))
(assert (= temp144_106
   (ite (or (= var4076227 temp144_110) (= var4076227 temp144_111))
        (bvsub ARGNAME_orig_input_NAMEEND_DIM temp144_109)
        (bvsub ARGNAME_orig_input_NAMEEND_DIM temp144_108))))
(assert (= temp144_112 #x0000000000000002))
(assert (= temp144_113 #x0000000000000003))
(assert (= temp144_114 #x0000000000000003))
(assert (= temp144_107 (ite (= temp144_106 temp144_114) temp144_113 temp144_112)))
(assert (= temp144_116 #x0000000000000001))
(assert (= temp144_117 #x0000000000000001))
(assert (= temp144_118 #x0000000000000001))
(assert (= temp144_119 #x0000000000000002))
(assert (= temp144_120 #x0000000000000000))
(assert (= temp144_121 #x0000000000000003))
(assert (let ((a!1 (ite (or (= var4076227 temp144_120) (= var4076227 temp144_121))
                temp144_107
                (ite (or (= var4076227 temp144_118) (= var4076227 temp144_119))
                     (bvadd temp144_107 temp144_117)
                     (bvsub temp144_107 temp144_116)))))
  (= temp144_105 a!1)))
(assert (= temp144_122 temp144_105))
(assert (= temp144_123 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp144_122)))
(assert (= var4076294 temp144_123))
(assert (= var4076296 var4076294))
(assert (= temp144_127 #x0000000000000002))
(assert (= temp144_128 #x0000000000000003))
(assert (= temp144_129 #x0000000000000002))
(assert (= temp144_130 #x0000000000000003))
(assert (= temp144_125
   (ite (or (= var4076227 temp144_129) (= var4076227 temp144_130))
        (bvsub ARGNAME_orig_input_NAMEEND_DIM temp144_128)
        (bvsub ARGNAME_orig_input_NAMEEND_DIM temp144_127))))
(assert (= temp144_131 #x0000000000000002))
(assert (= temp144_132 #x0000000000000003))
(assert (= temp144_133 #x0000000000000003))
(assert (= temp144_126 (ite (= temp144_125 temp144_133) temp144_132 temp144_131)))
(assert (= temp144_135 #x0000000000000002))
(assert (= temp144_136 #x0000000000000001))
(assert (= temp144_137 #x0000000000000002))
(assert (= temp144_138 #x0000000000000001))
(assert (= temp144_139 #x0000000000000000))
(assert (= temp144_140 #x0000000000000003))
(assert (let ((a!1 (ite (or (= var4076227 temp144_139) (= var4076227 temp144_140))
                (bvsub temp144_126 temp144_138)
                (ite (or (= var4076227 temp144_136) (= var4076227 temp144_137))
                     temp144_126
                     (bvsub temp144_126 temp144_135)))))
  (= temp144_124 a!1)))
(assert (= temp144_141 temp144_124))
(assert (= temp144_142 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp144_141)))
(assert (= var4076299 temp144_142))
(assert (= var4076301 var4076299))
(assert (= temp144_146 #x0000000000000002))
(assert (= temp144_147 #x0000000000000003))
(assert (= temp144_148 #x0000000000000002))
(assert (= temp144_149 #x0000000000000003))
(assert (= temp144_144
   (ite (or (= var4076227 temp144_148) (= var4076227 temp144_149))
        (bvsub ARGNAME_orig_input_NAMEEND_DIM temp144_147)
        (bvsub ARGNAME_orig_input_NAMEEND_DIM temp144_146))))
(assert (= temp144_150 #x0000000000000002))
(assert (= temp144_151 #x0000000000000003))
(assert (= temp144_152 #x0000000000000003))
(assert (= temp144_145 (ite (= temp144_144 temp144_152) temp144_151 temp144_150)))
(assert (= temp144_154 #x0000000000000000))
(assert (= temp144_155 #x0000000000000001))
(assert (= temp144_156 #x0000000000000005))
(assert (= temp144_157 #x0000000000000004))
(assert (= temp144_143
   (ite (= var4076227 temp144_157)
        temp144_145
        (ite (= var4076227 temp144_156)
             (bvadd temp144_145 temp144_155)
             temp144_154))))
(assert (= temp144_158 temp144_143))
(assert (= temp144_159 (select ARGNAME_orig_input_NAMEEND_DIMSIZE temp144_158)))
(assert (= var4076304 temp144_159))
(assert (= var4076306 var4076304))
(assert (= temp144_160 #x0000000000000003))
(assert (= var4076355
   (ite (= ARGNAME_padding_NAMEEND temp144_160)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp144_161 #x0000000000000001))
(assert (= var4076355 temp144_161))
(assert (= temp144_162 #x0000000000000003))
(assert (= var4206129 temp144_162))
(assert (= temp144_163 #x0000000000000004))
(assert (= var4206131 temp144_163))
(assert (= var4206132 var4076227))
(assert (= temp144_164 #x0000000000000003))
(assert (= var4206137
   (ite (= var4206129 temp144_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp144_165 #x0000000000000001))
(assert (= var4206137 temp144_165))
(assert (= temp144_166 #x0000000000000001))
(assert (= var4206141 (bvshl var4206131 temp144_166)))
(assert (= temp144_167 #x0000000000000000))
(assert (= var4206176 temp144_167))
(assert (= temp144_168 #x0000000000000000))
(assert (= var4206177
   (ite (= var4206176 temp144_168) #x0000000000000001 #x0000000000000000)))
(assert (= temp144_170 #x0000000000000002))
(assert (= var4206184 temp144_170))
(assert (= temp144_171 #x0000000000000002))
(assert (= var4206187
   (ite (= var4206184 temp144_171) #x0000000000000001 #x0000000000000000)))
(assert (= temp144_172 #x0000000000000001))
(assert (= var4206187 temp144_172))
(assert (= var4468542 var4206131))
(assert (= var4468543 var4206132))
(assert (= temp144_173 #x0000000000000000))
(assert (= temp144_174 #x0000000000000001))
(assert (= temp144_175 #x0000000000000002))
(assert (= temp144_176 #x0000000000000003))
(assert (or false
    (= var4468543 temp144_173)
    (= var4468543 temp144_174)
    (= var4468543 temp144_175)
    (= var4468543 temp144_176)))
(assert (= temp144_177 #x0000000000000000))
(assert (= var4468566 temp144_177))
(assert (= var4468541 var4468566))
(assert (= var4206189 var4468541))
(assert (= var4534106 var4206131))
(assert (= var4534107 var4206132))
(assert (= temp144_178 #x0000000000000000))
(assert (= temp144_179 #x0000000000000004))
(assert (or false (= var4534107 temp144_178) (= var4534107 temp144_179)))
(assert (= temp144_180 #xffffffffffffffff))
(assert (= var4534111 (bvadd var4534106 temp144_180)))
(assert (= var4534129 var4534111))
(assert (= var4534105 var4534129))
(assert (= var4206192 var4534105))
(assert (= temp144_181 #x0000000000000001))
(assert (= var4206195 (bvshl var4206189 temp144_181)))
(assert (= var4206196 var4206195))
(assert (= temp144_182 #x0000000000000001))
(assert (= var4206203 (bvor var4206195 temp144_182)))
(assert (= var4206204 var4206203))
(assert (= temp144_183 #x0000000000000001))
(assert (= var4206209 (bvshl var4206192 temp144_183)))
(assert (= var4206210 var4206209))
(assert (= temp144_184 #x0000000000000001))
(assert (= var4206215 (bvor var4206209 temp144_184)))
(assert (= var4206216 var4206215))
(assert (= temp144_185 #x0000000000000000))
(assert (= var4206224 temp144_185))
(assert (= temp144_186 #x0000000000000000))
(assert (= var4206225
   (ite (= var4206224 temp144_186) #x0000000000000001 #x0000000000000000)))
(assert (= temp144_187 #x0000000000000001))
(assert (= var4206225 temp144_187))
(assert (= var4732156 var4076227))
(assert (= temp144_188 #x0000000000000048))
(assert (= var4732157 temp144_188))
(assert (= var4797692 var4076227))
(assert (= temp144_189 #x0000000000000057))
(assert (= var4797693 temp144_189))
(model-add temp144_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp144_2 () (_ BitVec 64) #x0000000000000001)
(model-add var74512 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_orig_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))























