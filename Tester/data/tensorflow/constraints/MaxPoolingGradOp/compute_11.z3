(declare-fun temp188_1 () (_ BitVec 64))
(declare-fun temp188_2 () (_ BitVec 64))
(declare-fun var74512 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_orig_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND () (_ BitVec 64))
(declare-fun temp188_3 () (_ BitVec 64))
(declare-fun ARGNAME_orig_output_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var74535 () (_ BitVec 64))
(declare-fun temp188_4 () (_ BitVec 64))
(declare-fun temp188_5 () (_ BitVec 64))
(declare-fun ARGNAME_grad_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var74556 () (_ BitVec 64))
(declare-fun temp188_6 () (_ BitVec 64))
(declare-fun temp188_8 () (_ BitVec 64))
(declare-fun temp188_7 () (_ BitVec 64))
(declare-fun temp188_9 () (_ BitVec 64))
(declare-fun var135599 () (_ BitVec 64))
(declare-fun temp188_10 () (_ BitVec 64))
(declare-fun var201250 () (_ BitVec 64))
(declare-fun var74586 () (_ BitVec 64))
(declare-fun var271783 () (_ BitVec 64))
(declare-fun temp188_11 () (_ BitVec 64))
(declare-fun var463697 () (_ BitVec 64))
(declare-fun var74621 () (_ BitVec 64))
(declare-fun var533947 () (_ BitVec 64))
(declare-fun temp188_13 () (_ BitVec 64))
(declare-fun temp188_12 () (_ BitVec 64))
(declare-fun temp188_15 () (_ BitVec 64))
(declare-fun temp188_14 () (_ BitVec 64))
(declare-fun temp188_17 () (_ BitVec 64))
(declare-fun temp188_16 () (_ BitVec 64))
(declare-fun var665356 () (_ BitVec 64))
(declare-fun temp188_19 () (_ BitVec 64))
(declare-fun temp188_18 () (_ BitVec 64))
(declare-fun temp188_21 () (_ BitVec 64))
(declare-fun temp188_20 () (_ BitVec 64))
(declare-fun temp188_23 () (_ BitVec 64))
(declare-fun temp188_22 () (_ BitVec 64))
(declare-fun temp188_25 () (_ BitVec 64))
(declare-fun temp188_24 () (_ BitVec 64))
(declare-fun temp188_27 () (_ BitVec 64))
(declare-fun temp188_26 () (_ BitVec 64))
(declare-fun temp188_28 () (_ BitVec 64))
(declare-fun var2891159 () (_ BitVec 64))
(declare-fun temp188_29 () (_ BitVec 64))
(declare-fun var3153303 () (_ BitVec 64))
(declare-fun temp188_30 () (_ BitVec 64))
(declare-fun var68038 () (_ BitVec 64))
(declare-fun temp188_31 () (_ BitVec 64))
(declare-fun temp188_32 () (_ BitVec 64))
(declare-fun var65549 () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp188_33 () (_ BitVec 64))
(declare-fun temp188_34 () (_ BitVec 64))
(declare-fun temp188_35 () (_ BitVec 64))
(declare-fun temp188_36 () (_ BitVec 64))
(declare-fun temp188_37 () (_ BitVec 64))
(declare-fun temp188_38 () (_ BitVec 64))
(declare-fun temp188_39 () (_ BitVec 64))
(declare-fun temp188_40 () (_ BitVec 64))
(declare-fun temp188_41 () (_ BitVec 64))
(declare-fun temp188_42 () (_ BitVec 64))
(declare-fun temp188_43 () (_ BitVec 64))
(declare-fun temp188_44 () (_ BitVec 64))
(declare-fun temp188_45 () (_ BitVec 64))
(declare-fun temp188_46 () (_ BitVec 64))
(declare-fun temp188_47 () (_ BitVec 64))
(declare-fun temp188_48 () (_ BitVec 64))
(declare-fun temp188_49 () (_ BitVec 64))
(declare-fun temp188_50 () (_ BitVec 64))
(declare-fun temp188_51 () (_ BitVec 64))
(declare-fun temp188_52 () (_ BitVec 64))
(declare-fun temp188_53 () (_ BitVec 64))
(declare-fun temp188_54 () (_ BitVec 64))
(declare-fun temp188_55 () (_ BitVec 64))
(declare-fun temp188_56 () (_ BitVec 64))
(declare-fun temp188_57 () (_ BitVec 64))
(declare-fun temp188_58 () (_ BitVec 64))
(declare-fun temp188_59 () (_ BitVec 64))
(declare-fun temp188_60 () (_ BitVec 64))
(declare-fun temp188_61 () (_ BitVec 64))
(declare-fun temp188_62 () (_ BitVec 64))
(declare-fun temp188_63 () (_ BitVec 64))
(declare-fun temp188_64 () (_ BitVec 64))
(declare-fun temp188_65 () (_ BitVec 64))
(declare-fun temp188_66 () (_ BitVec 64))
(declare-fun temp188_67 () (_ BitVec 64))
(declare-fun temp188_68 () (_ BitVec 64))
(declare-fun temp188_69 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (or (= ARGNAME_padding_NAMEEND #x0000000000000001)
    (= ARGNAME_padding_NAMEEND #x0000000000000002)
    (= ARGNAME_padding_NAMEEND #x0000000000000003)))
(assert (= temp188_1 #x0000000000000004))
(assert (= var74512
   (ite (= ARGNAME_orig_input_NAMEEND_DIM temp188_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp188_2 #x0000000000000001))
(assert (= var74512 temp188_2))
(assert (= temp188_3 #x0000000000000004))
(assert (= var74535
   (ite (= ARGNAME_orig_output_NAMEEND_DIM temp188_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp188_4 #x0000000000000001))
(assert (= var74535 temp188_4))
(assert (= temp188_5 #x0000000000000004))
(assert (= var74556
   (ite (= ARGNAME_grad_NAMEEND_DIM temp188_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp188_6 #x0000000000000001))
(assert (= var74556 temp188_6))
(assert (= temp188_8 #x0000000000000001))
(assert (= temp188_7 temp188_8))
(assert (= temp188_9 #x0000000000000001))
(assert (= var135599 temp188_9))
(assert (= temp188_10 #x0000000000000002))
(assert (= var201250 temp188_10))
(assert (= var74586 var201250))
(assert (= var271783 var74586))
(assert (= temp188_11 #x0000000000000009))
(assert (= var463697 temp188_11))
(assert (= var74621 var463697))
(assert (= var533947 var74621))
(assert (= temp188_13 #x0000000000000000))
(assert (= temp188_12 temp188_13))
(assert (= temp188_15 #x0000000000000000))
(assert (= temp188_14 temp188_15))
(assert (= temp188_17 #x0000000000000000))
(assert (= temp188_16 temp188_17))
(assert (= var665356 var533947))
(assert (= temp188_19 #x0000000000000000))
(assert (= temp188_18 temp188_19))
(assert (= temp188_21 #x0000000000000000))
(assert (= temp188_20 temp188_21))
(assert (= temp188_23 #x0000000000000000))
(assert (= temp188_22 temp188_23))
(assert (= temp188_25 #x0000000000000001))
(assert (= temp188_24 temp188_25))
(assert (= temp188_27 #x0000000000000000))
(assert (= temp188_26 temp188_27))
(assert (= temp188_28 #x0000000000000000))
(assert (= var2891159 temp188_28))
(assert (= temp188_29 #x0000000000000000))
(assert (= var3153303 temp188_29))
(assert (= temp188_30 #x0000000000000000))
(assert (= var68038 temp188_30))
(assert (= temp188_31 #x0000000000000000))
(assert (= temp188_32 temp188_31))
(assert (= temp188_33 (select var65549 temp188_32)))
(assert (= temp188_34 #x0000000000000001))
(assert (= temp188_35 temp188_34))
(assert (= temp188_36 (select var65549 temp188_35)))
(assert (= temp188_37 #x0000000000000002))
(assert (= temp188_38 temp188_37))
(assert (= temp188_39 (select var65549 temp188_38)))
(assert (= temp188_40 #x0000000000000003))
(assert (= temp188_41 temp188_40))
(assert (= temp188_42 (select var65549 temp188_41)))
(assert (= temp188_43 #x0000000000000004))
(assert (= temp188_44 temp188_43))
(assert (= temp188_45 (select var65549 temp188_44)))
(assert (= temp188_46 #x0000000000000005))
(assert (= temp188_47 temp188_46))
(assert (= temp188_48 (select var65549 temp188_47)))
(assert (= temp188_49 #x000000000000004f))
(assert (= (select var65549 #x0000000000000000) temp188_49))
(assert (= temp188_50 #x0000000000000050))
(assert (= (select var65549 #x0000000000000001) temp188_50))
(assert (= temp188_51 #x000000000000005f))
(assert (= (select var65549 #x0000000000000002) temp188_51))
(assert (= temp188_52 #x0000000000000052))
(assert (= (select var65549 #x0000000000000003) temp188_52))
(assert (= temp188_53 #x0000000000000045))
(assert (= (select var65549 #x0000000000000004) temp188_53))
(assert (= temp188_54 #x0000000000000051))
(assert (= (select var65549 #x0000000000000005) temp188_54))
(assert (= temp188_55 #x0000000000000055))
(assert (= (select var65549 #x0000000000000006) temp188_55))
(assert (= temp188_56 #x0000000000000049))
(assert (= (select var65549 #x0000000000000007) temp188_56))
(assert (= temp188_57 #x0000000000000052))
(assert (= (select var65549 #x0000000000000008) temp188_57))
(assert (= temp188_58 #x0000000000000045))
(assert (= (select var65549 #x0000000000000009) temp188_58))
(assert (= temp188_59 #x0000000000000053))
(assert (= (select var65549 #x000000000000000a) temp188_59))
(assert (= temp188_60 #x000000000000005f))
(assert (= (select var65549 #x000000000000000b) temp188_60))
(assert (= temp188_61 #x0000000000000041))
(assert (= (select var65549 #x000000000000000c) temp188_61))
(assert (= temp188_62 #x0000000000000053))
(assert (= (select var65549 #x000000000000000d) temp188_62))
(assert (= temp188_63 #x0000000000000059))
(assert (= (select var65549 #x000000000000000e) temp188_63))
(assert (= temp188_64 #x000000000000004e))
(assert (= (select var65549 #x000000000000000f) temp188_64))
(assert (= temp188_65 #x0000000000000043))
(assert (= (select var65549 #x0000000000000010) temp188_65))
(assert (= temp188_66 #x0000000000000000))
(assert (= (select var65549 #x0000000000000011) temp188_66))
(assert (= temp188_67 (select var65549 var68038)))
(assert (= temp188_68 #x0000000000000000))
(assert (bvsge var68038 temp188_68))
(assert (= temp188_69 #x0000000000000012))
(assert (bvslt var68038 temp188_69))
(model-add temp188_1 () (_ BitVec 64) #x0000000000000004)
(model-add temp188_2 () (_ BitVec 64) #x0000000000000001)
(model-add var74512 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_orig_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000004 (bvnot #x0000000000000004)))























