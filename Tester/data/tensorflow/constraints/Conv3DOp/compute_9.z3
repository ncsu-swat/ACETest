(declare-fun temp10_1 () (_ BitVec 64))
(declare-fun temp10_2 () (_ BitVec 64))
(declare-fun var71351 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun ARGNAME_data_format_NAMEEND_STRFMT () (_ BitVec 64))
(declare-fun temp10_3 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var71377 () (_ BitVec 64))
(declare-fun temp10_4 () (_ BitVec 64))
(declare-fun temp10_5 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10_6 () (_ BitVec 64))
(declare-fun temp10_7 () (_ BitVec 64))
(declare-fun temp10_8 () (_ BitVec 64))
(declare-fun temp10_9 () (_ BitVec 64))
(declare-fun temp10_10 () (_ BitVec 64))
(declare-fun temp10_11 () (_ BitVec 64))
(declare-fun temp10_12 () (_ BitVec 64))
(declare-fun temp10_13 () (_ BitVec 64))
(declare-fun temp10_14 () (_ BitVec 64))
(declare-fun temp10_15 () (_ BitVec 64))
(declare-fun temp10_16 () (_ BitVec 64))
(declare-fun temp10_20 () (_ BitVec 64))
(declare-fun temp10_21 () (_ BitVec 64))
(declare-fun temp10_22 () (_ BitVec 64))
(declare-fun temp10_23 () (_ BitVec 64))
(declare-fun temp10_18 () (_ BitVec 64))
(declare-fun temp10_24 () (_ BitVec 64))
(declare-fun temp10_25 () (_ BitVec 64))
(declare-fun temp10_26 () (_ BitVec 64))
(declare-fun temp10_19 () (_ BitVec 64))
(declare-fun temp10_28 () (_ BitVec 64))
(declare-fun temp10_29 () (_ BitVec 64))
(declare-fun temp10_30 () (_ BitVec 64))
(declare-fun temp10_31 () (_ BitVec 64))
(declare-fun temp10_32 () (_ BitVec 64))
(declare-fun temp10_17 () (_ BitVec 64))
(declare-fun temp10_33 () (_ BitVec 64))
(declare-fun var71399 () (_ BitVec 64))
(declare-fun temp10_37 () (_ BitVec 64))
(declare-fun temp10_38 () (_ BitVec 64))
(declare-fun temp10_39 () (_ BitVec 64))
(declare-fun temp10_40 () (_ BitVec 64))
(declare-fun temp10_35 () (_ BitVec 64))
(declare-fun temp10_41 () (_ BitVec 64))
(declare-fun temp10_42 () (_ BitVec 64))
(declare-fun temp10_43 () (_ BitVec 64))
(declare-fun temp10_36 () (_ BitVec 64))
(declare-fun temp10_45 () (_ BitVec 64))
(declare-fun temp10_46 () (_ BitVec 64))
(declare-fun temp10_47 () (_ BitVec 64))
(declare-fun temp10_48 () (_ BitVec 64))
(declare-fun temp10_34 () (_ BitVec 64))
(declare-fun temp10_49 () (_ BitVec 64))
(declare-fun var71403 () (_ BitVec 64))
(declare-fun temp10_50 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10_51 () (_ BitVec 64))
(declare-fun temp10_52 () (_ BitVec 64))
(declare-fun temp10_53 () (_ BitVec 64))
(declare-fun temp10_54 () (_ BitVec 64))
(declare-fun temp10_55 () (_ BitVec 64))
(declare-fun temp10_56 () (_ BitVec 64))
(declare-fun temp10_57 () (_ BitVec 64))
(declare-fun temp10_58 () (_ BitVec 64))
(declare-fun temp10_59 () (_ BitVec 64))
(declare-fun temp10_60 () (_ BitVec 64))
(declare-fun temp10_61 () (_ BitVec 64))
(declare-fun temp10_62 () (_ BitVec 64))
(declare-fun temp10_63 () (_ BitVec 64))
(declare-fun var71404 () (_ BitVec 64))
(declare-fun temp10_64 () (_ BitVec 64))
(declare-fun temp10_65 () (_ BitVec 64))
(declare-fun var71407 () (_ BitVec 64))
(declare-fun temp10_66 () (_ BitVec 64))
(declare-fun var71408 () (_ BitVec 64))
(declare-fun temp10_67 () (_ BitVec 64))
(declare-fun var71428 () (_ BitVec 64))
(declare-fun temp10_68 () (_ BitVec 64))
(declare-fun var71429 () (_ BitVec 64))
(declare-fun temp10_69 () (_ BitVec 64))
(declare-fun temp10_70 () (_ BitVec 64))
(declare-fun ARGNAME_filter_NAMEEND_NUMELEMENT () (_ BitVec 64))
(declare-fun var71455 () (_ BitVec 64))
(declare-fun temp10_71 () (_ BitVec 64))
(declare-fun temp10_75 () (_ BitVec 64))
(declare-fun temp10_76 () (_ BitVec 64))
(declare-fun temp10_77 () (_ BitVec 64))
(declare-fun temp10_78 () (_ BitVec 64))
(declare-fun temp10_73 () (_ BitVec 64))
(declare-fun temp10_79 () (_ BitVec 64))
(declare-fun temp10_80 () (_ BitVec 64))
(declare-fun temp10_81 () (_ BitVec 64))
(declare-fun temp10_74 () (_ BitVec 64))
(declare-fun temp10_83 () (_ BitVec 64))
(declare-fun temp10_84 () (_ BitVec 64))
(declare-fun temp10_85 () (_ BitVec 64))
(declare-fun temp10_86 () (_ BitVec 64))
(declare-fun temp10_87 () (_ BitVec 64))
(declare-fun temp10_88 () (_ BitVec 64))
(declare-fun temp10_89 () (_ BitVec 64))
(declare-fun temp10_72 () (_ BitVec 64))
(declare-fun temp10_90 () (_ BitVec 64))
(declare-fun var71479 () (_ BitVec 64))
(declare-fun temp10_94 () (_ BitVec 64))
(declare-fun temp10_95 () (_ BitVec 64))
(declare-fun temp10_96 () (_ BitVec 64))
(declare-fun temp10_97 () (_ BitVec 64))
(declare-fun temp10_92 () (_ BitVec 64))
(declare-fun temp10_98 () (_ BitVec 64))
(declare-fun temp10_99 () (_ BitVec 64))
(declare-fun temp10_100 () (_ BitVec 64))
(declare-fun temp10_93 () (_ BitVec 64))
(declare-fun temp10_102 () (_ BitVec 64))
(declare-fun temp10_103 () (_ BitVec 64))
(declare-fun temp10_104 () (_ BitVec 64))
(declare-fun temp10_105 () (_ BitVec 64))
(declare-fun temp10_106 () (_ BitVec 64))
(declare-fun temp10_107 () (_ BitVec 64))
(declare-fun temp10_108 () (_ BitVec 64))
(declare-fun temp10_91 () (_ BitVec 64))
(declare-fun temp10_109 () (_ BitVec 64))
(declare-fun var71483 () (_ BitVec 64))
(declare-fun temp10_113 () (_ BitVec 64))
(declare-fun temp10_114 () (_ BitVec 64))
(declare-fun temp10_115 () (_ BitVec 64))
(declare-fun temp10_116 () (_ BitVec 64))
(declare-fun temp10_111 () (_ BitVec 64))
(declare-fun temp10_117 () (_ BitVec 64))
(declare-fun temp10_118 () (_ BitVec 64))
(declare-fun temp10_119 () (_ BitVec 64))
(declare-fun temp10_112 () (_ BitVec 64))
(declare-fun temp10_121 () (_ BitVec 64))
(declare-fun temp10_122 () (_ BitVec 64))
(declare-fun temp10_123 () (_ BitVec 64))
(declare-fun temp10_124 () (_ BitVec 64))
(declare-fun temp10_125 () (_ BitVec 64))
(declare-fun temp10_126 () (_ BitVec 64))
(declare-fun temp10_127 () (_ BitVec 64))
(declare-fun temp10_110 () (_ BitVec 64))
(declare-fun temp10_128 () (_ BitVec 64))
(declare-fun var71487 () (_ BitVec 64))
(declare-fun temp10_129 () (_ BitVec 64))
(declare-fun temp10_130 () (_ BitVec 64))
(declare-fun var71492 () (_ BitVec 64))
(declare-fun temp10_131 () (_ BitVec 64))
(declare-fun temp10_132 () (_ BitVec 64))
(declare-fun var71495 () (_ BitVec 64))
(declare-fun temp10_133 () (_ BitVec 64))
(declare-fun temp10_134 () (_ BitVec 64))
(declare-fun var71498 () (_ BitVec 64))
(declare-fun temp10_135 () (_ BitVec 64))
(declare-fun ARGNAME_dilations_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10_136 () (_ BitVec 64))
(declare-fun temp10_137 () (_ BitVec 64))
(declare-fun temp10_138 () (_ BitVec 64))
(declare-fun temp10_139 () (_ BitVec 64))
(declare-fun temp10_140 () (_ BitVec 64))
(declare-fun temp10_141 () (_ BitVec 64))
(declare-fun temp10_142 () (_ BitVec 64))
(declare-fun temp10_143 () (_ BitVec 64))
(declare-fun temp10_144 () (_ BitVec 64))
(declare-fun temp10_145 () (_ BitVec 64))
(declare-fun temp10_146 () (_ BitVec 64))
(declare-fun temp10_150 () (_ BitVec 64))
(declare-fun temp10_151 () (_ BitVec 64))
(declare-fun temp10_152 () (_ BitVec 64))
(declare-fun temp10_153 () (_ BitVec 64))
(declare-fun ARGNAME_dilations_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10_148 () (_ BitVec 64))
(declare-fun temp10_154 () (_ BitVec 64))
(declare-fun temp10_155 () (_ BitVec 64))
(declare-fun temp10_156 () (_ BitVec 64))
(declare-fun temp10_149 () (_ BitVec 64))
(declare-fun temp10_158 () (_ BitVec 64))
(declare-fun temp10_159 () (_ BitVec 64))
(declare-fun temp10_160 () (_ BitVec 64))
(declare-fun temp10_161 () (_ BitVec 64))
(declare-fun temp10_162 () (_ BitVec 64))
(declare-fun temp10_163 () (_ BitVec 64))
(declare-fun temp10_164 () (_ BitVec 64))
(declare-fun temp10_147 () (_ BitVec 64))
(declare-fun temp10_165 () (_ BitVec 64))
(declare-fun var71505 () (_ BitVec 64))
(declare-fun var71506 () (_ BitVec 64))
(declare-fun temp10_169 () (_ BitVec 64))
(declare-fun temp10_170 () (_ BitVec 64))
(declare-fun temp10_171 () (_ BitVec 64))
(declare-fun temp10_172 () (_ BitVec 64))
(declare-fun temp10_167 () (_ BitVec 64))
(declare-fun temp10_173 () (_ BitVec 64))
(declare-fun temp10_174 () (_ BitVec 64))
(declare-fun temp10_175 () (_ BitVec 64))
(declare-fun temp10_168 () (_ BitVec 64))
(declare-fun temp10_177 () (_ BitVec 64))
(declare-fun temp10_178 () (_ BitVec 64))
(declare-fun temp10_179 () (_ BitVec 64))
(declare-fun temp10_180 () (_ BitVec 64))
(declare-fun temp10_181 () (_ BitVec 64))
(declare-fun temp10_182 () (_ BitVec 64))
(declare-fun temp10_183 () (_ BitVec 64))
(declare-fun temp10_166 () (_ BitVec 64))
(declare-fun temp10_184 () (_ BitVec 64))
(declare-fun var71510 () (_ BitVec 64))
(declare-fun var71511 () (_ BitVec 64))
(declare-fun temp10_188 () (_ BitVec 64))
(declare-fun temp10_189 () (_ BitVec 64))
(declare-fun temp10_190 () (_ BitVec 64))
(declare-fun temp10_191 () (_ BitVec 64))
(declare-fun temp10_186 () (_ BitVec 64))
(declare-fun temp10_192 () (_ BitVec 64))
(declare-fun temp10_193 () (_ BitVec 64))
(declare-fun temp10_194 () (_ BitVec 64))
(declare-fun temp10_187 () (_ BitVec 64))
(declare-fun temp10_196 () (_ BitVec 64))
(declare-fun temp10_197 () (_ BitVec 64))
(declare-fun temp10_198 () (_ BitVec 64))
(declare-fun temp10_199 () (_ BitVec 64))
(declare-fun temp10_200 () (_ BitVec 64))
(declare-fun temp10_201 () (_ BitVec 64))
(declare-fun temp10_202 () (_ BitVec 64))
(declare-fun temp10_185 () (_ BitVec 64))
(declare-fun temp10_203 () (_ BitVec 64))
(declare-fun var71515 () (_ BitVec 64))
(declare-fun var71516 () (_ BitVec 64))
(declare-fun temp10_204 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10_205 () (_ BitVec 64))
(declare-fun temp10_206 () (_ BitVec 64))
(declare-fun temp10_207 () (_ BitVec 64))
(declare-fun temp10_208 () (_ BitVec 64))
(declare-fun temp10_209 () (_ BitVec 64))
(declare-fun temp10_210 () (_ BitVec 64))
(declare-fun temp10_211 () (_ BitVec 64))
(declare-fun temp10_212 () (_ BitVec 64))
(declare-fun temp10_213 () (_ BitVec 64))
(declare-fun temp10_214 () (_ BitVec 64))
(declare-fun temp10_215 () (_ BitVec 64))
(declare-fun temp10_219 () (_ BitVec 64))
(declare-fun temp10_220 () (_ BitVec 64))
(declare-fun temp10_221 () (_ BitVec 64))
(declare-fun temp10_222 () (_ BitVec 64))
(declare-fun ARGNAME_strides_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10_217 () (_ BitVec 64))
(declare-fun temp10_223 () (_ BitVec 64))
(declare-fun temp10_224 () (_ BitVec 64))
(declare-fun temp10_225 () (_ BitVec 64))
(declare-fun temp10_218 () (_ BitVec 64))
(declare-fun temp10_227 () (_ BitVec 64))
(declare-fun temp10_228 () (_ BitVec 64))
(declare-fun temp10_229 () (_ BitVec 64))
(declare-fun temp10_230 () (_ BitVec 64))
(declare-fun temp10_231 () (_ BitVec 64))
(declare-fun temp10_232 () (_ BitVec 64))
(declare-fun temp10_233 () (_ BitVec 64))
(declare-fun temp10_216 () (_ BitVec 64))
(declare-fun temp10_234 () (_ BitVec 64))
(declare-fun var71523 () (_ BitVec 64))
(declare-fun var71524 () (_ BitVec 64))
(declare-fun temp10_238 () (_ BitVec 64))
(declare-fun temp10_239 () (_ BitVec 64))
(declare-fun temp10_240 () (_ BitVec 64))
(declare-fun temp10_241 () (_ BitVec 64))
(declare-fun temp10_236 () (_ BitVec 64))
(declare-fun temp10_242 () (_ BitVec 64))
(declare-fun temp10_243 () (_ BitVec 64))
(declare-fun temp10_244 () (_ BitVec 64))
(declare-fun temp10_237 () (_ BitVec 64))
(declare-fun temp10_246 () (_ BitVec 64))
(declare-fun temp10_247 () (_ BitVec 64))
(declare-fun temp10_248 () (_ BitVec 64))
(declare-fun temp10_249 () (_ BitVec 64))
(declare-fun temp10_250 () (_ BitVec 64))
(declare-fun temp10_251 () (_ BitVec 64))
(declare-fun temp10_252 () (_ BitVec 64))
(declare-fun temp10_235 () (_ BitVec 64))
(declare-fun temp10_253 () (_ BitVec 64))
(declare-fun var71528 () (_ BitVec 64))
(declare-fun var71529 () (_ BitVec 64))
(declare-fun temp10_257 () (_ BitVec 64))
(declare-fun temp10_258 () (_ BitVec 64))
(declare-fun temp10_259 () (_ BitVec 64))
(declare-fun temp10_260 () (_ BitVec 64))
(declare-fun temp10_255 () (_ BitVec 64))
(declare-fun temp10_261 () (_ BitVec 64))
(declare-fun temp10_262 () (_ BitVec 64))
(declare-fun temp10_263 () (_ BitVec 64))
(declare-fun temp10_256 () (_ BitVec 64))
(declare-fun temp10_265 () (_ BitVec 64))
(declare-fun temp10_266 () (_ BitVec 64))
(declare-fun temp10_267 () (_ BitVec 64))
(declare-fun temp10_268 () (_ BitVec 64))
(declare-fun temp10_269 () (_ BitVec 64))
(declare-fun temp10_270 () (_ BitVec 64))
(declare-fun temp10_271 () (_ BitVec 64))
(declare-fun temp10_254 () (_ BitVec 64))
(declare-fun temp10_272 () (_ BitVec 64))
(declare-fun var71533 () (_ BitVec 64))
(declare-fun var71534 () (_ BitVec 64))
(declare-fun temp10_273 () (_ BitVec 64))
(declare-fun var205466 () (_ BitVec 64))
(declare-fun var139942 () (_ BitVec 64))
(declare-fun temp10_274 () (_ BitVec 64))
(declare-fun var139943 () (_ BitVec 64))
(declare-fun temp10_275 () (_ BitVec 64))
(declare-fun temp10_276 () (_ BitVec 64))
(declare-fun var139945 () (_ BitVec 64))
(declare-fun temp10_278 () (_ BitVec 64))
(declare-fun temp10_277 () (_ BitVec 64))
(declare-fun temp10_279 () (_ BitVec 64))
(declare-fun var139946 () (_ BitVec 64))
(declare-fun temp10_280 () (_ BitVec 64))
(declare-fun var467610 () (_ BitVec 64))
(declare-fun var139961 () (_ BitVec 64))
(declare-fun var139962 () (_ BitVec 64))
(declare-fun temp10_282 () (_ BitVec 64))
(declare-fun var530970 () (_ BitVec 64))
(declare-fun temp10_283 () (_ BitVec 64))
(declare-fun temp10_284 () (_ BitVec 64))
(declare-fun temp10_285 () (_ BitVec 64))
(declare-fun var531024 () (_ BitVec 64))
(declare-fun temp10_286 () (_ BitVec 64))
(declare-fun var531026 () (_ BitVec 64))
(declare-fun temp10_287 () (_ BitVec 64))
(declare-fun var531027 () (_ BitVec 64))
(declare-fun var531028 () (_ BitVec 64))
(declare-fun temp10_288 () (_ BitVec 64))
(assert (or (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000000)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000001)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000002)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000003)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000004)
    (= ARGNAME_data_format_NAMEEND_STRFMT #x0000000000000005)))
(assert (= temp10_1 #x0000000000000005))
(assert (= var71351
   (ite (= ARGNAME_input_NAMEEND_DIM temp10_1)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10_2 #x0000000000000001))
(assert (= var71351 temp10_2))
(assert (= temp10_3 #x0000000000000005))
(assert (= var71377
   (ite (= ARGNAME_filter_NAMEEND_DIM temp10_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10_4 #x0000000000000001))
(assert (= var71377 temp10_4))
(assert (= temp10_5 #x0000000000000000))
(assert (= temp10_6 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_5)))
(assert (= temp10_7 #x0000000000000001))
(assert (= temp10_8 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_7)))
(assert (= temp10_9 #x0000000000000002))
(assert (= temp10_10 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_9)))
(assert (= temp10_11 #x0000000000000003))
(assert (= temp10_12 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_11)))
(assert (= temp10_13 #x0000000000000004))
(assert (= temp10_14 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_13)))
(assert (= temp10_15 #x0000000000000005))
(assert (= temp10_16 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_15)))
(assert (= temp10_20 #x0000000000000002))
(assert (= temp10_21 #x0000000000000003))
(assert (= temp10_22 #x0000000000000002))
(assert (= temp10_23 #x0000000000000003))
(assert (= temp10_18
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp10_22)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp10_23))
        (bvsub ARGNAME_input_NAMEEND_DIM temp10_21)
        (bvsub ARGNAME_input_NAMEEND_DIM temp10_20))))
(assert (= temp10_24 #x0000000000000002))
(assert (= temp10_25 #x0000000000000003))
(assert (= temp10_26 #x0000000000000003))
(assert (= temp10_19 (ite (= temp10_18 temp10_26) temp10_25 temp10_24)))
(assert (= temp10_28 #x0000000000000001))
(assert (= temp10_29 #x0000000000000005))
(assert (= temp10_30 #x0000000000000001))
(assert (= temp10_31 #x0000000000000001))
(assert (= temp10_32 #x0000000000000002))
(assert (= temp10_17
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp10_31)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp10_32))
        temp10_30
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp10_29)
             temp10_19
             (bvadd temp10_19 temp10_28)))))
(assert (= temp10_33 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_17)))
(assert (= var71399 temp10_33))
(assert (= temp10_37 #x0000000000000002))
(assert (= temp10_38 #x0000000000000003))
(assert (= temp10_39 #x0000000000000002))
(assert (= temp10_40 #x0000000000000003))
(assert (= temp10_35
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp10_39)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp10_40))
        (bvsub ARGNAME_input_NAMEEND_DIM temp10_38)
        (bvsub ARGNAME_input_NAMEEND_DIM temp10_37))))
(assert (= temp10_41 #x0000000000000002))
(assert (= temp10_42 #x0000000000000003))
(assert (= temp10_43 #x0000000000000003))
(assert (= temp10_36 (ite (= temp10_35 temp10_43) temp10_42 temp10_41)))
(assert (= temp10_45 #x0000000000000000))
(assert (= temp10_46 #x0000000000000001))
(assert (= temp10_47 #x0000000000000005))
(assert (= temp10_48 #x0000000000000004))
(assert (= temp10_34
   (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp10_48)
        temp10_36
        (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp10_47)
             (bvadd temp10_36 temp10_46)
             temp10_45))))
(assert (= temp10_49 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_34)))
(assert (= var71403 temp10_49))
(assert (= temp10_50 #x0000000000000000))
(assert (= temp10_51 (select ARGNAME_filter_NAMEEND_DIMSIZE temp10_50)))
(assert (= temp10_52 #x0000000000000001))
(assert (= temp10_53 (select ARGNAME_filter_NAMEEND_DIMSIZE temp10_52)))
(assert (= temp10_54 #x0000000000000002))
(assert (= temp10_55 (select ARGNAME_filter_NAMEEND_DIMSIZE temp10_54)))
(assert (= temp10_56 #x0000000000000003))
(assert (= temp10_57 (select ARGNAME_filter_NAMEEND_DIMSIZE temp10_56)))
(assert (= temp10_58 #x0000000000000004))
(assert (= temp10_59 (select ARGNAME_filter_NAMEEND_DIMSIZE temp10_58)))
(assert (= temp10_60 #x0000000000000005))
(assert (= temp10_61 (select ARGNAME_filter_NAMEEND_DIMSIZE temp10_60)))
(assert (= temp10_62 #x0000000000000003))
(assert (= temp10_63 (select ARGNAME_filter_NAMEEND_DIMSIZE temp10_62)))
(assert (= var71404 temp10_63))
(assert (= temp10_64 #x0000000000000004))
(assert (= temp10_65 (select ARGNAME_filter_NAMEEND_DIMSIZE temp10_64)))
(assert (= var71407 temp10_65))
(assert (= temp10_66 #x0000000000000000))
(assert (= var71408 (ite (= var71404 temp10_66) #x0000000000000001 #x0000000000000000)))
(assert (= temp10_67 #x0000000000000000))
(assert (= var71408 temp10_67))
(assert (= var71428 (bvsmod var71399 var71404)))
(assert (= temp10_68 #x0000000000000000))
(assert (= var71429 (ite (= var71428 temp10_68) #x0000000000000001 #x0000000000000000)))
(assert (= temp10_69 #x0000000000000001))
(assert (= var71429 temp10_69))
(assert (= temp10_70 #x0000000000000000))
(assert (= var71455
   (ite (bvsgt ARGNAME_filter_NAMEEND_NUMELEMENT temp10_70)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10_71 #x0000000000000001))
(assert (= var71455 temp10_71))
(assert (= temp10_75 #x0000000000000002))
(assert (= temp10_76 #x0000000000000003))
(assert (= temp10_77 #x0000000000000002))
(assert (= temp10_78 #x0000000000000003))
(assert (= temp10_73
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp10_77)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp10_78))
        (bvsub ARGNAME_input_NAMEEND_DIM temp10_76)
        (bvsub ARGNAME_input_NAMEEND_DIM temp10_75))))
(assert (= temp10_79 #x0000000000000002))
(assert (= temp10_80 #x0000000000000003))
(assert (= temp10_81 #x0000000000000003))
(assert (= temp10_74 (ite (= temp10_73 temp10_81) temp10_80 temp10_79)))
(assert (= temp10_83 #x0000000000000000))
(assert (= temp10_84 #x0000000000000002))
(assert (= temp10_85 #x0000000000000001))
(assert (= temp10_86 #x0000000000000002))
(assert (= temp10_87 #x0000000000000001))
(assert (= temp10_88 #x0000000000000000))
(assert (= temp10_89 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp10_88)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp10_89))
                temp10_87
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp10_85)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp10_86))
                     temp10_84
                     temp10_83))))
  (= temp10_72 a!1)))
(assert (= temp10_90 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_72)))
(assert (= var71479 temp10_90))
(assert (= temp10_94 #x0000000000000002))
(assert (= temp10_95 #x0000000000000003))
(assert (= temp10_96 #x0000000000000002))
(assert (= temp10_97 #x0000000000000003))
(assert (= temp10_92
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp10_96)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp10_97))
        (bvsub ARGNAME_input_NAMEEND_DIM temp10_95)
        (bvsub ARGNAME_input_NAMEEND_DIM temp10_94))))
(assert (= temp10_98 #x0000000000000002))
(assert (= temp10_99 #x0000000000000003))
(assert (= temp10_100 #x0000000000000003))
(assert (= temp10_93 (ite (= temp10_92 temp10_100) temp10_99 temp10_98)))
(assert (= temp10_102 #x0000000000000001))
(assert (= temp10_103 #x0000000000000003))
(assert (= temp10_104 #x0000000000000001))
(assert (= temp10_105 #x0000000000000002))
(assert (= temp10_106 #x0000000000000002))
(assert (= temp10_107 #x0000000000000000))
(assert (= temp10_108 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp10_107)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp10_108))
                temp10_106
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp10_104)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp10_105))
                     temp10_103
                     temp10_102))))
  (= temp10_91 a!1)))
(assert (= temp10_109 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_91)))
(assert (= var71483 temp10_109))
(assert (= temp10_113 #x0000000000000002))
(assert (= temp10_114 #x0000000000000003))
(assert (= temp10_115 #x0000000000000002))
(assert (= temp10_116 #x0000000000000003))
(assert (= temp10_111
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp10_115)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp10_116))
        (bvsub ARGNAME_input_NAMEEND_DIM temp10_114)
        (bvsub ARGNAME_input_NAMEEND_DIM temp10_113))))
(assert (= temp10_117 #x0000000000000002))
(assert (= temp10_118 #x0000000000000003))
(assert (= temp10_119 #x0000000000000003))
(assert (= temp10_112 (ite (= temp10_111 temp10_119) temp10_118 temp10_117)))
(assert (= temp10_121 #x0000000000000002))
(assert (= temp10_122 #x0000000000000004))
(assert (= temp10_123 #x0000000000000001))
(assert (= temp10_124 #x0000000000000002))
(assert (= temp10_125 #x0000000000000003))
(assert (= temp10_126 #x0000000000000000))
(assert (= temp10_127 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp10_126)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp10_127))
                temp10_125
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp10_123)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp10_124))
                     temp10_122
                     temp10_121))))
  (= temp10_110 a!1)))
(assert (= temp10_128 (select ARGNAME_input_NAMEEND_DIMSIZE temp10_110)))
(assert (= var71487 temp10_128))
(assert (= temp10_129 #x0000000000000000))
(assert (= temp10_130 (select ARGNAME_filter_NAMEEND_DIMSIZE temp10_129)))
(assert (= var71492 temp10_130))
(assert (= temp10_131 #x0000000000000001))
(assert (= temp10_132 (select ARGNAME_filter_NAMEEND_DIMSIZE temp10_131)))
(assert (= var71495 temp10_132))
(assert (= temp10_133 #x0000000000000002))
(assert (= temp10_134 (select ARGNAME_filter_NAMEEND_DIMSIZE temp10_133)))
(assert (= var71498 temp10_134))
(assert (= temp10_135 #x0000000000000000))
(assert (= temp10_136 (select ARGNAME_dilations_NAMEEND_VAL temp10_135)))
(assert (= temp10_137 #x0000000000000001))
(assert (= temp10_138 (select ARGNAME_dilations_NAMEEND_VAL temp10_137)))
(assert (= temp10_139 #x0000000000000002))
(assert (= temp10_140 (select ARGNAME_dilations_NAMEEND_VAL temp10_139)))
(assert (= temp10_141 #x0000000000000003))
(assert (= temp10_142 (select ARGNAME_dilations_NAMEEND_VAL temp10_141)))
(assert (= temp10_143 #x0000000000000004))
(assert (= temp10_144 (select ARGNAME_dilations_NAMEEND_VAL temp10_143)))
(assert (= temp10_145 #x0000000000000005))
(assert (= temp10_146 (select ARGNAME_dilations_NAMEEND_VAL temp10_145)))
(assert (= temp10_150 #x0000000000000002))
(assert (= temp10_151 #x0000000000000003))
(assert (= temp10_152 #x0000000000000002))
(assert (= temp10_153 #x0000000000000003))
(assert (= temp10_148
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp10_152)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp10_153))
        (bvsub ARGNAME_dilations_NAMEEND_LEN temp10_151)
        (bvsub ARGNAME_dilations_NAMEEND_LEN temp10_150))))
(assert (= temp10_154 #x0000000000000002))
(assert (= temp10_155 #x0000000000000003))
(assert (= temp10_156 #x0000000000000003))
(assert (= temp10_149 (ite (= temp10_148 temp10_156) temp10_155 temp10_154)))
(assert (= temp10_158 #x0000000000000000))
(assert (= temp10_159 #x0000000000000002))
(assert (= temp10_160 #x0000000000000001))
(assert (= temp10_161 #x0000000000000002))
(assert (= temp10_162 #x0000000000000001))
(assert (= temp10_163 #x0000000000000000))
(assert (= temp10_164 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp10_163)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp10_164))
                temp10_162
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp10_160)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp10_161))
                     temp10_159
                     temp10_158))))
  (= temp10_147 a!1)))
(assert (= temp10_165 (select ARGNAME_dilations_NAMEEND_VAL temp10_147)))
(assert (= var71505 temp10_165))
(assert (= var71506 var71505))
(assert (= temp10_169 #x0000000000000002))
(assert (= temp10_170 #x0000000000000003))
(assert (= temp10_171 #x0000000000000002))
(assert (= temp10_172 #x0000000000000003))
(assert (= temp10_167
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp10_171)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp10_172))
        (bvsub ARGNAME_dilations_NAMEEND_LEN temp10_170)
        (bvsub ARGNAME_dilations_NAMEEND_LEN temp10_169))))
(assert (= temp10_173 #x0000000000000002))
(assert (= temp10_174 #x0000000000000003))
(assert (= temp10_175 #x0000000000000003))
(assert (= temp10_168 (ite (= temp10_167 temp10_175) temp10_174 temp10_173)))
(assert (= temp10_177 #x0000000000000001))
(assert (= temp10_178 #x0000000000000003))
(assert (= temp10_179 #x0000000000000001))
(assert (= temp10_180 #x0000000000000002))
(assert (= temp10_181 #x0000000000000002))
(assert (= temp10_182 #x0000000000000000))
(assert (= temp10_183 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp10_182)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp10_183))
                temp10_181
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp10_179)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp10_180))
                     temp10_178
                     temp10_177))))
  (= temp10_166 a!1)))
(assert (= temp10_184 (select ARGNAME_dilations_NAMEEND_VAL temp10_166)))
(assert (= var71510 temp10_184))
(assert (= var71511 var71510))
(assert (= temp10_188 #x0000000000000002))
(assert (= temp10_189 #x0000000000000003))
(assert (= temp10_190 #x0000000000000002))
(assert (= temp10_191 #x0000000000000003))
(assert (= temp10_186
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp10_190)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp10_191))
        (bvsub ARGNAME_dilations_NAMEEND_LEN temp10_189)
        (bvsub ARGNAME_dilations_NAMEEND_LEN temp10_188))))
(assert (= temp10_192 #x0000000000000002))
(assert (= temp10_193 #x0000000000000003))
(assert (= temp10_194 #x0000000000000003))
(assert (= temp10_187 (ite (= temp10_186 temp10_194) temp10_193 temp10_192)))
(assert (= temp10_196 #x0000000000000002))
(assert (= temp10_197 #x0000000000000004))
(assert (= temp10_198 #x0000000000000001))
(assert (= temp10_199 #x0000000000000002))
(assert (= temp10_200 #x0000000000000003))
(assert (= temp10_201 #x0000000000000000))
(assert (= temp10_202 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp10_201)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp10_202))
                temp10_200
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp10_198)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp10_199))
                     temp10_197
                     temp10_196))))
  (= temp10_185 a!1)))
(assert (= temp10_203 (select ARGNAME_dilations_NAMEEND_VAL temp10_185)))
(assert (= var71515 temp10_203))
(assert (= var71516 var71515))
(assert (= temp10_204 #x0000000000000000))
(assert (= temp10_205 (select ARGNAME_strides_NAMEEND_VAL temp10_204)))
(assert (= temp10_206 #x0000000000000001))
(assert (= temp10_207 (select ARGNAME_strides_NAMEEND_VAL temp10_206)))
(assert (= temp10_208 #x0000000000000002))
(assert (= temp10_209 (select ARGNAME_strides_NAMEEND_VAL temp10_208)))
(assert (= temp10_210 #x0000000000000003))
(assert (= temp10_211 (select ARGNAME_strides_NAMEEND_VAL temp10_210)))
(assert (= temp10_212 #x0000000000000004))
(assert (= temp10_213 (select ARGNAME_strides_NAMEEND_VAL temp10_212)))
(assert (= temp10_214 #x0000000000000005))
(assert (= temp10_215 (select ARGNAME_strides_NAMEEND_VAL temp10_214)))
(assert (= temp10_219 #x0000000000000002))
(assert (= temp10_220 #x0000000000000003))
(assert (= temp10_221 #x0000000000000002))
(assert (= temp10_222 #x0000000000000003))
(assert (= temp10_217
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp10_221)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp10_222))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp10_220)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp10_219))))
(assert (= temp10_223 #x0000000000000002))
(assert (= temp10_224 #x0000000000000003))
(assert (= temp10_225 #x0000000000000003))
(assert (= temp10_218 (ite (= temp10_217 temp10_225) temp10_224 temp10_223)))
(assert (= temp10_227 #x0000000000000000))
(assert (= temp10_228 #x0000000000000002))
(assert (= temp10_229 #x0000000000000001))
(assert (= temp10_230 #x0000000000000002))
(assert (= temp10_231 #x0000000000000001))
(assert (= temp10_232 #x0000000000000000))
(assert (= temp10_233 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp10_232)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp10_233))
                temp10_231
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp10_229)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp10_230))
                     temp10_228
                     temp10_227))))
  (= temp10_216 a!1)))
(assert (= temp10_234 (select ARGNAME_strides_NAMEEND_VAL temp10_216)))
(assert (= var71523 temp10_234))
(assert (= var71524 var71523))
(assert (= temp10_238 #x0000000000000002))
(assert (= temp10_239 #x0000000000000003))
(assert (= temp10_240 #x0000000000000002))
(assert (= temp10_241 #x0000000000000003))
(assert (= temp10_236
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp10_240)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp10_241))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp10_239)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp10_238))))
(assert (= temp10_242 #x0000000000000002))
(assert (= temp10_243 #x0000000000000003))
(assert (= temp10_244 #x0000000000000003))
(assert (= temp10_237 (ite (= temp10_236 temp10_244) temp10_243 temp10_242)))
(assert (= temp10_246 #x0000000000000001))
(assert (= temp10_247 #x0000000000000003))
(assert (= temp10_248 #x0000000000000001))
(assert (= temp10_249 #x0000000000000002))
(assert (= temp10_250 #x0000000000000002))
(assert (= temp10_251 #x0000000000000000))
(assert (= temp10_252 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp10_251)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp10_252))
                temp10_250
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp10_248)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp10_249))
                     temp10_247
                     temp10_246))))
  (= temp10_235 a!1)))
(assert (= temp10_253 (select ARGNAME_strides_NAMEEND_VAL temp10_235)))
(assert (= var71528 temp10_253))
(assert (= var71529 var71528))
(assert (= temp10_257 #x0000000000000002))
(assert (= temp10_258 #x0000000000000003))
(assert (= temp10_259 #x0000000000000002))
(assert (= temp10_260 #x0000000000000003))
(assert (= temp10_255
   (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp10_259)
            (= ARGNAME_data_format_NAMEEND_STRFMT temp10_260))
        (bvsub ARGNAME_strides_NAMEEND_LEN temp10_258)
        (bvsub ARGNAME_strides_NAMEEND_LEN temp10_257))))
(assert (= temp10_261 #x0000000000000002))
(assert (= temp10_262 #x0000000000000003))
(assert (= temp10_263 #x0000000000000003))
(assert (= temp10_256 (ite (= temp10_255 temp10_263) temp10_262 temp10_261)))
(assert (= temp10_265 #x0000000000000002))
(assert (= temp10_266 #x0000000000000004))
(assert (= temp10_267 #x0000000000000001))
(assert (= temp10_268 #x0000000000000002))
(assert (= temp10_269 #x0000000000000003))
(assert (= temp10_270 #x0000000000000000))
(assert (= temp10_271 #x0000000000000003))
(assert (let ((a!1 (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp10_270)
                    (= ARGNAME_data_format_NAMEEND_STRFMT temp10_271))
                temp10_269
                (ite (or (= ARGNAME_data_format_NAMEEND_STRFMT temp10_267)
                         (= ARGNAME_data_format_NAMEEND_STRFMT temp10_268))
                     temp10_266
                     temp10_265))))
  (= temp10_254 a!1)))
(assert (= temp10_272 (select ARGNAME_strides_NAMEEND_VAL temp10_254)))
(assert (= var71533 temp10_272))
(assert (= var71534 var71533))
(assert (= temp10_273 #x0000000000000003))
(assert (= var205466 temp10_273))
(assert (= var139942 var205466))
(assert (= temp10_274 #x0000000000000000))
(assert (= var139943
   (ite (= var139942 temp10_274) #x0000000000000001 #x0000000000000000)))
(assert (= temp10_275 #x0000000000000000))
(assert (= var139943 temp10_275))
(assert (= temp10_276 #x0000000000000000))
(assert (= var139945 temp10_276))
(assert (= temp10_278 #x0000000000000000))
(assert (= temp10_277 temp10_278))
(assert (= temp10_279 #x0000000000000001))
(assert (= var139946 (bvadd var139945 temp10_279)))
(assert (= temp10_280 #x0000000000000003))
(assert (= var467610 temp10_280))
(assert (= var139961 var467610))
(assert (= var139962
   (ite (bvslt var139946 var139961) #x0000000000000001 #x0000000000000000)))
(assert (= temp10_282 #x0000000000000000))
(assert (= var530970
   (ite (= ARGNAME_data_format_NAMEEND_STRFMT temp10_282)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10_283 #x0000000000000001))
(assert (= var530970 temp10_283))
(assert (= temp10_284 #x0000000000000003))
(assert (= temp10_285 (select ARGNAME_filter_NAMEEND_DIMSIZE temp10_284)))
(assert (= var531024 temp10_285))
(assert (= temp10_286 #xffffffffffffffff))
(assert (= var531026 (bvadd ARGNAME_input_NAMEEND_DIM temp10_286)))
(assert (= temp10_287 (select ARGNAME_input_NAMEEND_DIMSIZE var531026)))
(assert (= var531027 temp10_287))
(assert (= var531028
   (ite (= var531024 var531027) #x0000000000000001 #x0000000000000000)))
(assert (= temp10_288 #x0000000000000001))
(assert (= var531028 temp10_288))
(model-add temp10_1 () (_ BitVec 64) #x0000000000000005)
(model-add temp10_2 () (_ BitVec 64) #x0000000000000001)
(model-add var71351 () (_ BitVec 64) #x0000000000000001)
(model-del k!0)
(model-add ARGNAME_input_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite k!0 #x0000000000000005 (bvnot #x0000000000000005)))



























